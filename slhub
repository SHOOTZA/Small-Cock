-- Gui to Lua
-- Version: 3.2

-- Instances:

local SLhub = Instance.new("ScreenGui")
local main = Instance.new("Frame")
local name = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local hub = Instance.new("Frame")
local Home = Instance.new("TextButton")
local Settings = Instance.new("TextButton")
local Help = Instance.new("TextButton")
local Info = Instance.new("TextButton")
local HomeFrame = Instance.new("Frame")
local Btools = Instance.new("TextButton")
local ChatLog = Instance.new("TextButton")
local GetToolRRP = Instance.new("TextButton")
local Freecam = Instance.new("TextButton")
local FullBright = Instance.new("TextButton")
local Gamesense = Instance.new("TextButton")
local Hitbox = Instance.new("TextButton")
local Multiple = Instance.new("TextButton")
local Noclip = Instance.new("TextButton")
local RevizAdmin = Instance.new("TextButton")
local TextButton = Instance.new("TextButton")
local HelpFrame = Instance.new("Frame")
local TextLabel_2 = Instance.new("TextLabel")
local SettingsFrame = Instance.new("Frame")
local TextButton_2 = Instance.new("TextButton")
local InfoFrame = Instance.new("Frame")
local TextLabel_3 = Instance.new("TextLabel")
local Home2Frame = Instance.new("Frame")
local TextButton_3 = Instance.new("TextButton")
local Tp = Instance.new("TextButton")
local AntiAFK = Instance.new("TextButton")
local DarkDex = Instance.new("TextButton")
local Fly = Instance.new("TextButton")
local NoJumpCooldown = Instance.new("TextButton")
local SuperJump = Instance.new("TextButton")
local Speed = Instance.new("TextButton")
local RemoveBlur = Instance.new("TextButton")
local Bypass = Instance.new("TextButton")
local InfYield = Instance.new("TextButton")
local TextButton_4 = Instance.new("TextButton")
local Home3Frame = Instance.new("Frame")
local Button = Instance.new("TextButton")
local NHCBypass = Instance.new("TextButton")
local HitboxExt = Instance.new("TextButton")
local R6 = Instance.new("TextButton")
local NHCHitbox = Instance.new("TextButton")
local RemoteSpy = Instance.new("TextButton")
local NoFog = Instance.new("TextButton")
local Fling = Instance.new("TextButton")
local Sl2Gamepasss = Instance.new("TextButton")
local SaveItem = Instance.new("TextButton")

--Properties:

SLhub.Name = "SL hub"
SLhub.Parent = game.CoreGui
SLhub.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

main.Name = "main"
main.Parent = SLhub
main.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
main.BorderColor3 = Color3.fromRGB(170, 0, 0)
main.Position = UDim2.new(0.281213522, 0, 0.0689120516, 0)
main.Size = UDim2.new(0, 303, 0, 288)
main.Active = true
main.Draggable = true

name.Name = "name"
name.Parent = main
name.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
name.BorderColor3 = Color3.fromRGB(170, 0, 0)
name.Size = UDim2.new(0, 74, 0, 38)

TextLabel.Parent = name
TextLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderColor3 = Color3.fromRGB(170, 0, 0)
TextLabel.Size = UDim2.new(0, 74, 0, 38)
TextLabel.Font = Enum.Font.GothamSemibold
TextLabel.Text = "SL Hub"
TextLabel.TextColor3 = Color3.fromRGB(170, 0, 0)
TextLabel.TextSize = 14.000

hub.Name = "hub"
hub.Parent = main
hub.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
hub.BorderColor3 = Color3.fromRGB(170, 0, 0)
hub.Position = UDim2.new(0, 0, 0.131944448, 0)
hub.Size = UDim2.new(0, 74, 0, 249)

Home.Name = "Home"
Home.Parent = hub
Home.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Home.BorderColor3 = Color3.fromRGB(0, 0, 0)
Home.Position = UDim2.new(0.0618554205, 0, 0.0523485281, 0)
Home.Size = UDim2.new(0, 62, 0, 33)
Home.Font = Enum.Font.GothamSemibold
Home.Text = "Home"
Home.TextColor3 = Color3.fromRGB(170, 0, 0)
Home.TextSize = 14.000

Settings.Name = "Settings"
Settings.Parent = hub
Settings.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Settings.BorderColor3 = Color3.fromRGB(0, 0, 0)
Settings.Position = UDim2.new(0.0659309998, 0, 0.51800859, 0)
Settings.Size = UDim2.new(0, 62, 0, 38)
Settings.Font = Enum.Font.GothamSemibold
Settings.Text = "Settings"
Settings.TextColor3 = Color3.fromRGB(170, 0, 0)
Settings.TextSize = 14.000

Help.Name = "Help"
Help.Parent = hub
Help.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Help.BorderColor3 = Color3.fromRGB(0, 0, 0)
Help.Position = UDim2.new(0.0483419076, 0, 0.373411834, 0)
Help.Size = UDim2.new(0, 63, 0, 33)
Help.Font = Enum.Font.GothamSemibold
Help.Text = "Help"
Help.TextColor3 = Color3.fromRGB(170, 0, 0)
Help.TextSize = 14.000

Info.Name = "Info"
Info.Parent = hub
Info.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Info.BorderColor3 = Color3.fromRGB(0, 0, 0)
Info.Position = UDim2.new(0.0794444755, 0, 0.212123036, 0)
Info.Size = UDim2.new(0, 61, 0, 33)
Info.Font = Enum.Font.GothamSemibold
Info.Text = "Info"
Info.TextColor3 = Color3.fromRGB(170, 0, 0)
Info.TextSize = 14.000

HomeFrame.Name = "HomeFrame"
HomeFrame.Parent = main
HomeFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
HomeFrame.BorderColor3 = Color3.fromRGB(170, 0, 0)
HomeFrame.Position = UDim2.new(0.243573979, 0, 0, 0)
HomeFrame.Size = UDim2.new(0, 229, 0, 287)

Btools.Name = "Btools"
Btools.Parent = HomeFrame
Btools.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Btools.BorderColor3 = Color3.fromRGB(170, 0, 0)
Btools.Position = UDim2.new(0.0310098752, 0, 0.331035912, 0)
Btools.Size = UDim2.new(0, 99, 0, 26)
Btools.Font = Enum.Font.GothamSemibold
Btools.Text = "Btools"
Btools.TextColor3 = Color3.fromRGB(170, 0, 0)
Btools.TextSize = 14.000

ChatLog.Name = "ChatLog"
ChatLog.Parent = HomeFrame
ChatLog.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ChatLog.BorderColor3 = Color3.fromRGB(170, 0, 0)
ChatLog.Position = UDim2.new(0.0310098752, 0, 0.0185148511, 0)
ChatLog.Size = UDim2.new(0, 99, 0, 26)
ChatLog.Font = Enum.Font.GothamSemibold
ChatLog.Text = "Chat Log"
ChatLog.TextColor3 = Color3.fromRGB(170, 0, 0)
ChatLog.TextSize = 14.000

GetToolRRP.Name = "Get Tool RRP"
GetToolRRP.Parent = HomeFrame
GetToolRRP.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
GetToolRRP.BorderColor3 = Color3.fromRGB(170, 0, 0)
GetToolRRP.Position = UDim2.new(0.0310098752, 0, 0.640732348, 0)
GetToolRRP.Size = UDim2.new(0, 99, 0, 26)
GetToolRRP.Font = Enum.Font.GothamSemibold
GetToolRRP.Text = "Get Tool RRP"
GetToolRRP.TextColor3 = Color3.fromRGB(170, 0, 0)
GetToolRRP.TextSize = 14.000

Freecam.Name = "Freecam"
Freecam.Parent = HomeFrame
Freecam.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Freecam.BorderColor3 = Color3.fromRGB(170, 0, 0)
Freecam.Position = UDim2.new(0.531009853, 0, 0.329289615, 0)
Freecam.Size = UDim2.new(0, 99, 0, 26)
Freecam.Font = Enum.Font.GothamSemibold
Freecam.Text = "Freecam"
Freecam.TextColor3 = Color3.fromRGB(170, 0, 0)
Freecam.TextSize = 14.000

FullBright.Name = "FullBright"
FullBright.Parent = HomeFrame
FullBright.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
FullBright.BorderColor3 = Color3.fromRGB(170, 0, 0)
FullBright.Position = UDim2.new(0.531009853, 0, 0.485540181, 0)
FullBright.Size = UDim2.new(0, 98, 0, 26)
FullBright.Font = Enum.Font.GothamSemibold
FullBright.Text = "FullBright"
FullBright.TextColor3 = Color3.fromRGB(170, 0, 0)
FullBright.TextSize = 14.000

Gamesense.Name = "Gamesense"
Gamesense.Parent = HomeFrame
Gamesense.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Gamesense.BorderColor3 = Color3.fromRGB(170, 0, 0)
Gamesense.Position = UDim2.new(0.0310098752, 0, 0.484121919, 0)
Gamesense.Size = UDim2.new(0, 99, 0, 26)
Gamesense.Font = Enum.Font.GothamSemibold
Gamesense.Text = "Legit Aimbot"
Gamesense.TextColor3 = Color3.fromRGB(170, 0, 0)
Gamesense.TextSize = 14.000

Hitbox.Name = "Hitbox"
Hitbox.Parent = HomeFrame
Hitbox.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Hitbox.BorderColor3 = Color3.fromRGB(170, 0, 0)
Hitbox.Position = UDim2.new(0.531009853, 0, 0.0213685837, 0)
Hitbox.Size = UDim2.new(0, 99, 0, 26)
Hitbox.Font = Enum.Font.GothamSemibold
Hitbox.Text = "Hitbox"
Hitbox.TextColor3 = Color3.fromRGB(170, 0, 0)
Hitbox.TextSize = 14.000

Multiple.Name = "Multiple"
Multiple.Parent = HomeFrame
Multiple.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Multiple.BorderColor3 = Color3.fromRGB(170, 0, 0)
Multiple.Position = UDim2.new(0.531009853, 0, 0.642038286, 0)
Multiple.Size = UDim2.new(0, 99, 0, 26)
Multiple.Font = Enum.Font.GothamSemibold
Multiple.Text = "Multiple Tools"
Multiple.TextColor3 = Color3.fromRGB(170, 0, 0)
Multiple.TextSize = 14.000

Noclip.Name = "Noclip"
Noclip.Parent = HomeFrame
Noclip.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Noclip.BorderColor3 = Color3.fromRGB(170, 0, 0)
Noclip.Position = UDim2.new(0.531009853, 0, 0.181134433, 0)
Noclip.Size = UDim2.new(0, 99, 0, 25)
Noclip.Font = Enum.Font.GothamSemibold
Noclip.Text = "Noclip (K)"
Noclip.TextColor3 = Color3.fromRGB(170, 0, 0)
Noclip.TextSize = 14.000

RevizAdmin.Name = "RevizAdmin"
RevizAdmin.Parent = HomeFrame
RevizAdmin.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
RevizAdmin.BorderColor3 = Color3.fromRGB(170, 0, 0)
RevizAdmin.Position = UDim2.new(0.0310098752, 0, 0.181134433, 0)
RevizAdmin.Size = UDim2.new(0, 99, 0, 26)
RevizAdmin.Font = Enum.Font.GothamSemibold
RevizAdmin.Text = "Reviz Admin"
RevizAdmin.TextColor3 = Color3.fromRGB(170, 0, 0)
RevizAdmin.TextSize = 14.000

TextButton.Name = ">"
TextButton.Parent = HomeFrame
TextButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton.Position = UDim2.new(0.732722461, 0, 0.846140742, 0)
TextButton.Size = UDim2.new(0, 52, 0, 37)
TextButton.Font = Enum.Font.GothamSemibold
TextButton.Text = ">"
TextButton.TextColor3 = Color3.fromRGB(170, 0, 0)
TextButton.TextSize = 14.000

HelpFrame.Name = "HelpFrame"
HelpFrame.Parent = main
HelpFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
HelpFrame.BorderColor3 = Color3.fromRGB(170, 0, 0)
HelpFrame.Position = UDim2.new(0.239633441, 0, 0, 0)
HelpFrame.Size = UDim2.new(0, 231, 0, 287)

TextLabel_2.Parent = HelpFrame
TextLabel_2.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.Position = UDim2.new(0.0611353703, 0, 0.020833334, 0)
TextLabel_2.Size = UDim2.new(0, 200, 0, 26)
TextLabel_2.Font = Enum.Font.GothamSemibold
TextLabel_2.Text = "Freecam Shift+P"
TextLabel_2.TextColor3 = Color3.fromRGB(170, 0, 0)
TextLabel_2.TextSize = 14.000

SettingsFrame.Name = "SettingsFrame"
SettingsFrame.Parent = main
SettingsFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
SettingsFrame.BorderColor3 = Color3.fromRGB(170, 0, 0)
SettingsFrame.Position = UDim2.new(0.237736166, 0, 0, 0)
SettingsFrame.Size = UDim2.new(0, 230, 0, 287)

TextButton_2.Parent = SettingsFrame
TextButton_2.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TextButton_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton_2.Position = UDim2.new(0.0628407001, 0, 0.0755391866, 0)
TextButton_2.Size = UDim2.new(0, 200, 0, 50)
TextButton_2.Font = Enum.Font.GothamSemibold
TextButton_2.Text = "nothing"
TextButton_2.TextColor3 = Color3.fromRGB(170, 0, 0)
TextButton_2.TextSize = 14.000

InfoFrame.Name = "InfoFrame"
InfoFrame.Parent = main
InfoFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
InfoFrame.BorderColor3 = Color3.fromRGB(170, 0, 0)
InfoFrame.Position = UDim2.new(0.237736166, 0, 0.00347222225, 0)
InfoFrame.Size = UDim2.new(0, 231, 0, 287)

TextLabel_3.Parent = InfoFrame
TextLabel_3.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_3.Position = UDim2.new(0.0567007698, 0, 0.168573722, 0)
TextLabel_3.Size = UDim2.new(0, 200, 0, 50)
TextLabel_3.Font = Enum.Font.GothamSemibold
TextLabel_3.Text = "Made By BA_law5uit"
TextLabel_3.TextColor3 = Color3.fromRGB(170, 0, 0)
TextLabel_3.TextSize = 14.000

Home2Frame.Name = "Home2Frame"
Home2Frame.Parent = main
Home2Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Home2Frame.BorderColor3 = Color3.fromRGB(170, 0, 0)
Home2Frame.Position = UDim2.new(0.236162543, 0, -5.96046448e-08, 0)
Home2Frame.Size = UDim2.new(0, 230, 0, 287)

TextButton_3.Name = "<"
TextButton_3.Parent = Home2Frame
TextButton_3.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TextButton_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton_3.Position = UDim2.new(0.0123931924, 0, 0.860029757, 0)
TextButton_3.Size = UDim2.new(0, 52, 0, 36)
TextButton_3.Font = Enum.Font.GothamSemibold
TextButton_3.Text = "<"
TextButton_3.TextColor3 = Color3.fromRGB(170, 0, 0)
TextButton_3.TextSize = 14.000

Tp.Name = "Tp"
Tp.Parent = Home2Frame
Tp.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Tp.BorderColor3 = Color3.fromRGB(170, 0, 0)
Tp.Position = UDim2.new(0.0199071895, 0, 0.0388605967, 0)
Tp.Size = UDim2.new(0, 97, 0, 25)
Tp.Font = Enum.Font.GothamSemibold
Tp.Text = "Tp (N)"
Tp.TextColor3 = Color3.fromRGB(170, 0, 0)
Tp.TextSize = 14.000

AntiAFK.Name = "Anti AFK"
AntiAFK.Parent = Home2Frame
AntiAFK.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
AntiAFK.BorderColor3 = Color3.fromRGB(170, 0, 0)
AntiAFK.Position = UDim2.new(0.508029997, 0, 0.0388606004, 0)
AntiAFK.Size = UDim2.new(0, 105, 0, 25)
AntiAFK.Font = Enum.Font.GothamSemibold
AntiAFK.Text = "Anti AFK"
AntiAFK.TextColor3 = Color3.fromRGB(170, 0, 0)
AntiAFK.TextSize = 14.000

DarkDex.Name = "Dark Dex"
DarkDex.Parent = Home2Frame
DarkDex.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
DarkDex.BorderColor3 = Color3.fromRGB(170, 0, 0)
DarkDex.Position = UDim2.new(0.508447289, 0, 0.192748919, 0)
DarkDex.Size = UDim2.new(0, 108, 0, 25)
DarkDex.Font = Enum.Font.GothamSemibold
DarkDex.Text = "Dark Dex"
DarkDex.TextColor3 = Color3.fromRGB(170, 0, 0)
DarkDex.TextSize = 14.000

Fly.Name = "Fly"
Fly.Parent = Home2Frame
Fly.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Fly.BorderColor3 = Color3.fromRGB(170, 0, 0)
Fly.Position = UDim2.new(0.0199071895, 0, 0.195943758, 0)
Fly.Size = UDim2.new(0, 97, 0, 25)
Fly.Font = Enum.Font.GothamSemibold
Fly.Text = "Fly (E)"
Fly.TextColor3 = Color3.fromRGB(170, 0, 0)
Fly.TextSize = 14.000

NoJumpCooldown.Name = "No Jump Cooldown"
NoJumpCooldown.Parent = Home2Frame
NoJumpCooldown.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
NoJumpCooldown.BorderColor3 = Color3.fromRGB(170, 0, 0)
NoJumpCooldown.Position = UDim2.new(0.508447289, 0, 0.345921308, 0)
NoJumpCooldown.Size = UDim2.new(0, 107, 0, 25)
NoJumpCooldown.Font = Enum.Font.GothamSemibold
NoJumpCooldown.Text = "No Cooldown"
NoJumpCooldown.TextColor3 = Color3.fromRGB(170, 0, 0)
NoJumpCooldown.TextSize = 14.000

SuperJump.Name = "Super Jump"
SuperJump.Parent = Home2Frame
SuperJump.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
SuperJump.BorderColor3 = Color3.fromRGB(170, 0, 0)
SuperJump.Position = UDim2.new(0.0199071895, 0, 0.349381387, 0)
SuperJump.Size = UDim2.new(0, 97, 0, 25)
SuperJump.Font = Enum.Font.GothamSemibold
SuperJump.Text = "Super Jump"
SuperJump.TextColor3 = Color3.fromRGB(170, 0, 0)
SuperJump.TextSize = 14.000

Speed.Name = "Speed"
Speed.Parent = Home2Frame
Speed.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Speed.BorderColor3 = Color3.fromRGB(170, 0, 0)
Speed.Position = UDim2.new(0.508029997, 0, 0.491956979, 0)
Speed.Size = UDim2.new(0, 107, 0, 25)
Speed.Font = Enum.Font.GothamSemibold
Speed.Text = "Speed (M)"
Speed.TextColor3 = Color3.fromRGB(170, 0, 0)
Speed.TextSize = 14.000

RemoveBlur.Name = "Remove Blur"
RemoveBlur.Parent = Home2Frame
RemoveBlur.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
RemoveBlur.BorderColor3 = Color3.fromRGB(170, 0, 0)
RemoveBlur.Position = UDim2.new(0.0189822018, 0, 0.495398402, 0)
RemoveBlur.Size = UDim2.new(0, 98, 0, 25)
RemoveBlur.Font = Enum.Font.GothamSemibold
RemoveBlur.Text = "Remove Shit"
RemoveBlur.TextColor3 = Color3.fromRGB(170, 0, 0)
RemoveBlur.TextSize = 14.000

Bypass.Name = "Bypass"
Bypass.Parent = Home2Frame
Bypass.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Bypass.BorderColor3 = Color3.fromRGB(170, 0, 0)
Bypass.Position = UDim2.new(0.0189822, 0, 0.674660563, 0)
Bypass.Size = UDim2.new(0, 98, 0, 25)
Bypass.Font = Enum.Font.GothamSemibold
Bypass.Text = "Bypass"
Bypass.TextColor3 = Color3.fromRGB(170, 0, 0)
Bypass.TextSize = 14.000

InfYield.Name = "Inf Yield"
InfYield.Parent = Home2Frame
InfYield.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
InfYield.BorderColor3 = Color3.fromRGB(170, 0, 0)
InfYield.Position = UDim2.new(0.508447289, 0, 0.674660563, 0)
InfYield.Size = UDim2.new(0, 107, 0, 25)
InfYield.Font = Enum.Font.GothamSemibold
InfYield.Text = "FE Admin"
InfYield.TextColor3 = Color3.fromRGB(170, 0, 0)
InfYield.TextSize = 14.000

TextButton_4.Name = ">"
TextButton_4.Parent = Home2Frame
TextButton_4.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TextButton_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton_4.Position = UDim2.new(0.741748571, 0, 0.863194346, 0)
TextButton_4.Size = UDim2.new(0, 52, 0, 35)
TextButton_4.Font = Enum.Font.GothamSemibold
TextButton_4.Text = ">"
TextButton_4.TextColor3 = Color3.fromRGB(170, 0, 0)
TextButton_4.TextSize = 14.000

Home3Frame.Name = "Home3Frame"
Home3Frame.Parent = main
Home3Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Home3Frame.BorderColor3 = Color3.fromRGB(170, 0, 0)
Home3Frame.Position = UDim2.new(0.239633486, 0, 0, 0)
Home3Frame.Size = UDim2.new(0, 230, 0, 288)

Button.Name = "<Button"
Button.Parent = Home3Frame
Button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button.Position = UDim2.new(0.0148148146, 0, 0.840537786, 0)
Button.Size = UDim2.new(0, 57, 0, 43)
Button.Font = Enum.Font.GothamSemibold
Button.Text = "<"
Button.TextColor3 = Color3.fromRGB(170, 0, 0)
Button.TextSize = 14.000

NHCBypass.Name = "NHC Bypass"
NHCBypass.Parent = Home3Frame
NHCBypass.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
NHCBypass.BorderColor3 = Color3.fromRGB(170, 0, 0)
NHCBypass.Position = UDim2.new(0.0108626662, 0, 0.021797061, 0)
NHCBypass.Size = UDim2.new(0, 104, 0, 25)
NHCBypass.Font = Enum.Font.GothamSemibold
NHCBypass.Text = "NHC Bypass"
NHCBypass.TextColor3 = Color3.fromRGB(170, 0, 0)
NHCBypass.TextSize = 14.000

HitboxExt.Name = "Hitbox Ext"
HitboxExt.Parent = Home3Frame
HitboxExt.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
HitboxExt.BorderColor3 = Color3.fromRGB(170, 0, 0)
HitboxExt.Position = UDim2.new(0.533245862, 0, 0.0217970796, 0)
HitboxExt.Size = UDim2.new(0, 103, 0, 25)
HitboxExt.Font = Enum.Font.GothamSemibold
HitboxExt.Text = "Hitbox Ext"
HitboxExt.TextColor3 = Color3.fromRGB(170, 0, 0)
HitboxExt.TextSize = 14.000

R6.Name = "R6"
R6.Parent = Home3Frame
R6.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
R6.BorderColor3 = Color3.fromRGB(170, 0, 0)
R6.Position = UDim2.new(0.0159373414, 0, 0.152495801, 0)
R6.Size = UDim2.new(0, 104, 0, 25)
R6.Font = Enum.Font.GothamSemibold
R6.Text = "R6"
R6.TextColor3 = Color3.fromRGB(170, 0, 0)
R6.TextSize = 14.000

NHCHitbox.Name = "NHC Hitbox"
NHCHitbox.Parent = Home3Frame
NHCHitbox.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
NHCHitbox.BorderColor3 = Color3.fromRGB(170, 0, 0)
NHCHitbox.Position = UDim2.new(0.52889806, 0, 0.152495846, 0)
NHCHitbox.Size = UDim2.new(0, 104, 0, 25)
NHCHitbox.Font = Enum.Font.GothamSemibold
NHCHitbox.Text = "NHC Hitbox"
NHCHitbox.TextColor3 = Color3.fromRGB(170, 0, 0)
NHCHitbox.TextSize = 14.000

RemoteSpy.Name = "Remote Spy"
RemoteSpy.Parent = Home3Frame
RemoteSpy.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
RemoteSpy.BorderColor3 = Color3.fromRGB(170, 0, 0)
RemoteSpy.Position = UDim2.new(0.0152104925, 0, 0.299574852, 0)
RemoteSpy.Size = UDim2.new(0, 104, 0, 26)
RemoteSpy.Font = Enum.Font.GothamSemibold
RemoteSpy.Text = "Remote Spy"
RemoteSpy.TextColor3 = Color3.fromRGB(170, 0, 0)
RemoteSpy.TextSize = 14.000

NoFog.Name = "No Fog"
NoFog.Parent = Home3Frame
NoFog.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
NoFog.BorderColor3 = Color3.fromRGB(170, 0, 0)
NoFog.Position = UDim2.new(0.528253973, 0, 0.299574852, 0)
NoFog.Size = UDim2.new(0, 104, 0, 26)
NoFog.Font = Enum.Font.GothamSemibold
NoFog.Text = "No Fog"
NoFog.TextColor3 = Color3.fromRGB(170, 0, 0)
NoFog.TextSize = 14.000

Fling.Name = "Fling"
Fling.Parent = Home3Frame
Fling.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Fling.BorderColor3 = Color3.fromRGB(170, 0, 0)
Fling.Position = UDim2.new(0.0158545449, 0, 0.452352703, 0)
Fling.Size = UDim2.new(0, 104, 0, 25)
Fling.Font = Enum.Font.GothamSemibold
Fling.Text = "FE Fling"
Fling.TextColor3 = Color3.fromRGB(170, 0, 0)
Fling.TextSize = 14.000

Sl2Gamepasss.Name = "Sl2 Gamepasss"
Sl2Gamepasss.Parent = Home3Frame
Sl2Gamepasss.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Sl2Gamepasss.BorderColor3 = Color3.fromRGB(170, 0, 0)
Sl2Gamepasss.Position = UDim2.new(0.528253973, 0, 0.455824912, 0)
Sl2Gamepasss.Size = UDim2.new(0, 104, 0, 25)
Sl2Gamepasss.Font = Enum.Font.GothamSemibold
Sl2Gamepasss.Text = "Sl2 Gamepass"
Sl2Gamepasss.TextColor3 = Color3.fromRGB(170, 0, 0)
Sl2Gamepasss.TextSize = 14.000

SaveItem.Name = "Save Item"
SaveItem.Parent = Home3Frame
SaveItem.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
SaveItem.BorderColor3 = Color3.fromRGB(170, 0, 0)
SaveItem.Position = UDim2.new(0.0110509461, 0, 0.601658165, 0)
SaveItem.Size = UDim2.new(0, 105, 0, 25)
SaveItem.Font = Enum.Font.GothamSemibold
SaveItem.Text = "Save Item"
SaveItem.TextColor3 = Color3.fromRGB(170, 0, 0)
SaveItem.TextSize = 14.000

-- Scripts:

local function OEPARZ_fake_script() -- Home.LocalScript 
	local script = Instance.new('LocalScript', Home)

	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.HomeFrame.Visible = true
		script.Parent.Parent.Parent.HelpFrame.Visible = false
		script.Parent.Parent.Parent.SettingsFrame.Visible = false
		script.Parent.Parent.Parent.InfoFrame.Visible = false
		script.Parent.Parent.Parent.Home2Frame.Visible = false
		script.Parent.Parent.Parent.Source.Visible = false
	end)
end
coroutine.wrap(OEPARZ_fake_script)()
local function YDSMVH_fake_script() -- Settings.LocalScript 
	local script = Instance.new('LocalScript', Settings)

	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.HomeFrame.Visible = false
		script.Parent.Parent.Parent.HelpFrame.Visible = false
		script.Parent.Parent.Parent.SettingsFrame.Visible = true
		script.Parent.Parent.Parent.InfoFrame.Visible = false
		script.Parent.Parent.Parent.Home2Frame.Visible = false
		script.Parent.Parent.Parent.Source.Visible = false
	end)
end
coroutine.wrap(YDSMVH_fake_script)()
local function BTZW_fake_script() -- Help.LocalScript 
	local script = Instance.new('LocalScript', Help)

	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.HomeFrame.Visible = false
		script.Parent.Parent.Parent.HelpFrame.Visible = true
		script.Parent.Parent.Parent.SettingsFrame.Visible = false
		script.Parent.Parent.Parent.InfoFrame.Visible = false
		script.Parent.Parent.Parent.Home2Frame.Visible = false
		script.Parent.Parent.Parent.Source.Visible = false
	end)
end
coroutine.wrap(BTZW_fake_script)()
local function RKQUFC_fake_script() -- Info.LocalScript 
	local script = Instance.new('LocalScript', Info)

	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.HomeFrame.Visible = false
		script.Parent.Parent.Parent.InfoFrame.Visible = true
		script.Parent.Parent.Parent.SettingsFrame.Visible = false
		script.Parent.Parent.Parent.SettingsFrame.Visible = false
		script.Parent.Parent.Parent.Home2Frame.Visible = false
		script.Parent.Parent.Parent.Source.Visible = false
	end)
end
coroutine.wrap(RKQUFC_fake_script)()
local function FLCKXFD_fake_script() -- TextButton.LocalScript 
	local script = Instance.new('LocalScript', TextButton)

	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.HomeFrame.Visible = false
		script.Parent.Parent.Parent.HelpFrame.Visible = false
		script.Parent.Parent.Parent.SettingsFrame.Visible = false
		script.Parent.Parent.Parent.InfoFrame.Visible = false
		script.Parent.Parent.Parent.Home2Frame.Visible = true
	end)
end
coroutine.wrap(FLCKXFD_fake_script)()
local function OPZVI_fake_script() -- main.LocalScript 
	local script = Instance.new('LocalScript', main)

	player = game.Players.LocalPlayer
	
	player:GetMouse().KeyDown:Connect(function(key)
		if key == "p" and script.Parent.Visible == false then
			script.Parent.Visible = true
		else
			if key == "p" and script.Parent.Visible == true then
				script.Parent.Visible = false
			end
		end
	end)
	
	
end
coroutine.wrap(OPZVI_fake_script)()
local function QTFTYNS_fake_script() -- TextButton_3.LocalScript 
	local script = Instance.new('LocalScript', TextButton_3)

	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.HomeFrame.Visible = true
		script.Parent.Parent.Parent.HelpFrame.Visible = false
		script.Parent.Parent.Parent.SettingsFrame.Visible = false
		script.Parent.Parent.Parent.InfoFrame.Visible = false
		script.Parent.Parent.Parent.Home2Frame.Visible = false
	end)
end
coroutine.wrap(QTFTYNS_fake_script)()
local function YPMSDDC_fake_script() -- TextButton_4.LocalScript 
	local script = Instance.new('LocalScript', TextButton_4)

	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.HomeFrame.Visible = false
		script.Parent.Parent.Parent.HelpFrame.Visible = false
		script.Parent.Parent.Parent.SettingsFrame.Visible = false
		script.Parent.Parent.Parent.InfoFrame.Visible = false
		script.Parent.Parent.Parent.Home2Frame.Visible = false
		script.Parent.Parent.Parent.Home3Frame.Visible = true
	end)
end
coroutine.wrap(YPMSDDC_fake_script)()
local function PVJA_fake_script() -- Button.LocalScript 
	local script = Instance.new('LocalScript', Button)

	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.HomeFrame.Visible = false
		script.Parent.Parent.Parent.HelpFrame.Visible = false
		script.Parent.Parent.Parent.SettingsFrame.Visible = false
		script.Parent.Parent.Parent.InfoFrame.Visible = false
		script.Parent.Parent.Parent.Home2Frame.Visible = true
		script.Parent.Parent.Parent.Home3Frame.Visible = false
	end)
end
coroutine.wrap(PVJA_fake_script)()













AntiAFK.MouseButton1Click:Connect(function()
	local vu = game:GetService("VirtualUser")
	game:GetService("Players").LocalPlayer.Idled:connect(function()
		vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
		wait(1)
		vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
	end)
end)

Bypass.MouseButton1Click:Connect(function()
	local a=getgenv().BypassSettings;local b=false;local c,d,e,f,tostring,tonumber=string.find,string.gsub,string.match,string.sub,tostring,tonumber;local getnamecallmethod,getcallingscript,checkcaller,getrenv,hookfunction,getrawmetatable,g,setreadonly,newcclosure,spawn,pairs,c,h,select,pcall,i,wait,tostring,unpack,warn=getnamecallmethod,getcallingscript,checkcaller,getrenv,hookfunction,getrawmetatable,Instance.new,setreadonly,newcclosure,spawn,pairs,string.find,string.lower,select,pcall,table.concat,wait,tostring,unpack,warn;local j,k={["a"]="1",["b"]="2",["c"]="3",["d"]="4",["e"]="5",["f"]="6",["g"]="7",["h"]="8",["i"]="9",["j"]="10",["k"]="11",["l"]="12",["m"]="13",["n"]="14",["o"]="15",["p"]="16",["q"]="17",["r"]="18",["s"]="19",["t"]="20",["u"]="21",["v"]="22",["w"]="23",["x"]="24",["y"]="25",["z"]="26",["A"]="27",["B"]="28",["C"]="29",["D"]="30",["E"]="31",["F"]="32",["G"]="33",["H"]="34",["I"]="35",["J"]="36",["K"]="37",["L"]="38",["M"]="39",["N"]="40",["O"]="41",["P"]="42",["Q"]="43",["R"]="44",["S"]="45",["T"]="46",["U"]="47",["V"]="48",["W"]="49",["X"]="50",["Y"]="51",["Z"]="52",["_"]="53",["1"]="54",["2"]="55",["3"]="56",["4"]="57",["5"]="58",["6"]="59",["7"]="60",["8"]="61",["9"]="62",["0"]="63",["-"]="64",[" "]="65",["&"]="66",["|"]="67",["."]="68",[","]="69",[":"]="70",["#"]="71",["["]="72",["]"]="73",["{"]="74",["}"]="75"},{["1"]="a",["2"]="b",["3"]="c",["4"]="d",["5"]="e",["6"]="f",["7"]="g",["8"]="h",["9"]="i",["10"]="j",["11"]="k",["12"]="l",["13"]="m",["14"]="n",["15"]="o",["16"]="p",["17"]="q",["18"]="r",["19"]="s",["20"]="t",["21"]="u",["22"]="v",["23"]="w",["24"]="x",["25"]="y",["26"]="z",["27"]="A",["28"]="B",["29"]="C",["30"]="D",["31"]="E",["32"]="F",["33"]="G",["34"]="H",["35"]="I",["36"]="J",["37"]="K",["38"]="L",["39"]="M",["40"]="N",["41"]="O",["42"]="P",["43"]="Q",["44"]="R",["45"]="S",["46"]="T",["47"]="U",["48"]="V",["49"]="W",["50"]="X",["51"]="Y",["52"]="Z",["53"]="_",["54"]="1",["55"]="2",["56"]="3",["57"]="4",["58"]="5",["59"]="6",["60"]="7",["61"]="8",["62"]="9",["63"]="0",["64"]="-",["65"]=" ",["66"]="&",["67"]="|",["68"]=".",["69"]=",",["70"]=":",["71"]="#",["72"]="[",["73"]="]",["74"]="{",["75"]="}"}local function l(m)local n=71268165242;local o=""local p=m;local q=m;local r=""local s=""local t=""local u=""do p=d(p,"\\\\","\\")while#p/56765>0 do t=e(p,"%d*")if t~=nil and not c(t,"%s+")then local v=tonumber(t)/n-c(p,t)p=d(p,t,"",1)p=f(p,1,1-1)..""..f(p,1+1,-1)v=d(tostring(v),"-","")local w=k[tostring(v)]r=r..w end end end;do q=d(q,"\\\\","\\")while#q>0 do u=e(q,"%d*")local v=tonumber(u)/n-c(q,u)q=d(q,u,"",1)q=f(q,1,1-1)..""..f(q,1+1,-1)v=d(tostring(v),"-","")local w=k[tostring(v)]s=s..w end end;o=s;return o end;local x={[newcclosure]=true,[hookfunc]=true,[getrawmetatable]=true,[setreadonly]=true,[getnamecallmethod]=true,[checkcaller]=true}for y,z in next,x do if not getgenv()[y]then b=true end end;local A={["A1"]=ll([[2066776792018\\712681652420\\1069022478630\\356340826210\\142536330484\\213804495726\\926486148146\\427608991452\\2280581287744\\1639167800566\\427608991452\\1069022478630\\1496631470082\\]]),["A3"]=l("2565653948712\\1069022478630\\1639167800566\\1140290643872\\855217982904\\427608991452\\3278335601132\\427608991452\\1354095139598\\1639167800566\\427608991452\\1354095139598\\"),["A4"]=l("2351849452986\\712681652420\\1354095139598\\427608991452\\"),["A5"]=l("3563408262100\\142536330484\\926486148146\\855217982904\\3278335601132\\1211558809114\\427608991452\\427608991452\\356340826210\\"),["A6"]=l("2636922113954\\1567899635324\\997754313388\\1211558809114\\3064531105406\\1140290643872\\1710435965808\\427608991452\\1354095139598\\"),["A7"]=l("2423117618228\\1354095139598\\142536330484\\1639167800566\\712681652420\\1496631470082\\1852972296292\\"),["A8"]=l("2494385783470\\427608991452\\142536330484\\926486148146\\1496631470082\\641413487178\\"),["A9"]=l("2280581287744\\1069022478630\\142536330484\\213804495726\\926486148146\\427608991452\\4703698905972\\2708190279196\\712681652420\\926486148146\\926486148146\\4703698905972\\2779458444438\\1140290643872\\570145321936\\1425363304840\\"),["A10"]=l("5202576062666\\2066776792018\\1852972296292\\1211558809114\\142536330484\\1425363304840\\1425363304840\\427608991452\\356340826210\\4703698905972\\2066776792018\\1852972296292\\4703698905972\\2565653948712\\1354095139598\\712681652420\\1425363304840\\5131307897424\\4561162575488\\4133553584036\\3919749088310\\4561162575488\\5273844227908\\"),["A11"]=l("2138044957260\\1354095139598\\1852972296292\\1425363304840\\1496631470082\\142536330484\\926486148146\\4703698905972\\1995508626776\\1069022478630\\1496631470082\\712681652420\\2138044957260\\641413487178\\427608991452\\142536330484\\1496631470082\\"),["A12"]=l("285072660968\\1354095139598\\1852972296292\\1425363304840\\1496631470082\\142536330484\\926486148146\\3848480923068\\142536330484\\285072660968\\3848480923068\\427608991452\\1639167800566\\427608991452\\1069022478630\\1496631470082\\1425363304840\\4917503401698\\285072660968\\641413487178\\427608991452\\285072660968\\855217982904\\"),["A13"]=l("1496631470082\\1354095139598\\1567899635324\\427608991452\\"),["A14"]=l("2138044957260\\1354095139598\\1852972296292\\1425363304840\\1496631470082\\142536330484\\926486148146\\4703698905972\\1995508626776\\2138044957260\\4703698905972\\2209313122502\\427608991452\\1496631470082\\427608991452\\285072660968\\1496631470082\\712681652420\\1140290643872\\1069022478630\\4703698905972\\2351849452986\\1140290643872\\1567899635324\\1069022478630\\356340826210\\5060039732182\\"),["A15"]=l("498877156694\\1140290643872\\1140290643872\\1496631470082\\427608991452\\1354095139598\\"),["A16"]=l("2066776792018\\1852972296292\\1211558809114\\142536330484\\1425363304840\\1425363304840\\427608991452\\356340826210\\4703698905972\\2066776792018\\1852972296292\\4703698905972\\2565653948712\\1354095139598\\712681652420\\1425363304840\\5131307897424\\4561162575488\\4133553584036\\3919749088310\\4561162575488\\"),["A17"]=l("2280581287744\\997754313388\\427608991452\\1354095139598\\142536330484\\926486148146\\356340826210\\3278335601132\\427608991452\\1496631470082\\1496631470082\\712681652420\\1069022478630\\570145321936\\1425363304840\\"),["A18"]=l("2138044957260\\1354095139598\\1852972296292\\1425363304840\\1496631470082\\142536330484\\926486148146\\4703698905972\\1995508626776\\2138044957260\\4703698905972\\2209313122502\\427608991452\\1496631470082\\427608991452\\285072660968\\1496631470082\\712681652420\\1140290643872\\1069022478630\\4703698905972\\2351849452986\\1140290643872\\1567899635324\\1069022478630\\356340826210\\5060039732182\\"),["A19"]=ll("1995508626776\\356340826210\\1140290643872\\1069022478630\\712681652420\\1425363304840\\"),["A21"]=l("1995508626776\\356340826210\\1140290643872\\1069022478630\\712681652420\\1425363304840\\3848480923068\\2138044957260\\926486148146\\712681652420\\427608991452\\1069022478630\\1496631470082\\4917503401698\\2138044957260\\926486148146\\712681652420\\427608991452\\1069022478630\\1496631470082\\2850726609680\\1140290643872\\1639167800566\\427608991452\\1354095139598\\"),["A22"]=l("2138044957260\\926486148146\\712681652420\\427608991452\\1069022478630\\1496631470082\\"),["A23"]=ll("2850726609680\\1140290643872\\356340826210\\1567899635324\\926486148146\\427608991452\\3278335601132\\285072660968\\1354095139598\\712681652420\\1211558809114\\1496631470082\\"),["A25"]=l("3207067435890\\142536330484\\1069022478630\\356340826210\\1140290643872\\997754313388\\"),["A26"]=l("2708190279196\\712681652420\\285072660968\\855217982904\\"),["A27"]=ll("3278335601132\\285072660968\\1354095139598\\712681652420\\1211558809114\\1496631470082\\4703698905972\\2066776792018\\926486148146\\1140290643872\\285072660968\\855217982904\\427608991452\\356340826210\\5060039732182\\4703698905972\\"),["A29"]=l("2423117618228\\427608991452\\1496631470082\\3064531105406\\1354095139598\\1140290643872\\1211558809114\\427608991452\\1354095139598\\1496631470082\\1852972296292\\2138044957260\\641413487178\\142536330484\\1069022478630\\570145321936\\427608991452\\356340826210\\3278335601132\\712681652420\\570145321936\\1069022478630\\142536330484\\926486148146\\"),["A30"]=ll("3278335601132\\285072660968\\1354095139598\\712681652420\\1211558809114\\1496631470082\\4703698905972\\2066776792018\\926486148146\\1140290643872\\285072660968\\855217982904\\427608991452\\356340826210\\5060039732182\\4703698905972\\"),["A32"]=l("2138044957260\\926486148146\\142536330484\\1425363304840\\1425363304840\\2921994774922\\142536330484\\997754313388\\427608991452\\"),["A33"]=l("2423117618228\\427608991452\\1496631470082\\3278335601132\\427608991452\\1354095139598\\1639167800566\\712681652420\\285072660968\\427608991452\\"),["A34"]=l("2779458444438\\1140290643872\\570145321936\\3278335601132\\427608991452\\1354095139598\\1639167800566\\712681652420\\285072660968\\427608991452\\"),["A35"]=ll("3278335601132\\285072660968\\1354095139598\\712681652420\\1211558809114\\1496631470082\\4703698905972\\2066776792018\\926486148146\\1140290643872\\285072660968\\855217982904\\427608991452\\356340826210\\5060039732182\\4703698905972\\"),["A37"]=l("2280581287744\\1354095139598\\1354095139598\\1140290643872\\1354095139598\\"),["A38"]=ll("3278335601132\\285072660968\\1354095139598\\712681652420\\1211558809114\\1496631470082\\4703698905972\\2066776792018\\926486148146\\1140290643872\\285072660968\\855217982904\\427608991452\\356340826210\\5060039732182\\4703698905972\\"),["A40"]=l("2850726609680\\427608991452\\1425363304840\\1425363304840\\142536330484\\570145321936\\427608991452\\2993262940164\\1567899635324\\1496631470082\\"),["A41"]=ll("3278335601132\\285072660968\\1354095139598\\712681652420\\1211558809114\\1496631470082\\4703698905972\\2066776792018\\926486148146\\1140290643872\\285072660968\\855217982904\\427608991452\\356340826210\\5060039732182\\4703698905972\\"),["A43"]=l("1995508626776\\1069022478630\\1496631470082\\712681652420\\4632430740730\\2993262940164\\213804495726\\498877156694\\1567899635324\\1425363304840\\285072660968\\142536330484\\1496631470082\\427608991452\\356340826210\\4703698905972\\3278335601132\\285072660968\\1354095139598\\712681652420\\1211558809114\\1496631470082\\1425363304840\\"),["A44"]=ll("3278335601132\\285072660968\\1354095139598\\712681652420\\1211558809114\\1496631470082\\4703698905972\\2066776792018\\926486148146\\1140290643872\\285072660968\\855217982904\\427608991452\\356340826210\\5060039732182\\4703698905972\\"),["A46"]="",["A47"]="",["A48"]=""}if not b then warn(A["A1"])return end;local B=g(A["A2"])local C=getrawmetatable(game)local D=C.__namecall;local E=C.__index;local F=game.GetFullName;local G={RemoteFunction=A["A3"],BindableEvent=A["A4"]}local H={[A["A5"]]=true,[A["A6"]]=true,[A["A7"]]=true,[A["A8"]]=true}local I={InvokeServer=true}local J={}local function K(...)if a[A["A9"]]then local L={...}warn(A["A10"],i(L," "))end end;local M=newcclosure(function(N,...)local O={...}local P=N.ClassName;spawn(function()local Q={pcall(J[P],N,unpack(O))}local R={select(2,unpack(Q))}local S="FuckYou"if a[A["A11"]]then if c(h(F(N)),A["A12"])then if#R==7 then for T,U in pairs(R[3])do if tostring(U)==A["A13"]then K(A["A14"],T)R[3][T]=not not not true end;if tostring(T)==A["A15"]then R[3][T]=A["A16"]end;if T==A["A17"]then for T,U in pairs(R[3][A["A17"]])do if tostring(U)==A["A13"]then K(A["A18"],T)R[3][A["A17"]][T]=not not not true end end end end end;K(A["A19"])end end;B:Fire(unpack(R))end)return B.Event:wait()end)for V,W in next,G do if I[W]then J[V]=hookfunction(g(V)[W],M)end end;if a[A["A20"]]then local X;X=hookfunction(getrenv().require,newcclosure(function(...)local Y={...}if not checkcaller()then if F(getcallingscript())==A["A21"]and Y[1].Name==A["A22"]then K(A["A23"])return wait(10e10)end end;return X(unpack(Y))end))end;if a[A["A25"]]then setreadonly(C,false)C.__namecall=function(...)local Y={...}local Z=getnamecallmethod()if checkcaller()then return D(unpack(Y))end;if Z==A["A26"]then K(A["A27"],A["A28"]..F(getcallingscript()))return wait(10e10)elseif Z==A["A29"]then if H[Y[2]]then K(A["A30"],A["A31"]..F(getcallingscript()))Y[2]=A["A32"]return D(unpack(Y))end elseif Z==A["A33"]then if Y[2]==A["A34"]then K(A["A35"],A["A36"]..F(getcallingscript()))return wait(10e10)end end;return D(unpack(Y))end;C.__index=function(...)local Y={...}if checkcaller()then return E(unpack(Y))end;if Y[2]==A["A37"]then K(A["A38"],A["A39"]..F(getcallingscript()))return elseif Y[2]==A["A40"]then K(A["A41"],A["A42"]..F(getcallingscript()))return end;return E(unpack(Y))end;setreadonly(C,true)end;if a[A["A43"]]then local _={bit32.bxor}for V,W in pairs(_)do local X=tostring(V)local a0=W;X=hookfunction(W,function(self,...)if not checkcaller()then K(A["A44"],A["A45"]..F(getcallingscript()))return wait(10e10)end;a0(...)end)end end
end)

DarkDex.MouseButton1Click:Connect(function()
	CreateGui = function()
		local NewGuiPart1 = Instance.new("ScreenGui")
		local NewGuiPart2 = Instance.new("Frame")
		local NewGuiPart3 = Instance.new("Frame")
		local NewGuiPart4 = Instance.new("TextLabel")
		local NewGuiPart5 = Instance.new("TextBox")
		local NewGuiPart6 = Instance.new("Frame")
		local NewGuiPart7 = Instance.new("Frame")
		local NewGuiPart8 = Instance.new("TextButton")
		local NewGuiPart9 = Instance.new("TextLabel")
		local NewGuiPart10 = Instance.new("TextLabel")
		local NewGuiPart11 = Instance.new("ImageLabel")
		local NewGuiPart12 = Instance.new("Frame")
		local NewGuiPart13 = Instance.new("Frame")
		local NewGuiPart14 = Instance.new("Frame")
		local NewGuiPart15 = Instance.new("TextButton")
		local NewGuiPart16 = Instance.new("ImageLabel")
		local NewGuiPart17 = Instance.new("TextButton")
		local NewGuiPart18 = Instance.new("ImageLabel")
		local NewGuiPart19 = Instance.new("TextButton")
		local NewGuiPart20 = Instance.new("ImageLabel")
		local NewGuiPart21 = Instance.new("TextButton")
		local NewGuiPart22 = Instance.new("ImageLabel")
		local NewGuiPart23 = Instance.new("TextButton")
		local NewGuiPart24 = Instance.new("ImageLabel")
		local NewGuiPart25 = Instance.new("TextButton")
		local NewGuiPart26 = Instance.new("ImageLabel")
		local NewGuiPart27 = Instance.new("TextButton")
		local NewGuiPart28 = Instance.new("Frame")
		local NewGuiPart29 = Instance.new("Frame")
		local NewGuiPart30 = Instance.new("TextLabel")
		local NewGuiPart31 = Instance.new("Frame")
		local NewGuiPart32 = Instance.new("TextLabel")
		local NewGuiPart33 = Instance.new("TextLabel")
		local NewGuiPart34 = Instance.new("TextButton")
		local NewGuiPart35 = Instance.new("TextLabel")
		local NewGuiPart36 = Instance.new("TextLabel")
		local NewGuiPart37 = Instance.new("Frame")
		local NewGuiPart38 = Instance.new("Frame")
		local NewGuiPart39 = Instance.new("TextLabel")
		local NewGuiPart40 = Instance.new("Frame")
		local NewGuiPart41 = Instance.new("TextButton")
		local NewGuiPart42 = Instance.new("TextLabel")
		local NewGuiPart43 = Instance.new("TextButton")
		local NewGuiPart44 = Instance.new("TextBox")
		local NewGuiPart45 = Instance.new("TextButton")
		local NewGuiPart46 = Instance.new("TextLabel")
		local NewGuiPart47 = Instance.new("TextLabel")
		local NewGuiPart48 = Instance.new("Frame")
		local NewGuiPart49 = Instance.new("TextLabel")
		local NewGuiPart50 = Instance.new("Frame")
		local NewGuiPart51 = Instance.new("TextButton")
		local NewGuiPart52 = Instance.new("TextLabel")
		local NewGuiPart53 = Instance.new("TextButton")
		local NewGuiPart54 = Instance.new("Frame")
		local NewGuiPart55 = Instance.new("TextLabel")
		local NewGuiPart56 = Instance.new("Frame")
		local NewGuiPart57 = Instance.new("TextLabel")
		local NewGuiPart58 = Instance.new("TextButton")
		local NewGuiPart59 = Instance.new("Frame")
		local NewGuiPart60 = Instance.new("TextLabel")
		local NewGuiPart61 = Instance.new("Frame")
		local NewGuiPart62 = Instance.new("TextLabel")
		local NewGuiPart63 = Instance.new("ScrollingFrame")
		local NewGuiPart64 = Instance.new("TextButton")
		local NewGuiPart65 = Instance.new("TextLabel")
		local NewGuiPart66 = Instance.new("TextLabel")
		local NewGuiPart67 = Instance.new("TextButton")
		local NewGuiPart68 = Instance.new("TextButton")
		local NewGuiPart69 = Instance.new("Frame")
		local NewGuiPart70 = Instance.new("TextButton")
		local NewGuiPart71 = Instance.new("TextBox")
		local NewGuiPart72 = Instance.new("TextButton")
		local NewGuiPart73 = Instance.new("TextButton")
		local NewGuiPart74 = Instance.new("Frame")
		local NewGuiPart75 = Instance.new("Frame")
		local NewGuiPart76 = Instance.new("TextButton")
		local NewGuiPart77 = Instance.new("ScrollingFrame")
		local NewGuiPart78 = Instance.new("Frame")
		local NewGuiPart79 = Instance.new("TextLabel")
		local NewGuiPart80 = Instance.new("TextLabel")
		local NewGuiPart81 = Instance.new("TextLabel")
		local NewGuiPart82 = Instance.new("Frame")
		local NewGuiPart83 = Instance.new("TextLabel")
		local NewGuiPart84 = Instance.new("Frame")
		local NewGuiPart85 = Instance.new("Frame")
		local NewGuiPart86 = Instance.new("Frame")
		local NewGuiPart87 = Instance.new("ImageButton")
		local NewGuiPart88 = Instance.new("Frame")
		local NewGuiPart89 = Instance.new("Frame")
		local NewGuiPart90 = Instance.new("Frame")
		local NewGuiPart91 = Instance.new("Frame")
		local NewGuiPart92 = Instance.new("Frame")
		local NewGuiPart93 = Instance.new("ImageButton")
		local NewGuiPart94 = Instance.new("Frame")
		local NewGuiPart95 = Instance.new("Frame")
		local NewGuiPart96 = Instance.new("Frame")
		local NewGuiPart97 = Instance.new("Frame")
		local NewGuiPart98 = Instance.new("Frame")
		local NewGuiPart99 = Instance.new("TextButton")
		local NewGuiPart100 = Instance.new("Frame")
		local NewGuiPart101 = Instance.new("Frame")
		local NewGuiPart102 = Instance.new("TextButton")
		local NewGuiPart103 = Instance.new("TextButton")
		local NewGuiPart104 = Instance.new("TextButton")
		local NewGuiPart105 = Instance.new("Frame")
		local NewGuiPart106 = Instance.new("Frame")
		local NewGuiPart107 = Instance.new("TextLabel")
		local NewGuiPart108 = Instance.new("TextLabel")
		local NewGuiPart109 = Instance.new("TextLabel")
		local NewGuiPart110 = Instance.new("ImageLabel")
		local NewGuiPart111 = Instance.new("Frame")
		local NewGuiPart112 = Instance.new("Frame")
		local NewGuiPart113 = Instance.new("TextLabel")
		local NewGuiPart114 = Instance.new("Frame")
		local NewGuiPart115 = Instance.new("Frame")
		local NewGuiPart116 = Instance.new("TextLabel")
		local NewGuiPart117 = Instance.new("TextLabel")
		local NewGuiPart118 = Instance.new("TextButton")
		local NewGuiPart119 = Instance.new("TextLabel")
		local NewGuiPart120 = Instance.new("TextLabel")
		local NewGuiPart121 = Instance.new("Frame")
		local NewGuiPart122 = Instance.new("TextLabel")
		local NewGuiPart123 = Instance.new("TextLabel")
		local NewGuiPart124 = Instance.new("TextButton")
		local NewGuiPart125 = Instance.new("TextLabel")
		local NewGuiPart126 = Instance.new("TextLabel")
		local NewGuiPart127 = Instance.new("Frame")
		local NewGuiPart128 = Instance.new("TextLabel")
		local NewGuiPart129 = Instance.new("TextLabel")
		local NewGuiPart130 = Instance.new("TextButton")
		local NewGuiPart131 = Instance.new("TextLabel")
		local NewGuiPart132 = Instance.new("TextLabel")
		local NewGuiPart133 = Instance.new("Frame")
		local NewGuiPart134 = Instance.new("TextLabel")
		local NewGuiPart135 = Instance.new("TextLabel")
		local NewGuiPart136 = Instance.new("TextButton")
		local NewGuiPart137 = Instance.new("TextLabel")
		local NewGuiPart138 = Instance.new("TextLabel")
		local NewGuiPart139 = Instance.new("TextLabel")
		local NewGuiPart140 = Instance.new("Frame")
		local NewGuiPart141 = Instance.new("Frame")
		local NewGuiPart142 = Instance.new("TextLabel")
		local NewGuiPart143 = Instance.new("TextButton")
		local NewGuiPart144 = Instance.new("TextBox")
		local NewGuiPart145 = Instance.new("Frame")
		local NewGuiPart146 = Instance.new("TextButton")
		local NewGuiPart147 = Instance.new("TextLabel")
		local NewGuiPart148 = Instance.new("TextLabel")
		local NewGuiPart149 = Instance.new("Frame")
		local NewGuiPart150 = Instance.new("Frame")
		local NewGuiPart151 = Instance.new("TextLabel")
		local NewGuiPart152 = Instance.new("TextLabel")
		local NewGuiPart153 = Instance.new("BindableFunction")
		local NewGuiPart154 = Instance.new("BindableFunction")
		local NewGuiPart155 = Instance.new("BindableFunction")
		local NewGuiPart156 = Instance.new("BindableFunction")
		local NewGuiPart157 = Instance.new("BindableEvent")
		local NewGuiPart158 = Instance.new("BindableFunction")
		local NewGuiPart159 = Instance.new("BindableFunction")
		local NewGuiPart160 = Instance.new("BindableEvent")
		local NewGuiPart161 = Instance.new("BindableFunction")
		local NewGuiPart162 = Instance.new("BindableFunction")
		local NewGuiPart163 = Instance.new("BindableEvent")
		-- Properties

		NewGuiPart1.Name = "Dex"

		NewGuiPart2.Name = "PropertiesFrame"
		NewGuiPart2.Parent = NewGuiPart1
		NewGuiPart2.Active = true
		NewGuiPart2.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart2.BackgroundTransparency = 0.10000000149012
		NewGuiPart2.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart2.Position = UDim2.new(1, 0, 0.5, 36)
		NewGuiPart2.Size = UDim2.new(0, 300, 0.5, -36)

		NewGuiPart158.Name = "GetApi"
		NewGuiPart158.Parent = NewGuiPart2
		NewGuiPart158.Archivable = true

		NewGuiPart159.Name = "GetAwaiting"
		NewGuiPart159.Parent = NewGuiPart2
		NewGuiPart159.Archivable = true

		NewGuiPart160.Name = "SetAwaiting"
		NewGuiPart160.Parent = NewGuiPart2
		NewGuiPart160.Archivable = true

		NewGuiPart3.Name = "Header"
		NewGuiPart3.Parent = NewGuiPart2
		NewGuiPart3.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart3.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart3.Position = UDim2.new(0, 0, 0, -36)
		NewGuiPart3.Size = UDim2.new(1, 0, 0, 35)

		NewGuiPart4.Parent = NewGuiPart3
		NewGuiPart4.BackgroundTransparency = 1
		NewGuiPart4.Position = UDim2.new(0, 4, 0, 0)
		NewGuiPart4.Size = UDim2.new(1, -4, 0.5, 0)
		NewGuiPart4.Font = Enum.Font.SourceSans
		NewGuiPart4.FontSize = Enum.FontSize.Size14
		NewGuiPart4.Text = "Properties"
		NewGuiPart4.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart4.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart5.Parent = NewGuiPart3
		NewGuiPart5.BackgroundTransparency = 0.80000001192093
		NewGuiPart5.Position = UDim2.new(0, 4, 0.5, 0)
		NewGuiPart5.Size = UDim2.new(1, -8, 0.5, -3)
		NewGuiPart5.Font = Enum.Font.SourceSans
		NewGuiPart5.FontSize = Enum.FontSize.Size14
		NewGuiPart5.Text = "Search Properties"
		--NewGuiPart5.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart5.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart6.Name = "ExplorerPanel"
		NewGuiPart6.Parent = NewGuiPart1
		NewGuiPart6.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart6.BackgroundTransparency = 0.10000000149012
		NewGuiPart6.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart6.Position = UDim2.new(1, 0, 0, 0)
		NewGuiPart6.Size = UDim2.new(0, 300, 0.5, 0)

		NewGuiPart153.Name = "GetOption"
		NewGuiPart153.Parent = NewGuiPart6
		NewGuiPart153.Archivable = true

		NewGuiPart154.Name = "GetSelection"
		NewGuiPart154.Parent = NewGuiPart6
		NewGuiPart154.Archivable = true

		NewGuiPart155.Name = "SetOption"
		NewGuiPart155.Parent = NewGuiPart6
		NewGuiPart155.Archivable = true

		NewGuiPart156.Name = "SetSelection"
		NewGuiPart156.Parent = NewGuiPart6
		NewGuiPart156.Archivable = true

		NewGuiPart157.Name = "SelectionChanged"
		NewGuiPart157.Parent = NewGuiPart6
		NewGuiPart157.Archivable = true

		NewGuiPart7.Name = "SideMenu"
		NewGuiPart7.Parent = NewGuiPart1
		NewGuiPart7.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart7.BackgroundTransparency = 1
		NewGuiPart7.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart7.BorderSizePixel = 0
		NewGuiPart7.Position = UDim2.new(1, -330, 0, 0)
		NewGuiPart7.Size = UDim2.new(0, 30, 0, 180)
		NewGuiPart7.Visible = false
		NewGuiPart7.ZIndex = 2

		NewGuiPart8.Name = "Toggle"
		NewGuiPart8.Parent = NewGuiPart7
		NewGuiPart8.Active = false
		NewGuiPart8.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart8.BorderSizePixel = 0
		NewGuiPart8.Position = UDim2.new(0, 0, 0, 60)
		NewGuiPart8.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart8.AutoButtonColor = false
		NewGuiPart8.Font = Enum.Font.SourceSans
		NewGuiPart8.FontSize = Enum.FontSize.Size24
		NewGuiPart8.Text = ">"
		NewGuiPart8.TextTransparency = 1
		NewGuiPart8.TextWrapped = true

		NewGuiPart9.Name = "Title"
		NewGuiPart9.Parent = NewGuiPart7
		NewGuiPart9.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart9.BackgroundTransparency = 1
		NewGuiPart9.Size = UDim2.new(0, 30, 0, 20)
		NewGuiPart9.ZIndex = 2
		NewGuiPart9.Font = Enum.Font.SourceSansBold
		NewGuiPart9.FontSize = Enum.FontSize.Size14
		NewGuiPart9.Text = "DEX"
		NewGuiPart9.TextWrapped = true

		NewGuiPart10.Name = "Version"
		NewGuiPart10.Parent = NewGuiPart7
		NewGuiPart10.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart10.BackgroundTransparency = 1
		NewGuiPart10.Position = UDim2.new(0, 0, 0, 15)
		NewGuiPart10.Size = UDim2.new(0, 30, 0, 20)
		NewGuiPart10.ZIndex = 2
		NewGuiPart10.Font = Enum.Font.SourceSansBold
		NewGuiPart10.FontSize = Enum.FontSize.Size12
		NewGuiPart10.Text = "V2.0.0"
		NewGuiPart10.TextWrapped = true

		NewGuiPart11.Name = "Slant"
		NewGuiPart11.Parent = NewGuiPart7
		NewGuiPart11.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart11.BackgroundTransparency = 1
		NewGuiPart11.Position = UDim2.new(0, 0, 0, 90)
		NewGuiPart11.Rotation = 180
		NewGuiPart11.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart11.Image = "rbxassetid://474172996"
		NewGuiPart11.ImageColor3 = Color3.new(0.913726, 0.913726, 0.913726)

		NewGuiPart12.Name = "Main"
		NewGuiPart12.Parent = NewGuiPart7
		NewGuiPart12.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart12.BorderSizePixel = 0
		NewGuiPart12.Size = UDim2.new(0, 30, 0, 30)

		NewGuiPart13.Name = "SlideOut"
		NewGuiPart13.Parent = NewGuiPart7
		NewGuiPart13.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
		NewGuiPart13.BackgroundTransparency = 1
		NewGuiPart13.BorderSizePixel = 0
		NewGuiPart13.ClipsDescendants = true
		NewGuiPart13.Position = UDim2.new(0, 0, 0, 30)
		NewGuiPart13.Size = UDim2.new(0, 30, 0, 150)

		NewGuiPart14.Name = "SlideFrame"
		NewGuiPart14.Parent = NewGuiPart13
		NewGuiPart14.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
		NewGuiPart14.BorderSizePixel = 0
		NewGuiPart14.Position = UDim2.new(0, 0, 0, -150)
		NewGuiPart14.Size = UDim2.new(0, 30, 0, 150)

		NewGuiPart15.Name = "Explorer"
		NewGuiPart15.Parent = NewGuiPart14
		NewGuiPart15.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart15.BackgroundTransparency = 1
		NewGuiPart15.BorderSizePixel = 0
		NewGuiPart15.Position = UDim2.new(0, 0, 0, 120)
		NewGuiPart15.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart15.ZIndex = 2
		NewGuiPart15.AutoButtonColor = false
		NewGuiPart15.Font = Enum.Font.SourceSans
		NewGuiPart15.FontSize = Enum.FontSize.Size24
		NewGuiPart15.Text = ""

		NewGuiPart16.Name = "Icon"
		NewGuiPart16.Parent = NewGuiPart15
		NewGuiPart16.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart16.BackgroundTransparency = 1
		NewGuiPart16.Position = UDim2.new(0, 5, 0, 5)
		NewGuiPart16.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart16.ZIndex = 2
		NewGuiPart16.Image = "rbxassetid://472635937"
		NewGuiPart16.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)

		NewGuiPart17.Name = "SaveMap"
		NewGuiPart17.Parent = NewGuiPart14
		NewGuiPart17.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart17.BackgroundTransparency = 1
		NewGuiPart17.BorderSizePixel = 0
		NewGuiPart17.Position = UDim2.new(0, 0, 0, 90)
		NewGuiPart17.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart17.ZIndex = 2
		NewGuiPart17.AutoButtonColor = false
		NewGuiPart17.Font = Enum.Font.SourceSans
		NewGuiPart17.FontSize = Enum.FontSize.Size24
		NewGuiPart17.Text = ""

		NewGuiPart18.Name = "Icon"
		NewGuiPart18.Parent = NewGuiPart17
		NewGuiPart18.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart18.BackgroundTransparency = 1
		NewGuiPart18.Position = UDim2.new(0, 5, 0, 5)
		NewGuiPart18.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart18.ZIndex = 2
		NewGuiPart18.Image = "rbxassetid://472636337"
		NewGuiPart18.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)

		NewGuiPart19.Name = "Settings"
		NewGuiPart19.Parent = NewGuiPart14
		NewGuiPart19.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart19.BackgroundTransparency = 1
		NewGuiPart19.BorderSizePixel = 0
		NewGuiPart19.Position = UDim2.new(0, 0, 0, 30)
		NewGuiPart19.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart19.ZIndex = 2
		NewGuiPart19.AutoButtonColor = false
		NewGuiPart19.Font = Enum.Font.SourceSans
		NewGuiPart19.FontSize = Enum.FontSize.Size24
		NewGuiPart19.Text = ""

		NewGuiPart20.Name = "Icon"
		NewGuiPart20.Parent = NewGuiPart19
		NewGuiPart20.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart20.BackgroundTransparency = 1
		NewGuiPart20.Position = UDim2.new(0, 5, 0, 5)
		NewGuiPart20.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart20.ZIndex = 2
		NewGuiPart20.Image = "rbxassetid://472635774"
		NewGuiPart20.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)

		NewGuiPart21.Name = "Remotes"
		NewGuiPart21.Parent = NewGuiPart14
		NewGuiPart21.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart21.BackgroundTransparency = 1
		NewGuiPart21.BorderSizePixel = 0
		NewGuiPart21.Position = UDim2.new(0, 0, 0, 60)
		NewGuiPart21.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart21.ZIndex = 2
		NewGuiPart21.AutoButtonColor = false
		NewGuiPart21.Font = Enum.Font.SourceSans
		NewGuiPart21.FontSize = Enum.FontSize.Size24
		NewGuiPart21.Text = ""

		NewGuiPart22.Name = "Icon"
		NewGuiPart22.Parent = NewGuiPart21
		NewGuiPart22.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart22.BackgroundTransparency = 1
		NewGuiPart22.Position = UDim2.new(0, 5, 0, 5)
		NewGuiPart22.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart22.ZIndex = 2
		NewGuiPart22.Image = "rbxassetid://472636187"
		NewGuiPart22.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)

		NewGuiPart23.Name = "About"
		NewGuiPart23.Parent = NewGuiPart14
		NewGuiPart23.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart23.BackgroundTransparency = 1
		NewGuiPart23.BorderSizePixel = 0
		NewGuiPart23.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart23.ZIndex = 2
		NewGuiPart23.AutoButtonColor = false
		NewGuiPart23.Font = Enum.Font.SourceSans
		NewGuiPart23.FontSize = Enum.FontSize.Size24
		NewGuiPart23.Text = ""

		NewGuiPart24.Name = "Icon"
		NewGuiPart24.Parent = NewGuiPart23
		NewGuiPart24.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart24.BackgroundTransparency = 1
		NewGuiPart24.Position = UDim2.new(0, 5, 0, 5)
		NewGuiPart24.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart24.ZIndex = 2
		NewGuiPart24.Image = "rbxassetid://476354004"
		NewGuiPart24.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)

		NewGuiPart25.Name = "OpenScriptEditor"
		NewGuiPart25.Parent = NewGuiPart7
		NewGuiPart25.Active = false
		NewGuiPart25.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart25.BorderSizePixel = 0
		NewGuiPart25.Position = UDim2.new(0, 0, 0, 30)
		NewGuiPart25.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart25.ZIndex = 2
		NewGuiPart25.AutoButtonColor = false
		NewGuiPart25.Font = Enum.Font.SourceSans
		NewGuiPart25.FontSize = Enum.FontSize.Size24
		NewGuiPart25.Text = ""

		NewGuiPart26.Name = "Icon"
		NewGuiPart26.Parent = NewGuiPart25
		NewGuiPart26.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart26.BackgroundTransparency = 1
		NewGuiPart26.Position = UDim2.new(0, 5, 0, 5)
		NewGuiPart26.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart26.ZIndex = 2
		NewGuiPart26.Image = "rbxassetid://475456048"
		NewGuiPart26.ImageColor3 = Color3.new(0.105882, 0.164706, 0.207843)
		NewGuiPart26.ImageTransparency = 1

		NewGuiPart27.Name = "Toggle"
		NewGuiPart27.Parent = NewGuiPart1
		NewGuiPart27.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart27.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart27.Position = UDim2.new(1, 0, 0, 0)
		NewGuiPart27.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart27.Font = Enum.Font.SourceSans
		NewGuiPart27.FontSize = Enum.FontSize.Size24
		NewGuiPart27.Text = "<"

		NewGuiPart28.Name = "SettingsPanel"
		NewGuiPart28.Parent = NewGuiPart1
		NewGuiPart28.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart28.BackgroundTransparency = 0.10000000149012
		NewGuiPart28.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart28.Position = UDim2.new(1, 0, 0, 0)
		NewGuiPart28.Size = UDim2.new(0, 300, 1, 0)

		NewGuiPart162.Name = "GetSetting"
		NewGuiPart162.Parent = NewGuiPart28
		NewGuiPart162.Archivable = true

		NewGuiPart29.Name = "Header"
		NewGuiPart29.Parent = NewGuiPart28
		NewGuiPart29.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart29.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart29.Size = UDim2.new(1, 0, 0, 17)

		NewGuiPart30.Parent = NewGuiPart29
		NewGuiPart30.BackgroundTransparency = 1
		NewGuiPart30.Position = UDim2.new(0, 4, 0, 0)
		NewGuiPart30.Size = UDim2.new(1, -4, 1, 0)
		NewGuiPart30.Font = Enum.Font.SourceSans
		NewGuiPart30.FontSize = Enum.FontSize.Size14
		NewGuiPart30.Text = "Settings"
		NewGuiPart30.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart30.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart31.Name = "SettingTemplate"
		NewGuiPart31.Parent = NewGuiPart28
		NewGuiPart31.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart31.BackgroundTransparency = 1
		NewGuiPart31.Position = UDim2.new(0, 0, 0, 18)
		NewGuiPart31.Size = UDim2.new(1, 0, 0, 60)
		NewGuiPart31.Visible = false

		NewGuiPart32.Name = "SName"
		NewGuiPart32.Parent = NewGuiPart31
		NewGuiPart32.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart32.BackgroundTransparency = 1
		NewGuiPart32.Position = UDim2.new(0, 10, 0, 0)
		NewGuiPart32.Size = UDim2.new(1, -20, 0, 30)
		NewGuiPart32.Font = Enum.Font.SourceSans
		NewGuiPart32.FontSize = Enum.FontSize.Size18
		NewGuiPart32.Text = "SettingName"
		NewGuiPart32.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart33.Name = "Status"
		NewGuiPart33.Parent = NewGuiPart31
		NewGuiPart33.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart33.BackgroundTransparency = 1
		NewGuiPart33.Position = UDim2.new(0, 60, 0, 30)
		NewGuiPart33.Size = UDim2.new(0, 50, 0, 15)
		NewGuiPart33.Font = Enum.Font.SourceSans
		NewGuiPart33.FontSize = Enum.FontSize.Size18
		NewGuiPart33.Text = "Off"
		NewGuiPart33.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart34.Name = "Change"
		NewGuiPart34.Parent = NewGuiPart31
		NewGuiPart34.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
		NewGuiPart34.BorderSizePixel = 0
		NewGuiPart34.Position = UDim2.new(0, 10, 0, 30)
		NewGuiPart34.Size = UDim2.new(0, 40, 0, 15)
		NewGuiPart34.Font = Enum.Font.SourceSans
		NewGuiPart34.FontSize = Enum.FontSize.Size14
		NewGuiPart34.Text = ""

		NewGuiPart35.Name = "OnBar"
		NewGuiPart35.Parent = NewGuiPart34
		NewGuiPart35.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
		NewGuiPart35.BorderSizePixel = 0
		NewGuiPart35.Size = UDim2.new(0, 0, 0, 15)
		NewGuiPart35.Font = Enum.Font.SourceSans
		NewGuiPart35.FontSize = Enum.FontSize.Size14
		NewGuiPart35.Text = ""

		NewGuiPart36.Name = "Bar"
		NewGuiPart36.Parent = NewGuiPart34
		NewGuiPart36.BackgroundColor3 = Color3.new(0, 0, 0)
		NewGuiPart36.BorderSizePixel = 0
		NewGuiPart36.ClipsDescendants = true
		NewGuiPart36.Position = UDim2.new(0, -2, 0, -2)
		NewGuiPart36.Size = UDim2.new(0, 10, 0, 19)
		NewGuiPart36.Font = Enum.Font.SourceSans
		NewGuiPart36.FontSize = Enum.FontSize.Size14
		NewGuiPart36.Text = ""

		NewGuiPart37.Name = "SettingList"
		NewGuiPart37.Parent = NewGuiPart28
		NewGuiPart37.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart37.BackgroundTransparency = 1
		NewGuiPart37.Position = UDim2.new(0, 0, 0, 17)
		NewGuiPart37.Size = UDim2.new(1, 0, 1, -17)

		NewGuiPart38.Name = "SaveInstance"
		NewGuiPart38.Parent = NewGuiPart1
		NewGuiPart38.Active = true
		NewGuiPart38.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart38.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart38.Draggable = true
		NewGuiPart38.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
		NewGuiPart38.Size = UDim2.new(0, 350, 0, 20)
		NewGuiPart38.Visible = false
		NewGuiPart38.ZIndex = 2

		NewGuiPart39.Name = "Title"
		NewGuiPart39.Parent = NewGuiPart38
		NewGuiPart39.BackgroundTransparency = 1
		NewGuiPart39.Size = UDim2.new(1, 0, 1, 0)
		NewGuiPart39.ZIndex = 2
		NewGuiPart39.Font = Enum.Font.SourceSans
		NewGuiPart39.FontSize = Enum.FontSize.Size14
		NewGuiPart39.Text = "Save Instance"
		NewGuiPart39.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart39.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart40.Name = "MainWindow"
		NewGuiPart40.Parent = NewGuiPart38
		NewGuiPart40.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart40.BackgroundTransparency = 0.10000000149012
		NewGuiPart40.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart40.Size = UDim2.new(1, 0, 0, 200)

		NewGuiPart41.Name = "Save"
		NewGuiPart41.Parent = NewGuiPart40
		NewGuiPart41.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart41.BackgroundTransparency = 0.5
		NewGuiPart41.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart41.Position = UDim2.new(0.075000003, 0, 1, -40)
		NewGuiPart41.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart41.Font = Enum.Font.SourceSans
		NewGuiPart41.FontSize = Enum.FontSize.Size18
		NewGuiPart41.Text = "Save"

		NewGuiPart42.Name = "Desc"
		NewGuiPart42.Parent = NewGuiPart40
		NewGuiPart42.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart42.BackgroundTransparency = 1
		NewGuiPart42.Position = UDim2.new(0, 0, 0, 20)
		NewGuiPart42.Size = UDim2.new(1, 0, 0, 40)
		NewGuiPart42.Font = Enum.Font.SourceSans
		NewGuiPart42.FontSize = Enum.FontSize.Size14
		NewGuiPart42.Text = "This will save an instance to your PC. Type in the name for your instance. (.rbxmx will be added automatically.)"
		NewGuiPart42.TextWrapped = true

		NewGuiPart43.Name = "Cancel"
		NewGuiPart43.Parent = NewGuiPart40
		NewGuiPart43.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart43.BackgroundTransparency = 0.5
		NewGuiPart43.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart43.Position = UDim2.new(0.524999976, 0, 1, -40)
		NewGuiPart43.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart43.Font = Enum.Font.SourceSans
		NewGuiPart43.FontSize = Enum.FontSize.Size18
		NewGuiPart43.Text = "Cancel"

		NewGuiPart44.Name = "FileName"
		NewGuiPart44.Parent = NewGuiPart40
		NewGuiPart44.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart44.BackgroundTransparency = 0.20000000298023
		NewGuiPart44.Position = UDim2.new(0.075000003, 0, 0.400000006, 0)
		NewGuiPart44.Size = UDim2.new(0.850000024, 0, 0, 30)
		NewGuiPart44.Font = Enum.Font.SourceSans
		NewGuiPart44.FontSize = Enum.FontSize.Size18
		NewGuiPart44.Text = ""
		NewGuiPart44.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart45.Name = "SaveObjects"
		NewGuiPart45.Parent = NewGuiPart40
		NewGuiPart45.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart45.BackgroundTransparency = 0.60000002384186
		NewGuiPart45.Position = UDim2.new(0.075000003, 0, 0.625, 0)
		NewGuiPart45.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart45.ZIndex = 2
		NewGuiPart45.Font = Enum.Font.SourceSans
		NewGuiPart45.FontSize = Enum.FontSize.Size18
		NewGuiPart45.Text = ""
		NewGuiPart45.TextColor3 = Color3.new(1, 1, 1)

		NewGuiPart46.Name = "enabled"
		NewGuiPart46.Parent = NewGuiPart45
		NewGuiPart46.BackgroundColor3 = Color3.new(0.380392, 0.380392, 0.380392)
		NewGuiPart46.BackgroundTransparency = 0.40000000596046
		NewGuiPart46.BorderSizePixel = 0
		NewGuiPart46.Position = UDim2.new(0, 3, 0, 3)
		NewGuiPart46.Size = UDim2.new(0, 14, 0, 14)
		NewGuiPart46.Font = Enum.Font.SourceSans
		NewGuiPart46.FontSize = Enum.FontSize.Size14
		NewGuiPart46.Text = ""

		NewGuiPart47.Name = "Desc2"
		NewGuiPart47.Parent = NewGuiPart40
		NewGuiPart47.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart47.BackgroundTransparency = 1
		NewGuiPart47.Position = UDim2.new(0.075000003, 30, 0.625, 0)
		NewGuiPart47.Size = UDim2.new(0.925000012, -30, 0, 20)
		NewGuiPart47.Font = Enum.Font.SourceSans
		NewGuiPart47.FontSize = Enum.FontSize.Size14
		NewGuiPart47.Text = "Save \"Object\" type values"
		NewGuiPart47.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart48.Name = "Confirmation"
		NewGuiPart48.Parent = NewGuiPart1
		NewGuiPart48.Active = true
		NewGuiPart48.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart48.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart48.Draggable = true
		NewGuiPart48.Position = UDim2.new(0.300000012, 0, 0.349999994, 0)
		NewGuiPart48.Size = UDim2.new(0, 350, 0, 20)
		NewGuiPart48.Visible = false
		NewGuiPart48.ZIndex = 3

		NewGuiPart49.Name = "Title"
		NewGuiPart49.Parent = NewGuiPart48
		NewGuiPart49.BackgroundTransparency = 1
		NewGuiPart49.Size = UDim2.new(1, 0, 1, 0)
		NewGuiPart49.ZIndex = 3
		NewGuiPart49.Font = Enum.Font.SourceSans
		NewGuiPart49.FontSize = Enum.FontSize.Size14
		NewGuiPart49.Text = "Confirm"
		NewGuiPart49.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart49.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart50.Name = "MainWindow"
		NewGuiPart50.Parent = NewGuiPart48
		NewGuiPart50.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart50.BackgroundTransparency = 0.10000000149012
		NewGuiPart50.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart50.Size = UDim2.new(1, 0, 0, 150)
		NewGuiPart50.ZIndex = 2

		NewGuiPart51.Name = "Yes"
		NewGuiPart51.Parent = NewGuiPart50
		NewGuiPart51.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart51.BackgroundTransparency = 0.5
		NewGuiPart51.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart51.Position = UDim2.new(0.075000003, 0, 1, -40)
		NewGuiPart51.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart51.ZIndex = 2
		NewGuiPart51.Font = Enum.Font.SourceSans
		NewGuiPart51.FontSize = Enum.FontSize.Size18
		NewGuiPart51.Text = "Yes"

		NewGuiPart52.Name = "Desc"
		NewGuiPart52.Parent = NewGuiPart50
		NewGuiPart52.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart52.BackgroundTransparency = 1
		NewGuiPart52.Position = UDim2.new(0, 0, 0, 20)
		NewGuiPart52.Size = UDim2.new(1, 0, 0, 40)
		NewGuiPart52.ZIndex = 2
		NewGuiPart52.Font = Enum.Font.SourceSans
		NewGuiPart52.FontSize = Enum.FontSize.Size14
		NewGuiPart52.Text = "The file, FILENAME, already exists. Overwrite?"
		NewGuiPart52.TextWrapped = true

		NewGuiPart53.Name = "No"
		NewGuiPart53.Parent = NewGuiPart50
		NewGuiPart53.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart53.BackgroundTransparency = 0.5
		NewGuiPart53.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart53.Position = UDim2.new(0.524999976, 0, 1, -40)
		NewGuiPart53.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart53.ZIndex = 2
		NewGuiPart53.Font = Enum.Font.SourceSans
		NewGuiPart53.FontSize = Enum.FontSize.Size18
		NewGuiPart53.Text = "No"

		NewGuiPart54.Name = "Caution"
		NewGuiPart54.Parent = NewGuiPart1
		NewGuiPart54.Active = true
		NewGuiPart54.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart54.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart54.Draggable = true
		NewGuiPart54.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
		NewGuiPart54.Size = UDim2.new(0, 350, 0, 20)
		NewGuiPart54.Visible = false
		NewGuiPart54.ZIndex = 5

		NewGuiPart55.Name = "Title"
		NewGuiPart55.Parent = NewGuiPart54
		NewGuiPart55.BackgroundTransparency = 1
		NewGuiPart55.Size = UDim2.new(1, 0, 1, 0)
		NewGuiPart55.ZIndex = 5
		NewGuiPart55.Font = Enum.Font.SourceSans
		NewGuiPart55.FontSize = Enum.FontSize.Size14
		NewGuiPart55.Text = "Caution"
		NewGuiPart55.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart55.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart56.Name = "MainWindow"
		NewGuiPart56.Parent = NewGuiPart54
		NewGuiPart56.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart56.BackgroundTransparency = 0.10000000149012
		NewGuiPart56.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart56.Size = UDim2.new(1, 0, 0, 150)
		NewGuiPart56.ZIndex = 4

		NewGuiPart57.Name = "Desc"
		NewGuiPart57.Parent = NewGuiPart56
		NewGuiPart57.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart57.BackgroundTransparency = 1
		NewGuiPart57.Position = UDim2.new(0, 0, 0, 20)
		NewGuiPart57.Size = UDim2.new(1, 0, 0, 42)
		NewGuiPart57.ZIndex = 4
		NewGuiPart57.Font = Enum.Font.SourceSans
		NewGuiPart57.FontSize = Enum.FontSize.Size14
		NewGuiPart57.Text = "The file, FILENAME, already exists. Overwrite?"
		NewGuiPart57.TextWrapped = true

		NewGuiPart58.Name = "Ok"
		NewGuiPart58.Parent = NewGuiPart56
		NewGuiPart58.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart58.BackgroundTransparency = 0.5
		NewGuiPart58.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart58.Position = UDim2.new(0.300000012, 0, 1, -40)
		NewGuiPart58.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart58.ZIndex = 4
		NewGuiPart58.Font = Enum.Font.SourceSans
		NewGuiPart58.FontSize = Enum.FontSize.Size18
		NewGuiPart58.Text = "Ok"

		NewGuiPart59.Name = "CallRemote"
		NewGuiPart59.Parent = NewGuiPart1
		NewGuiPart59.Active = true
		NewGuiPart59.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart59.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart59.Draggable = true
		NewGuiPart59.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
		NewGuiPart59.Size = UDim2.new(0, 350, 0, 20)
		NewGuiPart59.Visible = false
		NewGuiPart59.ZIndex = 2

		NewGuiPart60.Name = "Title"
		NewGuiPart60.Parent = NewGuiPart59
		NewGuiPart60.BackgroundTransparency = 1
		NewGuiPart60.Size = UDim2.new(1, 0, 1, 0)
		NewGuiPart60.ZIndex = 2
		NewGuiPart60.Font = Enum.Font.SourceSans
		NewGuiPart60.FontSize = Enum.FontSize.Size14
		NewGuiPart60.Text = "Call Remote"
		NewGuiPart60.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart60.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart61.Name = "MainWindow"
		NewGuiPart61.Parent = NewGuiPart59
		NewGuiPart61.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart61.BackgroundTransparency = 0.10000000149012
		NewGuiPart61.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart61.Size = UDim2.new(1, 0, 0, 200)

		NewGuiPart62.Name = "Desc"
		NewGuiPart62.Parent = NewGuiPart61
		NewGuiPart62.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart62.BackgroundTransparency = 1
		NewGuiPart62.Position = UDim2.new(0, 0, 0, 20)
		NewGuiPart62.Size = UDim2.new(1, 0, 0, 20)
		NewGuiPart62.Font = Enum.Font.SourceSans
		NewGuiPart62.FontSize = Enum.FontSize.Size14
		NewGuiPart62.Text = "Arguments"
		NewGuiPart62.TextWrapped = true

		NewGuiPart63.Name = "Arguments"
		NewGuiPart63.Parent = NewGuiPart61
		NewGuiPart63.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart63.BackgroundTransparency = 1
		NewGuiPart63.Position = UDim2.new(0, 0, 0, 40)
		NewGuiPart63.Size = UDim2.new(1, 0, 0, 80)
		NewGuiPart63.BottomImage = "rbxasset://textures/blackBkg_square.png"
		NewGuiPart63.CanvasSize = UDim2.new(0, 0, 0, 0)
		NewGuiPart63.MidImage = "rbxasset://textures/blackBkg_square.png"
		NewGuiPart63.TopImage = "rbxasset://textures/blackBkg_square.png"

		NewGuiPart64.Name = "DisplayReturned"
		NewGuiPart64.Parent = NewGuiPart61
		NewGuiPart64.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart64.BackgroundTransparency = 0.60000002384186
		NewGuiPart64.Position = UDim2.new(0.075000003, 0, 0.625, 0)
		NewGuiPart64.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart64.ZIndex = 2
		NewGuiPart64.Font = Enum.Font.SourceSans
		NewGuiPart64.FontSize = Enum.FontSize.Size18
		NewGuiPart64.Text = ""
		NewGuiPart64.TextColor3 = Color3.new(1, 1, 1)

		NewGuiPart65.Name = "enabled"
		NewGuiPart65.Parent = NewGuiPart64
		NewGuiPart65.BackgroundColor3 = Color3.new(0.380392, 0.380392, 0.380392)
		NewGuiPart65.BackgroundTransparency = 0.40000000596046
		NewGuiPart65.BorderSizePixel = 0
		NewGuiPart65.Position = UDim2.new(0, 3, 0, 3)
		NewGuiPart65.Size = UDim2.new(0, 14, 0, 14)
		NewGuiPart65.Visible = false
		NewGuiPart65.Font = Enum.Font.SourceSans
		NewGuiPart65.FontSize = Enum.FontSize.Size14
		NewGuiPart65.Text = ""

		NewGuiPart66.Name = "Desc2"
		NewGuiPart66.Parent = NewGuiPart61
		NewGuiPart66.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart66.BackgroundTransparency = 1
		NewGuiPart66.Position = UDim2.new(0.075000003, 30, 0.625, 0)
		NewGuiPart66.Size = UDim2.new(0.925000012, -30, 0, 20)
		NewGuiPart66.Font = Enum.Font.SourceSans
		NewGuiPart66.FontSize = Enum.FontSize.Size14
		NewGuiPart66.Text = "Display values returned"
		NewGuiPart66.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart67.Name = "Add"
		NewGuiPart67.Parent = NewGuiPart61
		NewGuiPart67.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart67.BackgroundTransparency = 0.5
		NewGuiPart67.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart67.Position = UDim2.new(0.800000012, 0, 0.625, 0)
		NewGuiPart67.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart67.Font = Enum.Font.SourceSansBold
		NewGuiPart67.FontSize = Enum.FontSize.Size24
		NewGuiPart67.Text = "+"

		NewGuiPart68.Name = "Subtract"
		NewGuiPart68.Parent = NewGuiPart61
		NewGuiPart68.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart68.BackgroundTransparency = 0.5
		NewGuiPart68.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart68.Position = UDim2.new(0.899999976, 0, 0.625, 0)
		NewGuiPart68.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart68.Font = Enum.Font.SourceSansBold
		NewGuiPart68.FontSize = Enum.FontSize.Size24
		NewGuiPart68.Text = "-"

		NewGuiPart69.Name = "ArgumentTemplate"
		NewGuiPart69.Parent = NewGuiPart61
		NewGuiPart69.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart69.BackgroundTransparency = 0.5
		NewGuiPart69.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart69.Size = UDim2.new(1, 0, 0, 20)
		NewGuiPart69.Visible = false

		NewGuiPart70.Name = "Type"
		NewGuiPart70.Parent = NewGuiPart69
		NewGuiPart70.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart70.BackgroundTransparency = 0.89999997615814
		NewGuiPart70.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart70.Size = UDim2.new(0.400000006, 0, 0, 20)
		NewGuiPart70.Font = Enum.Font.SourceSans
		NewGuiPart70.FontSize = Enum.FontSize.Size18
		NewGuiPart70.Text = "Script"

		NewGuiPart71.Name = "Value"
		NewGuiPart71.Parent = NewGuiPart69
		NewGuiPart71.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart71.BackgroundTransparency = 0.89999997615814
		NewGuiPart71.Position = UDim2.new(0.400000006, 0, 0, 0)
		NewGuiPart71.Size = UDim2.new(0.600000024, -12, 0, 20)
		NewGuiPart71.Font = Enum.Font.SourceSans
		NewGuiPart71.FontSize = Enum.FontSize.Size14
		NewGuiPart71.Text = ""
		NewGuiPart71.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart72.Name = "Cancel"
		NewGuiPart72.Parent = NewGuiPart61
		NewGuiPart72.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart72.BackgroundTransparency = 0.5
		NewGuiPart72.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart72.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart72.Font = Enum.Font.SourceSans
		NewGuiPart72.FontSize = Enum.FontSize.Size18
		NewGuiPart72.Text = "Cancel"

		NewGuiPart73.Name = "Ok"
		NewGuiPart73.Parent = NewGuiPart61
		NewGuiPart73.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart73.BackgroundTransparency = 0.5
		NewGuiPart73.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart73.Position = UDim2.new(0.075000003, 0, 1, -40)
		NewGuiPart73.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart73.Font = Enum.Font.SourceSans
		NewGuiPart73.FontSize = Enum.FontSize.Size18
		NewGuiPart73.Text = "Call"

		NewGuiPart74.Name = "TableCaution"
		NewGuiPart74.Parent = NewGuiPart1
		NewGuiPart74.Active = true
		NewGuiPart74.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart74.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart74.Draggable = true
		NewGuiPart74.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
		NewGuiPart74.Size = UDim2.new(0, 350, 0, 20)
		NewGuiPart74.Visible = false
		NewGuiPart74.ZIndex = 2

		NewGuiPart75.Name = "MainWindow"
		NewGuiPart75.Parent = NewGuiPart74
		NewGuiPart75.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart75.BackgroundTransparency = 0.10000000149012
		NewGuiPart75.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart75.Size = UDim2.new(1, 0, 0, 150)

		NewGuiPart76.Name = "Ok"
		NewGuiPart76.Parent = NewGuiPart75
		NewGuiPart76.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart76.BackgroundTransparency = 0.5
		NewGuiPart76.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart76.Position = UDim2.new(0.300000012, 0, 1, -40)
		NewGuiPart76.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart76.Font = Enum.Font.SourceSans
		NewGuiPart76.FontSize = Enum.FontSize.Size18
		NewGuiPart76.Text = "Ok"

		NewGuiPart77.Name = "TableResults"
		NewGuiPart77.Parent = NewGuiPart75
		NewGuiPart77.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart77.BackgroundTransparency = 1
		NewGuiPart77.Position = UDim2.new(0, 0, 0, 20)
		NewGuiPart77.Size = UDim2.new(1, 0, 0, 80)
		NewGuiPart77.BottomImage = "rbxasset://textures/blackBkg_square.png"
		NewGuiPart77.CanvasSize = UDim2.new(0, 0, 0, 0)
		NewGuiPart77.MidImage = "rbxasset://textures/blackBkg_square.png"
		NewGuiPart77.TopImage = "rbxasset://textures/blackBkg_square.png"

		NewGuiPart78.Name = "TableTemplate"
		NewGuiPart78.Parent = NewGuiPart75
		NewGuiPart78.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart78.BackgroundTransparency = 0.5
		NewGuiPart78.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart78.Size = UDim2.new(1, 0, 0, 20)
		NewGuiPart78.Visible = false

		NewGuiPart79.Name = "Type"
		NewGuiPart79.Parent = NewGuiPart78
		NewGuiPart79.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart79.BackgroundTransparency = 0.89999997615814
		NewGuiPart79.Size = UDim2.new(0.400000006, 0, 0, 20)
		NewGuiPart79.Font = Enum.Font.SourceSans
		NewGuiPart79.FontSize = Enum.FontSize.Size18
		NewGuiPart79.Text = "Script"

		NewGuiPart80.Name = "Value"
		NewGuiPart80.Parent = NewGuiPart78
		NewGuiPart80.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart80.BackgroundTransparency = 0.89999997615814
		NewGuiPart80.Position = UDim2.new(0.400000006, 0, 0, 0)
		NewGuiPart80.Size = UDim2.new(0.600000024, -12, 0, 20)
		NewGuiPart80.Font = Enum.Font.SourceSans
		NewGuiPart80.FontSize = Enum.FontSize.Size14
		NewGuiPart80.Text = "Script"

		NewGuiPart81.Name = "Title"
		NewGuiPart81.Parent = NewGuiPart74
		NewGuiPart81.BackgroundTransparency = 1
		NewGuiPart81.Size = UDim2.new(1, 0, 1, 0)
		NewGuiPart81.ZIndex = 2
		NewGuiPart81.Font = Enum.Font.SourceSans
		NewGuiPart81.FontSize = Enum.FontSize.Size14
		NewGuiPart81.Text = "Caution"
		NewGuiPart81.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart81.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart82.Name = "ScriptEditor"
		NewGuiPart82.Parent = NewGuiPart1
		NewGuiPart82.Active = true
		NewGuiPart82.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart82.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart82.Draggable = true
		NewGuiPart82.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
		NewGuiPart82.Size = UDim2.new(0, 516, 0, 20)
		NewGuiPart82.Visible = false
		NewGuiPart82.ZIndex = 5

		NewGuiPart163.Name = "OpenScript"
		NewGuiPart163.Parent = NewGuiPart82
		NewGuiPart163.Archivable = true

		NewGuiPart83.Name = "Title"
		NewGuiPart83.Parent = NewGuiPart82
		NewGuiPart83.BackgroundTransparency = 1
		NewGuiPart83.Size = UDim2.new(1, 0, 1, 0)
		NewGuiPart83.ZIndex = 5
		NewGuiPart83.Font = Enum.Font.SourceSans
		NewGuiPart83.FontSize = Enum.FontSize.Size14
		NewGuiPart83.Text = "Script Viewer"
		NewGuiPart83.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart83.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart84.Name = "Cover"
		NewGuiPart84.Parent = NewGuiPart82
		NewGuiPart84.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart84.BorderSizePixel = 0
		NewGuiPart84.Position = UDim2.new(0, 0, 3, 0)
		NewGuiPart84.Size = UDim2.new(0, 516, 0, 416)

		NewGuiPart85.Name = "EditorGrid"
		NewGuiPart85.Parent = NewGuiPart82
		NewGuiPart85.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart85.BorderSizePixel = 0
		NewGuiPart85.Position = UDim2.new(0, 0, 3, 0)
		NewGuiPart85.Size = UDim2.new(0, 500, 0, 400)

		NewGuiPart86.Name = "TopBar"
		NewGuiPart86.Parent = NewGuiPart82
		NewGuiPart86.BackgroundColor3 = Color3.new(0.941177, 0.941177, 0.941177)
		NewGuiPart86.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart86.Size = UDim2.new(1, 0, 3, 0)

		NewGuiPart87.Name = "ScriptBarLeft"
		NewGuiPart87.Parent = NewGuiPart86
		NewGuiPart87.Active = false
		NewGuiPart87.BackgroundColor3 = Color3.new(0.866667, 0.866667, 0.866667)
		NewGuiPart87.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart87.Position = UDim2.new(1, -32, 0, 40)
		NewGuiPart87.Size = UDim2.new(0, 16, 0, 20)
		NewGuiPart87.AutoButtonColor = false

		NewGuiPart88.Name = "Arrow Graphic"
		NewGuiPart88.Parent = NewGuiPart87
		NewGuiPart88.BackgroundTransparency = 1
		NewGuiPart88.BorderSizePixel = 0
		NewGuiPart88.Position = UDim2.new(0.5, -4, 0.5, -4)
		NewGuiPart88.Size = UDim2.new(0, 8, 0, 8)

		NewGuiPart89.Name = "Graphic"
		NewGuiPart89.Parent = NewGuiPart88
		NewGuiPart89.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart89.BackgroundTransparency = 0.69999998807907
		NewGuiPart89.BorderSizePixel = 0
		NewGuiPart89.Position = UDim2.new(0.25, 0, 0.375, 0)
		NewGuiPart89.Size = UDim2.new(0.125, 0, 0.25, 0)

		NewGuiPart90.Name = "Graphic"
		NewGuiPart90.Parent = NewGuiPart88
		NewGuiPart90.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart90.BackgroundTransparency = 0.69999998807907
		NewGuiPart90.BorderSizePixel = 0
		NewGuiPart90.Position = UDim2.new(0.375, 0, 0.25, 0)
		NewGuiPart90.Size = UDim2.new(0.125, 0, 0.5, 0)

		NewGuiPart91.Name = "Graphic"
		NewGuiPart91.Parent = NewGuiPart88
		NewGuiPart91.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart91.BackgroundTransparency = 0.69999998807907
		NewGuiPart91.BorderSizePixel = 0
		NewGuiPart91.Position = UDim2.new(0.5, 0, 0.125, 0)
		NewGuiPart91.Size = UDim2.new(0.125, 0, 0.75, 0)

		NewGuiPart92.Name = "Graphic"
		NewGuiPart92.Parent = NewGuiPart88
		NewGuiPart92.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart92.BackgroundTransparency = 0.69999998807907
		NewGuiPart92.BorderSizePixel = 0
		NewGuiPart92.Position = UDim2.new(0.625, 0, 0, 0)
		NewGuiPart92.Size = UDim2.new(0.125, 0, 1, 0)

		NewGuiPart93.Name = "ScriptBarRight"
		NewGuiPart93.Parent = NewGuiPart86
		NewGuiPart93.Active = false
		NewGuiPart93.BackgroundColor3 = Color3.new(0.866667, 0.866667, 0.866667)
		NewGuiPart93.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart93.Position = UDim2.new(1, -16, 0, 40)
		NewGuiPart93.Size = UDim2.new(0, 16, 0, 20)
		NewGuiPart93.AutoButtonColor = false

		NewGuiPart94.Name = "Arrow Graphic"
		NewGuiPart94.Parent = NewGuiPart93
		NewGuiPart94.BackgroundTransparency = 1
		NewGuiPart94.BorderSizePixel = 0
		NewGuiPart94.Position = UDim2.new(0.5, -4, 0.5, -4)
		NewGuiPart94.Size = UDim2.new(0, 8, 0, 8)

		NewGuiPart95.Name = "Graphic"
		NewGuiPart95.Parent = NewGuiPart94
		NewGuiPart95.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart95.BackgroundTransparency = 0.69999998807907
		NewGuiPart95.BorderSizePixel = 0
		NewGuiPart95.Position = UDim2.new(0.625, 0, 0.375, 0)
		NewGuiPart95.Size = UDim2.new(0.125, 0, 0.25, 0)

		NewGuiPart96.Name = "Graphic"
		NewGuiPart96.Parent = NewGuiPart94
		NewGuiPart96.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart96.BackgroundTransparency = 0.69999998807907
		NewGuiPart96.BorderSizePixel = 0
		NewGuiPart96.Position = UDim2.new(0.5, 0, 0.25, 0)
		NewGuiPart96.Size = UDim2.new(0.125, 0, 0.5, 0)

		NewGuiPart97.Name = "Graphic"
		NewGuiPart97.Parent = NewGuiPart94
		NewGuiPart97.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart97.BackgroundTransparency = 0.69999998807907
		NewGuiPart97.BorderSizePixel = 0
		NewGuiPart97.Position = UDim2.new(0.375, 0, 0.125, 0)
		NewGuiPart97.Size = UDim2.new(0.125, 0, 0.75, 0)

		NewGuiPart98.Name = "Graphic"
		NewGuiPart98.Parent = NewGuiPart94
		NewGuiPart98.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart98.BackgroundTransparency = 0.69999998807907
		NewGuiPart98.BorderSizePixel = 0
		NewGuiPart98.Position = UDim2.new(0.25, 0, 0, 0)
		NewGuiPart98.Size = UDim2.new(0.125, 0, 1, 0)

		NewGuiPart99.Name = "Clipboard"
		NewGuiPart99.Parent = NewGuiPart86
		NewGuiPart99.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart99.BackgroundTransparency = 0.5
		NewGuiPart99.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart99.Position = UDim2.new(0, 0, 0, 20)
		NewGuiPart99.Size = UDim2.new(0, 80, 0, 20)
		NewGuiPart99.Font = Enum.Font.SourceSans
		NewGuiPart99.FontSize = Enum.FontSize.Size14
		NewGuiPart99.Text = "To Clipboard"

		NewGuiPart100.Name = "ScriptBar"
		NewGuiPart100.Parent = NewGuiPart86
		NewGuiPart100.BackgroundColor3 = Color3.new(0.823529, 0.823529, 0.823529)
		NewGuiPart100.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart100.ClipsDescendants = true
		NewGuiPart100.Position = UDim2.new(0, 0, 0, 40)
		NewGuiPart100.Size = UDim2.new(1, -32, 0, 20)

		NewGuiPart101.Name = "Entry"
		NewGuiPart101.Parent = NewGuiPart86
		NewGuiPart101.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart101.BackgroundTransparency = 1
		NewGuiPart101.Size = UDim2.new(0, 100, 1, 0)
		NewGuiPart101.Visible = false

		NewGuiPart102.Name = "Button"
		NewGuiPart102.Parent = NewGuiPart101
		NewGuiPart102.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart102.BackgroundTransparency = 0.60000002384186
		NewGuiPart102.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart102.ClipsDescendants = true
		NewGuiPart102.Size = UDim2.new(1, 0, 1, 0)
		NewGuiPart102.ZIndex = 4
		NewGuiPart102.Font = Enum.Font.SourceSans
		NewGuiPart102.FontSize = Enum.FontSize.Size12
		NewGuiPart102.Text = ""
		NewGuiPart102.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart103.Name = "Close"
		NewGuiPart103.Parent = NewGuiPart101
		NewGuiPart103.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart103.BackgroundTransparency = 1
		NewGuiPart103.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart103.Position = UDim2.new(1, -20, 0, 0)
		NewGuiPart103.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart103.ZIndex = 4
		NewGuiPart103.Font = Enum.Font.SourceSans
		NewGuiPart103.FontSize = Enum.FontSize.Size14
		NewGuiPart103.Text = "X"

		NewGuiPart104.Name = "Close"
		NewGuiPart104.Parent = NewGuiPart82
		NewGuiPart104.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart104.BackgroundTransparency = 1
		NewGuiPart104.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart104.Position = UDim2.new(1, -20, 0, 0)
		NewGuiPart104.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart104.ZIndex = 5
		NewGuiPart104.Font = Enum.Font.SourceSans
		NewGuiPart104.FontSize = Enum.FontSize.Size14
		NewGuiPart104.Text = "X"

		NewGuiPart105.Name = "IntroFrame"
		NewGuiPart105.Parent = NewGuiPart1
		NewGuiPart105.BackgroundColor3 = Color3.new(0.960784, 0.960784, 0.960784)
		NewGuiPart105.BorderSizePixel = 0
		NewGuiPart105.Position = UDim2.new(1, 30, 0, 0)
		NewGuiPart105.Size = UDim2.new(0, 300, 1, 0)
		NewGuiPart105.ZIndex = 2

		NewGuiPart106.Name = "Main"
		NewGuiPart106.Parent = NewGuiPart105
		NewGuiPart106.BackgroundColor3 = Color3.new(0.960784, 0.960784, 0.960784)
		NewGuiPart106.BorderSizePixel = 0
		NewGuiPart106.Position = UDim2.new(0, -30, 0, 0)
		NewGuiPart106.Size = UDim2.new(0, 30, 0, 90)
		NewGuiPart106.ZIndex = 2

		NewGuiPart107.Name = "Title"
		NewGuiPart107.Parent = NewGuiPart105
		NewGuiPart107.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart107.BackgroundTransparency = 1
		NewGuiPart107.Position = UDim2.new(0, 100, 0, 150)
		NewGuiPart107.Size = UDim2.new(0, 100, 0, 60)
		NewGuiPart107.ZIndex = 2
		NewGuiPart107.Font = Enum.Font.SourceSansBold
		NewGuiPart107.FontSize = Enum.FontSize.Size60
		NewGuiPart107.Text = "DEX"
		NewGuiPart107.TextWrapped = true

		NewGuiPart108.Name = "Version"
		NewGuiPart108.Parent = NewGuiPart105
		NewGuiPart108.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart108.BackgroundTransparency = 1
		NewGuiPart108.Position = UDim2.new(0, 100, 0, 210)
		NewGuiPart108.Size = UDim2.new(0, 100, 0, 30)
		NewGuiPart108.ZIndex = 2
		NewGuiPart108.Font = Enum.Font.SourceSansBold
		NewGuiPart108.FontSize = Enum.FontSize.Size28
		NewGuiPart108.Text = "V2.0.0"
		NewGuiPart108.TextWrapped = true

		NewGuiPart109.Name = "Creator"
		NewGuiPart109.Parent = NewGuiPart105
		NewGuiPart109.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart109.BackgroundTransparency = 1
		NewGuiPart109.Position = UDim2.new(0, 80, 0, 300)
		NewGuiPart109.Size = UDim2.new(0, 140, 0, 30)
		NewGuiPart109.ZIndex = 2
		NewGuiPart109.Font = Enum.Font.SourceSansBold
		NewGuiPart109.FontSize = Enum.FontSize.Size28
		NewGuiPart109.Text = "Raspberry Pi , Script Made By Advancedev"
		NewGuiPart109.TextWrapped = true

		NewGuiPart110.Name = "Slant"
		NewGuiPart110.Parent = NewGuiPart105
		NewGuiPart110.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart110.BackgroundTransparency = 1
		NewGuiPart110.Position = UDim2.new(0, -30, 0, 90)
		NewGuiPart110.Rotation = 180
		NewGuiPart110.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart110.ZIndex = 2
		NewGuiPart110.Image = "rbxassetid://474172996"
		NewGuiPart110.ImageColor3 = Color3.new(0.960784, 0.960784, 0.960784)

		NewGuiPart111.Name = "SaveMapWindow"
		NewGuiPart111.Parent = NewGuiPart1
		NewGuiPart111.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart111.BackgroundTransparency = 0.10000000149012
		NewGuiPart111.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart111.Position = UDim2.new(1, 0, 0, 0)
		NewGuiPart111.Size = UDim2.new(0, 300, 1, 0)

		NewGuiPart112.Name = "Header"
		NewGuiPart112.Parent = NewGuiPart111
		NewGuiPart112.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart112.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart112.Size = UDim2.new(1, 0, 0, 17)

		NewGuiPart113.Parent = NewGuiPart112
		NewGuiPart113.BackgroundTransparency = 1
		NewGuiPart113.Position = UDim2.new(0, 4, 0, 0)
		NewGuiPart113.Size = UDim2.new(1, -4, 1, 0)
		NewGuiPart113.Font = Enum.Font.SourceSans
		NewGuiPart113.FontSize = Enum.FontSize.Size14
		NewGuiPart113.Text = "Map Downloader"
		NewGuiPart113.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart113.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart114.Name = "MapSettings"
		NewGuiPart114.Parent = NewGuiPart111
		NewGuiPart114.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart114.BackgroundTransparency = 1
		NewGuiPart114.Position = UDim2.new(0, 0, 0, 200)
		NewGuiPart114.Size = UDim2.new(1, 0, 0, 240)

		NewGuiPart115.Name = "Terrain"
		NewGuiPart115.Parent = NewGuiPart114
		NewGuiPart115.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart115.BackgroundTransparency = 1
		NewGuiPart115.Position = UDim2.new(0, 0, 0, 60)
		NewGuiPart115.Size = UDim2.new(1, 0, 0, 60)

		NewGuiPart116.Name = "SName"
		NewGuiPart116.Parent = NewGuiPart115
		NewGuiPart116.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart116.BackgroundTransparency = 1
		NewGuiPart116.Position = UDim2.new(0, 10, 0, 0)
		NewGuiPart116.Size = UDim2.new(1, -20, 0, 30)
		NewGuiPart116.Font = Enum.Font.SourceSans
		NewGuiPart116.FontSize = Enum.FontSize.Size18
		NewGuiPart116.Text = "Save Terrain"
		NewGuiPart116.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart117.Name = "Status"
		NewGuiPart117.Parent = NewGuiPart115
		NewGuiPart117.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart117.BackgroundTransparency = 1
		NewGuiPart117.Position = UDim2.new(0, 60, 0, 30)
		NewGuiPart117.Size = UDim2.new(0, 50, 0, 15)
		NewGuiPart117.Font = Enum.Font.SourceSans
		NewGuiPart117.FontSize = Enum.FontSize.Size18
		NewGuiPart117.Text = "Off"
		NewGuiPart117.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart118.Name = "Change"
		NewGuiPart118.Parent = NewGuiPart115
		NewGuiPart118.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
		NewGuiPart118.BorderSizePixel = 0
		NewGuiPart118.Position = UDim2.new(0, 10, 0, 30)
		NewGuiPart118.Size = UDim2.new(0, 40, 0, 15)
		NewGuiPart118.Font = Enum.Font.SourceSans
		NewGuiPart118.FontSize = Enum.FontSize.Size14
		NewGuiPart118.Text = ""

		NewGuiPart119.Name = "OnBar"
		NewGuiPart119.Parent = NewGuiPart118
		NewGuiPart119.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
		NewGuiPart119.BorderSizePixel = 0
		NewGuiPart119.Size = UDim2.new(0, 0, 0, 15)
		NewGuiPart119.Font = Enum.Font.SourceSans
		NewGuiPart119.FontSize = Enum.FontSize.Size14
		NewGuiPart119.Text = ""

		NewGuiPart120.Name = "Bar"
		NewGuiPart120.Parent = NewGuiPart118
		NewGuiPart120.BackgroundColor3 = Color3.new(0, 0, 0)
		NewGuiPart120.BorderSizePixel = 0
		NewGuiPart120.ClipsDescendants = true
		NewGuiPart120.Position = UDim2.new(0, -2, 0, -2)
		NewGuiPart120.Size = UDim2.new(0, 10, 0, 19)
		NewGuiPart120.Font = Enum.Font.SourceSans
		NewGuiPart120.FontSize = Enum.FontSize.Size14
		NewGuiPart120.Text = ""

		NewGuiPart121.Name = "Lighting"
		NewGuiPart121.Parent = NewGuiPart114
		NewGuiPart121.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart121.BackgroundTransparency = 1
		NewGuiPart121.Position = UDim2.new(0, 0, 0, 120)
		NewGuiPart121.Size = UDim2.new(1, 0, 0, 60)

		NewGuiPart122.Name = "SName"
		NewGuiPart122.Parent = NewGuiPart121
		NewGuiPart122.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart122.BackgroundTransparency = 1
		NewGuiPart122.Position = UDim2.new(0, 10, 0, 0)
		NewGuiPart122.Size = UDim2.new(1, -20, 0, 30)
		NewGuiPart122.Font = Enum.Font.SourceSans
		NewGuiPart122.FontSize = Enum.FontSize.Size18
		NewGuiPart122.Text = "Lighting Properties"
		NewGuiPart122.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart123.Name = "Status"
		NewGuiPart123.Parent = NewGuiPart121
		NewGuiPart123.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart123.BackgroundTransparency = 1
		NewGuiPart123.Position = UDim2.new(0, 60, 0, 30)
		NewGuiPart123.Size = UDim2.new(0, 50, 0, 15)
		NewGuiPart123.Font = Enum.Font.SourceSans
		NewGuiPart123.FontSize = Enum.FontSize.Size18
		NewGuiPart123.Text = "Off"
		NewGuiPart123.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart124.Name = "Change"
		NewGuiPart124.Parent = NewGuiPart121
		NewGuiPart124.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
		NewGuiPart124.BorderSizePixel = 0
		NewGuiPart124.Position = UDim2.new(0, 10, 0, 30)
		NewGuiPart124.Size = UDim2.new(0, 40, 0, 15)
		NewGuiPart124.Font = Enum.Font.SourceSans
		NewGuiPart124.FontSize = Enum.FontSize.Size14
		NewGuiPart124.Text = ""

		NewGuiPart125.Name = "OnBar"
		NewGuiPart125.Parent = NewGuiPart124
		NewGuiPart125.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
		NewGuiPart125.BorderSizePixel = 0
		NewGuiPart125.Size = UDim2.new(0, 0, 0, 15)
		NewGuiPart125.Font = Enum.Font.SourceSans
		NewGuiPart125.FontSize = Enum.FontSize.Size14
		NewGuiPart125.Text = ""

		NewGuiPart126.Name = "Bar"
		NewGuiPart126.Parent = NewGuiPart124
		NewGuiPart126.BackgroundColor3 = Color3.new(0, 0, 0)
		NewGuiPart126.BorderSizePixel = 0
		NewGuiPart126.ClipsDescendants = true
		NewGuiPart126.Position = UDim2.new(0, -2, 0, -2)
		NewGuiPart126.Size = UDim2.new(0, 10, 0, 19)
		NewGuiPart126.Font = Enum.Font.SourceSans
		NewGuiPart126.FontSize = Enum.FontSize.Size14
		NewGuiPart126.Text = ""

		NewGuiPart127.Name = "CameraInstances"
		NewGuiPart127.Parent = NewGuiPart114
		NewGuiPart127.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart127.BackgroundTransparency = 1
		NewGuiPart127.Position = UDim2.new(0, 0, 0, 180)
		NewGuiPart127.Size = UDim2.new(1, 0, 0, 60)

		NewGuiPart128.Name = "SName"
		NewGuiPart128.Parent = NewGuiPart127
		NewGuiPart128.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart128.BackgroundTransparency = 1
		NewGuiPart128.Position = UDim2.new(0, 10, 0, 0)
		NewGuiPart128.Size = UDim2.new(1, -20, 0, 30)
		NewGuiPart128.Font = Enum.Font.SourceSans
		NewGuiPart128.FontSize = Enum.FontSize.Size18
		NewGuiPart128.Text = "Camera Instances"
		NewGuiPart128.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart129.Name = "Status"
		NewGuiPart129.Parent = NewGuiPart127
		NewGuiPart129.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart129.BackgroundTransparency = 1
		NewGuiPart129.Position = UDim2.new(0, 60, 0, 30)
		NewGuiPart129.Size = UDim2.new(0, 50, 0, 15)
		NewGuiPart129.Font = Enum.Font.SourceSans
		NewGuiPart129.FontSize = Enum.FontSize.Size18
		NewGuiPart129.Text = "Off"
		NewGuiPart129.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart130.Name = "Change"
		NewGuiPart130.Parent = NewGuiPart127
		NewGuiPart130.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
		NewGuiPart130.BorderSizePixel = 0
		NewGuiPart130.Position = UDim2.new(0, 10, 0, 30)
		NewGuiPart130.Size = UDim2.new(0, 40, 0, 15)
		NewGuiPart130.Font = Enum.Font.SourceSans
		NewGuiPart130.FontSize = Enum.FontSize.Size14
		NewGuiPart130.Text = ""

		NewGuiPart131.Name = "OnBar"
		NewGuiPart131.Parent = NewGuiPart130
		NewGuiPart131.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
		NewGuiPart131.BorderSizePixel = 0
		NewGuiPart131.Size = UDim2.new(0, 0, 0, 15)
		NewGuiPart131.Font = Enum.Font.SourceSans
		NewGuiPart131.FontSize = Enum.FontSize.Size14
		NewGuiPart131.Text = ""

		NewGuiPart132.Name = "Bar"
		NewGuiPart132.Parent = NewGuiPart130
		NewGuiPart132.BackgroundColor3 = Color3.new(0, 0, 0)
		NewGuiPart132.BorderSizePixel = 0
		NewGuiPart132.ClipsDescendants = true
		NewGuiPart132.Position = UDim2.new(0, -2, 0, -2)
		NewGuiPart132.Size = UDim2.new(0, 10, 0, 19)
		NewGuiPart132.Font = Enum.Font.SourceSans
		NewGuiPart132.FontSize = Enum.FontSize.Size14
		NewGuiPart132.Text = ""

		NewGuiPart133.Name = "Scripts"
		NewGuiPart133.Parent = NewGuiPart114
		NewGuiPart133.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart133.BackgroundTransparency = 1
		NewGuiPart133.Size = UDim2.new(1, 0, 0, 60)

		NewGuiPart134.Name = "SName"
		NewGuiPart134.Parent = NewGuiPart133
		NewGuiPart134.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart134.BackgroundTransparency = 1
		NewGuiPart134.Position = UDim2.new(0, 10, 0, 0)
		NewGuiPart134.Size = UDim2.new(1, -20, 0, 30)
		NewGuiPart134.Font = Enum.Font.SourceSans
		NewGuiPart134.FontSize = Enum.FontSize.Size18
		NewGuiPart134.Text = "Save Scripts"
		NewGuiPart134.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart135.Name = "Status"
		NewGuiPart135.Parent = NewGuiPart133
		NewGuiPart135.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart135.BackgroundTransparency = 1
		NewGuiPart135.Position = UDim2.new(0, 60, 0, 30)
		NewGuiPart135.Size = UDim2.new(0, 50, 0, 15)
		NewGuiPart135.Font = Enum.Font.SourceSans
		NewGuiPart135.FontSize = Enum.FontSize.Size18
		NewGuiPart135.Text = "Off"
		NewGuiPart135.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart136.Name = "Change"
		NewGuiPart136.Parent = NewGuiPart133
		NewGuiPart136.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
		NewGuiPart136.BorderSizePixel = 0
		NewGuiPart136.Position = UDim2.new(0, 10, 0, 30)
		NewGuiPart136.Size = UDim2.new(0, 40, 0, 15)
		NewGuiPart136.Font = Enum.Font.SourceSans
		NewGuiPart136.FontSize = Enum.FontSize.Size14
		NewGuiPart136.Text = ""

		NewGuiPart137.Name = "OnBar"
		NewGuiPart137.Parent = NewGuiPart136
		NewGuiPart137.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
		NewGuiPart137.BorderSizePixel = 0
		NewGuiPart137.Size = UDim2.new(0, 0, 0, 15)
		NewGuiPart137.Font = Enum.Font.SourceSans
		NewGuiPart137.FontSize = Enum.FontSize.Size14
		NewGuiPart137.Text = ""

		NewGuiPart138.Name = "Bar"
		NewGuiPart138.Parent = NewGuiPart136
		NewGuiPart138.BackgroundColor3 = Color3.new(0, 0, 0)
		NewGuiPart138.BorderSizePixel = 0
		NewGuiPart138.ClipsDescendants = true
		NewGuiPart138.Position = UDim2.new(0, -2, 0, -2)
		NewGuiPart138.Size = UDim2.new(0, 10, 0, 19)
		NewGuiPart138.Font = Enum.Font.SourceSans
		NewGuiPart138.FontSize = Enum.FontSize.Size14
		NewGuiPart138.Text = ""

		NewGuiPart139.Name = "ToSave"
		NewGuiPart139.Parent = NewGuiPart111
		NewGuiPart139.BackgroundTransparency = 1
		NewGuiPart139.Position = UDim2.new(0, 0, 0, 17)
		NewGuiPart139.Size = UDim2.new(1, 0, 0, 20)
		NewGuiPart139.Font = Enum.Font.SourceSans
		NewGuiPart139.FontSize = Enum.FontSize.Size18
		NewGuiPart139.Text = "To Save"
		NewGuiPart139.TextColor3 = Color3.new(0, 0, 0)

		NewGuiPart140.Name = "CopyList"
		NewGuiPart140.Parent = NewGuiPart111
		NewGuiPart140.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart140.BackgroundTransparency = 0.80000001192093
		NewGuiPart140.Position = UDim2.new(0, 0, 0, 37)
		NewGuiPart140.Size = UDim2.new(1, 0, 0, 163)

		NewGuiPart141.Name = "Bottom"
		NewGuiPart141.Parent = NewGuiPart111
		NewGuiPart141.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart141.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart141.Position = UDim2.new(0, 0, 1, -50)
		NewGuiPart141.Size = UDim2.new(1, 0, 0, 50)

		NewGuiPart142.Parent = NewGuiPart141
		NewGuiPart142.BackgroundTransparency = 1
		NewGuiPart142.Position = UDim2.new(0, 4, 0, 0)
		NewGuiPart142.Size = UDim2.new(1, -4, 1, 0)
		NewGuiPart142.Font = Enum.Font.SourceSans
		NewGuiPart142.FontSize = Enum.FontSize.Size14
		NewGuiPart142.Text = "After the map saves, open a new place on studio, then right click Lighting and \"Insert from file...\", then select your file and run the unpacker script inside the folder."
		NewGuiPart142.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart142.TextWrapped = true
		NewGuiPart142.TextXAlignment = Enum.TextXAlignment.Left
		NewGuiPart142.TextYAlignment = Enum.TextYAlignment.Top

		NewGuiPart143.Name = "Save"
		NewGuiPart143.Parent = NewGuiPart111
		NewGuiPart143.BackgroundColor3 = Color3.new(0.941177, 0.941177, 0.941177)
		NewGuiPart143.BackgroundTransparency = 0.80000001192093
		NewGuiPart143.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart143.Position = UDim2.new(0, 0, 1, -80)
		NewGuiPart143.Size = UDim2.new(1, 0, 0, 30)
		NewGuiPart143.Font = Enum.Font.SourceSans
		NewGuiPart143.FontSize = Enum.FontSize.Size18
		NewGuiPart143.Text = "Save"

		NewGuiPart144.Name = "FileName"
		NewGuiPart144.Parent = NewGuiPart111
		NewGuiPart144.BackgroundColor3 = Color3.new(0.941177, 0.941177, 0.941177)
		NewGuiPart144.BackgroundTransparency = 0.60000002384186
		NewGuiPart144.Position = UDim2.new(0, 0, 1, -105)
		NewGuiPart144.Size = UDim2.new(1, 0, 0, 25)
		NewGuiPart144.Font = Enum.Font.SourceSans
		NewGuiPart144.FontSize = Enum.FontSize.Size18
		NewGuiPart144.Text = "PlaceName"
		NewGuiPart144.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart145.Name = "Entry"
		NewGuiPart145.Parent = NewGuiPart111
		NewGuiPart145.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart145.BackgroundTransparency = 1
		NewGuiPart145.Size = UDim2.new(1, 0, 0, 22)
		NewGuiPart145.Visible = false

		NewGuiPart146.Name = "Change"
		NewGuiPart146.Parent = NewGuiPart145
		NewGuiPart146.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart146.BackgroundTransparency = 0.60000002384186
		NewGuiPart146.Position = UDim2.new(0, 10, 0, 1)
		NewGuiPart146.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart146.ZIndex = 2
		NewGuiPart146.Font = Enum.Font.SourceSans
		NewGuiPart146.FontSize = Enum.FontSize.Size18
		NewGuiPart146.Text = ""
		NewGuiPart146.TextColor3 = Color3.new(1, 1, 1)

		NewGuiPart147.Name = "enabled"
		NewGuiPart147.Parent = NewGuiPart146
		NewGuiPart147.BackgroundColor3 = Color3.new(0.380392, 0.380392, 0.380392)
		NewGuiPart147.BackgroundTransparency = 0.40000000596046
		NewGuiPart147.BorderSizePixel = 0
		NewGuiPart147.Position = UDim2.new(0, 3, 0, 3)
		NewGuiPart147.Size = UDim2.new(0, 14, 0, 14)
		NewGuiPart147.Font = Enum.Font.SourceSans
		NewGuiPart147.FontSize = Enum.FontSize.Size14
		NewGuiPart147.Text = ""

		NewGuiPart148.Name = "Info"
		NewGuiPart148.Parent = NewGuiPart145
		NewGuiPart148.BackgroundTransparency = 1
		NewGuiPart148.Position = UDim2.new(0, 40, 0, 0)
		NewGuiPart148.Size = UDim2.new(1, -40, 0, 22)
		NewGuiPart148.Font = Enum.Font.SourceSans
		NewGuiPart148.FontSize = Enum.FontSize.Size18
		NewGuiPart148.Text = "Workspace"
		NewGuiPart148.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart148.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart149.Name = "RemoteDebugWindow"
		NewGuiPart149.Parent = NewGuiPart1
		NewGuiPart149.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart149.BackgroundTransparency = 0.10000000149012
		NewGuiPart149.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart149.Position = UDim2.new(1, 0, 0, 0)
		NewGuiPart149.Size = UDim2.new(0, 300, 1, 0)

		NewGuiPart161.Name = "GetSetting"
		NewGuiPart161.Parent = NewGuiPart149
		NewGuiPart161.Archivable = true

		NewGuiPart150.Name = "Header"
		NewGuiPart150.Parent = NewGuiPart149
		NewGuiPart150.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart150.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart150.Size = UDim2.new(1, 0, 0, 17)

		NewGuiPart151.Parent = NewGuiPart150
		NewGuiPart151.BackgroundTransparency = 1
		NewGuiPart151.Position = UDim2.new(0, 4, 0, 0)
		NewGuiPart151.Size = UDim2.new(1, -4, 1, 0)
		NewGuiPart151.Font = Enum.Font.SourceSans
		NewGuiPart151.FontSize = Enum.FontSize.Size14
		NewGuiPart151.Text = "Remote Debugger"
		NewGuiPart151.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart151.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart152.Name = "Desc"
		NewGuiPart152.Parent = NewGuiPart149
		NewGuiPart152.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart152.BackgroundTransparency = 1
		NewGuiPart152.Position = UDim2.new(0, 0, 0, 20)
		NewGuiPart152.Size = UDim2.new(1, 0, 0, 40)
		NewGuiPart152.Font = Enum.Font.SourceSans
		NewGuiPart152.FontSize = Enum.FontSize.Size32
		NewGuiPart152.Text = "Have fun with remotes"
		NewGuiPart152.TextWrapped = true
		return NewGuiPart1
	end
	local D_E_X = CreateGui()
	D_E_X.Parent = game.Players.LocalPlayer.PlayerGui
	spawn(function()
		local Gui = D_E_X


		local IntroFrame = Gui:WaitForChild("IntroFrame")

		local SideMenu = Gui:WaitForChild("SideMenu")
		local OpenToggleButton = Gui:WaitForChild("Toggle")
		local CloseToggleButton = SideMenu:WaitForChild("Toggle")
		local OpenScriptEditorButton = SideMenu:WaitForChild("OpenScriptEditor")

		local ScriptEditor = Gui:WaitForChild("ScriptEditor")

		local SlideOut = SideMenu:WaitForChild("SlideOut")
		local SlideFrame = SlideOut:WaitForChild("SlideFrame")
		local Slant = SideMenu:WaitForChild("Slant")

		local ExplorerButton = SlideFrame:WaitForChild("Explorer")
		local SettingsButton = SlideFrame:WaitForChild("Settings")

		local SelectionBox = Instance.new("SelectionBox")
		SelectionBox.Parent = Gui

		local ExplorerPanel = Gui:WaitForChild("ExplorerPanel")
		local PropertiesFrame = Gui:WaitForChild("PropertiesFrame")
		local SaveMapWindow = Gui:WaitForChild("SaveMapWindow")
		local RemoteDebugWindow = Gui:WaitForChild("RemoteDebugWindow")

		local SettingsPanel = Gui:WaitForChild("SettingsPanel")
		local SettingsListener = SettingsPanel:WaitForChild("GetSetting")
		local SettingTemplate = SettingsPanel:WaitForChild("SettingTemplate")
		local SettingList = SettingsPanel:WaitForChild("SettingList")

		local SaveMapCopyList = SaveMapWindow:WaitForChild("CopyList")
		local SaveMapSettingFrame = SaveMapWindow:WaitForChild("MapSettings")
		local SaveMapName = SaveMapWindow:WaitForChild("FileName")
		local SaveMapButton = SaveMapWindow:WaitForChild("Save")
		local SaveMapCopyTemplate = SaveMapWindow:WaitForChild("Entry")
		local SaveMapSettings = {
			CopyWhat = {
				Workspace = true,
				Lighting = true,
				ReplicatedStorage = true,
				ReplicatedFirst = true,
				StarterPack = true,
				StarterGui = true,
				StarterPlayer = true
			},
			SaveScripts = true,
			SaveTerrain = true,
			LightingProperties = true,
			CameraInstances = true
		}

		local SelectionChanged = ExplorerPanel:WaitForChild("SelectionChanged")
		local GetSelection = ExplorerPanel:WaitForChild("GetSelection")
		local SetSelection = ExplorerPanel:WaitForChild("SetSelection")

		local Player = game:GetService("Players").LocalPlayer
		local Mouse = Player:GetMouse()

		local CurrentWindow = "Nothing c:"
		local Windows = {
			Explorer = {
				ExplorerPanel,
				PropertiesFrame
			},
			Settings = {SettingsPanel},
			SaveMap = {SaveMapWindow},
			Remotes = {RemoteDebugWindow}
		}

		function switchWindows(wName,over)
			if CurrentWindow == wName and not over then return end

			local count = 0

			for i,v in pairs(Windows) do
				count = 0
				if i ~= wName then
					for _,c in pairs(v) do c:TweenPosition(UDim2.new(1, 30, count * 0.5, count * 36), "Out", "Quad", 0.5, true) count = count + 1 end
				end
			end

			count = 0

			if Windows[wName] then
				for _,c in pairs(Windows[wName]) do c:TweenPosition(UDim2.new(1, -300, count * 0.5, count * 36), "Out", "Quad", 0.5, true) count = count + 1 end
			end

			if wName ~= "Nothing c:" then
				CurrentWindow = wName
				for i,v in pairs(SlideFrame:GetChildren()) do
					v.BackgroundTransparency = 1
					v.Icon.ImageColor3 = Color3.new(70/255, 70/255, 70/255)
				end
				if SlideFrame:FindFirstChild(wName) then
					SlideFrame[wName].BackgroundTransparency = 0.5
					SlideFrame[wName].Icon.ImageColor3 = Color3.new(0,0,0)
				end
			end
		end

		function toggleDex(on)
			if on then
				SideMenu:TweenPosition(UDim2.new(1, -330, 0, 0), "Out", "Quad", 0.5, true)
				OpenToggleButton:TweenPosition(UDim2.new(1,0,0,0), "Out", "Quad", 0.5, true)
				switchWindows(CurrentWindow,true)
			else
				SideMenu:TweenPosition(UDim2.new(1, 0, 0, 0), "Out", "Quad", 0.5, true)
				OpenToggleButton:TweenPosition(UDim2.new(1,-30,0,0), "Out", "Quad", 0.5, true)
				switchWindows("Nothing c:")
			end
		end

		local Settings = {
			ClickSelect = false,
			SelBox = false,
			ClearProps = false,
			SelectUngrouped = true,
			SaveInstanceScripts = true
		}

		function ReturnSetting(set)
			if set == "ClearProps" then
				return Settings.ClearProps
			elseif set == "SelectUngrouped" then
				return Settings.SelectUngrouped
			end
		end

		OpenToggleButton.MouseButton1Up:connect(function()
			toggleDex(true)
		end)

		OpenScriptEditorButton.MouseButton1Up:connect(function()
			if OpenScriptEditorButton.Active then
				ScriptEditor.Visible = true
			end
		end)

		CloseToggleButton.MouseButton1Up:connect(function()
			if CloseToggleButton.Active then
				toggleDex(false)
			end
		end)

		for i,v in pairs(SlideFrame:GetChildren()) do
			v.MouseButton1Click:connect(function()
				switchWindows(v.Name)
			end)

			v.MouseEnter:connect(function()v.BackgroundTransparency = 0.5 end)
			v.MouseLeave:connect(function()if CurrentWindow~=v.Name then v.BackgroundTransparency = 1 end end)
		end


		function createSetting(name,interName,defaultOn)
			local newSetting = SettingTemplate:Clone()
			newSetting.Position = UDim2.new(0,0,0,#SettingList:GetChildren() * 60)
			newSetting.SName.Text = name

			local function toggle(on)
				if on then
					newSetting.Change.Bar:TweenPosition(UDim2.new(0,32,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					newSetting.Change.OnBar:TweenSize(UDim2.new(0,34,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					newSetting.Status.Text = "On"
					Settings[interName] = true
				else
					newSetting.Change.Bar:TweenPosition(UDim2.new(0,-2,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					newSetting.Change.OnBar:TweenSize(UDim2.new(0,0,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					newSetting.Status.Text = "Off"
					Settings[interName] = false
				end
			end	

			newSetting.Change.MouseButton1Click:connect(function()
				toggle(not Settings[interName])
			end)

			newSetting.Visible = true
			newSetting.Parent = SettingList

			if defaultOn then
				toggle(true)
			end
		end

		createSetting("Click part to select","ClickSelect",false)
		createSetting("Selection Box","SelBox",false)
		createSetting("Clear property value on focus","ClearProps",false)
		createSetting("Select ungrouped models","SelectUngrouped",true)
		createSetting("SaveInstance decompiles scripts","SaveInstanceScripts",true)

		local function getSelection()
			local t = GetSelection:Invoke()
			if t and #t > 0 then
				return t[1]
			else
				return nil
			end
		end

		Mouse.Button1Down:connect(function()
			if CurrentWindow == "Explorer" and Settings.ClickSelect then
				local target = Mouse.Target
				if target then
					SetSelection:Invoke({target})
				end
			end
		end)

		SelectionChanged.Event:connect(function()
			if Settings.SelBox then
				local success,err = pcall(function()
					local selection = getSelection()
					SelectionBox.Adornee = selection
				end)
				if err then
					SelectionBox.Adornee = nil
				end
			end
		end)

		SettingsListener.OnInvoke = ReturnSetting

		-- Map Copier

		function createMapSetting(obj,interName,defaultOn)
			local function toggle(on)
				if on then
					obj.Change.Bar:TweenPosition(UDim2.new(0,32,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					obj.Change.OnBar:TweenSize(UDim2.new(0,34,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					obj.Status.Text = "On"
					SaveMapSettings[interName] = true
				else
					obj.Change.Bar:TweenPosition(UDim2.new(0,-2,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					obj.Change.OnBar:TweenSize(UDim2.new(0,0,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					obj.Status.Text = "Off"
					SaveMapSettings[interName] = false
				end
			end	

			obj.Change.MouseButton1Click:connect(function()
				toggle(not SaveMapSettings[interName])
			end)

			obj.Visible = true
			obj.Parent = SaveMapSettingFrame

			if defaultOn then
				toggle(true)
			end
		end

		function createCopyWhatSetting(serv)
			if SaveMapSettings.CopyWhat[serv] then
				local newSetting = SaveMapCopyTemplate:Clone()
				newSetting.Position = UDim2.new(0,0,0,#SaveMapCopyList:GetChildren() * 22 + 5)
				newSetting.Info.Text = serv

				local function toggle(on)
					if on then
						newSetting.Change.enabled.Visible = true
						SaveMapSettings.CopyWhat[serv] = true
					else
						newSetting.Change.enabled.Visible = false
						SaveMapSettings.CopyWhat[serv] = false
					end
				end	

				newSetting.Change.MouseButton1Click:connect(function()
					toggle(not SaveMapSettings.CopyWhat[serv])
				end)

				newSetting.Visible = true
				newSetting.Parent = SaveMapCopyList
			end
		end

		createMapSetting(SaveMapSettingFrame.Scripts,"SaveScripts",true)
		createMapSetting(SaveMapSettingFrame.Terrain,"SaveTerrain",true)
		createMapSetting(SaveMapSettingFrame.Lighting,"LightingProperties",true)
		createMapSetting(SaveMapSettingFrame.CameraInstances,"CameraInstances",true)

		createCopyWhatSetting("Workspace")
		createCopyWhatSetting("Lighting")
		createCopyWhatSetting("ReplicatedStorage")
		createCopyWhatSetting("ReplicatedFirst")
		createCopyWhatSetting("StarterPack")
		createCopyWhatSetting("StarterGui")
		createCopyWhatSetting("StarterPlayer")

		SaveMapName.Text = tostring(game.PlaceId).."MapCopy"

		SaveMapButton.MouseButton1Click:connect(function()
			local copyWhat = {}

			local copyGroup = Instance.new("Model",game.ReplicatedStorage)

			local copyScripts = SaveMapSettings.SaveScripts

			local copyTerrain = SaveMapSettings.SaveTerrain

			local lightingProperties = SaveMapSettings.LightingProperties

			local cameraInstances = SaveMapSettings.CameraInstances

			-----------------------------------------------------------------------------------

			for i,v in pairs(SaveMapSettings.CopyWhat) do
				if v then
					table.insert(copyWhat,i)
				end
			end

			local consoleFunc = printconsole or writeconsole

			if consoleFunc then
				consoleFunc("Raspberry Pi's place copier loaded.")
				consoleFunc("Copying map of game "..tostring(game.PlaceId)..".")
			end

			function archivable(root)
				for i,v in pairs(root:GetChildren()) do
					if not game.Players:GetPlayerFromCharacter(v) then
						v.Archivable = true
						archivable(v)
					end
				end
			end

			function decompileS(root)
				for i,v in pairs(root:GetChildren()) do
					pcall(function()
						if v:IsA("LocalScript") then
							local isDisabled = v.Disabled
							v.Disabled = true
							v.Source = decompile(v)
							v.Disabled = isDisabled

							if v.Source == "" then 
								if consoleFunc then consoleFunc("LocalScript "..v.Name.." had a problem decompiling.") end
							else
								if consoleFunc then consoleFunc("LocalScript "..v.Name.." decompiled.") end
							end
						elseif v:IsA("ModuleScript") then
							v.Source = decompile(v)

							if v.Source == "" then 
								if consoleFunc then consoleFunc("ModuleScript "..v.Name.." had a problem decompiling.") end
							else
								if consoleFunc then consoleFunc("ModuleScript "..v.Name.." decompiled.") end
							end
						end
					end)
					decompileS(v)
				end
			end

			for i,v in pairs(copyWhat) do archivable(game[v]) end

			for j,obj in pairs(copyWhat) do
				if obj ~= "StarterPlayer" then
					local newFolder = Instance.new("Folder",copyGroup)
					newFolder.Name = obj
					for i,v in pairs(game[obj]:GetChildren()) do
						if v ~= copyGroup then
							pcall(function()
								v:Clone().Parent = newFolder
							end)
						end
					end
				else
					local newFolder = Instance.new("Model",copyGroup)
					newFolder.Name = "StarterPlayer"
					for i,v in pairs(game[obj]:GetChildren()) do
						local newObj = Instance.new("Folder",newFolder)
						newObj.Name = v.Name
						for _,c in pairs(v:GetChildren()) do
							if c.Name ~= "ControlScript" and c.Name ~= "CameraScript" then
								c:Clone().Parent = newObj
							end
						end
					end
				end
			end

			if workspace.CurrentCamera and cameraInstances then
				local cameraFolder = Instance.new("Model",copyGroup)
				cameraFolder.Name = "CameraItems"
				for i,v in pairs(workspace.CurrentCamera:GetChildren()) do v:Clone().Parent = cameraFolder end
			end

			if copyTerrain then
				local myTerrain = workspace.Terrain:CopyRegion(workspace.Terrain.MaxExtents)
				myTerrain.Parent = copyGroup
			end

			function saveProp(obj,prop,par)
				local myProp = obj[prop]
				if type(myProp) == "boolean" then
					local newProp = Instance.new("BoolValue",par)
					newProp.Name = prop
					newProp.Value = myProp
				elseif type(myProp) == "number" then
					local newProp = Instance.new("IntValue",par)
					newProp.Name = prop
					newProp.Value = myProp
				elseif type(myProp) == "string" then
					local newProp = Instance.new("StringValue",par)
					newProp.Name = prop
					newProp.Value = myProp
				elseif type(myProp) == "userdata" then -- Assume Color3
					pcall(function()
						local newProp = Instance.new("Color3Value",par)
						newProp.Name = prop
						newProp.Value = myProp
					end)
				end
			end

			if lightingProperties then
				local lightingProps = Instance.new("Model",copyGroup)
				lightingProps.Name = "LightingProperties"

				saveProp(game.Lighting,"Ambient",lightingProps)
				saveProp(game.Lighting,"Brightness",lightingProps)
				saveProp(game.Lighting,"ColorShift_Bottom",lightingProps)
				saveProp(game.Lighting,"ColorShift_Top",lightingProps)
				saveProp(game.Lighting,"GlobalShadows",lightingProps)
				saveProp(game.Lighting,"OutdoorAmbient",lightingProps)
				saveProp(game.Lighting,"Outlines",lightingProps)
				saveProp(game.Lighting,"GeographicLatitude",lightingProps)
				saveProp(game.Lighting,"TimeOfDay",lightingProps)
				saveProp(game.Lighting,"FogColor",lightingProps)
				saveProp(game.Lighting,"FogEnd",lightingProps)
				saveProp(game.Lighting,"FogStart",lightingProps)
			end

			if decompile and copyScripts then
				decompileS(copyGroup)
			end

			if SaveInstance then
				SaveInstance(copyGroup,SaveMapName.Text..".rbxm")
			elseif saveinstance then
				saveinstance(getelysianpath()..SaveMapName.Text..".rbxm",copyGroup)
			end
			--print("Saved!")
			if consoleFunc then
				consoleFunc("The map has been copied.")
			end
			SaveMapButton.Text = "The map has been saved"
			wait(5)
			SaveMapButton.Text = "Save"
		end)

		-- End Copier

		wait()

		IntroFrame:TweenPosition(UDim2.new(1,-300,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)

		switchWindows("Explorer")

		wait(1)

		SideMenu.Visible = true

		for i = 0,1,0.1 do
			IntroFrame.BackgroundTransparency = i
			IntroFrame.Main.BackgroundTransparency = i
			IntroFrame.Slant.ImageTransparency = i
			IntroFrame.Title.TextTransparency = i
			IntroFrame.Version.TextTransparency = i
			IntroFrame.Creator.TextTransparency = i
			wait()
		end

		IntroFrame.Visible = false

		SlideFrame:TweenPosition(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
		OpenScriptEditorButton:TweenPosition(UDim2.new(0,0,0,180),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
		CloseToggleButton:TweenPosition(UDim2.new(0,0,0,210),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
		Slant:TweenPosition(UDim2.new(0,0,0,240),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)

		wait(0.5)

		for i = 1,0,-0.1 do
			OpenScriptEditorButton.Icon.ImageTransparency = i
			CloseToggleButton.TextTransparency = i
			wait()
		end

		CloseToggleButton.Active = true
		CloseToggleButton.AutoButtonColor = true

		OpenScriptEditorButton.Active = true
		OpenScriptEditorButton.AutoButtonColor = true
	end)
	spawn(function()
		-- initial states
		local Option = {
			-- can modify object parents in the hierarchy
			Modifiable = false;
			-- can select objects
			Selectable = true;
		}

		-- MERELY

		Option.Modifiable = true

		-- END MERELY

		-- general size of GUI objects, in pixels
		local GUI_SIZE = 16
		-- padding between items within each entry
		local ENTRY_PADDING = 1
		-- padding between each entry
		local ENTRY_MARGIN = 1

		local Input = game:GetService("UserInputService")
		local HoldingCtrl = false
		local HoldingShift = false

--[[

# Explorer Panel

A GUI panel that displays the game hierarchy.


## Selection Bindables

- `Function GetSelection ( )`

	Returns an array of objects representing the objects currently
	selected in the panel.

- `Function SetSelection ( Objects selection )`

	Sets the objects that are selected in the panel. `selection` is an array
	of objects.

- `Event SelectionChanged ( )`

	Fired after the selection changes.


## Option Bindables

- `Function GetOption ( string optionName )`

	If `optionName` is given, returns the value of that option. Otherwise,
	returns a table of options and their current values.

- `Function SetOption ( string optionName, bool value )`

	Sets `optionName` to `value`.

	Options:

	- Modifiable

		Whether objects can be modified by the panel.

		Note that modifying objects depends on being able to select them. If
		Selectable is false, then Actions will not be available. Reparenting
		is still possible, but only for the dragged object.

	- Selectable

		Whether objects can be selected.

		If Modifiable is false, then left-clicking will perform a drag
		selection.

## Updates

- 2013-09-18
	- Fixed explorer icons to match studio explorer.

- 2013-09-14
	- Added GetOption and SetOption bindables.
		- Option: Modifiable; sets whether objects can be modified by the panel.
		- Option: Selectable; sets whether objects can be selected.
	- Slight modification to left-click selection behavior.
	- Improved layout and scaling.

- 2013-09-13
	- Added drag to reparent objects.
		- Left-click to select/deselect object.
		- Left-click and drag unselected object to reparent single object.
		- Left-click and drag selected object to move reparent entire selection.
		- Right-click while dragging to cancel.

- 2013-09-11
	- Added explorer panel header with actions.
		- Added Cut action.
		- Added Copy action.
		- Added Paste action.
		- Added Delete action.
	- Added drag selection.
		- Left-click: Add to selection on drag.
		- Right-click: Add to or remove from selection on drag.
	- Ensured SelectionChanged fires only when the selection actually changes.
	- Added documentation and change log.
	- Fixed thread issue.

- 2013-09-09
	- Added basic multi-selection.
		- Left-click to set selection.
		- Right-click to add to or remove from selection.
	- Removed "Selection" ObjectValue.
		- Added GetSelection BindableFunction.
		- Added SetSelection BindableFunction.
		- Added SelectionChanged BindableEvent.
	- Changed font to SourceSans.

- 2013-08-31
	- Improved GUI sizing based off of `GUI_SIZE` constant.
	- Automatic font size detection.

- 2013-08-27
	- Initial explorer panel.


## Todo

- Sorting
	- by ExplorerOrder
	- by children
	- by name
- Drag objects to reparent

]]

		local ENTRY_SIZE = GUI_SIZE + ENTRY_PADDING*2
		local ENTRY_BOUND = ENTRY_SIZE + ENTRY_MARGIN
		local HEADER_SIZE = ENTRY_SIZE*2

		local FONT = 'SourceSans'
		local FONT_SIZE do
			local size = {8,9,10,11,12,14,18,24,36,48}
			local s
			local n = math.huge
			for i = 1,#size do
				if size[i] <= GUI_SIZE then
					FONT_SIZE = i - 1
				end
			end
		end

		local GuiColor = {
			Background      = Color3.new(233/255, 233/255, 233/255);
			Border          = Color3.new(149/255, 149/255, 149/255);
			Selected        = Color3.new( 96/255, 140/255, 211/255);
			BorderSelected  = Color3.new( 86/255, 125/255, 188/255);
			Text            = Color3.new(  0/255,   0/255,   0/255);
			TextDisabled    = Color3.new(128/255, 128/255, 128/255);
			TextSelected    = Color3.new(255/255, 255/255, 255/255);
			Button          = Color3.new(221/255, 221/255, 221/255);
			ButtonBorder    = Color3.new(149/255, 149/255, 149/255);
			ButtonSelected  = Color3.new(255/255,   0/255,   0/255);
			Field           = Color3.new(255/255, 255/255, 255/255);
			FieldBorder     = Color3.new(191/255, 191/255, 191/255);
			TitleBackground = Color3.new(178/255, 178/255, 178/255);
		}

		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		---- Icon map constants

		local MAP_ID = 483448923

		-- Indices based on implementation of Icon function.
		local ACTION_CUT         	 = 160
		local ACTION_COPY        	 = 161
		local ACTION_PASTE       	 = 162
		local ACTION_DELETE      	 = 163
		local ACTION_SORT        	 = 164
		local ACTION_CUT_OVER    	 = 174
		local ACTION_COPY_OVER   	 = 175
		local ACTION_PASTE_OVER  	 = 176
		local ACTION_DELETE_OVER	 = 177
		local ACTION_SORT_OVER  	 = 178
		local ACTION_EDITQUICKACCESS = 190
		local ACTION_FREEZE 		 = 188
		local ACTION_STARRED 		 = 189
		local ACTION_ADDSTAR 		 = 184
		local ACTION_ADDSTAR_OVER 	 = 187

		local NODE_COLLAPSED      = 165
		local NODE_EXPANDED       = 166
		local NODE_COLLAPSED_OVER = 179
		local NODE_EXPANDED_OVER  = 180

		local ExplorerIndex = {
			["Accessory"] = 32;
			["Accoutrement"] = 32;
			["AdService"] = 73;
			["Animation"] = 60;
			["AnimationController"] = 60;
			["AnimationTrack"] = 60;
			["Animator"] = 60;
			["ArcHandles"] = 56;
			["AssetService"] = 72;
			["Attachment"] = 34;
			["Backpack"] = 20;
			["BadgeService"] = 75;
			["BallSocketConstraint"] = 89;
			["BillboardGui"] = 64;
			["BinaryStringValue"] = 4;
			["BindableEvent"] = 67;
			["BindableFunction"] = 66;
			["BlockMesh"] = 8;
			["BloomEffect"] = 90;
			["BlurEffect"] = 90;
			["BodyAngularVelocity"] = 14;
			["BodyForce"] = 14;
			["BodyGyro"] = 14;
			["BodyPosition"] = 14;
			["BodyThrust"] = 14;
			["BodyVelocity"] = 14;
			["BoolValue"] = 4;
			["BoxHandleAdornment"] = 54;
			["BrickColorValue"] = 4;
			["Camera"] = 5;
			["CFrameValue"] = 4;
			["CharacterMesh"] = 60;
			["Chat"] = 33;
			["ClickDetector"] = 41;
			["CollectionService"] = 30;
			["Color3Value"] = 4;
			["ColorCorrectionEffect"] = 90;
			["ConeHandleAdornment"] = 54;
			["Configuration"] = 58;
			["ContentProvider"] = 72;
			["ContextActionService"] = 41;
			["CoreGui"] = 46;
			["CoreScript"] = 18;
			["CornerWedgePart"] = 1;
			["CustomEvent"] = 4;
			["CustomEventReceiver"] = 4;
			["CylinderHandleAdornment"] = 54;
			["CylinderMesh"] = 8;
			["CylindricalConstraint"] = 89;
			["Debris"] = 30;
			["Decal"] = 7;
			["Dialog"] = 62;
			["DialogChoice"] = 63;
			["DoubleConstrainedValue"] = 4;
			["Explosion"] = 36;
			["FileMesh"] = 8;
			["Fire"] = 61;
			["Flag"] = 38;
			["FlagStand"] = 39;
			["FloorWire"] = 4;
			["Folder"] = 70;
			["ForceField"] = 37;
			["Frame"] = 48;
			["GamePassService"] = 19;
			["Glue"] = 34;
			["GuiButton"] = 52;
			["GuiMain"] = 47;
			["GuiService"] = 47;
			["Handles"] = 53;
			["HapticService"] = 84;
			["Hat"] = 45;
			["HingeConstraint"] = 89;
			["Hint"] = 33;
			["HopperBin"] = 22;
			["HttpService"] = 76;
			["Humanoid"] = 9;
			["ImageButton"] = 52;
			["ImageLabel"] = 49;
			["InsertService"] = 72;
			["IntConstrainedValue"] = 4;
			["IntValue"] = 4;
			["JointInstance"] = 34;
			["JointsService"] = 34;
			["Keyframe"] = 60;
			["KeyframeSequence"] = 60;
			["KeyframeSequenceProvider"] = 60;
			["Lighting"] = 13;
			["LineHandleAdornment"] = 54;
			["LocalScript"] = 18;
			["LogService"] = 87;
			["MarketplaceService"] = 46;
			["Message"] = 33;
			["Model"] = 2;
			["ModuleScript"] = 71;
			["Motor"] = 34;
			["Motor6D"] = 34;
			["MoveToConstraint"] = 89;
			["NegateOperation"] = 78;
			["NetworkClient"] = 16;
			["NetworkReplicator"] = 29;
			["NetworkServer"] = 15;
			["NumberValue"] = 4;
			["ObjectValue"] = 4;
			["Pants"] = 44;
			["ParallelRampPart"] = 1;
			["Part"] = 1;
			["ParticleEmitter"] = 69;
			["PartPairLasso"] = 57;
			["PathfindingService"] = 37;
			["Platform"] = 35;
			["Player"] = 12;
			["PlayerGui"] = 46;
			["Players"] = 21;
			["PlayerScripts"] = 82;
			["PointLight"] = 13;
			["PointsService"] = 83;
			["Pose"] = 60;
			["PrismaticConstraint"] = 89;
			["PrismPart"] = 1;
			["PyramidPart"] = 1;
			["RayValue"] = 4;
			["ReflectionMetadata"] = 86;
			["ReflectionMetadataCallbacks"] = 86;
			["ReflectionMetadataClass"] = 86;
			["ReflectionMetadataClasses"] = 86;
			["ReflectionMetadataEnum"] = 86;
			["ReflectionMetadataEnumItem"] = 86;
			["ReflectionMetadataEnums"] = 86;
			["ReflectionMetadataEvents"] = 86;
			["ReflectionMetadataFunctions"] = 86;
			["ReflectionMetadataMember"] = 86;
			["ReflectionMetadataProperties"] = 86;
			["ReflectionMetadataYieldFunctions"] = 86;
			["RemoteEvent"] = 80;
			["RemoteFunction"] = 79;
			["ReplicatedFirst"] = 72;
			["ReplicatedStorage"] = 72;
			["RightAngleRampPart"] = 1;
			["RocketPropulsion"] = 14;
			["RodConstraint"] = 89;
			["RopeConstraint"] = 89;
			["Rotate"] = 34;
			["RotateP"] = 34;
			["RotateV"] = 34;
			["RunService"] = 66;
			["ScreenGui"] = 47;
			["Script"] = 6;
			["ScrollingFrame"] = 48;
			["Seat"] = 35;
			["Selection"] = 55;
			["SelectionBox"] = 54;
			["SelectionPartLasso"] = 57;
			["SelectionPointLasso"] = 57;
			["SelectionSphere"] = 54;
			["ServerScriptService"] = 0;
			["ServerStorage"] = 74;
			["Shirt"] = 43;
			["ShirtGraphic"] = 40;
			["SkateboardPlatform"] = 35;
			["Sky"] = 28;
			["SlidingBallConstraint"] = 89;
			["Smoke"] = 59;
			["Snap"] = 34;
			["Sound"] = 11;
			["SoundService"] = 31;
			["Sparkles"] = 42;
			["SpawnLocation"] = 25;
			["SpecialMesh"] = 8;
			["SphereHandleAdornment"] = 54;
			["SpotLight"] = 13;
			["SpringConstraint"] = 89;
			["StarterCharacterScripts"] = 82;
			["StarterGear"] = 20;
			["StarterGui"] = 46;
			["StarterPack"] = 20;
			["StarterPlayer"] = 88;
			["StarterPlayerScripts"] = 82;
			["Status"] = 2;
			["StringValue"] = 4;
			["SunRaysEffect"] = 90;
			["SurfaceGui"] = 64;
			["SurfaceLight"] = 13;
			["SurfaceSelection"] = 55;
			["Team"] = 24;
			["Teams"] = 23;
			["TeleportService"] = 81;
			["Terrain"] = 65;
			["TerrainRegion"] = 65;
			["TestService"] = 68;
			["TextBox"] = 51;
			["TextButton"] = 51;
			["TextLabel"] = 50;
			["Texture"] = 10;
			["TextureTrail"] = 4;
			["Tool"] = 17;
			["TouchTransmitter"] = 37;
			["TrussPart"] = 1;
			["UnionOperation"] = 77;
			["UserInputService"] = 84;
			["Vector3Value"] = 4;
			["VehicleSeat"] = 35;
			["VelocityMotor"] = 34;
			["WedgePart"] = 1;
			["Weld"] = 34;
			["Workspace"] = 19;
		}

		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------

		function Create(ty,data)
			local obj
			if type(ty) == 'string' then
				obj = Instance.new(ty)
			else
				obj = ty
			end
			for k, v in pairs(data) do
				if type(k) == 'number' then
					v.Parent = obj
				else
					obj[k] = v
				end
			end
			return obj
		end

		local barActive = false
		local activeOptions = {}

		function createDDown(dBut, callback,...)
			if barActive then
				for i,v in pairs(activeOptions) do
					v:Destroy()
				end
				activeOptions = {}
				barActive = false
				return
			else
				barActive = true
			end
			local slots = {...}
			local base = dBut
			for i,v in pairs(slots) do
				local newOption = base:Clone()
				newOption.ZIndex = 5
				newOption.Name = "Option "..tostring(i)
				newOption.Parent = base.Parent.Parent.Parent
				newOption.BackgroundTransparency = 0
				newOption.ZIndex = 2
				table.insert(activeOptions,newOption)
				newOption.Position = UDim2.new(-0.4, dBut.Position.X.Offset, dBut.Position.Y.Scale, dBut.Position.Y.Offset + (#activeOptions * dBut.Size.Y.Offset))
				newOption.Text = slots[i]
				newOption.MouseButton1Down:connect(function()
					dBut.Text = slots[i]
					callback(slots[i])
					for i,v in pairs(activeOptions) do
						v:Destroy()
					end
					activeOptions = {}
					barActive = false
				end)
			end
		end

		-- Connects a function to an event such that it fires asynchronously
		function Connect(event,func)
			return event:connect(function(...)
				local a = {...}
				spawn(function() func(unpack(a)) end)
			end)
		end

		-- returns the ascendant ScreenGui of an object
		function GetScreen(screen)
			if screen == nil then return nil end
			while not screen:IsA("ScreenGui") do
				screen = screen.Parent
				if screen == nil then return nil end
			end
			return screen
		end

		do
			local ZIndexLock = {}
			-- Sets the ZIndex of an object and its descendants. Objects are locked so
			-- that SetZIndexOnChanged doesn't spawn multiple threads that set the
			-- ZIndex of the same object.
			function SetZIndex(object,z)
				if not ZIndexLock[object] then
					ZIndexLock[object] = true
					if object:IsA'GuiObject' then
						object.ZIndex = z
					end
					local children = object:GetChildren()
					for i = 1,#children do
						SetZIndex(children[i],z)
					end
					ZIndexLock[object] = nil
				end
			end

			function SetZIndexOnChanged(object)
				return object.Changed:connect(function(p)
					if p == "ZIndex" then
						SetZIndex(object,object.ZIndex)
					end
				end)
			end
		end

		---- IconMap ----
		-- Image size: 256px x 256px
		-- Icon size: 16px x 16px
		-- Padding between each icon: 2px
		-- Padding around image edge: 1px
		-- Total icons: 14 x 14 (196)
		local Icon do
			local iconMap = 'http://www.roblox.com/asset/?id=' .. MAP_ID
			game:GetService('ContentProvider'):Preload(iconMap)
			local iconDehash do
				-- 14 x 14, 0-based input, 0-based output
				local f=math.floor
				function iconDehash(h)
					return f(h/14%14),f(h%14)
				end
			end

			function Icon(IconFrame,index)
				local row,col = iconDehash(index)
				local mapSize = Vector2.new(256,256)
				local pad,border = 2,1
				local iconSize = 16

				local class = 'Frame'
				if type(IconFrame) == 'string' then
					class = IconFrame
					IconFrame = nil
				end

				if not IconFrame then
					IconFrame = Create(class,{
						Name = "Icon";
						BackgroundTransparency = 1;
						ClipsDescendants = true;
						Create('ImageLabel',{
							Name = "IconMap";
							Active = false;
							BackgroundTransparency = 1;
							Image = iconMap;
							Size = UDim2.new(mapSize.x/iconSize,0,mapSize.y/iconSize,0);
						});
					})
				end

				IconFrame.IconMap.Position = UDim2.new(-col - (pad*(col+1) + border)/iconSize,0,-row - (pad*(row+1) + border)/iconSize,0)
				return IconFrame
			end
		end

		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		---- ScrollBar
		do
			-- AutoButtonColor doesn't always reset properly
			local function ResetButtonColor(button)
				local active = button.Active
				button.Active = not active
				button.Active = active
			end

			local function ArrowGraphic(size,dir,scaled,template)
				local Frame = Create('Frame',{
					Name = "Arrow Graphic";
					BorderSizePixel = 0;
					Size = UDim2.new(0,size,0,size);
					Transparency = 1;
				})
				if not template then
					template = Instance.new("Frame")
					template.BorderSizePixel = 0
				end

				local transform
				if dir == nil or dir == 'Up' then
					function transform(p,s) return p,s end
				elseif dir == 'Down' then
					function transform(p,s) return UDim2.new(0,p.X.Offset,0,size-p.Y.Offset-1),s end
				elseif dir == 'Left' then
					function transform(p,s) return UDim2.new(0,p.Y.Offset,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
				elseif dir == 'Right' then
					function transform(p,s) return UDim2.new(0,size-p.Y.Offset-1,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
				end

				local scale
				if scaled then
					function scale(p,s) return UDim2.new(p.X.Offset/size,0,p.Y.Offset/size,0),UDim2.new(s.X.Offset/size,0,s.Y.Offset/size,0) end
				else
					function scale(p,s) return p,s end
				end

				local o = math.floor(size/4)
				if size%2 == 0 then
					local n = size/2-1
					for i = 0,n do
						local t = template:Clone()
						local p,s = scale(transform(
							UDim2.new(0,n-i,0,o+i),
							UDim2.new(0,(i+1)*2,0,1)
							))
						t.Position = p
						t.Size = s
						t.Parent = Frame
					end
				else
					local n = (size-1)/2
					for i = 0,n do
						local t = template:Clone()
						local p,s = scale(transform(
							UDim2.new(0,n-i,0,o+i),
							UDim2.new(0,i*2+1,0,1)
							))
						t.Position = p
						t.Size = s
						t.Parent = Frame
					end
				end
				if size%4 > 1 then
					local t = template:Clone()
					local p,s = scale(transform(
						UDim2.new(0,0,0,size-o-1),
						UDim2.new(0,size,0,1)
						))
					t.Position = p
					t.Size = s
					t.Parent = Frame
				end
				return Frame
			end


			local function GripGraphic(size,dir,spacing,scaled,template)
				local Frame = Create('Frame',{
					Name = "Grip Graphic";
					BorderSizePixel = 0;
					Size = UDim2.new(0,size.x,0,size.y);
					Transparency = 1;
				})
				if not template then
					template = Instance.new("Frame")
					template.BorderSizePixel = 0
				end

				spacing = spacing or 2

				local scale
				if scaled then
					function scale(p) return UDim2.new(p.X.Offset/size.x,0,p.Y.Offset/size.y,0) end
				else
					function scale(p) return p end
				end

				if dir == 'Vertical' then
					for i=0,size.x-1,spacing do
						local t = template:Clone()
						t.Size = scale(UDim2.new(0,1,0,size.y))
						t.Position = scale(UDim2.new(0,i,0,0))
						t.Parent = Frame
					end
				elseif dir == nil or dir == 'Horizontal' then
					for i=0,size.y-1,spacing do
						local t = template:Clone()
						t.Size = scale(UDim2.new(0,size.x,0,1))
						t.Position = scale(UDim2.new(0,0,0,i))
						t.Parent = Frame
					end
				end

				return Frame
			end

			local mt = {
				__index = {
					GetScrollPercent = function(self)
						return self.ScrollIndex/(self.TotalSpace-self.VisibleSpace)
					end;
					CanScrollDown = function(self)
						return self.ScrollIndex + self.VisibleSpace < self.TotalSpace
					end;
					CanScrollUp = function(self)
						return self.ScrollIndex > 0
					end;
					ScrollDown = function(self)
						self.ScrollIndex = self.ScrollIndex + self.PageIncrement
						self:Update()
					end;
					ScrollUp = function(self)
						self.ScrollIndex = self.ScrollIndex - self.PageIncrement
						self:Update()
					end;
					ScrollTo = function(self,index)
						self.ScrollIndex = index
						self:Update()
					end;
					SetScrollPercent = function(self,percent)
						self.ScrollIndex = math.floor((self.TotalSpace - self.VisibleSpace)*percent + 0.5)
						self:Update()
					end;
				};
			}
			mt.__index.CanScrollRight = mt.__index.CanScrollDown
			mt.__index.CanScrollLeft = mt.__index.CanScrollUp
			mt.__index.ScrollLeft = mt.__index.ScrollUp
			mt.__index.ScrollRight = mt.__index.ScrollDown

			function ScrollBar(horizontal)
				-- create row scroll bar
				local ScrollFrame = Create('Frame',{
					Name = "ScrollFrame";
					Position = horizontal and UDim2.new(0,0,1,-GUI_SIZE) or UDim2.new(1,-GUI_SIZE,0,0);
					Size = horizontal and UDim2.new(1,0,0,GUI_SIZE) or UDim2.new(0,GUI_SIZE,1,0);
					BackgroundTransparency = 1;
					Create('ImageButton',{
						Name = "ScrollDown";
						Position = horizontal and UDim2.new(1,-GUI_SIZE,0,0) or UDim2.new(0,0,1,-GUI_SIZE);
						Size = UDim2.new(0, GUI_SIZE, 0, GUI_SIZE);
						BackgroundColor3 = GuiColor.Button;
						BorderColor3 = GuiColor.Border;
						--BorderSizePixel = 0;
					});
					Create('ImageButton',{
						Name = "ScrollUp";
						Size = UDim2.new(0, GUI_SIZE, 0, GUI_SIZE);
						BackgroundColor3 = GuiColor.Button;
						BorderColor3 = GuiColor.Border;
						--BorderSizePixel = 0;
					});
					Create('ImageButton',{
						Name = "ScrollBar";
						Size = horizontal and UDim2.new(1,-GUI_SIZE*2,1,0) or UDim2.new(1,0,1,-GUI_SIZE*2);
						Position = horizontal and UDim2.new(0,GUI_SIZE,0,0) or UDim2.new(0,0,0,GUI_SIZE);
						AutoButtonColor = false;
						BackgroundColor3 = Color3.new(0.94902, 0.94902, 0.94902);
						BorderColor3 = GuiColor.Border;
						--BorderSizePixel = 0;
						Create('ImageButton',{
							Name = "ScrollThumb";
							AutoButtonColor = false;
							Size = UDim2.new(0, GUI_SIZE, 0, GUI_SIZE);
							BackgroundColor3 = GuiColor.Button;
							BorderColor3 = GuiColor.Border;
							--BorderSizePixel = 0;
						});
					});
				})

				local graphicTemplate = Create('Frame',{
					Name="Graphic";
					BorderSizePixel = 0;
					BackgroundColor3 = GuiColor.Border;
				})
				local graphicSize = GUI_SIZE/2

				local ScrollDownFrame = ScrollFrame.ScrollDown
				local ScrollDownGraphic = ArrowGraphic(graphicSize,horizontal and 'Right' or 'Down',true,graphicTemplate)
				ScrollDownGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
				ScrollDownGraphic.Parent = ScrollDownFrame
				local ScrollUpFrame = ScrollFrame.ScrollUp
				local ScrollUpGraphic = ArrowGraphic(graphicSize,horizontal and 'Left' or 'Up',true,graphicTemplate)
				ScrollUpGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
				ScrollUpGraphic.Parent = ScrollUpFrame
				local ScrollBarFrame = ScrollFrame.ScrollBar
				local ScrollThumbFrame = ScrollBarFrame.ScrollThumb
				do
					local size = GUI_SIZE*3/8
					local Decal = GripGraphic(Vector2.new(size,size),horizontal and 'Vertical' or 'Horizontal',2,graphicTemplate)
					Decal.Position = UDim2.new(0.5,-size/2,0.5,-size/2)
					Decal.Parent = ScrollThumbFrame
				end

				local Class = setmetatable({
					GUI = ScrollFrame;
					ScrollIndex = 0;
					VisibleSpace = 0;
					TotalSpace = 0;
					PageIncrement = 1;
				},mt)

				local UpdateScrollThumb
				if horizontal then
					function UpdateScrollThumb()
						ScrollThumbFrame.Size = UDim2.new(Class.VisibleSpace/Class.TotalSpace,0,0,GUI_SIZE)
						if ScrollThumbFrame.AbsoluteSize.x < GUI_SIZE then
							ScrollThumbFrame.Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE)
						end
						local barSize = ScrollBarFrame.AbsoluteSize.x
						ScrollThumbFrame.Position = UDim2.new(Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.x)/barSize,0,0,0)
					end
				else
					function UpdateScrollThumb()
						ScrollThumbFrame.Size = UDim2.new(0,GUI_SIZE,Class.VisibleSpace/Class.TotalSpace,0)
						if ScrollThumbFrame.AbsoluteSize.y < GUI_SIZE then
							ScrollThumbFrame.Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE)
						end
						local barSize = ScrollBarFrame.AbsoluteSize.y
						ScrollThumbFrame.Position = UDim2.new(0,0,Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.y)/barSize,0)
					end
				end

				local lastDown
				local lastUp
				local scrollStyle = {BackgroundColor3=GuiColor.Border,BackgroundTransparency=0}
				local scrollStyle_ds = {BackgroundColor3=GuiColor.Border,BackgroundTransparency=0.7}

				local function Update()
					local t = Class.TotalSpace
					local v = Class.VisibleSpace
					local s = Class.ScrollIndex
					if v <= t then
						if s > 0 then
							if s + v > t then
								Class.ScrollIndex = t - v
							end
						else
							Class.ScrollIndex = 0
						end
					else
						Class.ScrollIndex = 0
					end

					if Class.UpdateCallback then
						if Class.UpdateCallback(Class) == false then
							return
						end
					end

					local down = Class:CanScrollDown()
					local up = Class:CanScrollUp()
					if down ~= lastDown then
						lastDown = down
						ScrollDownFrame.Active = down
						ScrollDownFrame.AutoButtonColor = down
						local children = ScrollDownGraphic:GetChildren()
						local style = down and scrollStyle or scrollStyle_ds
						for i = 1,#children do
							Create(children[i],style)
						end
					end
					if up ~= lastUp then
						lastUp = up
						ScrollUpFrame.Active = up
						ScrollUpFrame.AutoButtonColor = up
						local children = ScrollUpGraphic:GetChildren()
						local style = up and scrollStyle or scrollStyle_ds
						for i = 1,#children do
							Create(children[i],style)
						end
					end
					ScrollThumbFrame.Visible = down or up
					UpdateScrollThumb()
				end
				Class.Update = Update

				SetZIndexOnChanged(ScrollFrame)

				local MouseDrag = Create('ImageButton',{
					Name = "MouseDrag";
					Position = UDim2.new(-0.25,0,-0.25,0);
					Size = UDim2.new(1.5,0,1.5,0);
					Transparency = 1;
					AutoButtonColor = false;
					Active = true;
					ZIndex = 10;
				})

				local scrollEventID = 0
				ScrollDownFrame.MouseButton1Down:connect(function()
					scrollEventID = tick()
					local current = scrollEventID
					local up_con
					up_con = MouseDrag.MouseButton1Up:connect(function()
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollDownFrame)
						up_con:disconnect(); drag = nil
					end)
					MouseDrag.Parent = GetScreen(ScrollFrame)
					Class:ScrollDown()
					wait(0.2) -- delay before auto scroll
					while scrollEventID == current do
						Class:ScrollDown()
						if not Class:CanScrollDown() then break end
						wait()
					end
				end)

				ScrollDownFrame.MouseButton1Up:connect(function()
					scrollEventID = tick()
				end)

				ScrollUpFrame.MouseButton1Down:connect(function()
					scrollEventID = tick()
					local current = scrollEventID
					local up_con
					up_con = MouseDrag.MouseButton1Up:connect(function()
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollUpFrame)
						up_con:disconnect(); drag = nil
					end)
					MouseDrag.Parent = GetScreen(ScrollFrame)
					Class:ScrollUp()
					wait(0.2)
					while scrollEventID == current do
						Class:ScrollUp()
						if not Class:CanScrollUp() then break end
						wait()
					end
				end)

				ScrollUpFrame.MouseButton1Up:connect(function()
					scrollEventID = tick()
				end)

				if horizontal then
					ScrollBarFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local current = scrollEventID
						local up_con
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollUpFrame)
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
						if x > ScrollThumbFrame.AbsolutePosition.x then
							Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if x < ScrollThumbFrame.AbsolutePosition.x + ScrollThumbFrame.AbsoluteSize.x then break end
								Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
								wait()
							end
						else
							Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if x > ScrollThumbFrame.AbsolutePosition.x then break end
								Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
								wait()
							end
						end
					end)
				else
					ScrollBarFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local current = scrollEventID
						local up_con
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollUpFrame)
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
						if y > ScrollThumbFrame.AbsolutePosition.y then
							Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if y < ScrollThumbFrame.AbsolutePosition.y + ScrollThumbFrame.AbsoluteSize.y then break end
								Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
								wait()
							end
						else
							Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if y > ScrollThumbFrame.AbsolutePosition.y then break end
								Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
								wait()
							end
						end
					end)
				end

				if horizontal then
					ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local mouse_offset = x - ScrollThumbFrame.AbsolutePosition.x
						local drag_con
						local up_con
						drag_con = MouseDrag.MouseMoved:connect(function(x,y)
							local bar_abs_pos = ScrollBarFrame.AbsolutePosition.x
							local bar_drag = ScrollBarFrame.AbsoluteSize.x - ScrollThumbFrame.AbsoluteSize.x
							local bar_abs_one = bar_abs_pos + bar_drag
							x = x - mouse_offset
							x = x < bar_abs_pos and bar_abs_pos or x > bar_abs_one and bar_abs_one or x
							x = x - bar_abs_pos
							Class:SetScrollPercent(x/(bar_drag))
						end)
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollThumbFrame)
							drag_con:disconnect(); drag_con = nil
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
					end)
				else
					ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local mouse_offset = y - ScrollThumbFrame.AbsolutePosition.y
						local drag_con
						local up_con
						drag_con = MouseDrag.MouseMoved:connect(function(x,y)
							local bar_abs_pos = ScrollBarFrame.AbsolutePosition.y
							local bar_drag = ScrollBarFrame.AbsoluteSize.y - ScrollThumbFrame.AbsoluteSize.y
							local bar_abs_one = bar_abs_pos + bar_drag
							y = y - mouse_offset
							y = y < bar_abs_pos and bar_abs_pos or y > bar_abs_one and bar_abs_one or y
							y = y - bar_abs_pos
							Class:SetScrollPercent(y/(bar_drag))
						end)
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollThumbFrame)
							drag_con:disconnect(); drag_con = nil
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
					end)
				end

				function Class:Destroy()
					ScrollFrame:Destroy()
					MouseDrag:Destroy()
					for k in pairs(Class) do
						Class[k] = nil
					end
					setmetatable(Class,nil)
				end

				Update()

				return Class
			end
		end

		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		---- Explorer panel

		local explorerPanel = D_E_X.ExplorerPanel
		Create(explorerPanel,{
			BackgroundColor3 = GuiColor.Field;
			BorderColor3 = GuiColor.Border;
			Active = true;
		})

		local SettingsRemote = explorerPanel.Parent:WaitForChild("SettingsPanel"):WaitForChild("GetSetting")
		local GetApiRemote = explorerPanel.Parent:WaitForChild("PropertiesFrame"):WaitForChild("GetApi")
		local GetAwaitRemote = explorerPanel.Parent:WaitForChild("PropertiesFrame"):WaitForChild("GetAwaiting")
		local bindSetAwaiting = explorerPanel.Parent:WaitForChild("PropertiesFrame"):WaitForChild("SetAwaiting")

		local SaveInstanceWindow = explorerPanel.Parent:WaitForChild("SaveInstance")
		local ConfirmationWindow = explorerPanel.Parent:WaitForChild("Confirmation")
		local CautionWindow = explorerPanel.Parent:WaitForChild("Caution")
		local TableCautionWindow = explorerPanel.Parent:WaitForChild("TableCaution")

		local RemoteWindow = explorerPanel.Parent:WaitForChild("CallRemote")

		local ScriptEditor = explorerPanel.Parent:WaitForChild("ScriptEditor")
		local ScriptEditorEvent = ScriptEditor:WaitForChild("OpenScript")

		local CurrentSaveInstanceWindow
		local CurrentRemoteWindow

		local lastSelectedNode

		local DexStorage
		local DexStorageMain
		local DexStorageEnabled

		if saveinstance then DexStorageEnabled = true end

		if DexStorageEnabled then
			DexStorage = Instance.new("Folder")
			DexStorage.Name = "Dex"
			DexStorageMain = Instance.new("Folder",DexStorage)
			DexStorageMain.Name = "DexStorage"
		end

		local NilStorage
		local NilStorageMain
		local NilStorageEnabled

		if get_nil_instances and IfThisFunctionWasStableEnough then NilStorageEnabled = true end

		if NilStorageEnabled then
			NilStorage = Instance.new("Folder")
			NilStorage.Name = "Dex Internal Storage"
			NilStorageMain = Instance.new("Folder",NilStorage)
			NilStorageMain.Name = "Nil Instances"
		end

		local listFrame = Create('Frame',{
			Name = "List";
			BackgroundTransparency = 1;
			ClipsDescendants = true;
			Position = UDim2.new(0,0,0,HEADER_SIZE);
			Size = UDim2.new(1,-GUI_SIZE,1,-HEADER_SIZE);
			Parent = explorerPanel;
		})

		local scrollBar = ScrollBar(false)
		scrollBar.PageIncrement = 1
		Create(scrollBar.GUI,{
			Position = UDim2.new(1,-GUI_SIZE,0,HEADER_SIZE);
			Size = UDim2.new(0,GUI_SIZE,1,-HEADER_SIZE);
			Parent = explorerPanel;
		})

		local scrollBarH = ScrollBar(true)
		scrollBarH.PageIncrement = GUI_SIZE
		Create(scrollBarH.GUI,{
			Position = UDim2.new(0,0,1,-GUI_SIZE);
			Size = UDim2.new(1,-GUI_SIZE,0,GUI_SIZE);
			Visible = false;
			Parent = explorerPanel;
		})

		local headerFrame = Create('Frame',{
			Name = "Header";
			BackgroundColor3 = GuiColor.Background;
			BorderColor3 = GuiColor.Border;
			Position = UDim2.new(0,0,0,0);
			Size = UDim2.new(1,0,0,HEADER_SIZE);
			Parent = explorerPanel;
			Create('TextLabel',{
				Text = "Explorer";
				BackgroundTransparency = 1;
				TextColor3 = GuiColor.Text;
				TextXAlignment = 'Left';
				Font = FONT;
				FontSize = FONT_SIZE;
				Position = UDim2.new(0,4,0,0);
				Size = UDim2.new(1,-4,0.5,0);
			});
		})

		local explorerFilter = 	Create('TextBox',{
			Text = "Filter Workspace";
			BackgroundTransparency = 0.8;
			TextColor3 = GuiColor.Text;
			TextXAlignment = 'Left';
			Font = FONT;
			FontSize = FONT_SIZE;
			Position = UDim2.new(0,4,0.5,0);
			Size = UDim2.new(1,-8,0.5,-2);
		});
		explorerFilter.Parent = headerFrame

		SetZIndexOnChanged(explorerPanel)

		local function CreateColor3(r, g, b) return Color3.new(r/255,g/255,b/255) end

		local Styles = {
			Font = Enum.Font.Arial;
			Margin = 5;
			Black = CreateColor3(0,0,0);
			White = CreateColor3(255,255,255);
		}

		local DropDown = {
			Font = Styles.Font;
			FontSize = Enum.FontSize.Size14;
			TextColor = CreateColor3(0,0,0);
			TextColorOver = Styles.White;
			TextXAlignment = Enum.TextXAlignment.Left;
			Height = 20;
			BackColor = Styles.White;
			BackColorOver = CreateColor3(86,125,188);
			BorderColor = CreateColor3(216,216,216);
			BorderSizePixel = 2;
			ArrowColor = CreateColor3(160,160,160);
			ArrowColorOver = Styles.Black;
		}

		local Row = {
			Font = Styles.Font;
			FontSize = Enum.FontSize.Size14;
			TextXAlignment = Enum.TextXAlignment.Left;
			TextColor = Styles.Black;
			TextColorOver = Styles.White;
			TextLockedColor = CreateColor3(120,120,120);
			Height = 24;
			BorderColor = CreateColor3(216,216,216);
			BackgroundColor = Styles.White;
			BackgroundColorAlternate = CreateColor3(246,246,246);
			BackgroundColorMouseover = CreateColor3(211,224,244);
			TitleMarginLeft = 15;
		}

		local currentRightClickMenu
		local CurrentInsertObjectWindow
		local CurrentFunctionCallerWindow

		local RbxApi

		function ClassCanCreate(IName)
			local success,err = pcall(function() Instance.new(IName) end)
			if err then
				return false
			else
				return true
			end
		end

		function GetClasses()
			if RbxApi == nil then return {} end
			local classTable = {}
			for i,v in pairs(RbxApi.Classes) do
				if ClassCanCreate(v.Name) then
					table.insert(classTable,v.Name)
				end
			end
			return classTable
		end

		local function sortAlphabetic(t, property)
			table.sort(t, 
				function(x,y) return x[property] < y[property]
				end)
		end

		local function FunctionIsHidden(functionData)
			local tags = functionData["tags"]
			for _,name in pairs(tags) do
				if name == "deprecated"
					or name == "hidden"
					or name == "writeonly" then
					return true
				end
			end
			return false
		end

		local function GetAllFunctions(className)
			local class = RbxApi.Classes[className]
			local functions = {}

			if not class then return functions end

			while class do
				if class.Name == "Instance" then break end
				for _,nextFunction in pairs(class.Functions) do
					if not FunctionIsHidden(nextFunction) then
						table.insert(functions, nextFunction)
					end
				end
				class = RbxApi.Classes[class.Superclass]
			end

			sortAlphabetic(functions, "Name")

			return functions
		end

		function GetFunctions()
			if RbxApi == nil then return {} end
			local List = SelectionVar():Get()

			if #List == 0 then return end

			local MyObject = List[1]

			local functionTable = {}
			for i,v in pairs(GetAllFunctions(MyObject.ClassName)) do
				table.insert(functionTable,v)
			end
			return functionTable
		end

		function CreateInsertObjectMenu(choices, currentChoice, readOnly, onClick)
			local mouse = game.Players.LocalPlayer:GetMouse()
			local totalSize = explorerPanel.Parent.AbsoluteSize.y
			if #choices == 0 then return end

			table.sort(choices, function(a,b) return a < b end)

			local frame = Instance.new("Frame")	
			frame.Name = "InsertObject"
			frame.Size = UDim2.new(0, 200, 1, 0)
			frame.BackgroundTransparency = 1
			frame.Active = true

			local menu = nil
			local arrow = nil
			local expanded = false
			local margin = DropDown.BorderSizePixel;

	--[[
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	button.TextColor3 = Row.TextColor
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	end
	button.Text = currentChoice
	button.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	button.Position = UDim2.new(0, Styles.Margin, 0, 0)
	button.Parent = frame
	--]]

			local function hideMenu()
				expanded = false
				--showArrow(DropDown.ArrowColor)
				if frame then 
					--frame:Destroy()
					CurrentInsertObjectWindow.Visible = false
				end
			end

			local function showMenu()
				expanded = true
				menu = Instance.new("ScrollingFrame")
				menu.Size = UDim2.new(0,200,1,0)
				menu.CanvasSize = UDim2.new(0, 200, 0, #choices * DropDown.Height)
				menu.Position = UDim2.new(0, margin, 0, 0)
				menu.BackgroundTransparency = 0
				menu.BackgroundColor3 = DropDown.BackColor
				menu.BorderColor3 = DropDown.BorderColor
				menu.BorderSizePixel = DropDown.BorderSizePixel
				menu.TopImage = "rbxasset://textures/blackBkg_square.png"
				menu.MidImage = "rbxasset://textures/blackBkg_square.png"
				menu.BottomImage = "rbxasset://textures/blackBkg_square.png"
				menu.Active = true
				menu.ZIndex = 5
				menu.Parent = frame

				--local parentFrameHeight = script.Parent.List.Size.Y.Offset
				--local rowHeight = mouse.Y
				--if (rowHeight + menu.Size.Y.Offset) > parentFrameHeight then
				--	menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
				--end

				local function choice(name)
					onClick(name)
					hideMenu()
				end

				for i,name in pairs(choices) do
					local option = CreateRightClickMenuItem(name, function()
						choice(name)
					end,1)
					option.Size = UDim2.new(1, 0, 0, 20)
					option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
					option.ZIndex = menu.ZIndex
					option.Parent = menu
				end
			end


			showMenu()


			return frame
		end

		function CreateFunctionCallerMenu(choices, currentChoice, readOnly, onClick)
			local mouse = game.Players.LocalPlayer:GetMouse()
			local totalSize = explorerPanel.Parent.AbsoluteSize.y
			if #choices == 0 then return end

			table.sort(choices, function(a,b) return a.Name < b.Name end)

			local frame = Instance.new("Frame")	
			frame.Name = "InsertObject"
			frame.Size = UDim2.new(0, 200, 1, 0)
			frame.BackgroundTransparency = 1
			frame.Active = true

			local menu = nil
			local arrow = nil
			local expanded = false
			local margin = DropDown.BorderSizePixel;

			local function hideMenu()
				expanded = false
				--showArrow(DropDown.ArrowColor)
				if frame then 
					--frame:Destroy()
					CurrentInsertObjectWindow.Visible = false
				end
			end

			local function showMenu()
				expanded = true
				menu = Instance.new("ScrollingFrame")
				menu.Size = UDim2.new(0,300,1,0)
				menu.CanvasSize = UDim2.new(0, 300, 0, #choices * DropDown.Height)
				menu.Position = UDim2.new(0, margin, 0, 0)
				menu.BackgroundTransparency = 0
				menu.BackgroundColor3 = DropDown.BackColor
				menu.BorderColor3 = DropDown.BorderColor
				menu.BorderSizePixel = DropDown.BorderSizePixel
				menu.TopImage = "rbxasset://textures/blackBkg_square.png"
				menu.MidImage = "rbxasset://textures/blackBkg_square.png"
				menu.BottomImage = "rbxasset://textures/blackBkg_square.png"
				menu.Active = true
				menu.ZIndex = 5
				menu.Parent = frame

				--local parentFrameHeight = script.Parent.List.Size.Y.Offset
				--local rowHeight = mouse.Y
				--if (rowHeight + menu.Size.Y.Offset) > parentFrameHeight then
				--	menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
				--end

				local function GetParameters(functionData)
					local paraString = ""
					paraString = paraString.."("
					for i,v in pairs(functionData.Arguments) do
						paraString = paraString..v.Type.." "..v.Name
						if i < #functionData.Arguments then
							paraString = paraString..", "
						end
					end
					paraString = paraString..")"
					return paraString
				end

				local function choice(name)
					onClick(name)
					hideMenu()
				end

				for i,name in pairs(choices) do
					local option = CreateRightClickMenuItem(name.ReturnType.." "..name.Name..GetParameters(name), function()
						choice(name)
					end,2)
					option.Size = UDim2.new(1, 0, 0, 20)
					option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
					option.ZIndex = menu.ZIndex
					option.Parent = menu
				end
			end


			showMenu()


			return frame
		end

		function CreateInsertObject()
			if not CurrentInsertObjectWindow then return end
			CurrentInsertObjectWindow.Visible = true
			if currentRightClickMenu and CurrentInsertObjectWindow.Visible then
				CurrentInsertObjectWindow.Position = UDim2.new(0,currentRightClickMenu.Position.X.Offset-currentRightClickMenu.Size.X.Offset-2,0,0)
			end
			if CurrentInsertObjectWindow.Visible then
				CurrentInsertObjectWindow.Parent = explorerPanel.Parent
			end
		end

		function CreateFunctionCaller()
			if CurrentFunctionCallerWindow then
				CurrentFunctionCallerWindow:Destroy()
				CurrentFunctionCallerWindow = nil
			end
			CurrentFunctionCallerWindow = CreateFunctionCallerMenu(
				GetFunctions(),
				"",
				false,
				function(option)
					CurrentFunctionCallerWindow:Destroy()
					CurrentFunctionCallerWindow = nil
					local list = SelectionVar():Get()
					for i = 1,#list do
						pcall(function() Instance.new(option,list[i]) end)
					end
					print(option.Name .. " selected to be called. Function caller being added soon, please wait!")
					--CallFunction()
					DestroyRightClick()
				end
			)
			if currentRightClickMenu and CurrentFunctionCallerWindow then
				CurrentFunctionCallerWindow.Position = UDim2.new(0,currentRightClickMenu.Position.X.Offset-currentRightClickMenu.Size.X.Offset*1.5-2,0,0)
			end
			if CurrentFunctionCallerWindow then
				CurrentFunctionCallerWindow.Parent = explorerPanel.Parent
			end
		end

		function CreateRightClickMenuItem(text, onClick, insObj)
			local button = Instance.new("TextButton")
			button.Font = DropDown.Font
			button.FontSize = DropDown.FontSize
			button.TextColor3 = DropDown.TextColor
			button.TextXAlignment = DropDown.TextXAlignment
			button.BackgroundColor3 = DropDown.BackColor
			button.AutoButtonColor = false
			button.BorderSizePixel = 0
			button.Active = true
			button.Text = text

			if insObj == 1 then
				local newIcon = Icon(nil,ExplorerIndex[text] or 0)
				newIcon.Position = UDim2.new(0,0,0,2)
				newIcon.Size = UDim2.new(0,16,0,16)
				newIcon.IconMap.ZIndex = 5
				newIcon.Parent = button
				button.Text = "\t\t"..button.Text
			elseif insObj == 2 then
				button.FontSize = Enum.FontSize.Size11
			end

			button.MouseEnter:connect(function()
				button.TextColor3 = DropDown.TextColorOver
				button.BackgroundColor3 = DropDown.BackColorOver
				if not insObj and CurrentInsertObjectWindow then
					if CurrentInsertObjectWindow.Visible == false and button.Text == "Insert Object" then
						CreateInsertObject()
					elseif CurrentInsertObjectWindow.Visible and button.Text ~= "Insert Object" then
						CurrentInsertObjectWindow.Visible = false
					end
				end
				if not insObj then
					if CurrentFunctionCallerWindow and button.Text ~= "Call Function" then
						CurrentFunctionCallerWindow:Destroy()
						CurrentFunctionCallerWindow = nil
					elseif button.Text == "Call Function" then
						CreateFunctionCaller()
					end
				end
			end)
			button.MouseLeave:connect(function()
				button.TextColor3 = DropDown.TextColor
				button.BackgroundColor3 = DropDown.BackColor
			end)
			button.MouseButton1Click:connect(function()
				button.TextColor3 = DropDown.TextColor
				button.BackgroundColor3 = DropDown.BackColor
				onClick(text)
			end)	
			return button
		end

		function CreateRightClickMenu(choices, currentChoice, readOnly, onClick)
			local mouse = game.Players.LocalPlayer:GetMouse()

			local frame = Instance.new("Frame")	
			frame.Name = "DropDown"
			frame.Size = UDim2.new(0, 200, 1, 0)
			frame.BackgroundTransparency = 1
			frame.Active = true

			local menu = nil
			local arrow = nil
			local expanded = false
			local margin = DropDown.BorderSizePixel;

	--[[
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	button.TextColor3 = Row.TextColor
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	end
	button.Text = currentChoice
	button.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	button.Position = UDim2.new(0, Styles.Margin, 0, 0)
	button.Parent = frame
	--]]

			local function hideMenu()
				expanded = false
				--showArrow(DropDown.ArrowColor)
				if frame then 
					frame:Destroy()
					DestroyRightClick()
				end
			end

			local function showMenu()
				expanded = true
				menu = Instance.new("Frame")
				menu.Size = UDim2.new(0, 200, 0, #choices * DropDown.Height)
				menu.Position = UDim2.new(0, margin, 0, 5)
				menu.BackgroundTransparency = 0
				menu.BackgroundColor3 = DropDown.BackColor
				menu.BorderColor3 = DropDown.BorderColor
				menu.BorderSizePixel = DropDown.BorderSizePixel
				menu.Active = true
				menu.ZIndex = 5
				menu.Parent = frame

				--local parentFrameHeight = script.Parent.List.Size.Y.Offset
				--local rowHeight = mouse.Y
				--if (rowHeight + menu.Size.Y.Offset) > parentFrameHeight then
				--	menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
				--end

				local function choice(name)
					onClick(name)
					hideMenu()
				end

				for i,name in pairs(choices) do
					local option = CreateRightClickMenuItem(name, function()
						choice(name)
					end)
					option.Size = UDim2.new(1, 0, 0, 20)
					option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
					option.ZIndex = menu.ZIndex
					option.Parent = menu
				end
			end


			showMenu()


			return frame
		end

		function checkMouseInGui(gui)
			if gui == nil then return false end
			local plrMouse = game.Players.LocalPlayer:GetMouse()
			local guiPosition = gui.AbsolutePosition
			local guiSize = gui.AbsoluteSize	

			if plrMouse.X >= guiPosition.x and plrMouse.X <= guiPosition.x + guiSize.x and plrMouse.Y >= guiPosition.y and plrMouse.Y <= guiPosition.y + guiSize.y then
				return true
			else
				return false
			end
		end

		local clipboard = {}
		local function delete(o)
			o.Parent = nil
		end

		local getTextWidth do
			local text = Create('TextLabel',{
				Name = "TextWidth";
				TextXAlignment = 'Left';
				TextYAlignment = 'Center';
				Font = FONT;
				FontSize = FONT_SIZE;
				Text = "";
				Position = UDim2.new(0,0,0,0);
				Size = UDim2.new(1,0,1,0);
				Visible = false;
				Parent = explorerPanel;
			})
			function getTextWidth(s)
				text.Text = s
				return text.TextBounds.x
			end
		end

		local nameScanned = false
		-- Holds the game tree converted to a list.
		local TreeList = {}
		-- Matches objects to their tree node representation.
		local NodeLookup = {}

		local nodeWidth = 0

		local QuickButtons = {}

		function filteringWorkspace()
			if explorerFilter.Text ~= "" and explorerFilter.Text ~= "Filter Workspace" then
				return true
			end
			return false
		end

		function lookForAName(obj,name)
			for i,v in pairs(obj:GetChildren()) do
				if string.find(string.lower(v.Name),string.lower(name)) then nameScanned = true end
				lookForAName(v,name)
			end
		end

		function scanName(obj)
			nameScanned = false
			if string.find(string.lower(obj.Name),string.lower(explorerFilter.Text)) then
				nameScanned = true
			else
				lookForAName(obj,explorerFilter.Text)
			end
			return nameScanned
		end

		function updateActions()
			for i,v in pairs(QuickButtons) do
				if v.Cond() then
					v.Toggle(true)
				else
					v.Toggle(false)
				end
			end
		end

		local updateList,rawUpdateList,updateScroll,rawUpdateSize do
			local function r(t)
				for i = 1,#t do
					if not filteringWorkspace() or scanName(t[i].Object) then
						TreeList[#TreeList+1] = t[i]

						local w = (t[i].Depth)*(2+ENTRY_PADDING+GUI_SIZE) + 2 + ENTRY_SIZE + 4 + getTextWidth(t[i].Object.Name) + 4
						if w > nodeWidth then
							nodeWidth = w
						end
						if t[i].Expanded or filteringWorkspace() then
							r(t[i])
						end
					end
				end
			end

			function rawUpdateSize()
				scrollBarH.TotalSpace = nodeWidth
				scrollBarH.VisibleSpace = listFrame.AbsoluteSize.x
				scrollBarH:Update()
				local visible = scrollBarH:CanScrollDown() or scrollBarH:CanScrollUp()
				scrollBarH.GUI.Visible = visible

				listFrame.Size = UDim2.new(1,-GUI_SIZE,1,-GUI_SIZE*(visible and 1 or 0) - HEADER_SIZE)

				scrollBar.VisibleSpace = math.ceil(listFrame.AbsoluteSize.y/ENTRY_BOUND)
				scrollBar.GUI.Size = UDim2.new(0,GUI_SIZE,1,-GUI_SIZE*(visible and 1 or 0) - HEADER_SIZE)

				scrollBar.TotalSpace = #TreeList+1
				scrollBar:Update()
			end

			function rawUpdateList()
				-- Clear then repopulate the entire list. It appears to be fast enough.
				TreeList = {}
				nodeWidth = 0
				r(NodeLookup[workspace.Parent])
				if DexStorageEnabled then
					r(NodeLookup[DexStorage])
				end
				if NilStorageEnabled then
					r(NodeLookup[NilStorage])
				end
				rawUpdateSize()
				updateActions()
			end

			-- Adding or removing large models will cause many updates to occur. We
			-- can reduce the number of updates by creating a delay, then dropping any
			-- updates that occur during the delay.
			local updatingList = false
			function updateList()
				if updatingList then return end
				updatingList = true
				wait(0.25)
				updatingList = false
				rawUpdateList()
			end

			local updatingScroll = false
			function updateScroll()
				if updatingScroll then return end
				updatingScroll = true
				wait(0.25)
				updatingScroll = false
				scrollBar:Update()
			end
		end

		local Selection do
			local bindGetSelection = explorerPanel:FindFirstChild("GetSelection")
			if not bindGetSelection then
				bindGetSelection = Create('BindableFunction',{Name = "GetSelection"})
				bindGetSelection.Parent = explorerPanel
			end

			local bindSetSelection = explorerPanel:FindFirstChild("SetSelection")
			if not bindSetSelection then
				bindSetSelection = Create('BindableFunction',{Name = "SetSelection"})
				bindSetSelection.Parent = explorerPanel
			end

			local bindSelectionChanged = explorerPanel:FindFirstChild("SelectionChanged")
			if not bindSelectionChanged then
				bindSelectionChanged = Create('BindableEvent',{Name = "SelectionChanged"})
				bindSelectionChanged.Parent = explorerPanel
			end

			local SelectionList = {}
			local SelectionSet = {}
			local Updates = true
			Selection = {
				Selected = SelectionSet;
				List = SelectionList;
			}

			local function addObject(object)
				-- list update
				local lupdate = false
				-- scroll update
				local supdate = false

				if not SelectionSet[object] then
					local node = NodeLookup[object]
					if node then
						table.insert(SelectionList,object)
						SelectionSet[object] = true
						node.Selected = true

						-- expand all ancestors so that selected node becomes visible
						node = node.Parent
						while node do
							if not node.Expanded then
								node.Expanded = true
								lupdate = true
							end
							node = node.Parent
						end
						supdate = true
					end
				end
				return lupdate,supdate
			end

			function Selection:Set(objects)
				local lupdate = false
				local supdate = false

				if #SelectionList > 0 then
					for i = 1,#SelectionList do
						local object = SelectionList[i]
						local node = NodeLookup[object]
						if node then
							node.Selected = false
							SelectionSet[object] = nil
						end
					end

					SelectionList = {}
					Selection.List = SelectionList
					supdate = true
				end

				for i = 1,#objects do
					local l,s = addObject(objects[i])
					lupdate = l or lupdate
					supdate = s or supdate
				end

				if lupdate then
					rawUpdateList()
					supdate = true
				elseif supdate then
					scrollBar:Update()
				end

				if supdate then
					bindSelectionChanged:Fire()
					updateActions()
				end
			end

			function Selection:Add(object)
				local l,s = addObject(object)
				if l then
					rawUpdateList()
					if Updates then
						bindSelectionChanged:Fire()
						updateActions()
					end
				elseif s then
					scrollBar:Update()
					if Updates then
						bindSelectionChanged:Fire()
						updateActions()
					end
				end
			end

			function Selection:StopUpdates()
				Updates = false
			end

			function Selection:ResumeUpdates()
				Updates = true
				bindSelectionChanged:Fire()
				updateActions()
			end

			function Selection:Remove(object,noupdate)
				if SelectionSet[object] then
					local node = NodeLookup[object]
					if node then
						node.Selected = false
						SelectionSet[object] = nil
						for i = 1,#SelectionList do
							if SelectionList[i] == object then
								table.remove(SelectionList,i)
								break
							end
						end

						if not noupdate then
							scrollBar:Update()
						end
						bindSelectionChanged:Fire()
						updateActions()
					end
				end
			end

			function Selection:Get()
				local list = {}
				for i = 1,#SelectionList do
					list[i] = SelectionList[i]
				end
				return list
			end

			bindSetSelection.OnInvoke = function(...)
				Selection:Set(...)
			end

			bindGetSelection.OnInvoke = function()
				return Selection:Get()
			end
		end

		function CreateCaution(title,msg)
			local newCaution = CautionWindow:Clone()
			newCaution.Title.Text = title
			newCaution.MainWindow.Desc.Text = msg
			newCaution.Parent = explorerPanel.Parent
			newCaution.Visible = true
			newCaution.MainWindow.Ok.MouseButton1Up:connect(function()
				newCaution:Destroy()
			end)
		end

		function CreateTableCaution(title,msg)
			if type(msg) ~= "table" then return CreateCaution(title,tostring(msg)) end
			local newCaution = TableCautionWindow:Clone()
			newCaution.Title.Text = title

			local TableList = newCaution.MainWindow.TableResults
			local TableTemplate = newCaution.MainWindow.TableTemplate

			for i,v in pairs(msg) do
				local newResult = TableTemplate:Clone()
				newResult.Type.Text = type(v)
				newResult.Value.Text = tostring(v)
				newResult.Position = UDim2.new(0,0,0,#TableList:GetChildren() * 20)
				newResult.Parent = TableList
				TableList.CanvasSize = UDim2.new(0,0,0,#TableList:GetChildren() * 20)
				newResult.Visible = true
			end
			newCaution.Parent = explorerPanel.Parent
			newCaution.Visible = true
			newCaution.MainWindow.Ok.MouseButton1Up:connect(function()
				newCaution:Destroy()
			end)
		end

		local function Split(str, delimiter)
			local start = 1
			local t = {}
			while true do
				local pos = string.find (str, delimiter, start, true)
				if not pos then
					break
				end
				table.insert (t, string.sub (str, start, pos - 1))
				start = pos + string.len (delimiter)
			end
			table.insert (t, string.sub (str, start))
			return t
		end

		local function ToValue(value,type)
			if type == "Vector2" then
				local list = Split(value,",")
				if #list < 2 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				return Vector2.new(x,y)
			elseif type == "Vector3" then
				local list = Split(value,",")
				if #list < 3 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				local z = tonumber(list[3]) or 0
				return Vector3.new(x,y,z)
			elseif type == "Color3" then
				local list = Split(value,",")
				if #list < 3 then return nil end
				local r = tonumber(list[1]) or 0
				local g = tonumber(list[2]) or 0
				local b = tonumber(list[3]) or 0
				return Color3.new(r/255,g/255, b/255)
			elseif type == "UDim2" then
				local list = Split(string.gsub(string.gsub(value, "{", ""),"}",""),",")
				if #list < 4 then return nil end
				local xScale = tonumber(list[1]) or 0
				local xOffset = tonumber(list[2]) or 0
				local yScale = tonumber(list[3]) or 0
				local yOffset = tonumber(list[4]) or 0
				return UDim2.new(xScale, xOffset, yScale, yOffset)
			elseif type == "Number" then
				return tonumber(value)
			elseif type == "String" then
				return value
			elseif type == "NumberRange" then
				local list = Split(value,",")
				if #list == 1 then
					if tonumber(list[1]) == nil then return nil end
					local newVal = tonumber(list[1]) or 0
					return NumberRange.new(newVal)
				end
				if #list < 2 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				return NumberRange.new(x,y)
			elseif type == "Script" then
				local success,err = ypcall(function()
					_G.D_E_X_DONOTUSETHISPLEASE = nil
					loadstring(
						"_G.D_E_X_DONOTUSETHISPLEASE = "..value
					)()
					return _G.D_E_X_DONOTUSETHISPLEASE
				end)
				if err then
					return nil
				end
			else
				return nil
			end
		end

		local function ToPropValue(value,type)
			if type == "Vector2" then
				local list = Split(value,",")
				if #list < 2 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				return Vector2.new(x,y)
			elseif type == "Vector3" then
				local list = Split(value,",")
				if #list < 3 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				local z = tonumber(list[3]) or 0
				return Vector3.new(x,y,z)
			elseif type == "Color3" then
				local list = Split(value,",")
				if #list < 3 then return nil end
				local r = tonumber(list[1]) or 0
				local g = tonumber(list[2]) or 0
				local b = tonumber(list[3]) or 0
				return Color3.new(r/255,g/255, b/255)
			elseif type == "UDim2" then
				local list = Split(string.gsub(string.gsub(value, "{", ""),"}",""),",")
				if #list < 4 then return nil end
				local xScale = tonumber(list[1]) or 0
				local xOffset = tonumber(list[2]) or 0
				local yScale = tonumber(list[3]) or 0
				local yOffset = tonumber(list[4]) or 0
				return UDim2.new(xScale, xOffset, yScale, yOffset)
			elseif type == "Content" then
				return value
			elseif type == "float" or type == "int" or type == "double" then
				return tonumber(value)
			elseif type == "string" then
				return value
			elseif type == "NumberRange" then
				local list = Split(value,",")
				if #list == 1 then
					if tonumber(list[1]) == nil then return nil end
					local newVal = tonumber(list[1]) or 0
					return NumberRange.new(newVal)
				end
				if #list < 2 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				return NumberRange.new(x,y)
			elseif string.sub(value,1,4) == "Enum" then
				local getEnum = value
				while true do
					local x,y = string.find(getEnum,".")
					if y then
						getEnum = string.sub(getEnum,y+1)
					else
						break
					end
				end
				print(getEnum)
				return getEnum
			else
				return nil
			end
		end

		function PromptRemoteCaller(inst)
			if CurrentRemoteWindow then
				CurrentRemoteWindow:Destroy()
				CurrentRemoteWindow = nil
			end
			CurrentRemoteWindow = RemoteWindow:Clone()
			CurrentRemoteWindow.Parent = explorerPanel.Parent
			CurrentRemoteWindow.Visible = true

			local displayValues = false

			local ArgumentList = CurrentRemoteWindow.MainWindow.Arguments
			local ArgumentTemplate = CurrentRemoteWindow.MainWindow.ArgumentTemplate

			if inst:IsA("RemoteEvent") then
				CurrentRemoteWindow.Title.Text = "Fire Event"
				CurrentRemoteWindow.MainWindow.Ok.Text = "Fire"
				CurrentRemoteWindow.MainWindow.DisplayReturned.Visible = false
				CurrentRemoteWindow.MainWindow.Desc2.Visible = false
			end

			local newArgument = ArgumentTemplate:Clone()
			newArgument.Parent = ArgumentList
			newArgument.Visible = true
			newArgument.Type.MouseButton1Down:connect(function()
				createDDown(newArgument.Type,function(choice)
					newArgument.Type.Text = choice
				end,"Script","Number","String","Color3","Vector3","Vector2","UDim2","NumberRange")
			end)

			CurrentRemoteWindow.MainWindow.Ok.MouseButton1Up:connect(function()
				if CurrentRemoteWindow and inst.Parent ~= nil then
					local MyArguments = {}
					for i,v in pairs(ArgumentList:GetChildren()) do
						table.insert(MyArguments,ToValue(v.Value.Text,v.Type.Text))
					end
					if inst:IsA("RemoteFunction") then
						if displayValues then
							spawn(function()
								local myResults = inst:InvokeServer(unpack(MyArguments))
								if myResults then
									CreateTableCaution("Remote Caller",myResults)
								else
									CreateCaution("Remote Caller","This remote did not return anything.")
								end
							end)
						else
							spawn(function()
								inst:InvokeServer(unpack(MyArguments))
							end)
						end
					else
						inst:FireServer(unpack(MyArguments))
					end
					CurrentRemoteWindow:Destroy()
					CurrentRemoteWindow = nil
				end
			end)

			CurrentRemoteWindow.MainWindow.Add.MouseButton1Up:connect(function()
				if CurrentRemoteWindow then
					local newArgument = ArgumentTemplate:Clone()
					newArgument.Position = UDim2.new(0,0,0,#ArgumentList:GetChildren() * 20)
					newArgument.Parent = ArgumentList
					ArgumentList.CanvasSize = UDim2.new(0,0,0,#ArgumentList:GetChildren() * 20)
					newArgument.Visible = true
					newArgument.Type.MouseButton1Down:connect(function()
						createDDown(newArgument.Type,function(choice)
							newArgument.Type.Text = choice
						end,"Script","Number","String","Color3","Vector3","Vector2","UDim2","NumberRange")
					end)
				end
			end)

			CurrentRemoteWindow.MainWindow.Subtract.MouseButton1Up:connect(function()
				if CurrentRemoteWindow then
					if #ArgumentList:GetChildren() > 1 then
						ArgumentList:GetChildren()[#ArgumentList:GetChildren()]:Destroy()
						ArgumentList.CanvasSize = UDim2.new(0,0,0,#ArgumentList:GetChildren() * 20)
					end
				end
			end)

			CurrentRemoteWindow.MainWindow.Cancel.MouseButton1Up:connect(function()
				if CurrentRemoteWindow then
					CurrentRemoteWindow:Destroy()
					CurrentRemoteWindow = nil
				end
			end)

			CurrentRemoteWindow.MainWindow.DisplayReturned.MouseButton1Up:connect(function()
				if displayValues then
					displayValues = false
					CurrentRemoteWindow.MainWindow.DisplayReturned.enabled.Visible = false
				else
					displayValues = true
					CurrentRemoteWindow.MainWindow.DisplayReturned.enabled.Visible = true
				end
			end)
		end

		function PromptSaveInstance(inst)
			if not SaveInstance and not _G.SaveInstance then CreateCaution("SaveInstance Missing","You do not have the SaveInstance function installed. Please go to RaspberryPi's thread to retrieve it.") return end
			if CurrentSaveInstanceWindow then
				CurrentSaveInstanceWindow:Destroy()
				CurrentSaveInstanceWindow = nil
				if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
					explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
				end
			end
			CurrentSaveInstanceWindow = SaveInstanceWindow:Clone()
			CurrentSaveInstanceWindow.Parent = explorerPanel.Parent
			CurrentSaveInstanceWindow.Visible = true

			local filename = CurrentSaveInstanceWindow.MainWindow.FileName
			local saveObjects = true
			local overwriteCaution = false

			CurrentSaveInstanceWindow.MainWindow.Save.MouseButton1Up:connect(function()
				if readfile and getelysianpath then
					if readfile(getelysianpath()..filename.Text..".rbxmx") then
						if not overwriteCaution then
							overwriteCaution = true
							local newCaution = ConfirmationWindow:Clone()
							newCaution.Name = "SaveInstanceOverwriteCaution"
							newCaution.MainWindow.Desc.Text = "The file, "..filename.Text..".rbxmx, already exists. Overwrite?"
							newCaution.Parent = explorerPanel.Parent
							newCaution.Visible = true
							newCaution.MainWindow.Yes.MouseButton1Up:connect(function()
								ypcall(function()
									SaveInstance(inst,filename.Text..".rbxmx",not saveObjects)
								end)
								overwriteCaution = false
								newCaution:Destroy()
								if CurrentSaveInstanceWindow then
									CurrentSaveInstanceWindow:Destroy()
									CurrentSaveInstanceWindow = nil
								end
							end)
							newCaution.MainWindow.No.MouseButton1Up:connect(function()
								overwriteCaution = false
								newCaution:Destroy()
							end)
						end
					else
						ypcall(function()
							SaveInstance(inst,filename.Text..".rbxmx",not saveObjects)
						end)
						if CurrentSaveInstanceWindow then
							CurrentSaveInstanceWindow:Destroy()
							CurrentSaveInstanceWindow = nil
							if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
								explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
							end
						end
					end
				else
					ypcall(function()
						if SaveInstance then
							SaveInstance(inst,filename.Text..".rbxmx",not saveObjects)
						else
							_G.SaveInstance(inst,filename.Text,not saveObjects)
						end
					end)
					if CurrentSaveInstanceWindow then
						CurrentSaveInstanceWindow:Destroy()
						CurrentSaveInstanceWindow = nil
						if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
							explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
						end
					end
				end
			end)
			CurrentSaveInstanceWindow.MainWindow.Cancel.MouseButton1Up:connect(function()
				if CurrentSaveInstanceWindow then
					CurrentSaveInstanceWindow:Destroy()
					CurrentSaveInstanceWindow = nil
					if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
						explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
					end
				end
			end)
			CurrentSaveInstanceWindow.MainWindow.SaveObjects.MouseButton1Up:connect(function()
				if saveObjects then
					saveObjects = false
					CurrentSaveInstanceWindow.MainWindow.SaveObjects.enabled.Visible = false
				else
					saveObjects = true
					CurrentSaveInstanceWindow.MainWindow.SaveObjects.enabled.Visible = true
				end
			end)
		end

		function DestroyRightClick()
			if currentRightClickMenu then
				currentRightClickMenu:Destroy()
				currentRightClickMenu = nil
			end
			if CurrentInsertObjectWindow and CurrentInsertObjectWindow.Visible then
				CurrentInsertObjectWindow.Visible = false
			end
		end

		function rightClickMenu(sObj)
			local mouse = game.Players.LocalPlayer:GetMouse()

			currentRightClickMenu = CreateRightClickMenu(
				{"Cut","Copy","Paste Into","Duplicate","Delete","Group","Ungroup","Select Children","Teleport To","Insert Part","Insert Object","View Script","Save Instance","Call Function","Call Remote"},
				"",
				false,
				function(option)
					if option == "Cut" then
						if not Option.Modifiable then return end
						clipboard = {}
						local list = Selection.List
						local cut = {}
						for i = 1,#list do
							local obj = list[i]:Clone()
							if obj then
								table.insert(clipboard,obj)
								table.insert(cut,list[i])
							end
						end
						for i = 1,#cut do
							pcall(delete,cut[i])
						end
						updateActions()
					elseif option == "Copy" then
						if not Option.Modifiable then return end
						clipboard = {}
						local list = Selection.List
						for i = 1,#list do
							table.insert(clipboard,list[i]:Clone())
						end
						updateActions()
					elseif option == "Paste Into" then
						if not Option.Modifiable then return end
						local parent = Selection.List[1] or workspace
						for i = 1,#clipboard do
							clipboard[i]:Clone().Parent = parent
						end
					elseif option == "Duplicate" then
						if not Option.Modifiable then return end
						local list = Selection:Get()
						for i = 1,#list do
							list[i]:Clone().Parent = Selection.List[1].Parent or workspace
						end
					elseif option == "Delete" then
						if not Option.Modifiable then return end
						local list = Selection:Get()
						for i = 1,#list do
							pcall(delete,list[i])
						end
						Selection:Set({})
					elseif option == "Group" then
						if not Option.Modifiable then return end
						local newModel = Instance.new("Model")
						local list = Selection:Get()
						newModel.Parent = Selection.List[1].Parent or workspace
						for i = 1,#list do
							list[i].Parent = newModel
						end
						Selection:Set({})
					elseif option == "Ungroup" then
						if not Option.Modifiable then return end
						local ungrouped = {}
						local list = Selection:Get()
						for i = 1,#list do
							if list[i]:IsA("Model") then
								for i2,v2 in pairs(list[i]:GetChildren()) do
									v2.Parent = list[i].Parent or workspace
									table.insert(ungrouped,v2)
								end		
								pcall(delete,list[i])			
							end
						end
						Selection:Set({})
						if SettingsRemote:Invoke("SelectUngrouped") then
							for i,v in pairs(ungrouped) do
								Selection:Add(v)
							end
						end
					elseif option == "Select Children" then
						if not Option.Modifiable then return end
						local list = Selection:Get()
						Selection:Set({})
						Selection:StopUpdates()
						for i = 1,#list do
							for i2,v2 in pairs(list[i]:GetChildren()) do
								Selection:Add(v2)
							end
						end
						Selection:ResumeUpdates()
					elseif option == "Teleport To" then
						if not Option.Modifiable then return end
						local list = Selection:Get()
						for i = 1,#list do
							if list[i]:IsA("BasePart") then
								pcall(function()
									game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = list[i].CFrame
								end)
								break
							end
						end
					elseif option == "Insert Part" then
						if not Option.Modifiable then return end
						local insertedParts = {}
						local list = Selection:Get()
						for i = 1,#list do
							pcall(function()
								local newPart = Instance.new("Part")
								newPart.Parent = list[i]
								newPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.Head.Position) + Vector3.new(0,3,0)
								table.insert(insertedParts,newPart)
							end)
						end
					elseif option == "Save Instance" then
						if not Option.Modifiable then return end
						local list = Selection:Get()
						if #list == 1 then
							list[1].Archivable = true
							ypcall(function()PromptSaveInstance(list[1]:Clone())end)
						elseif #list > 1 then
							local newModel = Instance.new("Model")
							newModel.Name = "SavedInstances"
							for i = 1,#list do
								ypcall(function()
									list[i].Archivable = true
									list[i]:Clone().Parent = newModel
								end)
							end
							PromptSaveInstance(newModel)
						end
					elseif option == "Call Remote" then
						if not Option.Modifiable then return end
						local list = Selection:Get()
						for i = 1,#list do
							if list[i]:IsA("RemoteFunction") or list[i]:IsA("RemoteEvent") then
								PromptRemoteCaller(list[i])
								break
							end
						end
					elseif option == "View Script" then
						if not Option.Modifiable then return end
						local list = Selection:Get()
						for i = 1,#list do
							if list[i]:IsA("LocalScript") or list[i]:IsA("ModuleScript") then
								ScriptEditorEvent:Fire(list[i])
							end
						end
					end
				end)
			currentRightClickMenu.Parent = explorerPanel.Parent
			currentRightClickMenu.Position = UDim2.new(0,mouse.X,0,mouse.Y)
			if currentRightClickMenu.AbsolutePosition.X + currentRightClickMenu.AbsoluteSize.X > explorerPanel.AbsolutePosition.X + explorerPanel.AbsoluteSize.X then
				currentRightClickMenu.Position = UDim2.new(0, explorerPanel.AbsolutePosition.X + explorerPanel.AbsoluteSize.X - currentRightClickMenu.AbsoluteSize.X, 0, mouse.Y)
			end
		end

		local function cancelReparentDrag()end
		local function cancelSelectDrag()end
		do
			local listEntries = {}
			local nameConnLookup = {}

			local mouseDrag = Create('ImageButton',{
				Name = "MouseDrag";
				Position = UDim2.new(-0.25,0,-0.25,0);
				Size = UDim2.new(1.5,0,1.5,0);
				Transparency = 1;
				AutoButtonColor = false;
				Active = true;
				ZIndex = 10;
			})
			local function dragSelect(last,add,button)
				local connDrag
				local conUp

				conDrag = mouseDrag.MouseMoved:connect(function(x,y)
					local pos = Vector2.new(x,y) - listFrame.AbsolutePosition
					local size = listFrame.AbsoluteSize
					if pos.x < 0 or pos.x > size.x or pos.y < 0 or pos.y > size.y then return end

					local i = math.ceil(pos.y/ENTRY_BOUND) + scrollBar.ScrollIndex
					-- Mouse may have made a large step, so interpolate between the
					-- last index and the current.
					for n = i<last and i or last, i>last and i or last do
						local node = TreeList[n]
						if node then
							if add then
								Selection:Add(node.Object)
							else
								Selection:Remove(node.Object)
							end
						end
					end
					last = i
				end)

				function cancelSelectDrag()
					mouseDrag.Parent = nil
					conDrag:disconnect()
					conUp:disconnect()
					function cancelSelectDrag()end
				end

				conUp = mouseDrag[button]:connect(cancelSelectDrag)

				mouseDrag.Parent = GetScreen(listFrame)
			end

			local function dragReparent(object,dragGhost,clickPos,ghostOffset)
				local connDrag
				local conUp
				local conUp2

				local parentIndex = nil
				local dragged = false

				local parentHighlight = Create('Frame',{
					Transparency = 1;
					Visible = false;
					Create('Frame',{
						BorderSizePixel = 0;
						BackgroundColor3 = Color3.new(0,0,0);
						BackgroundTransparency = 0.1;
						Position = UDim2.new(0,0,0,0);
						Size = UDim2.new(1,0,0,1);
					});
					Create('Frame',{
						BorderSizePixel = 0;
						BackgroundColor3 = Color3.new(0,0,0);
						BackgroundTransparency = 0.1;
						Position = UDim2.new(1,0,0,0);
						Size = UDim2.new(0,1,1,0);
					});
					Create('Frame',{
						BorderSizePixel = 0;
						BackgroundColor3 = Color3.new(0,0,0);
						BackgroundTransparency = 0.1;
						Position = UDim2.new(0,0,1,0);
						Size = UDim2.new(1,0,0,1);
					});
					Create('Frame',{
						BorderSizePixel = 0;
						BackgroundColor3 = Color3.new(0,0,0);
						BackgroundTransparency = 0.1;
						Position = UDim2.new(0,0,0,0);
						Size = UDim2.new(0,1,1,0);
					});
				})
				SetZIndex(parentHighlight,9)

				conDrag = mouseDrag.MouseMoved:connect(function(x,y)
					local dragPos = Vector2.new(x,y)
					if dragged then
						local pos = dragPos - listFrame.AbsolutePosition
						local size = listFrame.AbsoluteSize

						parentIndex = nil
						parentHighlight.Visible = false
						if pos.x >= 0 and pos.x <= size.x and pos.y >= 0 and pos.y <= size.y + ENTRY_SIZE*2 then
							local i = math.ceil(pos.y/ENTRY_BOUND-2)
							local node = TreeList[i + scrollBar.ScrollIndex]
							if node and node.Object ~= object and not object:IsAncestorOf(node.Object) then
								parentIndex = i
								local entry = listEntries[i]
								if entry then
									parentHighlight.Visible = true
									parentHighlight.Position = UDim2.new(0,1,0,entry.AbsolutePosition.y-listFrame.AbsolutePosition.y)
									parentHighlight.Size = UDim2.new(0,size.x-4,0,entry.AbsoluteSize.y)
								end
							end
						end

						dragGhost.Position = UDim2.new(0,dragPos.x+ghostOffset.x,0,dragPos.y+ghostOffset.y)
					elseif (clickPos-dragPos).magnitude > 8 then
						dragged = true
						SetZIndex(dragGhost,9)
						dragGhost.IndentFrame.Transparency = 0.25
						dragGhost.IndentFrame.EntryText.TextColor3 = GuiColor.TextSelected
						dragGhost.Position = UDim2.new(0,dragPos.x+ghostOffset.x,0,dragPos.y+ghostOffset.y)
						dragGhost.Parent = GetScreen(listFrame)
						parentHighlight.Parent = listFrame
					end
				end)

				function cancelReparentDrag()
					mouseDrag.Parent = nil
					conDrag:disconnect()
					conUp:disconnect()
					conUp2:disconnect()
					dragGhost:Destroy()
					parentHighlight:Destroy()
					function cancelReparentDrag()end
				end

				local wasSelected = Selection.Selected[object]
				if not wasSelected and Option.Selectable then
					Selection:Set({object})
				end

				conUp = mouseDrag.MouseButton1Up:connect(function()
					cancelReparentDrag()
					if dragged then
						if parentIndex then
							local parentNode = TreeList[parentIndex + scrollBar.ScrollIndex]
							if parentNode then
								parentNode.Expanded = true

								local parentObj = parentNode.Object
								local function parent(a,b)
									a.Parent = b
								end
								if Option.Selectable then
									local list = Selection.List
									for i = 1,#list do
										pcall(parent,list[i],parentObj)
									end
								else
									pcall(parent,object,parentObj)
								end
							end
						end
					else
						-- do selection click
						if wasSelected and Option.Selectable then
							Selection:Set({})
						end
					end
				end)
				conUp2 = mouseDrag.MouseButton2Down:connect(function()
					cancelReparentDrag()
				end)

				mouseDrag.Parent = GetScreen(listFrame)
			end

			local entryTemplate = Create('ImageButton',{
				Name = "Entry";
				Transparency = 1;
				AutoButtonColor = false;
				Position = UDim2.new(0,0,0,0);
				Size = UDim2.new(1,0,0,ENTRY_SIZE);
				Create('Frame',{
					Name = "IndentFrame";
					BackgroundTransparency = 1;
					BackgroundColor3 = GuiColor.Selected;
					BorderColor3 = GuiColor.BorderSelected;
					Position = UDim2.new(0,0,0,0);
					Size = UDim2.new(1,0,1,0);
					Create(Icon('ImageButton',0),{
						Name = "Expand";
						AutoButtonColor = false;
						Position = UDim2.new(0,-GUI_SIZE,0.5,-GUI_SIZE/2);
						Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE);
					});
					Create(Icon(nil,0),{
						Name = "ExplorerIcon";
						Position = UDim2.new(0,2+ENTRY_PADDING,0.5,-GUI_SIZE/2);
						Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE);
					});
					Create('TextLabel',{
						Name = "EntryText";
						BackgroundTransparency = 1;
						TextColor3 = GuiColor.Text;
						TextXAlignment = 'Left';
						TextYAlignment = 'Center';
						Font = FONT;
						FontSize = FONT_SIZE;
						Text = "";
						Position = UDim2.new(0,2+ENTRY_SIZE+4,0,0);
						Size = UDim2.new(1,-2,1,0);
					});
				});
			})

			function scrollBar.UpdateCallback(self)
				for i = 1,self.VisibleSpace do
					local node = TreeList[i + self.ScrollIndex]
					if node then
						local entry = listEntries[i]
						if not entry then
							entry = Create(entryTemplate:Clone(),{
								Position = UDim2.new(0,2,0,ENTRY_BOUND*(i-1)+2);
								Size = UDim2.new(0,nodeWidth,0,ENTRY_SIZE);
								ZIndex = listFrame.ZIndex;
							})
							listEntries[i] = entry

							local expand = entry.IndentFrame.Expand
							expand.MouseEnter:connect(function()
								local node = TreeList[i + self.ScrollIndex]
								if #node > 0 then
									if node.Expanded then
										Icon(expand,NODE_EXPANDED_OVER)
									else
										Icon(expand,NODE_COLLAPSED_OVER)
									end
								end
							end)
							expand.MouseLeave:connect(function()
								local node = TreeList[i + self.ScrollIndex]
								if #node > 0 then
									if node.Expanded then
										Icon(expand,NODE_EXPANDED)
									else
										Icon(expand,NODE_COLLAPSED)
									end
								end
							end)
							expand.MouseButton1Down:connect(function()
								local node = TreeList[i + self.ScrollIndex]
								if #node > 0 then
									node.Expanded = not node.Expanded
									if node.Object == explorerPanel.Parent and node.Expanded then
										CreateCaution("Warning","Please be careful when editing instances inside here, this is like the System32 of Dex and modifying objects here can break Dex.")
									end
									-- use raw update so the list updates instantly
									rawUpdateList()
								end
							end)

							entry.MouseButton1Down:connect(function(x,y)
								local node = TreeList[i + self.ScrollIndex]
								DestroyRightClick()
								if GetAwaitRemote:Invoke() then
									bindSetAwaiting:Fire(node.Object)
									return
								end

								if not HoldingShift then
									lastSelectedNode = i + self.ScrollIndex
								end

								if HoldingShift and not filteringWorkspace() then
									if lastSelectedNode then
										if i + self.ScrollIndex - lastSelectedNode > 0 then
											Selection:StopUpdates()
											for i2 = 1, i + self.ScrollIndex - lastSelectedNode do
												local newNode = TreeList[lastSelectedNode + i2]
												if newNode then
													Selection:Add(newNode.Object)
												end
											end
											Selection:ResumeUpdates()
										else
											Selection:StopUpdates()
											for i2 = i + self.ScrollIndex - lastSelectedNode, 1 do
												local newNode = TreeList[lastSelectedNode + i2]
												if newNode then
													Selection:Add(newNode.Object)
												end
											end
											Selection:ResumeUpdates()
										end
									end
									return
								end

								if HoldingCtrl then
									if Selection.Selected[node.Object] then
										Selection:Remove(node.Object)
									else
										Selection:Add(node.Object)
									end
									return
								end
								if Option.Modifiable then
									local pos = Vector2.new(x,y)
									dragReparent(node.Object,entry:Clone(),pos,entry.AbsolutePosition-pos)
								elseif Option.Selectable then
									if Selection.Selected[node.Object] then
										Selection:Set({})
									else
										Selection:Set({node.Object})
									end
									dragSelect(i+self.ScrollIndex,true,'MouseButton1Up')
								end
							end)

							entry.MouseButton2Down:connect(function()
								if not Option.Selectable then return end

								DestroyRightClick()

								curSelect = entry

								local node = TreeList[i + self.ScrollIndex]

								if GetAwaitRemote:Invoke() then
									bindSetAwaiting:Fire(node.Object)
									return
								end

								if not Selection.Selected[node.Object] then
									Selection:Set({node.Object})
								end
							end)


							entry.MouseButton2Up:connect(function()
								if not Option.Selectable then return end

								local node = TreeList[i + self.ScrollIndex]

								if checkMouseInGui(curSelect) then
									rightClickMenu(node.Object)
								end
							end)

							entry.Parent = listFrame
						end

						entry.Visible = true

						local object = node.Object

						-- update expand icon
						if #node == 0 then
							entry.IndentFrame.Expand.Visible = false
						elseif node.Expanded then
							Icon(entry.IndentFrame.Expand,NODE_EXPANDED)
							entry.IndentFrame.Expand.Visible = true
						else
							Icon(entry.IndentFrame.Expand,NODE_COLLAPSED)
							entry.IndentFrame.Expand.Visible = true
						end

						-- update explorer icon
						Icon(entry.IndentFrame.ExplorerIcon,ExplorerIndex[object.ClassName] or 0)

						-- update indentation
						local w = (node.Depth)*(2+ENTRY_PADDING+GUI_SIZE)
						entry.IndentFrame.Position = UDim2.new(0,w,0,0)
						entry.IndentFrame.Size = UDim2.new(1,-w,1,0)

						-- update name change detection
						if nameConnLookup[entry] then
							nameConnLookup[entry]:disconnect()
						end
						local text = entry.IndentFrame.EntryText
						text.Text = object.Name
						nameConnLookup[entry] = node.Object.Changed:connect(function(p)
							if p == 'Name' then
								text.Text = object.Name
							end
						end)

						-- update selection
						entry.IndentFrame.Transparency = node.Selected and 0 or 1
						text.TextColor3 = GuiColor[node.Selected and 'TextSelected' or 'Text']

						entry.Size = UDim2.new(0,nodeWidth,0,ENTRY_SIZE)
					elseif listEntries[i] then
						listEntries[i].Visible = false
					end
				end
				for i = self.VisibleSpace+1,self.TotalSpace do
					local entry = listEntries[i]
					if entry then
						listEntries[i] = nil
						entry:Destroy()
					end
				end
			end

			function scrollBarH.UpdateCallback(self)
				for i = 1,scrollBar.VisibleSpace do
					local node = TreeList[i + scrollBar.ScrollIndex]
					if node then
						local entry = listEntries[i]
						if entry then
							entry.Position = UDim2.new(0,2 - scrollBarH.ScrollIndex,0,ENTRY_BOUND*(i-1)+2)
						end
					end
				end
			end

			Connect(listFrame.Changed,function(p)
				if p == 'AbsoluteSize' then
					rawUpdateSize()
				end
			end)

			local wheelAmount = 6
			explorerPanel.MouseWheelForward:connect(function()
				if scrollBar.VisibleSpace - 1 > wheelAmount then
					scrollBar:ScrollTo(scrollBar.ScrollIndex - wheelAmount)
				else
					scrollBar:ScrollTo(scrollBar.ScrollIndex - scrollBar.VisibleSpace)
				end
			end)
			explorerPanel.MouseWheelBackward:connect(function()
				if scrollBar.VisibleSpace - 1 > wheelAmount then
					scrollBar:ScrollTo(scrollBar.ScrollIndex + wheelAmount)
				else
					scrollBar:ScrollTo(scrollBar.ScrollIndex + scrollBar.VisibleSpace)
				end
			end)
		end

		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		---- Object detection

		-- Inserts `v` into `t` at `i`. Also sets `Index` field in `v`.
		local function insert(t,i,v)
			for n = #t,i,-1 do
				local v = t[n]
				v.Index = n+1
				t[n+1] = v
			end
			v.Index = i
			t[i] = v
		end

		-- Removes `i` from `t`. Also sets `Index` field in removed value.
		local function remove(t,i)
			local v = t[i]
			for n = i+1,#t do
				local v = t[n]
				v.Index = n-1
				t[n-1] = v
			end
			t[#t] = nil
			v.Index = 0
			return v
		end

		-- Returns how deep `o` is in the tree.
		local function depth(o)
			local d = -1
			while o do
				o = o.Parent
				d = d + 1
			end
			return d
		end


		local connLookup = {}

		-- Returns whether a node would be present in the tree list
		local function nodeIsVisible(node)
			local visible = true
			node = node.Parent
			while node and visible do
				visible = visible and node.Expanded
				node = node.Parent
			end
			return visible
		end

		-- Removes an object's tree node. Called when the object stops existing in the
		-- game tree.
		local function removeObject(object)
			local objectNode = NodeLookup[object]
			if not objectNode then
				return
			end

			local visible = nodeIsVisible(objectNode)

			Selection:Remove(object,true)

			local parent = objectNode.Parent
			remove(parent,objectNode.Index)
			NodeLookup[object] = nil
			connLookup[object]:disconnect()
			connLookup[object] = nil

			if visible then
				updateList()
			elseif nodeIsVisible(parent) then
				updateScroll()
			end
		end

		-- Moves a tree node to a new parent. Called when an existing object's parent
		-- changes.
		local function moveObject(object,parent)
			local objectNode = NodeLookup[object]
			if not objectNode then
				return
			end

			local parentNode = NodeLookup[parent]
			if not parentNode then
				return
			end

			local visible = nodeIsVisible(objectNode)

			remove(objectNode.Parent,objectNode.Index)
			objectNode.Parent = parentNode

			objectNode.Depth = depth(object)
			local function r(node,d)
				for i = 1,#node do
					node[i].Depth = d
					r(node[i],d+1)
				end
			end
			r(objectNode,objectNode.Depth+1)

			insert(parentNode,#parentNode+1,objectNode)

			if visible or nodeIsVisible(objectNode) then
				updateList()
			elseif nodeIsVisible(objectNode.Parent) then
				updateScroll()
			end
		end

		-- ScriptContext['/Libraries/LibraryRegistration/LibraryRegistration']
		-- This RobloxLocked object lets me index its properties for some reason

		local function check(object)
			return object.AncestryChanged
		end

		-- Creates a new tree node from an object. Called when an object starts
		-- existing in the game tree.
		local function addObject(object,noupdate)
			if script then
				-- protect against naughty RobloxLocked objects
				local s = pcall(check,object)
				if not s then
					return
				end
			end

			local parentNode = NodeLookup[object.Parent]
			if not parentNode then
				return
			end

			local objectNode = {
				Object = object;
				Parent = parentNode;
				Index = 0;
				Expanded = false;
				Selected = false;
				Depth = depth(object);
			}

			connLookup[object] = Connect(object.AncestryChanged,function(c,p)
				if c == object then
					if p == nil then
						removeObject(c)
					else
						moveObject(c,p)
					end
				end
			end)

			NodeLookup[object] = objectNode
			insert(parentNode,#parentNode+1,objectNode)

			if not noupdate then
				if nodeIsVisible(objectNode) then
					updateList()
				elseif nodeIsVisible(objectNode.Parent) then
					updateScroll()
				end
			end
		end

		local function makeObject(obj,par)
			local newObject = Instance.new(obj.ClassName)
			for i,v in pairs(obj.Properties) do
				ypcall(function()
					local newProp
					newProp = ToPropValue(v.Value,v.Type)
					newObject[v.Name] = newProp
				end)
			end
			newObject.Parent = par
		end

		local function writeObject(obj)
			local newObject = {ClassName = obj.ClassName, Properties = {}}
			for i,v in pairs(RbxApi.GetProperties(obj.className)) do
				if v["Name"] ~= "Parent" then
					print("thispassed")
					table.insert(newObject.Properties,{Name = v["Name"], Type = v["ValueType"], Value = tostring(obj[v["Name"]])})
				end
			end
			return newObject
		end

		local function buildDexStorage()
			local localDexStorage

			local success,err = ypcall(function()
				localDexStorage = game:GetObjects("rbxasset://DexStorage.rbxm")[1]
			end)

			if success and localDexStorage then
				for i,v in pairs(localDexStorage:GetChildren()) do
					ypcall(function()
						v.Parent = DexStorageMain
					end)
				end
			end

			updateDexStorageListeners()
	--[[
	local localDexStorage = readfile(getelysianpath().."DexStorage.txt")--game:GetService("CookiesService"):GetCookieValue("DexStorage")
	--local success,err = pcall(function()
		if localDexStorage then
			local objTable = game:GetService("HttpService"):JSONDecode(localDexStorage)
			for i,v in pairs(objTable) do
				makeObject(v,DexStorageMain)
			end
		end
	--end)
	--]]
		end

		local dexStorageDebounce = false
		local dexStorageListeners = {}

		local function updateDexStorage()
			if dexStorageDebounce then return end
			dexStorageDebounce = true	

			wait()

			pcall(function()
				saveinstance("content//DexStorage.rbxm",DexStorageMain)
			end)

			updateDexStorageListeners()

			dexStorageDebounce = false
	--[[
	local success,err = ypcall(function()
		local objs = {}
		for i,v in pairs(DexStorageMain:GetChildren()) do
			table.insert(objs,writeObject(v))
		end
		writefile(getelysianpath().."DexStorage.txt",game:GetService("HttpService"):JSONEncode(objs))
		--game:GetService("CookiesService"):SetCookieValue("DexStorage",game:GetService("HttpService"):JSONEncode(objs))
	end)
	if err then
		CreateCaution("DexStorage Save Fail!","DexStorage broke! If you see this message, report to Raspberry Pi!")
	end
	print("hi")
	--]]
		end

		function updateDexStorageListeners()
			for i,v in pairs(dexStorageListeners) do
				v:Disconnect()
			end
			dexStorageListeners = {}
			for i,v in pairs(DexStorageMain:GetChildren()) do
				pcall(function()
					local ev = v.Changed:connect(updateDexStorage)
					table.insert(dexStorageListeners,ev)
				end)
			end
		end

		do
			NodeLookup[workspace.Parent] = {
				Object = workspace.Parent;
				Parent = nil;
				Index = 0;
				Expanded = true;
			}

			if DexStorageEnabled then
				NodeLookup[DexStorage] = {
					Object = DexStorage;
					Parent = nil;
					Index = 0;
					Expanded = true;
				}
			end

			if NilStorageEnabled then
				NodeLookup[NilStorage] = {
					Object = NilStorage;
					Parent = nil;
					Index = 0;
					Expanded = true;
				}
			end

			Connect(game.DescendantAdded,addObject)
			Connect(game.DescendantRemoving,removeObject)

			if DexStorageEnabled then
		--[[
		if readfile(getelysianpath().."DexStorage.txt") == nil then
			writefile(getelysianpath().."DexStorage.txt","")
		end
		--]]

				buildDexStorage()

				Connect(DexStorage.DescendantAdded,addObject)
				Connect(DexStorage.DescendantRemoving,removeObject)

				Connect(DexStorage.DescendantAdded,updateDexStorage)
				Connect(DexStorage.DescendantRemoving,updateDexStorage)
			end

			if NilStorageEnabled then
				Connect(NilStorage.DescendantAdded,addObject)
				Connect(NilStorage.DescendantRemoving,removeObject)		

				local currentTable = get_nil_instances()	

				spawn(function()
					while wait() do
						if #currentTable ~= #get_nil_instances() then
							currentTable = get_nil_instances()
							--NilStorageMain:ClearAllChildren()
							for i,v in pairs(get_nil_instances()) do
								if v ~= NilStorage and v ~= DexStorage then
									pcall(function()
										v.Parent = NilStorageMain
									end)
							--[[
							local newNil = v
							newNil.Archivable = true
							newNil:Clone().Parent = NilStorageMain
							--]]
								end
							end
						end
					end
				end)
			end

			local function get(o)
				return o:GetChildren()
			end

			local function r(o)
				local s,children = pcall(get,o)
				if s then
					for i = 1,#children do
						addObject(children[i],true)
						r(children[i])
					end
				end
			end

			r(workspace.Parent)
			if DexStorageEnabled then
				r(DexStorage)
			end
			if NilStorageEnabled then
				r(NilStorage)
			end

			scrollBar.VisibleSpace = math.ceil(listFrame.AbsoluteSize.y/ENTRY_BOUND)
			updateList()
		end

		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		---- Actions

		local actionButtons do
			actionButtons = {}

			local totalActions = 1
			local currentActions = totalActions
			local function makeButton(icon,over,name,vis,cond)
				local buttonEnabled = false

				local button = Create(Icon('ImageButton',icon),{
					Name = name .. "Button";
					Visible = Option.Modifiable and Option.Selectable;
					Position = UDim2.new(1,-(GUI_SIZE+2)*currentActions+2,0.25,-GUI_SIZE/2);
					Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE);
					Parent = headerFrame;
				})

				local tipText = Create('TextLabel',{
					Name = name .. "Text";
					Text = name;
					Visible = false;
					BackgroundTransparency = 1;
					TextXAlignment = 'Right';
					Font = FONT;
					FontSize = FONT_SIZE;
					Position = UDim2.new(0,0,0,0);
					Size = UDim2.new(1,-(GUI_SIZE+2)*totalActions,1,0);
					Parent = headerFrame;
				})


				button.MouseEnter:connect(function()
					if buttonEnabled then
						button.BackgroundTransparency = 0.9
					end
					--Icon(button,over)
					--tipText.Visible = true
				end)
				button.MouseLeave:connect(function()
					button.BackgroundTransparency = 1
					--Icon(button,icon)
					--tipText.Visible = false
				end)

				currentActions = currentActions + 1
				actionButtons[#actionButtons+1] = {Obj = button,Cond = cond}
				QuickButtons[#actionButtons+1] = {Obj = button,Cond = cond, Toggle = function(on)
					if on then
						buttonEnabled = true
						Icon(button,over)
					else
						buttonEnabled = false
						Icon(button,icon)
					end
				end}
				return button
			end

			--local clipboard = {}
			local function delete(o)
				o.Parent = nil
			end

			makeButton(ACTION_EDITQUICKACCESS,ACTION_EDITQUICKACCESS,"Options",true,function()return true end).MouseButton1Click:connect(function()

			end)


			-- DELETE
			makeButton(ACTION_DELETE,ACTION_DELETE_OVER,"Delete",true,function() return #Selection:Get() > 0 end).MouseButton1Click:connect(function()
				if not Option.Modifiable then return end
				local list = Selection:Get()
				for i = 1,#list do
					pcall(delete,list[i])
				end
				Selection:Set({})
			end)

			-- PASTE
			makeButton(ACTION_PASTE,ACTION_PASTE_OVER,"Paste",true,function() return #Selection:Get() > 0 and #clipboard > 0 end).MouseButton1Click:connect(function()
				if not Option.Modifiable then return end
				local parent = Selection.List[1] or workspace
				for i = 1,#clipboard do
					clipboard[i]:Clone().Parent = parent
				end
			end)

			-- COPY
			makeButton(ACTION_COPY,ACTION_COPY_OVER,"Copy",true,function() return #Selection:Get() > 0 end).MouseButton1Click:connect(function()
				if not Option.Modifiable then return end
				clipboard = {}
				local list = Selection.List
				for i = 1,#list do
					table.insert(clipboard,list[i]:Clone())
				end
				updateActions()
			end)

			-- CUT
			makeButton(ACTION_CUT,ACTION_CUT_OVER,"Cut",true,function() return #Selection:Get() > 0 end).MouseButton1Click:connect(function()
				if not Option.Modifiable then return end
				clipboard = {}
				local list = Selection.List
				local cut = {}
				for i = 1,#list do
					local obj = list[i]:Clone()
					if obj then
						table.insert(clipboard,obj)
						table.insert(cut,list[i])
					end
				end
				for i = 1,#cut do
					pcall(delete,cut[i])
				end
				updateActions()
			end)

			-- FREEZE
			makeButton(ACTION_FREEZE,ACTION_FREEZE,"Freeze",true,function() return true end)

			-- ADD/REMOVE STARRED
			makeButton(ACTION_ADDSTAR,ACTION_ADDSTAR_OVER,"Star",true,function() return #Selection:Get() > 0 end)

			-- STARRED
			makeButton(ACTION_STARRED,ACTION_STARRED,"Starred",true,function() return true end)


			-- SORT
			-- local actionSort = makeButton(ACTION_SORT,ACTION_SORT_OVER,"Sort")
		end

		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		---- Option Bindables

		do
			local optionCallback = {
				Modifiable = function(value)
					for i = 1,#actionButtons do
						actionButtons[i].Obj.Visible = value and Option.Selectable
					end
					cancelReparentDrag()
				end;
				Selectable = function(value)
					for i = 1,#actionButtons do
						actionButtons[i].Obj.Visible = value and Option.Modifiable
					end
					cancelSelectDrag()
					Selection:Set({})
				end;
			}

			local bindSetOption = explorerPanel:FindFirstChild("SetOption")
			if not bindSetOption then
				bindSetOption = Create('BindableFunction',{Name = "SetOption"})
				bindSetOption.Parent = explorerPanel
			end

			bindSetOption.OnInvoke = function(optionName,value)
				if optionCallback[optionName] then
					Option[optionName] = value
					optionCallback[optionName](value)
				end
			end

			local bindGetOption = explorerPanel:FindFirstChild("GetOption")
			if not bindGetOption then
				bindGetOption = Create('BindableFunction',{Name = "GetOption"})
				bindGetOption.Parent = explorerPanel
			end

			bindGetOption.OnInvoke = function(optionName)
				if optionName then
					return Option[optionName]
				else
					local options = {}
					for k,v in pairs(Option) do
						options[k] = v
					end
					return options
				end
			end
		end

		function SelectionVar()
			return Selection
		end

		Input.InputBegan:connect(function(key)
			if key.KeyCode == Enum.KeyCode.LeftControl then
				HoldingCtrl = true
			end
			if key.KeyCode == Enum.KeyCode.LeftShift then
				HoldingShift = true
			end
		end)

		Input.InputEnded:connect(function(key)
			if key.KeyCode == Enum.KeyCode.LeftControl then
				HoldingCtrl = false
			end
			if key.KeyCode == Enum.KeyCode.LeftShift then
				HoldingShift = false
			end
		end)

		while RbxApi == nil do
			RbxApi = GetApiRemote:Invoke()
			wait()
		end

		explorerFilter.Changed:connect(function(prop)
			if prop == "Text" then
				rawUpdateList()
			end
		end)

		CurrentInsertObjectWindow = CreateInsertObjectMenu(
			GetClasses(),
			"",
			false,
			function(option)
				CurrentInsertObjectWindow.Visible = false
				local list = SelectionVar():Get()
				for i = 1,#list do
					pcall(function() Instance.new(option,list[i]) end)
				end
				DestroyRightClick()
			end
		)
	end)
	spawn(function()
	--[[
	
Change log:

09/18
	Fixed checkbox mouseover sprite
	Encapsulated checkbox creation into separate method
	Fixed another checkbox issue

09/15
	Invalid input is ignored instead of setting to default of that data type
	Consolidated control methods and simplified them
	All input goes through ToValue method
	Fixed position of BrickColor palette
	Made DropDown appear above row if it would otherwise exceed the page height
	Cleaned up stylesheets

09/14
	Made properties window scroll when mouse wheel scrolled
	Object/Instance and Color3 data types handled properly
	Multiple BrickColor controls interfering with each other fixed
	Added support for Content data type
	
--]]

		wait(0.2)

		local print = function(s)
			print(tostring(s))
		end

		-- Services
		local Teams = game:GetService("Teams")
		local Workspace = game:GetService("Workspace")
		local Debris = game:GetService("Debris")
		local ContentProvider = game:GetService("ContentProvider")
		local Players = game:GetService("Players")
		local ReplicatedStorage = game:GetService("ReplicatedStorage")

		-- Functions
		function httpGet(url)
			return game:HttpGet(url,true)
		end

		-- RbxApi Stuff

		local apiUrl = "http://anaminus.github.io/rbx/json/api/latest.json"
		local maxChunkSize = 100 * 1000
		local ApiJson
		if script:FindFirstChild("RawApiJson") then
			ApiJson = script.RawApiJson
		else
			ApiJson = ""
		end


		function getLocalApiJson()
			local rawApiJson = [===[
	[{"Superclass":null,"type":"Class","Name":"Instance","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"Archivable","tags":[],"Class":"Instance"},{"ValueType":"string","type":"Property","Name":"ClassName","tags":["readonly"],"Class":"Instance"},{"ValueType":"int","type":"Property","Name":"DataCost","tags":["RobloxPlaceSecurity","readonly"],"Class":"Instance"},{"ValueType":"string","type":"Property","Name":"Name","tags":[],"Class":"Instance"},{"ValueType":"Object","type":"Property","Name":"Parent","tags":[],"Class":"Instance"},{"ValueType":"bool","type":"Property","Name":"RobloxLocked","tags":["PluginSecurity"],"Class":"Instance"},{"ValueType":"bool","type":"Property","Name":"archivable","tags":["hidden"],"Class":"Instance"},{"ValueType":"string","type":"Property","Name":"className","tags":["deprecated","readonly"],"Class":"Instance"},{"ReturnType":"void","Arguments":[],"Name":"ClearAllChildren","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"Clone","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Destroy","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"bool","Name":"recursive","Default":"false"}],"Name":"FindFirstChild","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetChildren","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"scopeLength","Default":"4"}],"Name":"GetDebugId","tags":["PluginSecurity","notbrowsable"],"Class":"Instance","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetFullName","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"IsA","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"descendant","Default":null}],"Name":"IsAncestorOf","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"ancestor","Default":null}],"Name":"IsDescendantOf","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Remove","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"children","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"clone","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"destroy","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"bool","Name":"recursive","Default":"false"}],"Name":"findFirstChild","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"getChildren","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"isA","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"ancestor","Default":null}],"Name":"isDescendantOf","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"remove","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"childName","Default":null}],"Name":"WaitForChild","tags":[],"Class":"Instance","type":"YieldFunction"},{"Arguments":[{"Name":"child","Type":"Instance"},{"Name":"parent","Type":"Instance"}],"Name":"AncestryChanged","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"property","Type":"Property"}],"Name":"Changed","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"child","Type":"Instance"}],"Name":"ChildAdded","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"child","Type":"Instance"}],"Name":"ChildRemoved","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"descendant","Type":"Instance"}],"Name":"DescendantAdded","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"descendant","Type":"Instance"}],"Name":"DescendantRemoving","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"child","Type":"Instance"}],"Name":"childAdded","tags":["deprecated"],"Class":"Instance","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Accoutrement","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"AttachmentForward","tags":[],"Class":"Accoutrement"},{"ValueType":"CoordinateFrame","type":"Property","Name":"AttachmentPoint","tags":[],"Class":"Accoutrement"},{"ValueType":"Vector3","type":"Property","Name":"AttachmentPos","tags":[],"Class":"Accoutrement"},{"ValueType":"Vector3","type":"Property","Name":"AttachmentRight","tags":[],"Class":"Accoutrement"},{"ValueType":"Vector3","type":"Property","Name":"AttachmentUp","tags":[],"Class":"Accoutrement"},{"Superclass":"Accoutrement","type":"Class","Name":"Accessory","tags":[]},{"Superclass":"Accoutrement","type":"Class","Name":"Hat","tags":["deprecated"]},{"Superclass":"Instance","type":"Class","Name":"AdService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[],"Name":"ShowVideoAd","tags":[],"Class":"AdService","type":"Function"},{"Arguments":[{"Name":"adShown","Type":"bool"}],"Name":"VideoAdClosed","tags":[],"Class":"AdService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"AdvancedDragger","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Animation","tags":[]},{"ValueType":"Content","type":"Property","Name":"AnimationId","tags":[],"Class":"Animation"},{"Superclass":"Instance","type":"Class","Name":"AnimationController","tags":[]},{"ReturnType":"Array","Arguments":[],"Name":"GetPlayingAnimationTracks","tags":[],"Class":"AnimationController","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"LoadAnimation","tags":[],"Class":"AnimationController","type":"Function"},{"Arguments":[{"Name":"animationTrack","Type":"Instance"}],"Name":"AnimationPlayed","tags":[],"Class":"AnimationController","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"AnimationTrack","tags":[]},{"ValueType":"Object","type":"Property","Name":"Animation","tags":["readonly"],"Class":"AnimationTrack"},{"ValueType":"bool","type":"Property","Name":"IsPlaying","tags":["readonly"],"Class":"AnimationTrack"},{"ValueType":"float","type":"Property","Name":"Length","tags":["readonly"],"Class":"AnimationTrack"},{"ValueType":"AnimationPriority","type":"Property","Name":"Priority","tags":[],"Class":"AnimationTrack"},{"ValueType":"float","type":"Property","Name":"TimePosition","tags":[],"Class":"AnimationTrack"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"speed","Default":"1"}],"Name":"AdjustSpeed","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"weight","Default":"1"},{"Type":"float","Name":"fadeTime","Default":"0.100000001"}],"Name":"AdjustWeight","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"keyframeName","Default":null}],"Name":"GetTimeOfKeyframe","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"fadeTime","Default":"0.100000001"},{"Type":"float","Name":"weight","Default":"1"},{"Type":"float","Name":"speed","Default":"1"}],"Name":"Play","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"fadeTime","Default":"0.100000001"}],"Name":"Stop","tags":[],"Class":"AnimationTrack","type":"Function"},{"Arguments":[{"Name":"keyframeName","Type":"string"}],"Name":"KeyframeReached","tags":[],"Class":"AnimationTrack","type":"Event"},{"Arguments":[],"Name":"Stopped","tags":["deprecated"],"Class":"AnimationTrack","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"AnimationTrackState","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Animator","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"LoadAnimation","tags":[],"Class":"Animator","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"AssetService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"revertUrl","Default":null}],"Name":"SetAssetRevertUrl","tags":["LocalUserSecurity"],"Class":"AssetService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"versionsUrl","Default":null}],"Name":"SetAssetVersionsUrl","tags":["LocalUserSecurity"],"Class":"AssetService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"accessUrl","Default":null}],"Name":"SetPlaceAccessUrl","tags":["LocalUserSecurity"],"Class":"AssetService","type":"Function"},{"ReturnType":"int","Arguments":[{"Type":"string","Name":"placeName","Default":null},{"Type":"int","Name":"templatePlaceID","Default":null},{"Type":"string","Name":"description","Default":""}],"Name":"CreatePlaceAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"placeName","Default":null},{"Type":"int","Name":"templatePlaceID","Default":null},{"Type":"string","Name":"description","Default":""}],"Name":"CreatePlaceInPlayerInventoryAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"int","Name":"pageNum","Default":"1"}],"Name":"GetAssetVersions","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"creationID","Default":null}],"Name":"GetCreatorAssetID","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[],"Name":"GetGamePlacesAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"GetPlacePermissions","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"int","Name":"versionNumber","Default":null}],"Name":"RevertAsset","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"void","Arguments":[],"Name":"SavePlaceAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"AccessType","Name":"accessType","Default":"Everyone"},{"Type":"Array","Name":"inviteList","Default":"{}"}],"Name":"SetPlacePermissions","tags":[],"Class":"AssetService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"Attachment","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Axis","tags":[],"Class":"Attachment"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"Rotation","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"SecondaryAxis","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldAxis","tags":["readonly"],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldPosition","tags":["readonly"],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldRotation","tags":["readonly"],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldSecondaryAxis","tags":["readonly"],"Class":"Attachment"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetAxis","tags":[],"Class":"Attachment","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetSecondaryAxis","tags":[],"Class":"Attachment","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"axis","Default":null}],"Name":"SetAxis","tags":[],"Class":"Attachment","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"axis","Default":null}],"Name":"SetSecondaryAxis","tags":[],"Class":"Attachment","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"BadgeService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetAwardBadgeUrl","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"seconds","Default":null}],"Name":"SetHasBadgeCooldown","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetHasBadgeUrl","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetIsBadgeDisabledUrl","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetIsBadgeLegalUrl","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"SetPlaceId","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"badgeId","Default":null}],"Name":"AwardBadge","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"badgeId","Default":null}],"Name":"IsDisabled","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"badgeId","Default":null}],"Name":"IsLegal","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"badgeId","Default":null}],"Name":"UserHasBadge","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"userId","Type":"int"},{"Name":"badgeId","Type":"int"}],"Name":"BadgeAwarded","tags":["RobloxScriptSecurity"],"Class":"BadgeService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BasePlayerGui","tags":[]},{"Superclass":"BasePlayerGui","type":"Class","Name":"CoreGui","tags":["notCreatable","notbrowsable"]},{"ValueType":"Object","type":"Property","Name":"SelectionImageObject","tags":["RobloxScriptSecurity"],"Class":"CoreGui"},{"ValueType":"int","type":"Property","Name":"Version","tags":["readonly"],"Class":"CoreGui"},{"Superclass":"BasePlayerGui","type":"Class","Name":"PlayerGui","tags":["notCreatable"]},{"ValueType":"Object","type":"Property","Name":"SelectionImageObject","tags":[],"Class":"PlayerGui"},{"ReturnType":"float","Arguments":[],"Name":"GetTopbarTransparency","tags":[],"Class":"PlayerGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"transparency","Default":null}],"Name":"SetTopbarTransparency","tags":[],"Class":"PlayerGui","type":"Function"},{"Arguments":[{"Name":"transparency","Type":"float"}],"Name":"TopbarTransparencyChangedSignal","tags":[],"Class":"PlayerGui","type":"Event"},{"Superclass":"BasePlayerGui","type":"Class","Name":"StarterGui","tags":[]},{"ValueType":"bool","type":"Property","Name":"ResetPlayerGuiOnSpawn","tags":[],"Class":"StarterGui"},{"ValueType":"bool","type":"Property","Name":"ShowDevelopmentGui","tags":[],"Class":"StarterGui"},{"ReturnType":"bool","Arguments":[{"Type":"CoreGuiType","Name":"coreGuiType","Default":null}],"Name":"GetCoreGuiEnabled","tags":[],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"parameterName","Default":null},{"Type":"Function","Name":"getFunction","Default":null}],"Name":"RegisterGetCore","tags":["RobloxScriptSecurity"],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"parameterName","Default":null},{"Type":"Function","Name":"setFunction","Default":null}],"Name":"RegisterSetCore","tags":["RobloxScriptSecurity"],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"parameterName","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetCore","tags":[],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoreGuiType","Name":"coreGuiType","Default":null},{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetCoreGuiEnabled","tags":[],"Class":"StarterGui","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"parameterName","Default":null}],"Name":"GetCore","tags":[],"Class":"StarterGui","type":"YieldFunction"},{"Arguments":[{"Name":"coreGuiType","Type":"CoreGuiType"},{"Name":"enabled","Type":"bool"}],"Name":"CoreGuiChangedSignal","tags":["RobloxScriptSecurity"],"Class":"StarterGui","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BinaryStringValue","tags":[]},{"Superclass":"Instance","type":"Class","Name":"BindableEvent","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"Fire","tags":[],"Class":"BindableEvent","type":"Function"},{"Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"Event","tags":[],"Class":"BindableEvent","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BindableFunction","tags":[]},{"ReturnType":"Tuple","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"Invoke","tags":[],"Class":"BindableFunction","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"OnInvoke","tags":[],"Class":"BindableFunction","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"BodyMover","tags":[]},{"Superclass":"BodyMover","type":"Class","Name":"BodyAngularVelocity","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"AngularVelocity","tags":[],"Class":"BodyAngularVelocity"},{"ValueType":"Vector3","type":"Property","Name":"MaxTorque","tags":[],"Class":"BodyAngularVelocity"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyAngularVelocity"},{"ValueType":"Vector3","type":"Property","Name":"angularvelocity","tags":["deprecated"],"Class":"BodyAngularVelocity"},{"ValueType":"Vector3","type":"Property","Name":"maxTorque","tags":["deprecated"],"Class":"BodyAngularVelocity"},{"Superclass":"BodyMover","type":"Class","Name":"BodyForce","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Force","tags":[],"Class":"BodyForce"},{"ValueType":"Vector3","type":"Property","Name":"force","tags":["deprecated"],"Class":"BodyForce"},{"Superclass":"BodyMover","type":"Class","Name":"BodyGyro","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"BodyGyro"},{"ValueType":"float","type":"Property","Name":"D","tags":[],"Class":"BodyGyro"},{"ValueType":"Vector3","type":"Property","Name":"MaxTorque","tags":[],"Class":"BodyGyro"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyGyro"},{"ValueType":"CoordinateFrame","type":"Property","Name":"cframe","tags":["deprecated"],"Class":"BodyGyro"},{"ValueType":"Vector3","type":"Property","Name":"maxTorque","tags":["deprecated"],"Class":"BodyGyro"},{"Superclass":"BodyMover","type":"Class","Name":"BodyPosition","tags":[]},{"ValueType":"float","type":"Property","Name":"D","tags":[],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"MaxForce","tags":[],"Class":"BodyPosition"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"maxForce","tags":["deprecated"],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"position","tags":["deprecated"],"Class":"BodyPosition"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetLastForce","tags":[],"Class":"BodyPosition","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"lastForce","tags":["deprecated"],"Class":"BodyPosition","type":"Function"},{"Arguments":[],"Name":"ReachedTarget","tags":[],"Class":"BodyPosition","type":"Event"},{"Superclass":"BodyMover","type":"Class","Name":"BodyThrust","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Force","tags":[],"Class":"BodyThrust"},{"ValueType":"Vector3","type":"Property","Name":"Location","tags":[],"Class":"BodyThrust"},{"ValueType":"Vector3","type":"Property","Name":"force","tags":["deprecated"],"Class":"BodyThrust"},{"ValueType":"Vector3","type":"Property","Name":"location","tags":["deprecated"],"Class":"BodyThrust"},{"Superclass":"BodyMover","type":"Class","Name":"BodyVelocity","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"MaxForce","tags":[],"Class":"BodyVelocity"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyVelocity"},{"ValueType":"Vector3","type":"Property","Name":"Velocity","tags":[],"Class":"BodyVelocity"},{"ValueType":"Vector3","type":"Property","Name":"maxForce","tags":["deprecated"],"Class":"BodyVelocity"},{"ValueType":"Vector3","type":"Property","Name":"velocity","tags":["deprecated"],"Class":"BodyVelocity"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetLastForce","tags":[],"Class":"BodyVelocity","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"lastForce","tags":[],"Class":"BodyVelocity","type":"Function"},{"Superclass":"BodyMover","type":"Class","Name":"RocketPropulsion","tags":[]},{"ValueType":"float","type":"Property","Name":"CartoonFactor","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"MaxSpeed","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"MaxThrust","tags":[],"Class":"RocketPropulsion"},{"ValueType":"Vector3","type":"Property","Name":"MaxTorque","tags":[],"Class":"RocketPropulsion"},{"ValueType":"Object","type":"Property","Name":"Target","tags":[],"Class":"RocketPropulsion"},{"ValueType":"Vector3","type":"Property","Name":"TargetOffset","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"TargetRadius","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"ThrustD","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"ThrustP","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"TurnD","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"TurnP","tags":[],"Class":"RocketPropulsion"},{"ReturnType":"void","Arguments":[],"Name":"Abort","tags":[],"Class":"RocketPropulsion","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Fire","tags":[],"Class":"RocketPropulsion","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"fire","tags":["deprecated"],"Class":"RocketPropulsion","type":"Function"},{"Arguments":[],"Name":"ReachedTarget","tags":[],"Class":"RocketPropulsion","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BoolValue","tags":[]},{"ValueType":"bool","type":"Property","Name":"Value","tags":[],"Class":"BoolValue"},{"Arguments":[{"Name":"value","Type":"bool"}],"Name":"Changed","tags":[],"Class":"BoolValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"bool"}],"Name":"changed","tags":["deprecated"],"Class":"BoolValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BrickColorValue","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"Value","tags":[],"Class":"BrickColorValue"},{"Arguments":[{"Name":"value","Type":"BrickColor"}],"Name":"Changed","tags":[],"Class":"BrickColorValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"BrickColor"}],"Name":"changed","tags":["deprecated"],"Class":"BrickColorValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Button","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"active","Default":null}],"Name":"SetActive","tags":["PluginSecurity"],"Class":"Button","type":"Function"},{"Arguments":[],"Name":"Click","tags":["PluginSecurity"],"Class":"Button","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CFrameValue","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"Value","tags":[],"Class":"CFrameValue"},{"Arguments":[{"Name":"value","Type":"CoordinateFrame"}],"Name":"Changed","tags":[],"Class":"CFrameValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"CoordinateFrame"}],"Name":"changed","tags":["deprecated"],"Class":"CFrameValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CacheableContentProvider","tags":[]},{"Superclass":"CacheableContentProvider","type":"Class","Name":"MeshContentProvider","tags":[]},{"Superclass":"CacheableContentProvider","type":"Class","Name":"SolidModelContentProvider","tags":[]},{"Superclass":"CacheableContentProvider","type":"Class","Name":"TextureContentProvider","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Camera","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"Camera"},{"ValueType":"Object","type":"Property","Name":"CameraSubject","tags":[],"Class":"Camera"},{"ValueType":"CameraType","type":"Property","Name":"CameraType","tags":[],"Class":"Camera"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CoordinateFrame","tags":["deprecated","hidden"],"Class":"Camera"},{"ValueType":"float","type":"Property","Name":"FieldOfView","tags":[],"Class":"Camera"},{"ValueType":"CoordinateFrame","type":"Property","Name":"Focus","tags":[],"Class":"Camera"},{"ValueType":"bool","type":"Property","Name":"HeadLocked","tags":[],"Class":"Camera"},{"ValueType":"float","type":"Property","Name":"HeadScale","tags":[],"Class":"Camera"},{"ValueType":"Vector2","type":"Property","Name":"ViewportSize","tags":["readonly"],"Class":"Camera"},{"ValueType":"CoordinateFrame","type":"Property","Name":"focus","tags":["deprecated"],"Class":"Camera"},{"ReturnType":"float","Arguments":[],"Name":"GetPanSpeed","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetRenderCFrame","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetRoll","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetTiltSpeed","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoordinateFrame","Name":"endPos","Default":null},{"Type":"CoordinateFrame","Name":"endFocus","Default":null},{"Type":"float","Name":"duration","Default":null}],"Name":"Interpolate","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"units","Default":null}],"Name":"PanUnits","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Ray","Arguments":[{"Type":"float","Name":"x","Default":null},{"Type":"float","Name":"y","Default":null},{"Type":"float","Name":"depth","Default":"0"}],"Name":"ScreenPointToRay","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CameraPanMode","Name":"mode","Default":"Classic"}],"Name":"SetCameraPanMode","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"rollAngle","Default":null}],"Name":"SetRoll","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"units","Default":null}],"Name":"TiltUnits","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Ray","Arguments":[{"Type":"float","Name":"x","Default":null},{"Type":"float","Name":"y","Default":null},{"Type":"float","Name":"depth","Default":"0"}],"Name":"ViewportPointToRay","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Vector3","Name":"worldPoint","Default":null}],"Name":"WorldToScreenPoint","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Vector3","Name":"worldPoint","Default":null}],"Name":"WorldToViewportPoint","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"float","Name":"distance","Default":null}],"Name":"Zoom","tags":["RobloxScriptSecurity"],"Class":"Camera","type":"Function"},{"Arguments":[{"Name":"entering","Type":"bool"}],"Name":"FirstPersonTransition","tags":["RobloxPlaceSecurity"],"Class":"Camera","type":"Event"},{"Arguments":[],"Name":"InterpolationFinished","tags":[],"Class":"Camera","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ChangeHistoryService","tags":["notCreatable"]},{"ReturnType":"Tuple","Arguments":[],"Name":"GetCanRedo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"GetCanUndo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Redo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ResetWaypoints","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"state","Default":null}],"Name":"SetEnabled","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"SetWaypoint","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Undo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"Arguments":[{"Name":"waypoint","Type":"string"}],"Name":"OnRedo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Event"},{"Arguments":[{"Name":"waypoint","Type":"string"}],"Name":"OnUndo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CharacterAppearance","tags":[]},{"Superclass":"CharacterAppearance","type":"Class","Name":"BodyColors","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"HeadColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"LeftArmColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"LeftLegColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"RightArmColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"RightLegColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"TorsoColor","tags":[],"Class":"BodyColors"},{"Superclass":"CharacterAppearance","type":"Class","Name":"CharacterMesh","tags":[]},{"ValueType":"int","type":"Property","Name":"BaseTextureId","tags":[],"Class":"CharacterMesh"},{"ValueType":"BodyPart","type":"Property","Name":"BodyPart","tags":[],"Class":"CharacterMesh"},{"ValueType":"int","type":"Property","Name":"MeshId","tags":[],"Class":"CharacterMesh"},{"ValueType":"int","type":"Property","Name":"OverlayTextureId","tags":[],"Class":"CharacterMesh"},{"Superclass":"CharacterAppearance","type":"Class","Name":"Clothing","tags":[]},{"Superclass":"Clothing","type":"Class","Name":"Pants","tags":[]},{"ValueType":"Content","type":"Property","Name":"PantsTemplate","tags":[],"Class":"Pants"},{"Superclass":"Clothing","type":"Class","Name":"Shirt","tags":[]},{"ValueType":"Content","type":"Property","Name":"ShirtTemplate","tags":[],"Class":"Shirt"},{"Superclass":"CharacterAppearance","type":"Class","Name":"ShirtGraphic","tags":[]},{"ValueType":"Content","type":"Property","Name":"Graphic","tags":[],"Class":"ShirtGraphic"},{"Superclass":"CharacterAppearance","type":"Class","Name":"Skin","tags":["deprecated"]},{"ValueType":"BrickColor","type":"Property","Name":"SkinColor","tags":[],"Class":"Skin"},{"Superclass":"Instance","type":"Class","Name":"Chat","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"partOrCharacter","Default":null},{"Type":"string","Name":"message","Default":null},{"Type":"ChatColor","Name":"color","Default":"Blue"}],"Name":"Chat","tags":[],"Class":"Chat","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"stringToFilter","Default":null},{"Type":"Instance","Name":"playerFrom","Default":null},{"Type":"Instance","Name":"playerTo","Default":null}],"Name":"FilterStringAsync","tags":[],"Class":"Chat","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"stringToFilter","Default":null},{"Type":"Instance","Name":"playerToFilterFor","Default":null}],"Name":"FilterStringForPlayerAsync","tags":[],"Class":"Chat","type":"YieldFunction"},{"Arguments":[{"Name":"part","Type":"Instance"},{"Name":"message","Type":"string"},{"Name":"color","Type":"ChatColor"}],"Name":"Chatted","tags":[],"Class":"Chat","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ChatFilter","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ClickDetector","tags":[]},{"ValueType":"float","type":"Property","Name":"MaxActivationDistance","tags":[],"Class":"ClickDetector"},{"Arguments":[{"Name":"playerWhoClicked","Type":"Instance"}],"Name":"MouseClick","tags":[],"Class":"ClickDetector","type":"Event"},{"Arguments":[{"Name":"playerWhoHovered","Type":"Instance"}],"Name":"MouseHoverEnter","tags":[],"Class":"ClickDetector","type":"Event"},{"Arguments":[{"Name":"playerWhoHovered","Type":"Instance"}],"Name":"MouseHoverLeave","tags":[],"Class":"ClickDetector","type":"Event"},{"Arguments":[{"Name":"playerWhoClicked","Type":"Instance"}],"Name":"mouseClick","tags":["deprecated"],"Class":"ClickDetector","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ClusterPacketCache","tags":[]},{"Superclass":"Instance","type":"Class","Name":"CollectionService","tags":[]},{"ReturnType":"Objects","Arguments":[{"Type":"string","Name":"class","Default":null}],"Name":"GetCollection","tags":[],"Class":"CollectionService","type":"Function"},{"Arguments":[{"Name":"instance","Type":"Instance"}],"Name":"ItemAdded","tags":[],"Class":"CollectionService","type":"Event"},{"Arguments":[{"Name":"instance","Type":"Instance"}],"Name":"ItemRemoved","tags":[],"Class":"CollectionService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Color3Value","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Value","tags":[],"Class":"Color3Value"},{"Arguments":[{"Name":"value","Type":"Color3"}],"Name":"Changed","tags":[],"Class":"Color3Value","type":"Event"},{"Arguments":[{"Name":"value","Type":"Color3"}],"Name":"changed","tags":["deprecated"],"Class":"Color3Value","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Configuration","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Constraint","tags":[]},{"ValueType":"Object","type":"Property","Name":"Attachment0","tags":[],"Class":"Constraint"},{"ValueType":"Object","type":"Property","Name":"Attachment1","tags":[],"Class":"Constraint"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Constraint"},{"Superclass":"Constraint","type":"Class","Name":"BallSocketConstraint","tags":[]},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"BallSocketConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"BallSocketConstraint"},{"ValueType":"float","type":"Property","Name":"UpperAngle","tags":[],"Class":"BallSocketConstraint"},{"Superclass":"Constraint","type":"Class","Name":"HingeConstraint","tags":[]},{"ValueType":"ActuatorType","type":"Property","Name":"ActuatorType","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"AngularSpeed","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"AngularVelocity","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"CurrentAngle","tags":["readonly"],"Class":"HingeConstraint"},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"LowerAngle","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxAcceleration","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxTorque","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"ServoMaxTorque","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"TargetAngle","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"UpperAngle","tags":[],"Class":"HingeConstraint"},{"Superclass":"Constraint","type":"Class","Name":"MoveToConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"MaxForce","tags":[],"Class":"MoveToConstraint"},{"ValueType":"float","type":"Property","Name":"StabilizingDistance","tags":[],"Class":"MoveToConstraint"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":[],"Class":"MoveToConstraint"},{"Superclass":"Constraint","type":"Class","Name":"RodConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentDistance","tags":["readonly"],"Class":"RodConstraint"},{"ValueType":"float","type":"Property","Name":"Length","tags":[],"Class":"RodConstraint"},{"Superclass":"Constraint","type":"Class","Name":"RopeConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentLength","tags":["readonly"],"Class":"RopeConstraint"},{"ValueType":"float","type":"Property","Name":"Length","tags":[],"Class":"RopeConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"RopeConstraint"},{"Superclass":"Constraint","type":"Class","Name":"SlidingBallConstraint","tags":[]},{"ValueType":"ActuatorType","type":"Property","Name":"ActuatorType","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"CurrentPosition","tags":["readonly"],"Class":"SlidingBallConstraint"},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"LowerLimit","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxAcceleration","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxForce","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"ServoMaxForce","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"Speed","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"TargetPosition","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"UpperLimit","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":[],"Class":"SlidingBallConstraint"},{"Superclass":"SlidingBallConstraint","type":"Class","Name":"CylindricalConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"AzimuthalAngle","tags":[],"Class":"CylindricalConstraint"},{"ValueType":"float","type":"Property","Name":"InclinationAngle","tags":[],"Class":"CylindricalConstraint"},{"Superclass":"SlidingBallConstraint","type":"Class","Name":"PrismaticConstraint","tags":[]},{"Superclass":"Constraint","type":"Class","Name":"SpringConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentLength","tags":["readonly"],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"Damping","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"FreeLength","tags":[],"Class":"SpringConstraint"},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"MaxForce","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"MaxLength","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"MinLength","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"Stiffness","tags":[],"Class":"SpringConstraint"},{"Superclass":"Instance","type":"Class","Name":"ContentFilter","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"outstandingRequests","Default":null},{"Type":"int","Name":"cacheSize","Default":null}],"Name":"SetFilterLimits","tags":["LocalUserSecurity"],"Class":"ContentFilter","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetFilterUrl","tags":["LocalUserSecurity"],"Class":"ContentFilter","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"ContentProvider","tags":[]},{"ValueType":"string","type":"Property","Name":"BaseUrl","tags":["readonly"],"Class":"ContentProvider"},{"ValueType":"int","type":"Property","Name":"RequestQueueSize","tags":["readonly"],"Class":"ContentProvider"},{"ReturnType":"void","Arguments":[{"Type":"Content","Name":"contentId","Default":null}],"Name":"Preload","tags":[],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetAssetUrl","tags":["LocalUserSecurity"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetBaseUrl","tags":["LocalUserSecurity"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"count","Default":null}],"Name":"SetCacheSize","tags":["LocalUserSecurity"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"count","Default":null}],"Name":"SetThreadPool","tags":["LocalUserSecurity"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Array","Name":"contentIdList","Default":null}],"Name":"PreloadAsync","tags":[],"Class":"ContentProvider","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"ContextActionService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Function","Name":"functionToBind","Default":null},{"Type":"bool","Name":"createTouchButton","Default":null},{"Type":"Tuple","Name":"inputTypes","Default":null}],"Name":"BindAction","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Function","Name":"functionToBind","Default":null},{"Type":"bool","Name":"createTouchButton","Default":null},{"Type":"Tuple","Name":"inputTypes","Default":null}],"Name":"BindActionToInputTypes","tags":["deprecated"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"userInputTypeForActivation","Default":null},{"Type":"KeyCode","Name":"keyCodeForActivation","Default":"Unknown"}],"Name":"BindActivate","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Function","Name":"functionToBind","Default":null},{"Type":"bool","Name":"createTouchButton","Default":null},{"Type":"Tuple","Name":"inputTypes","Default":null}],"Name":"BindCoreAction","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"UserInputState","Name":"state","Default":null},{"Type":"Instance","Name":"inputObject","Default":null}],"Name":"CallFunction","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Instance","Name":"actionButton","Default":null}],"Name":"FireActionButtonFoundSignal","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"Dictionary","Arguments":[],"Name":"GetAllBoundActionInfo","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"Dictionary","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"GetBoundActionInfo","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetCurrentLocalToolIcon","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"string","Name":"description","Default":null}],"Name":"SetDescription","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"string","Name":"image","Default":null}],"Name":"SetImage","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"UDim2","Name":"position","Default":null}],"Name":"SetPosition","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"string","Name":"title","Default":null}],"Name":"SetTitle","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"UnbindAction","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"userInputTypeForActivation","Default":null},{"Type":"KeyCode","Name":"keyCodeForActivation","Default":"Unknown"}],"Name":"UnbindActivate","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"UnbindAllActions","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"UnbindCoreAction","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"GetButton","tags":[],"Class":"ContextActionService","type":"YieldFunction"},{"Arguments":[{"Name":"actionAdded","Type":"string"},{"Name":"createTouchButton","Type":"bool"},{"Name":"functionInfoTable","Type":"Dictionary"}],"Name":"BoundActionAdded","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"actionChanged","Type":"string"},{"Name":"changeName","Type":"string"},{"Name":"changeTable","Type":"Dictionary"}],"Name":"BoundActionChanged","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"actionRemoved","Type":"string"},{"Name":"functionInfoTable","Type":"Dictionary"}],"Name":"BoundActionRemoved","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"actionName","Type":"string"}],"Name":"GetActionButtonEvent","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"toolEquipped","Type":"Instance"}],"Name":"LocalToolEquipped","tags":[],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"toolUnequipped","Type":"Instance"}],"Name":"LocalToolUnequipped","tags":[],"Class":"ContextActionService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Controller","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Button","Name":"button","Default":null},{"Type":"string","Name":"caption","Default":null}],"Name":"BindButton","tags":[],"Class":"Controller","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Button","Name":"button","Default":null}],"Name":"GetButton","tags":[],"Class":"Controller","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Button","Name":"button","Default":null}],"Name":"UnbindButton","tags":[],"Class":"Controller","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Button","Name":"button","Default":null},{"Type":"string","Name":"caption","Default":null}],"Name":"bindButton","tags":["deprecated"],"Class":"Controller","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Button","Name":"button","Default":null}],"Name":"getButton","tags":["deprecated"],"Class":"Controller","type":"Function"},{"Arguments":[{"Name":"button","Type":"Button"}],"Name":"ButtonChanged","tags":[],"Class":"Controller","type":"Event"},{"Superclass":"Controller","type":"Class","Name":"HumanoidController","tags":[]},{"Superclass":"Controller","type":"Class","Name":"SkateboardController","tags":[]},{"ValueType":"float","type":"Property","Name":"Steer","tags":["readonly"],"Class":"SkateboardController"},{"ValueType":"float","type":"Property","Name":"Throttle","tags":["readonly"],"Class":"SkateboardController"},{"Arguments":[{"Name":"axis","Type":"string"}],"Name":"AxisChanged","tags":[],"Class":"SkateboardController","type":"Event"},{"Superclass":"Controller","type":"Class","Name":"VehicleController","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ControllerService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"CookiesService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"DeleteCookieValue","tags":["RobloxSecurity"],"Class":"CookiesService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"GetCookieValue","tags":["RobloxSecurity"],"Class":"CookiesService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"string","Name":"value","Default":null}],"Name":"SetCookieValue","tags":["RobloxSecurity"],"Class":"CookiesService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"CustomEvent","tags":["deprecated"]},{"ReturnType":"Objects","Arguments":[],"Name":"GetAttachedReceivers","tags":[],"Class":"CustomEvent","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"newValue","Default":null}],"Name":"SetValue","tags":[],"Class":"CustomEvent","type":"Function"},{"Arguments":[{"Name":"receiver","Type":"Instance"}],"Name":"ReceiverConnected","tags":[],"Class":"CustomEvent","type":"Event"},{"Arguments":[{"Name":"receiver","Type":"Instance"}],"Name":"ReceiverDisconnected","tags":[],"Class":"CustomEvent","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CustomEventReceiver","tags":["deprecated"]},{"ValueType":"Object","type":"Property","Name":"Source","tags":[],"Class":"CustomEventReceiver"},{"ReturnType":"float","Arguments":[],"Name":"GetCurrentValue","tags":[],"Class":"CustomEventReceiver","type":"Function"},{"Arguments":[{"Name":"event","Type":"Instance"}],"Name":"EventConnected","tags":[],"Class":"CustomEventReceiver","type":"Event"},{"Arguments":[{"Name":"event","Type":"Instance"}],"Name":"EventDisconnected","tags":[],"Class":"CustomEventReceiver","type":"Event"},{"Arguments":[{"Name":"newValue","Type":"float"}],"Name":"SourceValueChanged","tags":[],"Class":"CustomEventReceiver","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"DataModelMesh","tags":["notbrowsable"]},{"ValueType":"Vector3","type":"Property","Name":"Offset","tags":[],"Class":"DataModelMesh"},{"ValueType":"Vector3","type":"Property","Name":"Scale","tags":[],"Class":"DataModelMesh"},{"ValueType":"Vector3","type":"Property","Name":"VertexColor","tags":[],"Class":"DataModelMesh"},{"Superclass":"DataModelMesh","type":"Class","Name":"BevelMesh","tags":["deprecated","notbrowsable"]},{"Superclass":"BevelMesh","type":"Class","Name":"BlockMesh","tags":[]},{"Superclass":"BevelMesh","type":"Class","Name":"CylinderMesh","tags":[]},{"Superclass":"DataModelMesh","type":"Class","Name":"FileMesh","tags":[]},{"ValueType":"Content","type":"Property","Name":"MeshId","tags":[],"Class":"FileMesh"},{"ValueType":"Content","type":"Property","Name":"TextureId","tags":[],"Class":"FileMesh"},{"Superclass":"FileMesh","type":"Class","Name":"SpecialMesh","tags":[]},{"ValueType":"MeshType","type":"Property","Name":"MeshType","tags":[],"Class":"SpecialMesh"},{"Superclass":"Instance","type":"Class","Name":"DataStoreService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"LegacyNamingScheme","tags":["LocalUserSecurity"],"Class":"DataStoreService"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"string","Name":"scope","Default":"global"}],"Name":"GetDataStore","tags":[],"Class":"DataStoreService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetGlobalDataStore","tags":[],"Class":"DataStoreService","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"string","Name":"scope","Default":"global"}],"Name":"GetOrderedDataStore","tags":[],"Class":"DataStoreService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Debris","tags":[]},{"ValueType":"int","type":"Property","Name":"MaxItems","tags":["deprecated"],"Class":"Debris"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"item","Default":null},{"Type":"double","Name":"lifetime","Default":"10"}],"Name":"AddItem","tags":[],"Class":"Debris","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetLegacyMaxItems","tags":["LocalUserSecurity"],"Class":"Debris","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"item","Default":null},{"Type":"double","Name":"lifetime","Default":"10"}],"Name":"addItem","tags":["deprecated"],"Class":"Debris","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"DebugSettings","tags":["notbrowsable"]},{"ValueType":"int","type":"Property","Name":"AltCdnFailureCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"AltCdnSuccessCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"AvailablePhysicalMemory","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"BlockMeshSize","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"CPU","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"CdnFailureCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"CdnResponceTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"CdnSuccessCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"CpuCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"CpuSpeed","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"DataModel","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"ElapsedTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"ErrorReporting","type":"Property","Name":"ErrorReporting","tags":[],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"GfxCard","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"InstanceCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"IsFmodProfilingEnabled","tags":[],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"IsProfilingEnabled","tags":[],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"IsScriptStackTracingEnabled","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"JobCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"LastCdnFailureTimeSpan","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"LuaRamLimit","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"NameDatabaseBytes","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"NameDatabaseSize","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"OsIs64Bit","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"OsPlatform","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"OsPlatformId","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"OsVer","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PageFaultsPerSecond","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PageFileBytes","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"float","type":"Property","Name":"PixelShaderModel","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PlayerCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PrivateBytes","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PrivateWorkingSetBytes","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"ProcessCores","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"ProcessorTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"ProfilingWindow","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"RAM","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"ReportExtendedMachineConfiguration","tags":[],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"ReportSoundWarnings","tags":[],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"Resolution","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"RobloxFailureCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"RobloxProductName","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"RobloxRespoceTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"RobloxSuccessCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"RobloxVersion","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"SIMD","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"SystemProductName","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"TickCountSampleMethod","type":"Property","Name":"TickCountPreciseOverride","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"TotalPhysicalMemory","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"TotalProcessorTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"float","type":"Property","Name":"VertexShaderModel","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"VideoMemory","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"VirtualBytes","tags":["readonly"],"Class":"DebugSettings"},{"ReturnType":"void","Arguments":[],"Name":"LegacyScriptMode","tags":["LocalUserSecurity","deprecated"],"Class":"DebugSettings","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"ResetCdnFailureCounts","tags":["LocalUserSecurity"],"Class":"DebugSettings","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetBlockingRemove","tags":["LocalUserSecurity"],"Class":"DebugSettings","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"DebuggerBreakpoint","tags":["notCreatable"]},{"ValueType":"string","type":"Property","Name":"Condition","tags":[],"Class":"DebuggerBreakpoint"},{"ValueType":"bool","type":"Property","Name":"IsEnabled","tags":[],"Class":"DebuggerBreakpoint"},{"ValueType":"int","type":"Property","Name":"Line","tags":["readonly"],"Class":"DebuggerBreakpoint"},{"Superclass":"Instance","type":"Class","Name":"DebuggerManager","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"DebuggingEnabled","tags":["readonly"],"Class":"DebuggerManager"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"script","Default":null}],"Name":"AddDebugger","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"EnableDebugging","tags":["LocalUserSecurity"],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetDebuggers","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Resume","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepIn","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOut","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOver","tags":[],"Class":"DebuggerManager","type":"Function"},{"Arguments":[{"Name":"debugger","Type":"Instance"}],"Name":"DebuggerAdded","tags":[],"Class":"DebuggerManager","type":"Event"},{"Arguments":[{"Name":"debugger","Type":"Instance"}],"Name":"DebuggerRemoved","tags":[],"Class":"DebuggerManager","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"DebuggerWatch","tags":[]},{"ValueType":"string","type":"Property","Name":"Expression","tags":[],"Class":"DebuggerWatch"},{"ReturnType":"void","Arguments":[],"Name":"CheckSyntax","tags":[],"Class":"DebuggerWatch","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Dialog","tags":[]},{"ValueType":"float","type":"Property","Name":"ConversationDistance","tags":[],"Class":"Dialog"},{"ValueType":"string","type":"Property","Name":"GoodbyeDialog","tags":[],"Class":"Dialog"},{"ValueType":"bool","type":"Property","Name":"InUse","tags":[],"Class":"Dialog"},{"ValueType":"string","type":"Property","Name":"InitialPrompt","tags":[],"Class":"Dialog"},{"ValueType":"DialogPurpose","type":"Property","Name":"Purpose","tags":[],"Class":"Dialog"},{"ValueType":"DialogTone","type":"Property","Name":"Tone","tags":[],"Class":"Dialog"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"Instance","Name":"dialogChoice","Default":null}],"Name":"SignalDialogChoiceSelected","tags":["RobloxScriptSecurity"],"Class":"Dialog","type":"Function"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"dialogChoice","Type":"Instance"}],"Name":"DialogChoiceSelected","tags":[],"Class":"Dialog","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"DialogChoice","tags":[]},{"ValueType":"string","type":"Property","Name":"GoodbyeDialog","tags":[],"Class":"DialogChoice"},{"ValueType":"string","type":"Property","Name":"ResponseDialog","tags":[],"Class":"DialogChoice"},{"ValueType":"string","type":"Property","Name":"UserDialog","tags":[],"Class":"DialogChoice"},{"Superclass":"Instance","type":"Class","Name":"DoubleConstrainedValue","tags":[]},{"ValueType":"double","type":"Property","Name":"ConstrainedValue","tags":["hidden"],"Class":"DoubleConstrainedValue"},{"ValueType":"double","type":"Property","Name":"MaxValue","tags":[],"Class":"DoubleConstrainedValue"},{"ValueType":"double","type":"Property","Name":"MinValue","tags":[],"Class":"DoubleConstrainedValue"},{"ValueType":"double","type":"Property","Name":"Value","tags":[],"Class":"DoubleConstrainedValue"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"Changed","tags":[],"Class":"DoubleConstrainedValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"changed","tags":["deprecated"],"Class":"DoubleConstrainedValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Dragger","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Axis","Name":"axis","Default":"X"}],"Name":"AxisRotate","tags":[],"Class":"Dragger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"mousePart","Default":null},{"Type":"Vector3","Name":"pointOnMousePart","Default":null},{"Type":"Objects","Name":"parts","Default":null}],"Name":"MouseDown","tags":[],"Class":"Dragger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Ray","Name":"mouseRay","Default":null}],"Name":"MouseMove","tags":[],"Class":"Dragger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"MouseUp","tags":[],"Class":"Dragger","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Explosion","tags":[]},{"ValueType":"float","type":"Property","Name":"BlastPressure","tags":[],"Class":"Explosion"},{"ValueType":"float","type":"Property","Name":"BlastRadius","tags":[],"Class":"Explosion"},{"ValueType":"float","type":"Property","Name":"DestroyJointRadiusPercent","tags":[],"Class":"Explosion"},{"ValueType":"ExplosionType","type":"Property","Name":"ExplosionType","tags":[],"Class":"Explosion"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"Explosion"},{"Arguments":[{"Name":"part","Type":"Instance"},{"Name":"distance","Type":"float"}],"Name":"Hit","tags":[],"Class":"Explosion","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"FaceInstance","tags":["notbrowsable"]},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"FaceInstance"},{"Superclass":"FaceInstance","type":"Class","Name":"Decal","tags":[]},{"ValueType":"float","type":"Property","Name":"LocalTransparencyModifier","tags":["hidden"],"Class":"Decal"},{"ValueType":"float","type":"Property","Name":"Shiny","tags":["deprecated"],"Class":"Decal"},{"ValueType":"float","type":"Property","Name":"Specular","tags":["deprecated"],"Class":"Decal"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":[],"Class":"Decal"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":[],"Class":"Decal"},{"Superclass":"Decal","type":"Class","Name":"Texture","tags":[]},{"ValueType":"float","type":"Property","Name":"StudsPerTileU","tags":[],"Class":"Texture"},{"ValueType":"float","type":"Property","Name":"StudsPerTileV","tags":[],"Class":"Texture"},{"Superclass":"Instance","type":"Class","Name":"Feature","tags":[]},{"ValueType":"NormalId","type":"Property","Name":"FaceId","tags":[],"Class":"Feature"},{"ValueType":"InOut","type":"Property","Name":"InOut","tags":[],"Class":"Feature"},{"ValueType":"LeftRight","type":"Property","Name":"LeftRight","tags":[],"Class":"Feature"},{"ValueType":"TopBottom","type":"Property","Name":"TopBottom","tags":[],"Class":"Feature"},{"Superclass":"Feature","type":"Class","Name":"Hole","tags":["deprecated"]},{"Superclass":"Feature","type":"Class","Name":"MotorFeature","tags":["deprecated"]},{"Superclass":"Instance","type":"Class","Name":"Fire","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Color","tags":[],"Class":"Fire"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Fire"},{"ValueType":"float","type":"Property","Name":"Heat","tags":[],"Class":"Fire"},{"ValueType":"Color3","type":"Property","Name":"SecondaryColor","tags":[],"Class":"Fire"},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"Fire"},{"ValueType":"float","type":"Property","Name":"size","tags":["deprecated"],"Class":"Fire"},{"Superclass":"Instance","type":"Class","Name":"FlagStandService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"FlyweightService","tags":[]},{"Superclass":"FlyweightService","type":"Class","Name":"CSGDictionaryService","tags":[]},{"Superclass":"FlyweightService","type":"Class","Name":"NonReplicatedCSGDictionaryService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Folder","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ForceField","tags":[]},{"Superclass":"Instance","type":"Class","Name":"FriendService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetBreakFriendUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetCreateFriendRequestUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetDeleteFriendRequestUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":null}],"Name":"SetEnabled","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetFriendsOnlineUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetGetFriendsUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetMakeFriendUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"FunctionalTest","tags":["deprecated"]},{"ValueType":"string","type":"Property","Name":"Description","tags":[],"Class":"FunctionalTest"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Error","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Failed","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Pass","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Passed","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Warn","tags":[],"Class":"FunctionalTest","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"GamePassService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"playerHasPassUrl","Default":null}],"Name":"SetPlayerHasPassUrl","tags":["LocalUserSecurity"],"Class":"GamePassService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"gamePassId","Default":null}],"Name":"PlayerHasPass","tags":[],"Class":"GamePassService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"GameSettings","tags":["notbrowsable"]},{"ValueType":"float","type":"Property","Name":"BubbleChatLifetime","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"BubbleChatMaxBubbles","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"ChatHistory","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"ChatScrollLength","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"CollisionSoundEnabled","tags":["deprecated"],"Class":"GameSettings"},{"ValueType":"float","type":"Property","Name":"CollisionSoundVolume","tags":["deprecated"],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"HardwareMouse","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"MaxCollisionSounds","tags":["deprecated"],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"ReportAbuseChatHistory","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"SoftwareSound","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"SoundEnabled","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"VideoCaptureEnabled","tags":[],"Class":"GameSettings"},{"ValueType":"VideoQualitySettings","type":"Property","Name":"VideoQuality","tags":[],"Class":"GameSettings"},{"Arguments":[{"Name":"recording","Type":"bool"}],"Name":"VideoRecordingChangeRequest","tags":["RobloxScriptSecurity"],"Class":"GameSettings","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"GamepadService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Geometry","tags":[]},{"Superclass":"Instance","type":"Class","Name":"GlobalDataStore","tags":[]},{"ReturnType":"Connection","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Function","Name":"callback","Default":null}],"Name":"OnUpdate","tags":[],"Class":"GlobalDataStore","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"GetAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"int","Name":"delta","Default":"1"}],"Name":"IncrementAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Function","Name":"transformFunction","Default":null}],"Name":"UpdateAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"Superclass":"GlobalDataStore","type":"Class","Name":"OrderedDataStore","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"bool","Name":"ascending","Default":null},{"Type":"int","Name":"pagesize","Default":null},{"Type":"Variant","Name":"minValue","Default":null},{"Type":"Variant","Name":"maxValue","Default":null}],"Name":"GetSortedAsync","tags":[],"Class":"OrderedDataStore","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"GroupService","tags":["notCreatable"]},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetAlliesAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetEnemiesAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"ReturnType":"Variant","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetGroupInfoAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetGroupsAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"GuiBase","tags":[]},{"Superclass":"GuiBase","type":"Class","Name":"GuiBase2d","tags":["notbrowsable"]},{"ValueType":"Vector2","type":"Property","Name":"AbsolutePosition","tags":["readonly"],"Class":"GuiBase2d"},{"ValueType":"Vector2","type":"Property","Name":"AbsoluteSize","tags":["readonly"],"Class":"GuiBase2d"},{"Superclass":"GuiBase2d","type":"Class","Name":"GuiObject","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"GuiObject"},{"ValueType":"BrickColor","type":"Property","Name":"BackgroundColor","tags":["deprecated","hidden"],"Class":"GuiObject"},{"ValueType":"Color3","type":"Property","Name":"BackgroundColor3","tags":[],"Class":"GuiObject"},{"ValueType":"float","type":"Property","Name":"BackgroundTransparency","tags":[],"Class":"GuiObject"},{"ValueType":"BrickColor","type":"Property","Name":"BorderColor","tags":["deprecated","hidden"],"Class":"GuiObject"},{"ValueType":"Color3","type":"Property","Name":"BorderColor3","tags":[],"Class":"GuiObject"},{"ValueType":"int","type":"Property","Name":"BorderSizePixel","tags":[],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"ClipsDescendants","tags":[],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"Draggable","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionDown","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionLeft","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionRight","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionUp","tags":[],"Class":"GuiObject"},{"ValueType":"UDim2","type":"Property","Name":"Position","tags":[],"Class":"GuiObject"},{"ValueType":"float","type":"Property","Name":"Rotation","tags":[],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"Selectable","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"SelectionImageObject","tags":[],"Class":"GuiObject"},{"ValueType":"UDim2","type":"Property","Name":"Size","tags":[],"Class":"GuiObject"},{"ValueType":"SizeConstraint","type":"Property","Name":"SizeConstraint","tags":[],"Class":"GuiObject"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":["hidden"],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"Visible","tags":[],"Class":"GuiObject"},{"ValueType":"int","type":"Property","Name":"ZIndex","tags":[],"Class":"GuiObject"},{"ReturnType":"bool","Arguments":[{"Type":"UDim2","Name":"endPosition","Default":null},{"Type":"EasingDirection","Name":"easingDirection","Default":"Out"},{"Type":"EasingStyle","Name":"easingStyle","Default":"Quad"},{"Type":"float","Name":"time","Default":"1"},{"Type":"bool","Name":"override","Default":"false"},{"Type":"Function","Name":"callback","Default":"nil"}],"Name":"TweenPosition","tags":[],"Class":"GuiObject","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UDim2","Name":"endSize","Default":null},{"Type":"EasingDirection","Name":"easingDirection","Default":"Out"},{"Type":"EasingStyle","Name":"easingStyle","Default":"Quad"},{"Type":"float","Name":"time","Default":"1"},{"Type":"bool","Name":"override","Default":"false"},{"Type":"Function","Name":"callback","Default":"nil"}],"Name":"TweenSize","tags":[],"Class":"GuiObject","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UDim2","Name":"endSize","Default":null},{"Type":"UDim2","Name":"endPosition","Default":null},{"Type":"EasingDirection","Name":"easingDirection","Default":"Out"},{"Type":"EasingStyle","Name":"easingStyle","Default":"Quad"},{"Type":"float","Name":"time","Default":"1"},{"Type":"bool","Name":"override","Default":"false"},{"Type":"Function","Name":"callback","Default":"nil"}],"Name":"TweenSizeAndPosition","tags":[],"Class":"GuiObject","type":"Function"},{"Arguments":[{"Name":"initialPosition","Type":"UDim2"}],"Name":"DragBegin","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"DragStopped","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"}],"Name":"InputBegan","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"}],"Name":"InputChanged","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"}],"Name":"InputEnded","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseEnter","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseLeave","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseMoved","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseWheelBackward","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseWheelForward","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[],"Name":"SelectionGained","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[],"Name":"SelectionLost","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchLongPress","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"totalTranslation","Type":"Vector2"},{"Name":"velocity","Type":"Vector2"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchPan","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"scale","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchPinch","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"rotation","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchRotate","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"swipeDirection","Type":"SwipeDirection"},{"Name":"numberOfTouches","Type":"int"}],"Name":"TouchSwipe","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"}],"Name":"TouchTap","tags":[],"Class":"GuiObject","type":"Event"},{"Superclass":"GuiObject","type":"Class","Name":"Frame","tags":[]},{"ValueType":"FrameStyle","type":"Property","Name":"Style","tags":[],"Class":"Frame"},{"Superclass":"GuiObject","type":"Class","Name":"GuiButton","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"AutoButtonColor","tags":[],"Class":"GuiButton"},{"ValueType":"bool","type":"Property","Name":"Modal","tags":[],"Class":"GuiButton"},{"ValueType":"bool","type":"Property","Name":"Selected","tags":[],"Class":"GuiButton"},{"ValueType":"ButtonStyle","type":"Property","Name":"Style","tags":[],"Class":"GuiButton"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"verb","Default":null}],"Name":"SetVerb","tags":["RobloxScriptSecurity"],"Class":"GuiButton","type":"Function"},{"Arguments":[],"Name":"MouseButton1Click","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton1Down","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton1Up","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[],"Name":"MouseButton2Click","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton2Down","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton2Up","tags":[],"Class":"GuiButton","type":"Event"},{"Superclass":"GuiButton","type":"Class","Name":"ImageButton","tags":[]},{"ValueType":"Content","type":"Property","Name":"Image","tags":[],"Class":"ImageButton"},{"ValueType":"Color3","type":"Property","Name":"ImageColor3","tags":[],"Class":"ImageButton"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectOffset","tags":[],"Class":"ImageButton"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectSize","tags":[],"Class":"ImageButton"},{"ValueType":"float","type":"Property","Name":"ImageTransparency","tags":[],"Class":"ImageButton"},{"ValueType":"ScaleType","type":"Property","Name":"ScaleType","tags":[],"Class":"ImageButton"},{"ValueType":"Rect2D","type":"Property","Name":"SliceCenter","tags":[],"Class":"ImageButton"},{"Superclass":"GuiButton","type":"Class","Name":"TextButton","tags":[]},{"ValueType":"Font","type":"Property","Name":"Font","tags":[],"Class":"TextButton"},{"ValueType":"FontSize","type":"Property","Name":"FontSize","tags":[],"Class":"TextButton"},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"TextButton"},{"ValueType":"Vector2","type":"Property","Name":"TextBounds","tags":["readonly"],"Class":"TextButton"},{"ValueType":"BrickColor","type":"Property","Name":"TextColor","tags":["deprecated","hidden"],"Class":"TextButton"},{"ValueType":"Color3","type":"Property","Name":"TextColor3","tags":[],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextFits","tags":["readonly"],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextScaled","tags":[],"Class":"TextButton"},{"ValueType":"Color3","type":"Property","Name":"TextStrokeColor3","tags":[],"Class":"TextButton"},{"ValueType":"float","type":"Property","Name":"TextStrokeTransparency","tags":[],"Class":"TextButton"},{"ValueType":"float","type":"Property","Name":"TextTransparency","tags":[],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextWrap","tags":["deprecated"],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextWrapped","tags":[],"Class":"TextButton"},{"ValueType":"TextXAlignment","type":"Property","Name":"TextXAlignment","tags":[],"Class":"TextButton"},{"ValueType":"TextYAlignment","type":"Property","Name":"TextYAlignment","tags":[],"Class":"TextButton"},{"Superclass":"GuiObject","type":"Class","Name":"GuiLabel","tags":[]},{"Superclass":"GuiLabel","type":"Class","Name":"ImageLabel","tags":[]},{"ValueType":"Content","type":"Property","Name":"Image","tags":[],"Class":"ImageLabel"},{"ValueType":"Color3","type":"Property","Name":"ImageColor3","tags":[],"Class":"ImageLabel"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectOffset","tags":[],"Class":"ImageLabel"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectSize","tags":[],"Class":"ImageLabel"},{"ValueType":"float","type":"Property","Name":"ImageTransparency","tags":[],"Class":"ImageLabel"},{"ValueType":"ScaleType","type":"Property","Name":"ScaleType","tags":[],"Class":"ImageLabel"},{"ValueType":"Rect2D","type":"Property","Name":"SliceCenter","tags":[],"Class":"ImageLabel"},{"Superclass":"GuiLabel","type":"Class","Name":"TextLabel","tags":[]},{"ValueType":"Font","type":"Property","Name":"Font","tags":[],"Class":"TextLabel"},{"ValueType":"FontSize","type":"Property","Name":"FontSize","tags":[],"Class":"TextLabel"},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"TextLabel"},{"ValueType":"Vector2","type":"Property","Name":"TextBounds","tags":["readonly"],"Class":"TextLabel"},{"ValueType":"BrickColor","type":"Property","Name":"TextColor","tags":["deprecated","hidden"],"Class":"TextLabel"},{"ValueType":"Color3","type":"Property","Name":"TextColor3","tags":[],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextFits","tags":["readonly"],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextScaled","tags":[],"Class":"TextLabel"},{"ValueType":"Color3","type":"Property","Name":"TextStrokeColor3","tags":[],"Class":"TextLabel"},{"ValueType":"float","type":"Property","Name":"TextStrokeTransparency","tags":[],"Class":"TextLabel"},{"ValueType":"float","type":"Property","Name":"TextTransparency","tags":[],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextWrap","tags":["deprecated"],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextWrapped","tags":[],"Class":"TextLabel"},{"ValueType":"TextXAlignment","type":"Property","Name":"TextXAlignment","tags":[],"Class":"TextLabel"},{"ValueType":"TextYAlignment","type":"Property","Name":"TextYAlignment","tags":[],"Class":"TextLabel"},{"Superclass":"GuiObject","type":"Class","Name":"Scale9Frame","tags":[]},{"ValueType":"Vector2int16","type":"Property","Name":"ScaleEdgeSize","tags":[],"Class":"Scale9Frame"},{"ValueType":"string","type":"Property","Name":"SlicePrefix","tags":[],"Class":"Scale9Frame"},{"Superclass":"GuiObject","type":"Class","Name":"ScrollingFrame","tags":[]},{"ValueType":"Vector2","type":"Property","Name":"AbsoluteWindowSize","tags":["readonly"],"Class":"ScrollingFrame"},{"ValueType":"Content","type":"Property","Name":"BottomImage","tags":[],"Class":"ScrollingFrame"},{"ValueType":"Vector2","type":"Property","Name":"CanvasPosition","tags":[],"Class":"ScrollingFrame"},{"ValueType":"UDim2","type":"Property","Name":"CanvasSize","tags":[],"Class":"ScrollingFrame"},{"ValueType":"Content","type":"Property","Name":"MidImage","tags":[],"Class":"ScrollingFrame"},{"ValueType":"int","type":"Property","Name":"ScrollBarThickness","tags":[],"Class":"ScrollingFrame"},{"ValueType":"bool","type":"Property","Name":"ScrollingEnabled","tags":[],"Class":"ScrollingFrame"},{"ValueType":"Content","type":"Property","Name":"TopImage","tags":[],"Class":"ScrollingFrame"},{"Superclass":"GuiObject","type":"Class","Name":"TextBox","tags":[]},{"ValueType":"bool","type":"Property","Name":"ClearTextOnFocus","tags":[],"Class":"TextBox"},{"ValueType":"Font","type":"Property","Name":"Font","tags":[],"Class":"TextBox"},{"ValueType":"FontSize","type":"Property","Name":"FontSize","tags":[],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"MultiLine","tags":[],"Class":"TextBox"},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"TextBox"},{"ValueType":"Vector2","type":"Property","Name":"TextBounds","tags":["readonly"],"Class":"TextBox"},{"ValueType":"BrickColor","type":"Property","Name":"TextColor","tags":["deprecated","hidden"],"Class":"TextBox"},{"ValueType":"Color3","type":"Property","Name":"TextColor3","tags":[],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextFits","tags":["readonly"],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextScaled","tags":[],"Class":"TextBox"},{"ValueType":"Color3","type":"Property","Name":"TextStrokeColor3","tags":[],"Class":"TextBox"},{"ValueType":"float","type":"Property","Name":"TextStrokeTransparency","tags":[],"Class":"TextBox"},{"ValueType":"float","type":"Property","Name":"TextTransparency","tags":[],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextWrap","tags":["deprecated"],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextWrapped","tags":[],"Class":"TextBox"},{"ValueType":"TextXAlignment","type":"Property","Name":"TextXAlignment","tags":[],"Class":"TextBox"},{"ValueType":"TextYAlignment","type":"Property","Name":"TextYAlignment","tags":[],"Class":"TextBox"},{"ReturnType":"void","Arguments":[],"Name":"CaptureFocus","tags":[],"Class":"TextBox","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsFocused","tags":[],"Class":"TextBox","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ReleaseFocus","tags":[],"Class":"TextBox","type":"Function"},{"Arguments":[{"Name":"enterPressed","Type":"bool"},{"Name":"inputThatCausedFocusLoss","Type":"Instance"}],"Name":"FocusLost","tags":[],"Class":"TextBox","type":"Event"},{"Arguments":[],"Name":"Focused","tags":[],"Class":"TextBox","type":"Event"},{"Superclass":"GuiBase2d","type":"Class","Name":"LayerCollector","tags":[]},{"Superclass":"LayerCollector","type":"Class","Name":"BillboardGui","tags":[]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"BillboardGui"},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"BillboardGui"},{"ValueType":"bool","type":"Property","Name":"AlwaysOnTop","tags":[],"Class":"BillboardGui"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"BillboardGui"},{"ValueType":"Vector3","type":"Property","Name":"ExtentsOffset","tags":[],"Class":"BillboardGui"},{"ValueType":"Object","type":"Property","Name":"PlayerToHideFrom","tags":[],"Class":"BillboardGui"},{"ValueType":"UDim2","type":"Property","Name":"Size","tags":[],"Class":"BillboardGui"},{"ValueType":"Vector2","type":"Property","Name":"SizeOffset","tags":[],"Class":"BillboardGui"},{"ValueType":"Vector3","type":"Property","Name":"StudsOffset","tags":[],"Class":"BillboardGui"},{"Superclass":"LayerCollector","type":"Class","Name":"ScreenGui","tags":[]},{"Superclass":"ScreenGui","type":"Class","Name":"GuiMain","tags":["deprecated"]},{"Superclass":"LayerCollector","type":"Class","Name":"SurfaceGui","tags":[]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"SurfaceGui"},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"SurfaceGui"},{"ValueType":"bool","type":"Property","Name":"AlwaysOnTop","tags":[],"Class":"SurfaceGui"},{"ValueType":"Vector2","type":"Property","Name":"CanvasSize","tags":[],"Class":"SurfaceGui"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"SurfaceGui"},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"SurfaceGui"},{"ValueType":"float","type":"Property","Name":"ToolPunchThroughDistance","tags":[],"Class":"SurfaceGui"},{"Superclass":"GuiBase","type":"Class","Name":"GuiBase3d","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"Color","tags":["deprecated","hidden"],"Class":"GuiBase3d"},{"ValueType":"Color3","type":"Property","Name":"Color3","tags":[],"Class":"GuiBase3d"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":[],"Class":"GuiBase3d"},{"ValueType":"bool","type":"Property","Name":"Visible","tags":[],"Class":"GuiBase3d"},{"Superclass":"GuiBase3d","type":"Class","Name":"FloorWire","tags":["deprecated"]},{"ValueType":"float","type":"Property","Name":"CycleOffset","tags":[],"Class":"FloorWire"},{"ValueType":"Object","type":"Property","Name":"From","tags":[],"Class":"FloorWire"},{"ValueType":"float","type":"Property","Name":"StudsBetweenTextures","tags":[],"Class":"FloorWire"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":[],"Class":"FloorWire"},{"ValueType":"Vector2","type":"Property","Name":"TextureSize","tags":[],"Class":"FloorWire"},{"ValueType":"Object","type":"Property","Name":"To","tags":[],"Class":"FloorWire"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":[],"Class":"FloorWire"},{"ValueType":"float","type":"Property","Name":"WireRadius","tags":[],"Class":"FloorWire"},{"Superclass":"GuiBase3d","type":"Class","Name":"PVAdornment","tags":[]},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"PVAdornment"},{"Superclass":"PVAdornment","type":"Class","Name":"HandleAdornment","tags":[]},{"ValueType":"bool","type":"Property","Name":"AlwaysOnTop","tags":[],"Class":"HandleAdornment"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"HandleAdornment"},{"ValueType":"Vector3","type":"Property","Name":"SizeRelativeOffset","tags":[],"Class":"HandleAdornment"},{"ValueType":"int","type":"Property","Name":"ZIndex","tags":[],"Class":"HandleAdornment"},{"Arguments":[],"Name":"MouseButton1Down","tags":[],"Class":"HandleAdornment","type":"Event"},{"Arguments":[],"Name":"MouseButton1Up","tags":[],"Class":"HandleAdornment","type":"Event"},{"Arguments":[],"Name":"MouseEnter","tags":[],"Class":"HandleAdornment","type":"Event"},{"Arguments":[],"Name":"MouseLeave","tags":[],"Class":"HandleAdornment","type":"Event"},{"Superclass":"HandleAdornment","type":"Class","Name":"BoxHandleAdornment","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Size","tags":[],"Class":"BoxHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"ConeHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Height","tags":[],"Class":"ConeHandleAdornment"},{"ValueType":"float","type":"Property","Name":"Radius","tags":[],"Class":"ConeHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"CylinderHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Height","tags":[],"Class":"CylinderHandleAdornment"},{"ValueType":"float","type":"Property","Name":"Radius","tags":[],"Class":"CylinderHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"ImageHandleAdornment","tags":[]},{"ValueType":"Content","type":"Property","Name":"Image","tags":[],"Class":"ImageHandleAdornment"},{"ValueType":"Vector2","type":"Property","Name":"Size","tags":[],"Class":"ImageHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"LineHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Length","tags":[],"Class":"LineHandleAdornment"},{"ValueType":"float","type":"Property","Name":"Thickness","tags":[],"Class":"LineHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"SphereHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Radius","tags":[],"Class":"SphereHandleAdornment"},{"Superclass":"PVAdornment","type":"Class","Name":"SelectionBox","tags":[]},{"ValueType":"float","type":"Property","Name":"LineThickness","tags":[],"Class":"SelectionBox"},{"ValueType":"BrickColor","type":"Property","Name":"SurfaceColor","tags":["deprecated","hidden"],"Class":"SelectionBox"},{"ValueType":"Color3","type":"Property","Name":"SurfaceColor3","tags":[],"Class":"SelectionBox"},{"ValueType":"float","type":"Property","Name":"SurfaceTransparency","tags":[],"Class":"SelectionBox"},{"Superclass":"PVAdornment","type":"Class","Name":"SelectionSphere","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"SurfaceColor","tags":["deprecated","hidden"],"Class":"SelectionSphere"},{"ValueType":"Color3","type":"Property","Name":"SurfaceColor3","tags":[],"Class":"SelectionSphere"},{"ValueType":"float","type":"Property","Name":"SurfaceTransparency","tags":[],"Class":"SelectionSphere"},{"Superclass":"GuiBase3d","type":"Class","Name":"PartAdornment","tags":[]},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"PartAdornment"},{"Superclass":"PartAdornment","type":"Class","Name":"HandlesBase","tags":[]},{"Superclass":"HandlesBase","type":"Class","Name":"ArcHandles","tags":[]},{"ValueType":"Axes","type":"Property","Name":"Axes","tags":[],"Class":"ArcHandles"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseButton1Down","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseButton1Up","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"},{"Name":"relativeAngle","Type":"float"},{"Name":"deltaRadius","Type":"float"}],"Name":"MouseDrag","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseEnter","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseLeave","tags":[],"Class":"ArcHandles","type":"Event"},{"Superclass":"HandlesBase","type":"Class","Name":"Handles","tags":[]},{"ValueType":"Faces","type":"Property","Name":"Faces","tags":[],"Class":"Handles"},{"ValueType":"HandlesStyle","type":"Property","Name":"Style","tags":[],"Class":"Handles"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseButton1Down","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseButton1Up","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"},{"Name":"distance","Type":"float"}],"Name":"MouseDrag","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseEnter","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseLeave","tags":[],"Class":"Handles","type":"Event"},{"Superclass":"PartAdornment","type":"Class","Name":"SurfaceSelection","tags":[]},{"ValueType":"NormalId","type":"Property","Name":"TargetSurface","tags":[],"Class":"SurfaceSelection"},{"Superclass":"GuiBase3d","type":"Class","Name":"SelectionLasso","tags":[]},{"ValueType":"Object","type":"Property","Name":"Humanoid","tags":[],"Class":"SelectionLasso"},{"Superclass":"SelectionLasso","type":"Class","Name":"SelectionPartLasso","tags":["deprecated"]},{"ValueType":"Object","type":"Property","Name":"Part","tags":[],"Class":"SelectionPartLasso"},{"Superclass":"SelectionLasso","type":"Class","Name":"SelectionPointLasso","tags":["deprecated"]},{"ValueType":"Vector3","type":"Property","Name":"Point","tags":[],"Class":"SelectionPointLasso"},{"Superclass":"GuiBase3d","type":"Class","Name":"TextureTrail","tags":["deprecated"]},{"ValueType":"float","type":"Property","Name":"CycleOffset","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"Object","type":"Property","Name":"From","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"float","type":"Property","Name":"StudsBetweenTextures","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"Vector2","type":"Property","Name":"TextureSize","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"Object","type":"Property","Name":"To","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"Superclass":"Instance","type":"Class","Name":"GuiItem","tags":[]},{"Superclass":"GuiItem","type":"Class","Name":"Backpack","tags":[]},{"Superclass":"GuiItem","type":"Class","Name":"BackpackItem","tags":[]},{"ValueType":"Content","type":"Property","Name":"TextureId","tags":[],"Class":"BackpackItem"},{"Superclass":"BackpackItem","type":"Class","Name":"HopperBin","tags":["deprecated"]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"HopperBin"},{"ValueType":"BinType","type":"Property","Name":"BinType","tags":[],"Class":"HopperBin"},{"ReturnType":"void","Arguments":[],"Name":"Disable","tags":["RobloxScriptSecurity"],"Class":"HopperBin","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ToggleSelect","tags":["RobloxScriptSecurity"],"Class":"HopperBin","type":"Function"},{"Arguments":[],"Name":"Deselected","tags":[],"Class":"HopperBin","type":"Event"},{"Arguments":[{"Name":"mouse","Type":"Instance"}],"Name":"Selected","tags":[],"Class":"HopperBin","type":"Event"},{"Superclass":"BackpackItem","type":"Class","Name":"Tool","tags":[]},{"ValueType":"bool","type":"Property","Name":"CanBeDropped","tags":[],"Class":"Tool"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Tool"},{"ValueType":"CoordinateFrame","type":"Property","Name":"Grip","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripForward","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripPos","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripRight","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripUp","tags":[],"Class":"Tool"},{"ValueType":"bool","type":"Property","Name":"ManualActivationOnly","tags":[],"Class":"Tool"},{"ValueType":"bool","type":"Property","Name":"RequiresHandle","tags":[],"Class":"Tool"},{"ValueType":"string","type":"Property","Name":"ToolTip","tags":[],"Class":"Tool"},{"ReturnType":"void","Arguments":[],"Name":"Activate","tags":[],"Class":"Tool","type":"Function"},{"Arguments":[],"Name":"Activated","tags":[],"Class":"Tool","type":"Event"},{"Arguments":[],"Name":"Deactivated","tags":[],"Class":"Tool","type":"Event"},{"Arguments":[{"Name":"mouse","Type":"Instance"}],"Name":"Equipped","tags":[],"Class":"Tool","type":"Event"},{"Arguments":[],"Name":"Unequipped","tags":[],"Class":"Tool","type":"Event"},{"Superclass":"Tool","type":"Class","Name":"Flag","tags":["deprecated"]},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"Flag"},{"Superclass":"GuiItem","type":"Class","Name":"ButtonBindingWidget","tags":[]},{"Superclass":"GuiItem","type":"Class","Name":"GuiRoot","tags":["notCreatable"]},{"Superclass":"GuiItem","type":"Class","Name":"Hopper","tags":["deprecated"]},{"Superclass":"GuiItem","type":"Class","Name":"StarterPack","tags":[]},{"Superclass":"Instance","type":"Class","Name":"GuiService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"AutoSelectGuiEnabled","tags":[],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"CoreGuiNavigationEnabled","tags":[],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"GuiNavigationEnabled","tags":[],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"IsModalDialog","tags":["deprecated","readonly"],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"IsWindows","tags":["deprecated","readonly"],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"MenuIsOpen","tags":["readonly"],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"ScreenGuiEnabled","tags":["RobloxScriptSecurity"],"Class":"GuiService"},{"ValueType":"Object","type":"Property","Name":"SelectedCoreObject","tags":["RobloxScriptSecurity"],"Class":"GuiService"},{"ValueType":"Object","type":"Property","Name":"SelectedObject","tags":[],"Class":"GuiService"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"dialog","Default":null},{"Type":"CenterDialogType","Name":"centerDialogType","Default":null},{"Type":"Function","Name":"showFunction","Default":null},{"Type":"Function","Name":"hideFunction","Default":null}],"Name":"AddCenterDialog","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"AddKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"selectionName","Default":null},{"Type":"Instance","Name":"selectionParent","Default":null}],"Name":"AddSelectionParent","tags":[],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"selectionName","Default":null},{"Type":"Tuple","Name":"selections","Default":null}],"Name":"AddSelectionTuple","tags":[],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"SpecialKey","Name":"key","Default":null}],"Name":"AddSpecialKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetBrickCount","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"GetClosestDialogToPosition","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetErrorMessage","tags":["RobloxScriptSecurity","deprecated"],"Class":"GuiService","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetUiMessage","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsTenFootInterface","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"OpenBrowserWindow","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"dialog","Default":null}],"Name":"RemoveCenterDialog","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"RemoveKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"selectionName","Default":null}],"Name":"RemoveSelectionGroup","tags":[],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"SpecialKey","Name":"key","Default":null}],"Name":"RemoveSpecialKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"errorMessage","Default":null}],"Name":"SetErrorMessage","tags":["LocalUserSecurity","deprecated"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"x1","Default":null},{"Type":"int","Name":"y1","Default":null},{"Type":"int","Name":"x2","Default":null},{"Type":"int","Name":"y2","Default":null}],"Name":"SetGlobalGuiInset","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"open","Default":null}],"Name":"SetMenuIsOpen","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UiMessageType","Name":"msgType","Default":null},{"Type":"string","Name":"uiMessage","Default":null}],"Name":"SetUiMessage","tags":["LocalUserSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"input","Default":null}],"Name":"ShowStatsBasedOnInputString","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ToggleFullscreen","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"Vector2","Arguments":[],"Name":"GetScreenResolution","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"YieldFunction"},{"Arguments":[],"Name":"BrowserWindowClosed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"newErrorMessage","Type":"string"}],"Name":"ErrorMessageChanged","tags":["RobloxScriptSecurity","deprecated"],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"EscapeKeyPressed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"},{"Name":"modifiers","Type":"string"}],"Name":"KeyPressed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"MenuClosed","tags":[],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"MenuOpened","tags":[],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"ShowLeaveConfirmation","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"key","Type":"SpecialKey"},{"Name":"modifiers","Type":"string"}],"Name":"SpecialKeyPressed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"msgType","Type":"UiMessageType"},{"Name":"newUiMessage","Type":"string"}],"Name":"UiMessageChanged","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"ReturnType":"void","Arguments":[{"Name":"title","Type":"string"},{"Name":"text","Type":"string"}],"Name":"SendCoreUiNotification","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"GuidRegistryService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"HapticService","tags":["notCreatable"]},{"ReturnType":"Tuple","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null},{"Type":"VibrationMotor","Name":"vibrationMotor","Default":null}],"Name":"GetMotor","tags":[],"Class":"HapticService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null},{"Type":"VibrationMotor","Name":"vibrationMotor","Default":null}],"Name":"IsMotorSupported","tags":[],"Class":"HapticService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null}],"Name":"IsVibrationSupported","tags":[],"Class":"HapticService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null},{"Type":"VibrationMotor","Name":"vibrationMotor","Default":null},{"Type":"Tuple","Name":"vibrationValues","Default":null}],"Name":"SetMotor","tags":[],"Class":"HapticService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"HttpRbxApiService","tags":["notCreatable"]},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"apiUrlPath","Default":null},{"Type":"bool","Name":"useHttps","Default":"true"},{"Type":"ThrottlingPriority","Name":"priority","Default":"Default"}],"Name":"GetAsync","tags":["RobloxScriptSecurity"],"Class":"HttpRbxApiService","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"apiUrlPath","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"bool","Name":"useHttps","Default":"true"},{"Type":"ThrottlingPriority","Name":"priority","Default":"Default"},{"Type":"HttpContentType","Name":"content_type","Default":"ApplicationJson"}],"Name":"PostAsync","tags":["RobloxScriptSecurity"],"Class":"HttpRbxApiService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"HttpService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"HttpEnabled","tags":["LocalUserSecurity"],"Class":"HttpService"},{"ReturnType":"string","Arguments":[{"Type":"bool","Name":"wrapInCurlyBraces","Default":"true"}],"Name":"GenerateGUID","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"input","Default":null}],"Name":"JSONDecode","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"Variant","Name":"input","Default":null}],"Name":"JSONEncode","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"input","Default":null}],"Name":"UrlEncode","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"bool","Name":"nocache","Default":"false"}],"Name":"GetAsync","tags":[],"Class":"HttpService","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"HttpContentType","Name":"content_type","Default":"ApplicationJson"},{"Type":"bool","Name":"compress","Default":"false"}],"Name":"PostAsync","tags":[],"Class":"HttpService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"Humanoid","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoJumpEnabled","tags":[],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"AutoRotate","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"CameraOffset","tags":[],"Class":"Humanoid"},{"ValueType":"HumanoidDisplayDistanceType","type":"Property","Name":"DisplayDistanceType","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"Health","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"HealthDisplayDistance","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"HipHeight","tags":[],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"Jump","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"JumpPower","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"LeftLeg","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"MaxHealth","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"MaxSlopeAngle","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"MoveDirection","tags":["readonly"],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"NameDisplayDistance","tags":[],"Class":"Humanoid"},{"ValueType":"NameOcclusion","type":"Property","Name":"NameOcclusion","tags":[],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"PlatformStand","tags":[],"Class":"Humanoid"},{"ValueType":"HumanoidRigType","type":"Property","Name":"RigType","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"RightLeg","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"SeatPart","tags":["readonly"],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"Sit","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"TargetPoint","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"Torso","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"WalkSpeed","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"WalkToPart","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"WalkToPoint","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"maxHealth","tags":["deprecated"],"Class":"Humanoid"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"status","Default":null}],"Name":"AddCustomStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Status","Name":"status","Default":"Poison"}],"Name":"AddStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"HumanoidStateType","Name":"state","Default":"None"}],"Name":"ChangeState","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"tool","Default":null}],"Name":"EquipTool","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetPlayingAnimationTracks","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"HumanoidStateType","Arguments":[],"Name":"GetState","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"HumanoidStateType","Name":"state","Default":null}],"Name":"GetStateEnabled","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetStatuses","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"status","Default":null}],"Name":"HasCustomStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Status","Name":"status","Default":"Poison"}],"Name":"HasStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"LoadAnimation","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"moveDirection","Default":null},{"Type":"bool","Name":"relativeToCamera","Default":"false"}],"Name":"Move","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"location","Default":null},{"Type":"Instance","Name":"part","Default":"nil"}],"Name":"MoveTo","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"status","Default":null}],"Name":"RemoveCustomStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Status","Name":"status","Default":"Poison"}],"Name":"RemoveStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetClickToWalkEnabled","tags":["RobloxScriptSecurity"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"HumanoidStateType","Name":"state","Default":null},{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetStateEnabled","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"amount","Default":null}],"Name":"TakeDamage","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"UnequipTools","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"loadAnimation","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"amount","Default":null}],"Name":"takeDamage","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"Arguments":[{"Name":"animationTrack","Type":"Instance"}],"Name":"AnimationPlayed","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"speed","Type":"float"}],"Name":"Climbing","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"string"}],"Name":"CustomStatusAdded","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"string"}],"Name":"CustomStatusRemoved","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[],"Name":"Died","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"FallingDown","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"FreeFalling","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"GettingUp","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"health","Type":"float"}],"Name":"HealthChanged","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"Jumping","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"reached","Type":"bool"}],"Name":"MoveToFinished","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"PlatformStanding","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"Ragdoll","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"speed","Type":"float"}],"Name":"Running","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"},{"Name":"currentSeatPart","Type":"Instance"}],"Name":"Seated","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"old","Type":"HumanoidStateType"},{"Name":"new","Type":"HumanoidStateType"}],"Name":"StateChanged","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"state","Type":"HumanoidStateType"},{"Name":"isEnabled","Type":"bool"}],"Name":"StateEnabledChanged","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"Status"}],"Name":"StatusAdded","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"Status"}],"Name":"StatusRemoved","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"Strafing","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"speed","Type":"float"}],"Name":"Swimming","tags":[],"Class":"Humanoid","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"InputObject","tags":["notCreatable"]},{"ValueType":"Vector3","type":"Property","Name":"Delta","tags":[],"Class":"InputObject"},{"ValueType":"KeyCode","type":"Property","Name":"KeyCode","tags":[],"Class":"InputObject"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"InputObject"},{"ValueType":"UserInputState","type":"Property","Name":"UserInputState","tags":[],"Class":"InputObject"},{"ValueType":"UserInputType","type":"Property","Name":"UserInputType","tags":[],"Class":"InputObject"},{"Superclass":"Instance","type":"Class","Name":"InsertService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"AllowInsertFreeModels","tags":[],"Class":"InsertService"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"ApproveAssetId","tags":["deprecated"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetVersionId","Default":null}],"Name":"ApproveAssetVersionId","tags":["deprecated"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"instance","Default":null}],"Name":"Insert","tags":["deprecated"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":null},{"Type":"bool","Name":"user","Default":"false"}],"Name":"SetAdvancedResults","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"assetUrl","Default":null}],"Name":"SetAssetUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"assetVersionUrl","Default":null}],"Name":"SetAssetVersionUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"baseSetsUrl","Default":null}],"Name":"SetBaseCategoryUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"baseSetsUrl","Default":null}],"Name":"SetBaseSetsUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"collectionUrl","Default":null}],"Name":"SetCollectionUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"freeDecalUrl","Default":null}],"Name":"SetFreeDecalUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"freeModelUrl","Default":null}],"Name":"SetFreeModelUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"trustLevel","Default":null}],"Name":"SetTrustLevel","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"userSetsUrl","Default":null}],"Name":"SetUserCategoryUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"userSetsUrl","Default":null}],"Name":"SetUserSetsUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetBaseCategories","tags":["deprecated"],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[],"Name":"GetBaseSets","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"categoryId","Default":null}],"Name":"GetCollection","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"string","Name":"searchText","Default":null},{"Type":"int","Name":"pageNum","Default":null}],"Name":"GetFreeDecals","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"string","Name":"searchText","Default":null},{"Type":"int","Name":"pageNum","Default":null}],"Name":"GetFreeModels","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"GetLatestAssetVersionAsync","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetUserCategories","tags":["deprecated"],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetUserSets","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"LoadAsset","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetVersionId","Default":null}],"Name":"LoadAssetVersion","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"loadAsset","tags":["deprecated"],"Class":"InsertService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"InstancePacketCache","tags":[]},{"Superclass":"Instance","type":"Class","Name":"IntConstrainedValue","tags":[]},{"ValueType":"int","type":"Property","Name":"ConstrainedValue","tags":["hidden"],"Class":"IntConstrainedValue"},{"ValueType":"int","type":"Property","Name":"MaxValue","tags":[],"Class":"IntConstrainedValue"},{"ValueType":"int","type":"Property","Name":"MinValue","tags":[],"Class":"IntConstrainedValue"},{"ValueType":"int","type":"Property","Name":"Value","tags":[],"Class":"IntConstrainedValue"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"Changed","tags":[],"Class":"IntConstrainedValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"changed","tags":["deprecated"],"Class":"IntConstrainedValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"IntValue","tags":[]},{"ValueType":"int","type":"Property","Name":"Value","tags":[],"Class":"IntValue"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"Changed","tags":[],"Class":"IntValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"changed","tags":["deprecated"],"Class":"IntValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"JointInstance","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"C0","tags":[],"Class":"JointInstance"},{"ValueType":"CoordinateFrame","type":"Property","Name":"C1","tags":[],"Class":"JointInstance"},{"ValueType":"Object","type":"Property","Name":"Part0","tags":[],"Class":"JointInstance"},{"ValueType":"Object","type":"Property","Name":"Part1","tags":[],"Class":"JointInstance"},{"ValueType":"Object","type":"Property","Name":"part1","tags":["deprecated","hidden"],"Class":"JointInstance"},{"Superclass":"JointInstance","type":"Class","Name":"DynamicRotate","tags":[]},{"ValueType":"float","type":"Property","Name":"BaseAngle","tags":[],"Class":"DynamicRotate"},{"Superclass":"DynamicRotate","type":"Class","Name":"RotateP","tags":[]},{"Superclass":"DynamicRotate","type":"Class","Name":"RotateV","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Glue","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"F0","tags":[],"Class":"Glue"},{"ValueType":"Vector3","type":"Property","Name":"F1","tags":[],"Class":"Glue"},{"ValueType":"Vector3","type":"Property","Name":"F2","tags":[],"Class":"Glue"},{"ValueType":"Vector3","type":"Property","Name":"F3","tags":[],"Class":"Glue"},{"Superclass":"JointInstance","type":"Class","Name":"ManualSurfaceJointInstance","tags":[]},{"Superclass":"ManualSurfaceJointInstance","type":"Class","Name":"ManualGlue","tags":[]},{"Superclass":"ManualSurfaceJointInstance","type":"Class","Name":"ManualWeld","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Motor","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentAngle","tags":[],"Class":"Motor"},{"ValueType":"float","type":"Property","Name":"DesiredAngle","tags":[],"Class":"Motor"},{"ValueType":"float","type":"Property","Name":"MaxVelocity","tags":[],"Class":"Motor"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"value","Default":null}],"Name":"SetDesiredAngle","tags":[],"Class":"Motor","type":"Function"},{"Superclass":"Motor","type":"Class","Name":"Motor6D","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Rotate","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Snap","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"VelocityMotor","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentAngle","tags":[],"Class":"VelocityMotor"},{"ValueType":"float","type":"Property","Name":"DesiredAngle","tags":[],"Class":"VelocityMotor"},{"ValueType":"Object","type":"Property","Name":"Hole","tags":[],"Class":"VelocityMotor"},{"ValueType":"float","type":"Property","Name":"MaxVelocity","tags":[],"Class":"VelocityMotor"},{"Superclass":"JointInstance","type":"Class","Name":"Weld","tags":[]},{"Superclass":"Instance","type":"Class","Name":"JointsService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[],"Name":"ClearJoinAfterMoveJoints","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"CreateJoinAfterMoveJoints","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"joinInstance","Default":null}],"Name":"SetJoinAfterMoveInstance","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"joinTarget","Default":null}],"Name":"SetJoinAfterMoveTarget","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ShowPermissibleJoints","tags":[],"Class":"JointsService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Keyframe","tags":[]},{"ValueType":"float","type":"Property","Name":"Time","tags":[],"Class":"Keyframe"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"AddPose","tags":[],"Class":"Keyframe","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetPoses","tags":[],"Class":"Keyframe","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"RemovePose","tags":[],"Class":"Keyframe","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"KeyframeSequence","tags":[]},{"ValueType":"bool","type":"Property","Name":"Loop","tags":[],"Class":"KeyframeSequence"},{"ValueType":"AnimationPriority","type":"Property","Name":"Priority","tags":[],"Class":"KeyframeSequence"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"keyframe","Default":null}],"Name":"AddKeyframe","tags":[],"Class":"KeyframeSequence","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetKeyframes","tags":[],"Class":"KeyframeSequence","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"keyframe","Default":null}],"Name":"RemoveKeyframe","tags":[],"Class":"KeyframeSequence","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"KeyframeSequenceProvider","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"Content","Name":"assetId","Default":null}],"Name":"GetKeyframeSequence","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetId","Default":null},{"Type":"bool","Name":"useCache","Default":null}],"Name":"GetKeyframeSequenceById","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Content","Arguments":[{"Type":"Instance","Name":"keyframeSequence","Default":null}],"Name":"RegisterActiveKeyframeSequence","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Content","Arguments":[{"Type":"Instance","Name":"keyframeSequence","Default":null}],"Name":"RegisterKeyframeSequence","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"page","Default":"1"}],"Name":"GetAnimations","tags":[],"Class":"KeyframeSequenceProvider","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"Light","tags":[]},{"ValueType":"float","type":"Property","Name":"Brightness","tags":[],"Class":"Light"},{"ValueType":"Color3","type":"Property","Name":"Color","tags":[],"Class":"Light"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Light"},{"ValueType":"bool","type":"Property","Name":"Shadows","tags":[],"Class":"Light"},{"Superclass":"Light","type":"Class","Name":"PointLight","tags":[]},{"ValueType":"float","type":"Property","Name":"Range","tags":[],"Class":"PointLight"},{"Superclass":"Light","type":"Class","Name":"SpotLight","tags":[]},{"ValueType":"float","type":"Property","Name":"Angle","tags":[],"Class":"SpotLight"},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"SpotLight"},{"ValueType":"float","type":"Property","Name":"Range","tags":[],"Class":"SpotLight"},{"Superclass":"Light","type":"Class","Name":"SurfaceLight","tags":[]},{"ValueType":"float","type":"Property","Name":"Angle","tags":[],"Class":"SurfaceLight"},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"SurfaceLight"},{"ValueType":"float","type":"Property","Name":"Range","tags":[],"Class":"SurfaceLight"},{"Superclass":"Instance","type":"Class","Name":"Lighting","tags":["notCreatable"]},{"ValueType":"Color3","type":"Property","Name":"Ambient","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"Brightness","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"ColorShift_Bottom","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"ColorShift_Top","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"FogColor","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"FogEnd","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"FogStart","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"GeographicLatitude","tags":[],"Class":"Lighting"},{"ValueType":"bool","type":"Property","Name":"GlobalShadows","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"OutdoorAmbient","tags":[],"Class":"Lighting"},{"ValueType":"bool","type":"Property","Name":"Outlines","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"ShadowColor","tags":[],"Class":"Lighting"},{"ValueType":"string","type":"Property","Name":"TimeOfDay","tags":[],"Class":"Lighting"},{"ReturnType":"double","Arguments":[],"Name":"GetMinutesAfterMidnight","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetMoonDirection","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetMoonPhase","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetSunDirection","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"minutes","Default":null}],"Name":"SetMinutesAfterMidnight","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"getMinutesAfterMidnight","tags":["deprecated"],"Class":"Lighting","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"minutes","Default":null}],"Name":"setMinutesAfterMidnight","tags":["deprecated"],"Class":"Lighting","type":"Function"},{"Arguments":[{"Name":"skyboxChanged","Type":"bool"}],"Name":"LightingChanged","tags":[],"Class":"Lighting","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"LocalWorkspace","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"LogService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"source","Default":null}],"Name":"ExecuteScript","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetLogHistory","tags":[],"Class":"LogService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RequestServerOutput","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Function"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"messageType","Type":"MessageType"}],"Name":"MessageOut","tags":[],"Class":"LogService","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"messageType","Type":"MessageType"},{"Name":"timestamp","Type":"int"}],"Name":"ServerMessageOut","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"LoginService","tags":[]},{"ReturnType":"void","Arguments":[],"Name":"Logout","tags":["RobloxSecurity"],"Class":"LoginService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"PromptLogin","tags":["RobloxSecurity"],"Class":"LoginService","type":"Function"},{"Arguments":[{"Name":"loginError","Type":"string"}],"Name":"LoginFailed","tags":["RobloxSecurity"],"Class":"LoginService","type":"Event"},{"Arguments":[{"Name":"username","Type":"string"}],"Name":"LoginSucceeded","tags":["RobloxSecurity"],"Class":"LoginService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"LuaSettings","tags":[]},{"ValueType":"bool","type":"Property","Name":"AreScriptStartsReported","tags":[],"Class":"LuaSettings"},{"ValueType":"double","type":"Property","Name":"DefaultWaitTime","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcFrequency","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcLimit","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcPause","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcStepMul","tags":[],"Class":"LuaSettings"},{"ValueType":"float","type":"Property","Name":"WaitingThreadsBudget","tags":[],"Class":"LuaSettings"},{"Superclass":"Instance","type":"Class","Name":"LuaSourceContainer","tags":[]},{"Superclass":"LuaSourceContainer","type":"Class","Name":"BaseScript","tags":[]},{"ValueType":"bool","type":"Property","Name":"Disabled","tags":[],"Class":"BaseScript"},{"ValueType":"Content","type":"Property","Name":"LinkedSource","tags":[],"Class":"BaseScript"},{"Superclass":"BaseScript","type":"Class","Name":"CoreScript","tags":["notCreatable"]},{"Superclass":"BaseScript","type":"Class","Name":"Script","tags":[]},{"ValueType":"ProtectedString","type":"Property","Name":"Source","tags":["PluginSecurity"],"Class":"Script"},{"ReturnType":"string","Arguments":[],"Name":"GetHash","tags":["RobloxPlaceSecurity"],"Class":"Script","type":"Function"},{"Superclass":"Script","type":"Class","Name":"LocalScript","tags":[]},{"Superclass":"LuaSourceContainer","type":"Class","Name":"ModuleScript","tags":[]},{"ValueType":"Content","type":"Property","Name":"LinkedSource","tags":[],"Class":"ModuleScript"},{"ValueType":"ProtectedString","type":"Property","Name":"Source","tags":["PluginSecurity"],"Class":"ModuleScript"},{"Superclass":"Instance","type":"Class","Name":"LuaWebService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"MarketplaceService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"productId","Default":null}],"Name":"PromptNativePurchase","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"productId","Default":null},{"Type":"bool","Name":"equipIfPurchased","Default":"true"},{"Type":"CurrencyType","Name":"currencyType","Default":"Default"}],"Name":"PromptProductPurchase","tags":[],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"assetId","Default":null},{"Type":"bool","Name":"equipIfPurchased","Default":"true"},{"Type":"CurrencyType","Name":"currencyType","Default":"Default"}],"Name":"PromptPurchase","tags":[],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"productId","Default":null}],"Name":"PromptThirdPartyPurchase","tags":["RobloxPlaceSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"assetId","Default":null},{"Type":"int","Name":"robuxAmount","Default":null}],"Name":"ReportAssetSale","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ReportRobuxUpsellStarted","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"ticket","Default":null},{"Type":"int","Name":"playerId","Default":null},{"Type":"int","Name":"productId","Default":null}],"Name":"SignalClientPurchaseSuccess","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"productId","Default":null},{"Type":"bool","Name":"success","Default":null}],"Name":"SignalPromptProductPurchaseFinished","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"assetId","Default":null},{"Type":"bool","Name":"success","Default":null}],"Name":"SignalPromptPurchaseFinished","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SignalServerLuaDialogClosed","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetDeveloperProductsAsync","tags":[],"Class":"MarketplaceService","type":"YieldFunction"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"assetId","Default":null},{"Type":"InfoType","Name":"infoType","Default":"Asset"}],"Name":"GetProductInfo","tags":[],"Class":"MarketplaceService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"assetId","Default":null}],"Name":"PlayerOwnsAsset","tags":[],"Class":"MarketplaceService","type":"YieldFunction"},{"Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"ClientLuaDialogRequested","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"ticket","Type":"string"},{"Name":"playerId","Type":"int"},{"Name":"productId","Type":"int"}],"Name":"ClientPurchaseSuccess","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"productId","Type":"string"},{"Name":"wasPurchased","Type":"bool"}],"Name":"NativePurchaseFinished","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"userId","Type":"int"},{"Name":"productId","Type":"int"},{"Name":"isPurchased","Type":"bool"}],"Name":"PromptProductPurchaseFinished","tags":["deprecated"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"productId","Type":"int"},{"Name":"equipIfPurchased","Type":"bool"},{"Name":"currencyType","Type":"CurrencyType"}],"Name":"PromptProductPurchaseRequested","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"assetId","Type":"int"},{"Name":"isPurchased","Type":"bool"}],"Name":"PromptPurchaseFinished","tags":[],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"assetId","Type":"int"},{"Name":"equipIfPurchased","Type":"bool"},{"Name":"currencyType","Type":"CurrencyType"}],"Name":"PromptPurchaseRequested","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"serverResponseTable","Type":"Dictionary"}],"Name":"ServerPurchaseVerification","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"productId","Type":"string"},{"Name":"receipt","Type":"string"},{"Name":"wasPurchased","Type":"bool"}],"Name":"ThirdPartyPurchaseFinished","tags":["RobloxPlaceSecurity"],"Class":"MarketplaceService","type":"Event"},{"ReturnType":"ProductPurchaseDecision","Arguments":[{"Name":"receiptInfo","Type":"Dictionary"}],"Name":"ProcessReceipt","tags":[],"Class":"MarketplaceService","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"Message","tags":["deprecated"]},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"Message"},{"Superclass":"Message","type":"Class","Name":"Hint","tags":["deprecated"]},{"Superclass":"Instance","type":"Class","Name":"Mouse","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"Hit","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Content","type":"Property","Name":"Icon","tags":[],"Class":"Mouse"},{"ValueType":"CoordinateFrame","type":"Property","Name":"Origin","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Object","type":"Property","Name":"Target","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Object","type":"Property","Name":"TargetFilter","tags":[],"Class":"Mouse"},{"ValueType":"NormalId","type":"Property","Name":"TargetSurface","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Ray","type":"Property","Name":"UnitRay","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"ViewSizeX","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"ViewSizeY","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"X","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"Y","tags":["readonly"],"Class":"Mouse"},{"ValueType":"CoordinateFrame","type":"Property","Name":"hit","tags":["deprecated","hidden","readonly"],"Class":"Mouse"},{"ValueType":"Object","type":"Property","Name":"target","tags":["deprecated","readonly"],"Class":"Mouse"},{"Arguments":[],"Name":"Button1Down","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Button1Up","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Button2Down","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Button2Up","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Idle","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"}],"Name":"KeyDown","tags":["deprecated"],"Class":"Mouse","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"}],"Name":"KeyUp","tags":["deprecated"],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Move","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"WheelBackward","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"WheelForward","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"}],"Name":"keyDown","tags":["deprecated"],"Class":"Mouse","type":"Event"},{"Superclass":"Mouse","type":"Class","Name":"PlayerMouse","tags":[]},{"Superclass":"Mouse","type":"Class","Name":"PluginMouse","tags":[]},{"Arguments":[{"Name":"instances","Type":"Objects"}],"Name":"DragEnter","tags":["PluginSecurity"],"Class":"PluginMouse","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"NetworkMarker","tags":["notbrowsable"]},{"Arguments":[],"Name":"Received","tags":[],"Class":"NetworkMarker","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"NetworkPeer","tags":["notbrowsable"]},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"limit","Default":null}],"Name":"SetOutgoingKBPSLimit","tags":["PluginSecurity"],"Class":"NetworkPeer","type":"Function"},{"Superclass":"NetworkPeer","type":"Class","Name":"NetworkClient","tags":["notCreatable"]},{"ValueType":"string","type":"Property","Name":"Ticket","tags":[],"Class":"NetworkClient"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"blockDuration","Default":"3000"}],"Name":"Disconnect","tags":["LocalUserSecurity"],"Class":"NetworkClient","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"string","Name":"server","Default":null},{"Type":"int","Name":"serverPort","Default":null},{"Type":"int","Name":"clientPort","Default":"0"},{"Type":"int","Name":"threadSleepTime","Default":"30"}],"Name":"PlayerConnect","tags":["PluginSecurity"],"Class":"NetworkClient","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"gameSessionID","Default":null}],"Name":"SetGameSessionID","tags":["RobloxSecurity"],"Class":"NetworkClient","type":"Function"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"replicator","Type":"Instance"}],"Name":"ConnectionAccepted","tags":[],"Class":"NetworkClient","type":"Event"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"code","Type":"int"},{"Name":"reason","Type":"string"}],"Name":"ConnectionFailed","tags":[],"Class":"NetworkClient","type":"Event"},{"Arguments":[{"Name":"peer","Type":"string"}],"Name":"ConnectionRejected","tags":[],"Class":"NetworkClient","type":"Event"},{"Superclass":"NetworkPeer","type":"Class","Name":"NetworkServer","tags":["notCreatable"]},{"ValueType":"int","type":"Property","Name":"Port","tags":["readonly"],"Class":"NetworkServer"},{"ReturnType":"void","Arguments":[],"Name":"ConfigureAsCloudEditServer","tags":["RobloxSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ConfigureAsTeamTestServer","tags":["RobloxSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetClientCount","tags":["LocalUserSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetIsPlayerAuthenticationRequired","tags":["RobloxSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"port","Default":"0"},{"Type":"int","Name":"threadSleepTime","Default":"20"}],"Name":"Start","tags":["PluginSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"blockDuration","Default":"1000"}],"Name":"Stop","tags":["LocalUserSecurity"],"Class":"NetworkServer","type":"Function"},{"Arguments":[{"Name":"peer","Type":"Instance"},{"Name":"result","Type":"FilterResult"},{"Name":"instance","Type":"Instance"},{"Name":"member","Type":"string"}],"Name":"DataBasicFiltered","tags":["LocalUserSecurity"],"Class":"NetworkServer","type":"Event"},{"Arguments":[{"Name":"peer","Type":"Instance"},{"Name":"result","Type":"FilterResult"},{"Name":"instance","Type":"Instance"},{"Name":"member","Type":"string"}],"Name":"DataCustomFiltered","tags":["LocalUserSecurity"],"Class":"NetworkServer","type":"Event"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"replicator","Type":"Instance"}],"Name":"IncommingConnection","tags":["RobloxScriptSecurity"],"Class":"NetworkServer","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"NetworkReplicator","tags":["notCreatable"]},{"ValueType":"string","type":"Property","Name":"MachineAddress","tags":["LocalUserSecurity","readonly"],"Class":"NetworkReplicator"},{"ValueType":"int","type":"Property","Name":"Port","tags":["LocalUserSecurity","readonly"],"Class":"NetworkReplicator"},{"ReturnType":"void","Arguments":[],"Name":"CloseConnection","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"DisableProcessPackets","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"EnableProcessPackets","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetPlayer","tags":[],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"verbosityLevel","Default":"0"}],"Name":"GetRakStatsString","tags":["PluginSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RequestCharacter","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"SendMarker","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"seconds","Default":null}],"Name":"SetPropSyncExpiration","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"lostConnection","Type":"bool"}],"Name":"Disconnection","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Event"},{"Superclass":"NetworkReplicator","type":"Class","Name":"ClientReplicator","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"request","Default":null}],"Name":"RequestServerStats","tags":["RobloxScriptSecurity"],"Class":"ClientReplicator","type":"Function"},{"Arguments":[{"Name":"stats","Type":"Dictionary"}],"Name":"StatsReceived","tags":["RobloxScriptSecurity"],"Class":"ClientReplicator","type":"Event"},{"Superclass":"NetworkReplicator","type":"Class","Name":"ServerReplicator","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[],"Name":"PreventTerrainChanges","tags":["RobloxPlaceSecurity"],"Class":"ServerReplicator","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetBasicFilteringEnabled","tags":["RobloxPlaceSecurity"],"Class":"ServerReplicator","type":"Function"},{"Arguments":[{"Name":"userId","Type":"int"},{"Name":"isAuthenticated","Type":"bool"},{"Name":"protocolVersion","Type":"int"}],"Name":"TicketProcessed","tags":[],"Class":"ServerReplicator","type":"Event"},{"ReturnType":"FilterResult","Arguments":[{"Name":"deletingItem","Type":"Instance"}],"Name":"DeleteFilter","tags":["RobloxPlaceSecurity","noyield"],"Class":"ServerReplicator","type":"Callback"},{"ReturnType":"FilterResult","Arguments":[{"Name":"firingItem","Type":"Instance"},{"Name":"event","Type":"string"}],"Name":"EventFilter","tags":["RobloxPlaceSecurity","noyield"],"Class":"ServerReplicator","type":"Callback"},{"ReturnType":"FilterResult","Arguments":[{"Name":"newItem","Type":"Instance"},{"Name":"parent","Type":"Instance"}],"Name":"NewFilter","tags":["RobloxPlaceSecurity","noyield"],"Class":"ServerReplicator","type":"Callback"},{"ReturnType":"FilterResult","Arguments":[{"Name":"changingItem","Type":"Instance"},{"Name":"member","Type":"string"},{"Name":"value","Type":"Variant"}],"Name":"PropertyFilter","tags":["RobloxPlaceSecurity","noyield"],"Class":"ServerReplicator","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"NetworkSettings","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"ArePhysicsRejectionsReported","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"CanSendPacketBufferLimit","tags":[],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"ClientPhysicsSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"DataGCRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"DataMtuAdjust","tags":[],"Class":"NetworkSettings"},{"ValueType":"PacketPriority","type":"Property","Name":"DataSendPriority","tags":["hidden"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"DataSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"EnableHeavyCompression","tags":["hidden"],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"ExperimentalPhysicsEnabled","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"ExtraMemoryUsed","tags":["PluginSecurity","hidden"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"FreeMemoryMBytes","tags":["PluginSecurity","hidden","readonly"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"FreeMemoryPoolMBytes","tags":["PluginSecurity","hidden","readonly"],"Class":"NetworkSettings"},{"ValueType":"double","type":"Property","Name":"IncommingReplicationLag","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"IsQueueErrorComputed","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"IsThrottledByCongestionControl","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"IsThrottledByOutgoingBandwidthLimit","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"MaxDataModelSendBuffer","tags":["deprecated"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"NetworkOwnerRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"PhysicsMtuAdjust","tags":[],"Class":"NetworkSettings"},{"ValueType":"PhysicsReceiveMethod","type":"Property","Name":"PhysicsReceive","tags":[],"Class":"NetworkSettings"},{"ValueType":"PhysicsSendMethod","type":"Property","Name":"PhysicsSend","tags":[],"Class":"NetworkSettings"},{"ValueType":"PacketPriority","type":"Property","Name":"PhysicsSendPriority","tags":["hidden"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"PhysicsSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"PreferredClientPort","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintBits","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintEvents","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintFilters","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintInstances","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintPhysicsErrors","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintProperties","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintSplitMessage","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintStreamInstanceQuota","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintTouches","tags":[],"Class":"NetworkSettings"},{"ValueType":"double","type":"Property","Name":"ReceiveRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"RenderStreamedRegions","tags":[],"Class":"NetworkSettings"},{"ValueType":"string","type":"Property","Name":"ReportStatURL","tags":["deprecated","hidden"],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"SendPacketBufferLimit","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"ShowActiveAnimationAsset","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"ShowPartMovementWayPoint","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"TotalNumMovementWayPoint","tags":[],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"TouchSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"TrackDataTypes","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"TrackPhysicsDetails","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"UseInstancePacketCache","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"UsePhysicsPacketCache","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"WaitingForCharacterLogRate","tags":["deprecated","hidden"],"Class":"NetworkSettings"},{"Superclass":"Instance","type":"Class","Name":"NotificationService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"CancelAllNotification","tags":["RobloxPlaceSecurity"],"Class":"NotificationService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"alertId","Default":null}],"Name":"CancelNotification","tags":["RobloxPlaceSecurity"],"Class":"NotificationService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"alertId","Default":null},{"Type":"string","Name":"alertMsg","Default":null},{"Type":"int","Name":"minutesToFire","Default":null}],"Name":"ScheduleNotification","tags":["RobloxPlaceSecurity"],"Class":"NotificationService","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetScheduledNotifications","tags":["RobloxPlaceSecurity"],"Class":"NotificationService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"NumberValue","tags":[]},{"ValueType":"double","type":"Property","Name":"Value","tags":[],"Class":"NumberValue"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"Changed","tags":[],"Class":"NumberValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"changed","tags":["deprecated"],"Class":"NumberValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ObjectValue","tags":[]},{"ValueType":"Object","type":"Property","Name":"Value","tags":[],"Class":"ObjectValue"},{"Arguments":[{"Name":"value","Type":"Instance"}],"Name":"Changed","tags":[],"Class":"ObjectValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"Instance"}],"Name":"changed","tags":["deprecated"],"Class":"ObjectValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"OneQuarterClusterPacketCacheBase","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PVInstance","tags":["notbrowsable"]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CoordinateFrame","tags":["deprecated","writeonly"],"Class":"PVInstance"},{"Superclass":"PVInstance","type":"Class","Name":"BasePart","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"Anchored","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BackParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BackParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"BackSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"BackSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BottomParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BottomParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"BottomSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"BottomSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"BrickColor","type":"Property","Name":"BrickColor","tags":[],"Class":"BasePart"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"BasePart"},{"ValueType":"bool","type":"Property","Name":"CanCollide","tags":[],"Class":"BasePart"},{"ValueType":"Color3","type":"Property","Name":"Color","tags":["deprecated"],"Class":"BasePart"},{"ValueType":"PhysicalProperties","type":"Property","Name":"CustomPhysicalProperties","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Elasticity","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Friction","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"FrontParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"FrontParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"FrontSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"FrontSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"LeftParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"LeftParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"LeftSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"LeftSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"LocalTransparencyModifier","tags":["hidden"],"Class":"BasePart"},{"ValueType":"bool","type":"Property","Name":"Locked","tags":[],"Class":"BasePart"},{"ValueType":"Material","type":"Property","Name":"Material","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"ReceiveAge","tags":["hidden","readonly"],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Reflectance","tags":[],"Class":"BasePart"},{"ValueType":"int","type":"Property","Name":"ResizeIncrement","tags":["readonly"],"Class":"BasePart"},{"ValueType":"Faces","type":"Property","Name":"ResizeableFaces","tags":["readonly"],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"RightParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"RightParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"RightSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"RightSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"RotVelocity","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Rotation","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Size","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"SpecificGravity","tags":["readonly"],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"TopParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"TopParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"TopSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"TopSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Velocity","tags":[],"Class":"BasePart"},{"ValueType":"BrickColor","type":"Property","Name":"brickColor","tags":["deprecated"],"Class":"BasePart"},{"ReturnType":"void","Arguments":[],"Name":"BreakJoints","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"CanSetNetworkOwnership","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"bool","Name":"recursive","Default":"false"}],"Name":"GetConnectedParts","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetMass","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetNetworkOwner","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetNetworkOwnershipAuto","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetRenderCFrame","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetRootPart","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetTouchingParts","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsGrounded","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"MakeJoints","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"NormalId","Name":"normalId","Default":null},{"Type":"int","Name":"deltaAmount","Default":null}],"Name":"Resize","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"playerInstance","Default":"nil"}],"Name":"SetNetworkOwner","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SetNetworkOwnershipAuto","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"breakJoints","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"getMass","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"makeJoints","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"NormalId","Name":"normalId","Default":null},{"Type":"int","Name":"deltaAmount","Default":null}],"Name":"resize","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"Arguments":[{"Name":"part","Type":"Instance"}],"Name":"LocalSimulationTouched","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Arguments":[],"Name":"OutfitChanged","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"StoppedTouching","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"TouchEnded","tags":[],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"Touched","tags":[],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"touched","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Superclass":"BasePart","type":"Class","Name":"CornerWedgePart","tags":[]},{"Superclass":"BasePart","type":"Class","Name":"FormFactorPart","tags":[]},{"ValueType":"FormFactor","type":"Property","Name":"FormFactor","tags":["deprecated"],"Class":"FormFactorPart"},{"ValueType":"FormFactor","type":"Property","Name":"formFactor","tags":["deprecated","hidden"],"Class":"FormFactorPart"},{"Superclass":"FormFactorPart","type":"Class","Name":"Part","tags":[]},{"ValueType":"PartType","type":"Property","Name":"Shape","tags":[],"Class":"Part"},{"Superclass":"Part","type":"Class","Name":"FlagStand","tags":["deprecated"]},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"FlagStand"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"FlagCaptured","tags":[],"Class":"FlagStand","type":"Event"},{"Superclass":"Part","type":"Class","Name":"Platform","tags":[]},{"Superclass":"Part","type":"Class","Name":"Seat","tags":[]},{"ValueType":"bool","type":"Property","Name":"Disabled","tags":[],"Class":"Seat"},{"ValueType":"Object","type":"Property","Name":"Occupant","tags":["readonly"],"Class":"Seat"},{"Superclass":"Part","type":"Class","Name":"SkateboardPlatform","tags":["deprecated"]},{"ValueType":"Object","type":"Property","Name":"Controller","tags":["readonly"],"Class":"SkateboardPlatform"},{"ValueType":"Object","type":"Property","Name":"ControllingHumanoid","tags":["readonly"],"Class":"SkateboardPlatform"},{"ValueType":"int","type":"Property","Name":"Steer","tags":[],"Class":"SkateboardPlatform"},{"ValueType":"bool","type":"Property","Name":"StickyWheels","tags":[],"Class":"SkateboardPlatform"},{"ValueType":"int","type":"Property","Name":"Throttle","tags":[],"Class":"SkateboardPlatform"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"impulseWorld","Default":null}],"Name":"ApplySpecificImpulse","tags":[],"Class":"SkateboardPlatform","type":"Function"},{"Arguments":[{"Name":"humanoid","Type":"Instance"},{"Name":"skateboardController","Type":"Instance"}],"Name":"Equipped","tags":[],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"newState","Type":"MoveState"},{"Name":"oldState","Type":"MoveState"}],"Name":"MoveStateChanged","tags":[],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"humanoid","Type":"Instance"}],"Name":"Unequipped","tags":[],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"humanoid","Type":"Instance"},{"Name":"skateboardController","Type":"Instance"}],"Name":"equipped","tags":["deprecated"],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"humanoid","Type":"Instance"}],"Name":"unequipped","tags":["deprecated"],"Class":"SkateboardPlatform","type":"Event"},{"Superclass":"Part","type":"Class","Name":"SpawnLocation","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllowTeamChangeOnTouch","tags":[],"Class":"SpawnLocation"},{"ValueType":"int","type":"Property","Name":"Duration","tags":[],"Class":"SpawnLocation"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"SpawnLocation"},{"ValueType":"bool","type":"Property","Name":"Neutral","tags":[],"Class":"SpawnLocation"},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"SpawnLocation"},{"Superclass":"FormFactorPart","type":"Class","Name":"WedgePart","tags":[]},{"Superclass":"BasePart","type":"Class","Name":"MeshPart","tags":[]},{"ValueType":"Material","type":"Property","Name":"Material","tags":["deprecated","readonly"],"Class":"MeshPart"},{"ValueType":"Content","type":"Property","Name":"TextureID","tags":[],"Class":"MeshPart"},{"Superclass":"BasePart","type":"Class","Name":"ParallelRampPart","tags":["deprecated","notbrowsable"]},{"Superclass":"BasePart","type":"Class","Name":"PartOperation","tags":[]},{"ValueType":"bool","type":"Property","Name":"UsePartColor","tags":[],"Class":"PartOperation"},{"Superclass":"PartOperation","type":"Class","Name":"NegateOperation","tags":[]},{"Superclass":"PartOperation","type":"Class","Name":"UnionOperation","tags":[]},{"Superclass":"BasePart","type":"Class","Name":"PrismPart","tags":["deprecated","notbrowsable"]},{"ValueType":"PrismSides","type":"Property","Name":"Sides","tags":[],"Class":"PrismPart"},{"Superclass":"BasePart","type":"Class","Name":"PyramidPart","tags":["deprecated","notbrowsable"]},{"ValueType":"PyramidSides","type":"Property","Name":"Sides","tags":[],"Class":"PyramidPart"},{"Superclass":"BasePart","type":"Class","Name":"RightAngleRampPart","tags":["deprecated","notbrowsable"]},{"Superclass":"BasePart","type":"Class","Name":"Terrain","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"IsSmooth","tags":["readonly"],"Class":"Terrain"},{"ValueType":"Region3int16","type":"Property","Name":"MaxExtents","tags":["readonly"],"Class":"Terrain"},{"ValueType":"Color3","type":"Property","Name":"WaterColor","tags":[],"Class":"Terrain"},{"ValueType":"float","type":"Property","Name":"WaterTransparency","tags":[],"Class":"Terrain"},{"ValueType":"float","type":"Property","Name":"WaterWaveSize","tags":[],"Class":"Terrain"},{"ValueType":"float","type":"Property","Name":"WaterWaveSpeed","tags":[],"Class":"Terrain"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"AutowedgeCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3int16","Name":"region","Default":null}],"Name":"AutowedgeCells","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"CellCenterToWorld","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"CellCornerToWorld","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Clear","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ConvertToSmooth","tags":["PluginSecurity"],"Class":"Terrain","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Region3int16","Name":"region","Default":null}],"Name":"CopyRegion","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"CountCells","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"center","Default":null},{"Type":"float","Name":"radius","Default":null},{"Type":"Material","Name":"material","Default":null}],"Name":"FillBall","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoordinateFrame","Name":"cframe","Default":null},{"Type":"Vector3","Name":"size","Default":null},{"Type":"Material","Name":"material","Default":null}],"Name":"FillBlock","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"float","Name":"resolution","Default":null},{"Type":"Material","Name":"material","Default":null}],"Name":"FillRegion","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"GetCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"GetWaterCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"region","Default":null},{"Type":"Vector3int16","Name":"corner","Default":null},{"Type":"bool","Name":"pasteEmptyCells","Default":null}],"Name":"PasteRegion","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"float","Name":"resolution","Default":null}],"Name":"ReadVoxels","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null},{"Type":"CellMaterial","Name":"material","Default":null},{"Type":"CellBlock","Name":"block","Default":null},{"Type":"CellOrientation","Name":"orientation","Default":null}],"Name":"SetCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3int16","Name":"region","Default":null},{"Type":"CellMaterial","Name":"material","Default":null},{"Type":"CellBlock","Name":"block","Default":null},{"Type":"CellOrientation","Name":"orientation","Default":null}],"Name":"SetCells","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null},{"Type":"WaterForce","Name":"force","Default":null},{"Type":"WaterDirection","Name":"direction","Default":null}],"Name":"SetWaterCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"WorldToCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"WorldToCellPreferEmpty","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"WorldToCellPreferSolid","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"float","Name":"resolution","Default":null},{"Type":"Array","Name":"materials","Default":null},{"Type":"Array","Name":"occupancy","Default":null}],"Name":"WriteVoxels","tags":[],"Class":"Terrain","type":"Function"},{"Superclass":"BasePart","type":"Class","Name":"TrussPart","tags":[]},{"ValueType":"Style","type":"Property","Name":"Style","tags":[],"Class":"TrussPart"},{"Superclass":"BasePart","type":"Class","Name":"VehicleSeat","tags":[]},{"ValueType":"int","type":"Property","Name":"AreHingesDetected","tags":["readonly"],"Class":"VehicleSeat"},{"ValueType":"bool","type":"Property","Name":"Disabled","tags":[],"Class":"VehicleSeat"},{"ValueType":"bool","type":"Property","Name":"HeadsUpDisplay","tags":[],"Class":"VehicleSeat"},{"ValueType":"float","type":"Property","Name":"MaxSpeed","tags":[],"Class":"VehicleSeat"},{"ValueType":"Object","type":"Property","Name":"Occupant","tags":["readonly"],"Class":"VehicleSeat"},{"ValueType":"int","type":"Property","Name":"Steer","tags":[],"Class":"VehicleSeat"},{"ValueType":"int","type":"Property","Name":"Throttle","tags":[],"Class":"VehicleSeat"},{"ValueType":"float","type":"Property","Name":"Torque","tags":[],"Class":"VehicleSeat"},{"ValueType":"float","type":"Property","Name":"TurnSpeed","tags":[],"Class":"VehicleSeat"},{"Superclass":"PVInstance","type":"Class","Name":"Model","tags":[]},{"ValueType":"Object","type":"Property","Name":"PrimaryPart","tags":[],"Class":"Model"},{"ReturnType":"void","Arguments":[],"Name":"BreakJoints","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetExtentsSize","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetModelCFrame","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetModelSize","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetPrimaryPartCFrame","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"MakeJoints","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"MoveTo","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ResetOrientationToIdentity","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SetIdentityOrientation","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoordinateFrame","Name":"cframe","Default":null}],"Name":"SetPrimaryPartCFrame","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"delta","Default":null}],"Name":"TranslateBy","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"breakJoints","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"makeJoints","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"location","Default":null}],"Name":"move","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"location","Default":null}],"Name":"moveTo","tags":["deprecated"],"Class":"Model","type":"Function"},{"Superclass":"Model","type":"Class","Name":"RootInstance","tags":["notbrowsable"]},{"Superclass":"RootInstance","type":"Class","Name":"Workspace","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllowThirdPartySales","tags":[],"Class":"Workspace"},{"ValueType":"Object","type":"Property","Name":"CurrentCamera","tags":[],"Class":"Workspace"},{"ValueType":"double","type":"Property","Name":"DistributedGameTime","tags":[],"Class":"Workspace"},{"ValueType":"bool","type":"Property","Name":"FilteringEnabled","tags":[],"Class":"Workspace"},{"ValueType":"float","type":"Property","Name":"Gravity","tags":[],"Class":"Workspace"},{"ValueType":"bool","type":"Property","Name":"StreamingEnabled","tags":[],"Class":"Workspace"},{"ValueType":"Object","type":"Property","Name":"Terrain","tags":["readonly"],"Class":"Workspace"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"BreakJoints","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"ExperimentalSolverIsEnabled","tags":["LocalUserSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Ray","Name":"ray","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"},{"Type":"bool","Name":"terrainCellsAreCubes","Default":"false"},{"Type":"bool","Name":"ignoreWater","Default":"false"}],"Name":"FindPartOnRay","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Ray","Name":"ray","Default":null},{"Type":"Objects","Name":"ignoreDescendentsTable","Default":null},{"Type":"bool","Name":"terrainCellsAreCubes","Default":"false"},{"Type":"bool","Name":"ignoreWater","Default":"false"}],"Name":"FindPartOnRayWithIgnoreList","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"},{"Type":"int","Name":"maxParts","Default":"20"}],"Name":"FindPartsInRegion3","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Objects","Name":"ignoreDescendentsTable","Default":null},{"Type":"int","Name":"maxParts","Default":"20"}],"Name":"FindPartsInRegion3WithIgnoreList","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetNumAwakeParts","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetPhysicsAnalyzerBreakOnIssue","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"int","Name":"index","Default":null}],"Name":"GetPhysicsAnalyzerIssue","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetPhysicsThrottling","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRealPhysicsFPS","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"}],"Name":"IsRegion3Empty","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Objects","Name":"ignoreDescendentsTable","Default":null}],"Name":"IsRegion3EmptyWithIgnoreList","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null},{"Type":"JointCreationMode","Name":"jointType","Default":null}],"Name":"JoinToOutsiders","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"MakeJoints","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"PGSIsEnabled","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":null}],"Name":"SetPhysicsAnalyzerBreakOnIssue","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetPhysicsThrottleEnabled","tags":["LocalUserSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"UnjoinFromOutsiders","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ZoomToExtents","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Ray","Name":"ray","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"},{"Type":"bool","Name":"terrainCellsAreCubes","Default":"false"},{"Type":"bool","Name":"ignoreWater","Default":"false"}],"Name":"findPartOnRay","tags":["deprecated"],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"},{"Type":"int","Name":"maxParts","Default":"20"}],"Name":"findPartsInRegion3","tags":["deprecated"],"Class":"Workspace","type":"Function"},{"Arguments":[{"Name":"count","Type":"int"}],"Name":"PhysicsAnalyzerIssuesFound","tags":["PluginSecurity"],"Class":"Workspace","type":"Event"},{"Superclass":"Model","type":"Class","Name":"Status","tags":["deprecated","notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"Pages","tags":[]},{"ValueType":"bool","type":"Property","Name":"IsFinished","tags":["readonly"],"Class":"Pages"},{"ReturnType":"Array","Arguments":[],"Name":"GetCurrentPage","tags":[],"Class":"Pages","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"AdvanceToNextPageAsync","tags":[],"Class":"Pages","type":"YieldFunction"},{"Superclass":"Pages","type":"Class","Name":"DataStorePages","tags":[]},{"Superclass":"Pages","type":"Class","Name":"FriendPages","tags":[]},{"Superclass":"Pages","type":"Class","Name":"StandardPages","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PartOperationAsset","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ParticleEmitter","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Acceleration","tags":[],"Class":"ParticleEmitter"},{"ValueType":"ColorSequence","type":"Property","Name":"Color","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"Drag","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NormalId","type":"Property","Name":"EmissionDirection","tags":[],"Class":"ParticleEmitter"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"Lifetime","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"LightEmission","tags":[],"Class":"ParticleEmitter"},{"ValueType":"bool","type":"Property","Name":"LockedToPart","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"Rate","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"RotSpeed","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"Rotation","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberSequence","type":"Property","Name":"Size","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"Speed","tags":[],"Class":"ParticleEmitter"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberSequence","type":"Property","Name":"Transparency","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"VelocityInheritance","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"VelocitySpread","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"ZOffset","tags":[],"Class":"ParticleEmitter"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"particleCount","Default":"16"}],"Name":"Emit","tags":[],"Class":"ParticleEmitter","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Path","tags":[]},{"ValueType":"PathStatus","type":"Property","Name":"Status","tags":["readonly"],"Class":"Path"},{"ReturnType":"Array","Arguments":[],"Name":"GetPointCoordinates","tags":[],"Class":"Path","type":"Function"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"start","Default":null}],"Name":"CheckOcclusionAsync","tags":[],"Class":"Path","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"PathfindingService","tags":["notCreatable"]},{"ValueType":"float","type":"Property","Name":"EmptyCutoff","tags":[],"Class":"PathfindingService"},{"ReturnType":"Instance","Arguments":[{"Type":"Vector3","Name":"start","Default":null},{"Type":"Vector3","Name":"finish","Default":null},{"Type":"float","Name":"maxDistance","Default":null}],"Name":"ComputeRawPathAsync","tags":[],"Class":"PathfindingService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"Vector3","Name":"start","Default":null},{"Type":"Vector3","Name":"finish","Default":null},{"Type":"float","Name":"maxDistance","Default":null}],"Name":"ComputeSmoothPathAsync","tags":[],"Class":"PathfindingService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"PersonalServerService","tags":[]},{"ValueType":"string","type":"Property","Name":"RoleSets","tags":["RobloxScriptSecurity"],"Class":"PersonalServerService"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"Demote","tags":["RobloxScriptSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"Promote","tags":["RobloxScriptSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"personalServerGetRankUrl","Default":null}],"Name":"SetPersonalServerGetRankUrl","tags":["LocalUserSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"personalServerRoleSetsUrl","Default":null}],"Name":"SetPersonalServerRoleSetsUrl","tags":["LocalUserSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"personalServerSetRankUrl","Default":null}],"Name":"SetPersonalServerSetRankUrl","tags":["LocalUserSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"GetRoleSets","tags":["RobloxScriptSecurity"],"Class":"PersonalServerService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"PhysicsPacketCache","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PhysicsService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PhysicsSettings","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllowSleep","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAnchorsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAssembliesShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAttachmentsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAwakePartsHighlighted","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreBodyTypesShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreConstraintsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreContactPointsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreJointCoordinatesShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreMechanismsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreModelCoordsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreOwnersShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"ArePartCoordsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreRegionsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreUnalignedPartsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreWorldCoordsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"IsReceiveAgeShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"IsTreeShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"ParallelPhysics","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"PhysicsAnalyzerEnabled","tags":["PluginSecurity","readonly"],"Class":"PhysicsSettings"},{"ValueType":"EnviromentalPhysicsThrottle","type":"Property","Name":"PhysicsEnvironmentalThrottle","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"ShowDecompositionGeometry","tags":[],"Class":"PhysicsSettings"},{"ValueType":"double","type":"Property","Name":"ThrottleAdjustTime","tags":[],"Class":"PhysicsSettings"},{"Superclass":"Instance","type":"Class","Name":"Player","tags":[]},{"ValueType":"int","type":"Property","Name":"AccountAge","tags":["readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"AppearanceDidLoad","tags":["RobloxScriptSecurity","deprecated","readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"AutoJumpEnabled","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"CameraMaxZoomDistance","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"CameraMinZoomDistance","tags":[],"Class":"Player"},{"ValueType":"CameraMode","type":"Property","Name":"CameraMode","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"CanLoadCharacterAppearance","tags":[],"Class":"Player"},{"ValueType":"Object","type":"Property","Name":"Character","tags":[],"Class":"Player"},{"ValueType":"string","type":"Property","Name":"CharacterAppearance","tags":["notbrowsable"],"Class":"Player"},{"ValueType":"ChatMode","type":"Property","Name":"ChatMode","tags":["RobloxScriptSecurity","readonly"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"DataComplexity","tags":["readonly"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"DataComplexityLimit","tags":["LocalUserSecurity"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"DataReady","tags":["readonly"],"Class":"Player"},{"ValueType":"DevCameraOcclusionMode","type":"Property","Name":"DevCameraOcclusionMode","tags":[],"Class":"Player"},{"ValueType":"DevComputerCameraMovementMode","type":"Property","Name":"DevComputerCameraMode","tags":[],"Class":"Player"},{"ValueType":"DevComputerMovementMode","type":"Property","Name":"DevComputerMovementMode","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"DevEnableMouseLock","tags":[],"Class":"Player"},{"ValueType":"DevTouchCameraMovementMode","type":"Property","Name":"DevTouchCameraMode","tags":[],"Class":"Player"},{"ValueType":"DevTouchMovementMode","type":"Property","Name":"DevTouchMovementMode","tags":[],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"FollowUserId","tags":["readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"Guest","tags":["RobloxScriptSecurity","readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"HasBuildTools","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"HealthDisplayDistance","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"MaximumSimulationRadius","tags":["LocalUserSecurity"],"Class":"Player"},{"ValueType":"MembershipType","type":"Property","Name":"MembershipType","tags":["readonly"],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"NameDisplayDistance","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"Neutral","tags":[],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"PersonalServerRank","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"Object","type":"Property","Name":"RespawnLocation","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"SimulationRadius","tags":["LocalUserSecurity"],"Class":"Player"},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"Teleported","tags":["RobloxScriptSecurity","hidden","readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"TeleportedIn","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"UserId","tags":[],"Class":"Player"},{"ValueType":"string","type":"Property","Name":"VRDevice","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"userId","tags":["deprecated"],"Class":"Player"},{"ReturnType":"void","Arguments":[],"Name":"ClearCharacterAppearance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"float","Arguments":[{"Type":"Vector3","Name":"point","Default":null}],"Name":"DistanceFromCharacter","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"FriendStatus","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"GetFriendStatus","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetGameSessionID","tags":["RobloxSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetMouse","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetUnder13","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"HasAppearanceLoaded","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"JumpCharacter","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Kick","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadBoolean","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"inGame","Default":"true"}],"Name":"LoadCharacter","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"assetInstance","Default":null}],"Name":"LoadCharacterAppearance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"LoadData","tags":["LocalUserSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadInstance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadNumber","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadString","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"walkDirection","Default":null},{"Type":"bool","Name":"relativeToCamera","Default":"false"}],"Name":"Move","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"walkDirection","Default":null},{"Type":"float","Name":"maxWalkDelta","Default":null}],"Name":"MoveCharacter","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RemoveCharacter","tags":["LocalUserSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"RequestFriendship","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"RevokeFriendship","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"bool","Name":"value","Default":null}],"Name":"SaveBoolean","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveData","tags":["LocalUserSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Instance","Name":"value","Default":null}],"Name":"SaveInstance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveLeaderboardData","tags":["LocalUserSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"double","Name":"value","Default":null}],"Name":"SaveNumber","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"string","Name":"value","Default":null}],"Name":"SaveString","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"accountAge","Default":null}],"Name":"SetAccountAge","tags":["PluginSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"MembershipType","Name":"membershipType","Default":null}],"Name":"SetMembershipType","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetSuperSafeChat","tags":["PluginSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetUnder13","tags":["RobloxSecurity","deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadBoolean","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadInstance","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadNumber","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadString","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"bool","Name":"value","Default":null}],"Name":"saveBoolean","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Instance","Name":"value","Default":null}],"Name":"saveInstance","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"double","Name":"value","Default":null}],"Name":"saveNumber","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"string","Name":"value","Default":null}],"Name":"saveString","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"maxFriends","Default":"200"}],"Name":"GetFriendsOnline","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetRankInGroup","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetRoleInGroup","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"string","Arguments":[],"Name":"GetWebPersonalServerRank","tags":["LocalUserSecurity","backend"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"IsBestFriendsWith","tags":["deprecated"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"IsFriendsWith","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"IsInGroup","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"rank","Default":null}],"Name":"SetWebPersonalServerRank","tags":["WritePlayerSecurity"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[],"Name":"WaitForDataReady","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"isFriendsWith","tags":["deprecated"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[],"Name":"waitForDataReady","tags":["deprecated"],"Class":"Player","type":"YieldFunction"},{"Arguments":[{"Name":"character","Type":"Instance"}],"Name":"CharacterAdded","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"character","Type":"Instance"}],"Name":"CharacterAppearanceLoaded","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"character","Type":"Instance"}],"Name":"CharacterRemoving","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"recipient","Type":"Instance"}],"Name":"Chatted","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"friendStatus","Type":"FriendStatus"}],"Name":"FriendStatusChanged","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"time","Type":"double"}],"Name":"Idled","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"teleportState","Type":"TeleportState"},{"Name":"placeId","Type":"int"},{"Name":"spawnName","Type":"string"}],"Name":"OnTeleport","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"radius","Type":"float"}],"Name":"SimulationRadiusChanged","tags":["LocalUserSecurity"],"Class":"Player","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"PlayerScripts","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"Players","tags":[]},{"ValueType":"bool","type":"Property","Name":"BubbleChat","tags":["readonly"],"Class":"Players"},{"ValueType":"bool","type":"Property","Name":"CharacterAutoLoads","tags":[],"Class":"Players"},{"ValueType":"bool","type":"Property","Name":"ClassicChat","tags":["readonly"],"Class":"Players"},{"ValueType":"Object","type":"Property","Name":"LocalPlayer","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"MaxPlayers","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"MaxPlayersInternal","tags":["LocalUserSecurity"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"NumPlayers","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"PreferredPlayers","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"PreferredPlayersInternal","tags":["LocalUserSecurity"],"Class":"Players"},{"ValueType":"Object","type":"Property","Name":"localPlayer","tags":["deprecated","hidden","readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"numPlayers","tags":["deprecated","hidden","readonly"],"Class":"Players"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"AddLeaderboardKey","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null}],"Name":"Chat","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"bool","Name":"isTeleport","Default":"false"}],"Name":"CreateLocalPlayer","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userID","Default":null}],"Name":"GetPlayerByID","tags":["LocalUserSecurity","deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPlayerById","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPlayerByUserId","tags":[],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"character","Default":null}],"Name":"GetPlayerFromCharacter","tags":[],"Class":"Players","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetPlayers","tags":[],"Class":"Players","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetUseCoreScriptHealthBar","tags":["RobloxScriptSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"reason","Default":null},{"Type":"string","Name":"optionalMessage","Default":null}],"Name":"ReportAbuse","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetAbuseReportUrl","tags":["RobloxSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetBuildUserPermissionsUrl","tags":["RobloxSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetChatFilterUrl","tags":["RobloxSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"ChatStyle","Name":"style","Default":"Classic"}],"Name":"SetChatStyle","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetLoadDataUrl","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetSaveDataUrl","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetSaveLeaderboardDataUrl","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetSysStatsUrl","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"urlId","Default":null}],"Name":"SetSysStatsUrlId","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null}],"Name":"TeamChat","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null},{"Type":"Instance","Name":"player","Default":null}],"Name":"WhisperChat","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"character","Default":null}],"Name":"getPlayerFromCharacter","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"getPlayers","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"character","Default":null}],"Name":"playerFromCharacter","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"players","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"blockerUserId","Default":null},{"Type":"int","Name":"blockeeUserId","Default":null}],"Name":"BlockUser","tags":["RobloxScriptSecurity"],"Class":"Players","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetCharacterAppearanceAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetFriendsAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetNameFromUserIdAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"string","Name":"userName","Default":null}],"Name":"GetUserIdFromNameAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"exblockerUserId","Default":null},{"Type":"int","Name":"exblockeeUserId","Default":null}],"Name":"UnblockUser","tags":["RobloxScriptSecurity"],"Class":"Players","type":"YieldFunction"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"player","Type":"Instance"},{"Name":"friendRequestEvent","Type":"FriendRequestEvent"}],"Name":"FriendRequestEvent","tags":["RobloxScriptSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"}],"Name":"GameAnnounce","tags":["RobloxScriptSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerAdded","tags":[],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerAddedEarly","tags":["LocalUserSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"chatType","Type":"PlayerChatType"},{"Name":"player","Type":"Instance"},{"Name":"message","Type":"string"},{"Name":"targetPlayer","Type":"Instance"}],"Name":"PlayerChatted","tags":["LocalUserSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerRemoving","tags":[],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerRemovingLate","tags":["LocalUserSecurity"],"Class":"Players","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Plugin","tags":[]},{"ValueType":"bool","type":"Property","Name":"CollisionEnabled","tags":["readonly"],"Class":"Plugin"},{"ValueType":"float","type":"Property","Name":"GridSize","tags":["readonly"],"Class":"Plugin"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"exclusiveMouse","Default":null}],"Name":"Activate","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"CreateToolbar","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"JointCreationMode","Arguments":[],"Name":"GetJoinMode","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetMouse","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"GetSetting","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetStudioUserId","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"Negate","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"script","Default":null},{"Type":"int","Name":"lineNumber","Default":"0"}],"Name":"OpenScript","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"OpenWikiPage","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveSelectedToRoblox","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"Separate","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetSetting","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"Union","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"int","Arguments":[{"Type":"string","Name":"assetType","Default":null}],"Name":"PromptForExistingAssetId","tags":["PluginSecurity"],"Class":"Plugin","type":"YieldFunction"},{"Arguments":[],"Name":"Deactivation","tags":["PluginSecurity"],"Class":"Plugin","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"PluginManager","tags":[]},{"ReturnType":"Instance","Arguments":[],"Name":"CreatePlugin","tags":["PluginSecurity"],"Class":"PluginManager","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"filePath","Default":""}],"Name":"ExportPlace","tags":["PluginSecurity"],"Class":"PluginManager","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"filePath","Default":""}],"Name":"ExportSelection","tags":["PluginSecurity"],"Class":"PluginManager","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"PointsService","tags":["notCreatable"]},{"ReturnType":"int","Arguments":[],"Name":"GetAwardablePoints","tags":["deprecated"],"Class":"PointsService","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"amount","Default":null}],"Name":"AwardPoints","tags":[],"Class":"PointsService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetGamePointBalance","tags":[],"Class":"PointsService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPointBalance","tags":["deprecated"],"Class":"PointsService","type":"YieldFunction"},{"Arguments":[{"Name":"userId","Type":"int"},{"Name":"pointsAwarded","Type":"int"},{"Name":"userBalanceInGame","Type":"int"},{"Name":"userTotalBalance","Type":"int"}],"Name":"PointsAwarded","tags":[],"Class":"PointsService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Pose","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"Pose"},{"ValueType":"PoseEasingDirection","type":"Property","Name":"EasingDirection","tags":[],"Class":"Pose"},{"ValueType":"PoseEasingStyle","type":"Property","Name":"EasingStyle","tags":[],"Class":"Pose"},{"ValueType":"float","type":"Property","Name":"MaskWeight","tags":[],"Class":"Pose"},{"ValueType":"float","type":"Property","Name":"Weight","tags":[],"Class":"Pose"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"AddSubPose","tags":[],"Class":"Pose","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetSubPoses","tags":[],"Class":"Pose","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"RemoveSubPose","tags":[],"Class":"Pose","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"PostEffect","tags":[]},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"PostEffect"},{"Superclass":"PostEffect","type":"Class","Name":"BloomEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Intensity","tags":[],"Class":"BloomEffect"},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"BloomEffect"},{"ValueType":"float","type":"Property","Name":"Threshold","tags":[],"Class":"BloomEffect"},{"Superclass":"PostEffect","type":"Class","Name":"BlurEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"BlurEffect"},{"Superclass":"PostEffect","type":"Class","Name":"ColorCorrectionEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Brightness","tags":[],"Class":"ColorCorrectionEffect"},{"ValueType":"float","type":"Property","Name":"Contrast","tags":[],"Class":"ColorCorrectionEffect"},{"ValueType":"float","type":"Property","Name":"Saturation","tags":[],"Class":"ColorCorrectionEffect"},{"ValueType":"Color3","type":"Property","Name":"TintColor","tags":[],"Class":"ColorCorrectionEffect"},{"Superclass":"PostEffect","type":"Class","Name":"SunRaysEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Intensity","tags":[],"Class":"SunRaysEffect"},{"ValueType":"float","type":"Property","Name":"Spread","tags":[],"Class":"SunRaysEffect"},{"Superclass":"Instance","type":"Class","Name":"RayValue","tags":[]},{"ValueType":"Ray","type":"Property","Name":"Value","tags":[],"Class":"RayValue"},{"Arguments":[{"Name":"value","Type":"Ray"}],"Name":"Changed","tags":[],"Class":"RayValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"Ray"}],"Name":"changed","tags":["deprecated"],"Class":"RayValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadata","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataCallbacks","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataClasses","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataEnums","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataEvents","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataFunctions","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataItem","tags":[]},{"ValueType":"bool","type":"Property","Name":"Browsable","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"bool","type":"Property","Name":"Deprecated","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"bool","type":"Property","Name":"IsBackend","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"double","type":"Property","Name":"UIMaximum","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"double","type":"Property","Name":"UIMinimum","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"string","type":"Property","Name":"summary","tags":[],"Class":"ReflectionMetadataItem"},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataClass","tags":[]},{"ValueType":"int","type":"Property","Name":"ExplorerImageIndex","tags":[],"Class":"ReflectionMetadataClass"},{"ValueType":"int","type":"Property","Name":"ExplorerOrder","tags":[],"Class":"ReflectionMetadataClass"},{"ValueType":"bool","type":"Property","Name":"Insertable","tags":[],"Class":"ReflectionMetadataClass"},{"ValueType":"string","type":"Property","Name":"PreferredParent","tags":[],"Class":"ReflectionMetadataClass"},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataEnum","tags":[]},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataEnumItem","tags":[]},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataMember","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataProperties","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataYieldFunctions","tags":[]},{"Superclass":"Instance","type":"Class","Name":"RemoteEvent","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"FireAllClients","tags":[],"Class":"RemoteEvent","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"FireClient","tags":[],"Class":"RemoteEvent","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"FireServer","tags":[],"Class":"RemoteEvent","type":"Function"},{"Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"OnClientEvent","tags":[],"Class":"RemoteEvent","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"arguments","Type":"Tuple"}],"Name":"OnServerEvent","tags":[],"Class":"RemoteEvent","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"RemoteFunction","tags":[]},{"ReturnType":"Tuple","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"InvokeClient","tags":[],"Class":"RemoteFunction","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"InvokeServer","tags":[],"Class":"RemoteFunction","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"OnClientInvoke","tags":[],"Class":"RemoteFunction","type":"Callback"},{"ReturnType":"Tuple","Arguments":[{"Name":"player","Type":"Instance"},{"Name":"arguments","Type":"Tuple"}],"Name":"OnServerInvoke","tags":[],"Class":"RemoteFunction","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"RenderHooksService","tags":[]},{"ReturnType":"void","Arguments":[],"Name":"CaptureMetrics","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"qId","Default":null}],"Name":"DisableQueue","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enabled","Default":null}],"Name":"EnableAdorns","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"qId","Default":null}],"Name":"EnableQueue","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetDeltaAve","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetGPUDelay","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetPresentTime","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRenderAve","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRenderConfMax","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRenderConfMin","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRenderStd","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"PrintScene","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ReloadShaders","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"width","Default":null},{"Type":"int","Name":"height","Default":null}],"Name":"ResizeWindow","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"RenderSettings","tags":["notbrowsable"]},{"ValueType":"AASamples","type":"Property","Name":"AASamples","tags":[],"Class":"RenderSettings"},{"ValueType":"Antialiasing","type":"Property","Name":"Antialiasing","tags":[],"Class":"RenderSettings"},{"ValueType":"int","type":"Property","Name":"AutoFRMLevel","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"DebugDisableInterpolation","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"EagerBulkExecution","tags":[],"Class":"RenderSettings"},{"ValueType":"QualityLevel","type":"Property","Name":"EditQualityLevel","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"EnableFRM","tags":["hidden"],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ExportMergeByMaterial","tags":[],"Class":"RenderSettings"},{"ValueType":"FramerateManagerMode","type":"Property","Name":"FrameRateManager","tags":[],"Class":"RenderSettings"},{"ValueType":"GraphicsMode","type":"Property","Name":"GraphicsMode","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"IsAggregationShown","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"IsSynchronizedWithPhysics","tags":[],"Class":"RenderSettings"},{"ValueType":"int","type":"Property","Name":"MeshCacheSize","tags":[],"Class":"RenderSettings"},{"ValueType":"QualityLevel","type":"Property","Name":"QualityLevel","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ReloadAssets","tags":[],"Class":"RenderSettings"},{"ValueType":"Resolution","type":"Property","Name":"Resolution","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ShowBoundingBoxes","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ShowInterpolationpath","tags":[],"Class":"RenderSettings"},{"ValueType":"int","type":"Property","Name":"TextureCacheSize","tags":[],"Class":"RenderSettings"},{"ReturnType":"int","Arguments":[],"Name":"GetMaxQualityLevel","tags":[],"Class":"RenderSettings","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"ReplicatedFirst","tags":["notCreatable"]},{"ReturnType":"bool","Arguments":[],"Name":"IsDefaultLoadingGuiRemoved","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsFinishedReplicating","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RemoveDefaultLoadingScreen","tags":[],"Class":"ReplicatedFirst","type":"Function"},{"Arguments":[],"Name":"FinishedReplicating","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Event"},{"Arguments":[],"Name":"RemoveDefaultLoadingGuiSignal","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ReplicatedStorage","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"RobloxReplicatedStorage","tags":["notCreatable","notbrowsable"]},{"Superclass":"Instance","type":"Class","Name":"RunService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"int","Name":"priority","Default":null},{"Type":"Function","Name":"function","Default":null}],"Name":"BindToRenderStep","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsClient","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsRunMode","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsRunning","tags":["RobloxScriptSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsServer","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsStudio","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Pause","tags":["PluginSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Reset","tags":["PluginSecurity","deprecated"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Run","tags":["PluginSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Stop","tags":["PluginSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"UnbindFromRenderStep","tags":[],"Class":"RunService","type":"Function"},{"Arguments":[{"Name":"step","Type":"double"}],"Name":"Heartbeat","tags":[],"Class":"RunService","type":"Event"},{"Arguments":[{"Name":"step","Type":"double"}],"Name":"RenderStepped","tags":[],"Class":"RunService","type":"Event"},{"Arguments":[{"Name":"time","Type":"double"},{"Name":"step","Type":"double"}],"Name":"Stepped","tags":[],"Class":"RunService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"RuntimeScriptService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ScriptContext","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"ScriptsDisabled","tags":["LocalUserSecurity"],"Class":"ScriptContext"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetId","Default":null},{"Type":"Instance","Name":"parent","Default":null},{"Type":"string","Name":"name","Default":null}],"Name":"AddCoreScript","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Instance","Name":"parent","Default":null}],"Name":"AddCoreScriptLocal","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"AddStarterScript","tags":["LocalUserSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"bool","Name":"clearHighwaterMark","Default":"true"}],"Name":"GetHeapStats","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetScriptStats","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":"false"}],"Name":"SetCollectScriptStats","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"seconds","Default":null}],"Name":"SetTimeout","tags":["PluginSecurity"],"Class":"ScriptContext","type":"Function"},{"Arguments":[{"Name":"object","Type":"Instance"},{"Name":"member","Type":"string"},{"Name":"script","Type":"Instance"}],"Name":"CamelCaseViolation","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"stackTrace","Type":"string"},{"Name":"script","Type":"Instance"}],"Name":"Error","tags":[],"Class":"ScriptContext","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ScriptDebugger","tags":["notCreatable"]},{"ValueType":"int","type":"Property","Name":"CurrentLine","tags":["readonly"],"Class":"ScriptDebugger"},{"ValueType":"bool","type":"Property","Name":"IsDebugging","tags":["readonly"],"Class":"ScriptDebugger"},{"ValueType":"bool","type":"Property","Name":"IsPaused","tags":["readonly"],"Class":"ScriptDebugger"},{"ValueType":"Object","type":"Property","Name":"Script","tags":["readonly"],"Class":"ScriptDebugger"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"expression","Default":null}],"Name":"AddWatch","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetBreakpoints","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Map","Arguments":[],"Name":"GetGlobals","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Map","Arguments":[{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"GetLocals","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetStack","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Map","Arguments":[{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"GetUpvalues","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"Instance","Name":"watch","Default":null}],"Name":"GetWatchValue","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetWatches","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Resume","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"line","Default":null}],"Name":"SetBreakpoint","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetGlobal","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Variant","Name":"value","Default":null},{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"SetLocal","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Variant","Name":"value","Default":null},{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"SetUpvalue","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepIn","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOut","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOver","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"Arguments":[{"Name":"breakpoint","Type":"Instance"}],"Name":"BreakpointAdded","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"breakpoint","Type":"Instance"}],"Name":"BreakpointRemoved","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"line","Type":"int"}],"Name":"EncounteredBreak","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[],"Name":"Resuming","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"watch","Type":"Instance"}],"Name":"WatchAdded","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"watch","Type":"Instance"}],"Name":"WatchRemoved","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ScriptInformationProvider","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"access","Default":null}],"Name":"SetAccessKey","tags":["RobloxSecurity"],"Class":"ScriptInformationProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetAssetUrl","tags":["LocalUserSecurity"],"Class":"ScriptInformationProvider","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"ScriptService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Selection","tags":[]},{"ReturnType":"Objects","Arguments":[],"Name":"Get","tags":["PluginSecurity"],"Class":"Selection","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"selection","Default":null}],"Name":"Set","tags":["PluginSecurity"],"Class":"Selection","type":"Function"},{"Arguments":[],"Name":"SelectionChanged","tags":[],"Class":"Selection","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ServerScriptService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ServerStorage","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ServiceProvider","tags":["notbrowsable"]},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"FindService","tags":[],"Class":"ServiceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"GetService","tags":[],"Class":"ServiceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"getService","tags":["deprecated"],"Class":"ServiceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"service","tags":["deprecated"],"Class":"ServiceProvider","type":"Function"},{"Arguments":[],"Name":"Close","tags":[],"Class":"ServiceProvider","type":"Event"},{"Arguments":[],"Name":"CloseLate","tags":["LocalUserSecurity"],"Class":"ServiceProvider","type":"Event"},{"Arguments":[{"Name":"service","Type":"Instance"}],"Name":"ServiceAdded","tags":[],"Class":"ServiceProvider","type":"Event"},{"Arguments":[{"Name":"service","Type":"Instance"}],"Name":"ServiceRemoving","tags":[],"Class":"ServiceProvider","type":"Event"},{"Superclass":"ServiceProvider","type":"Class","Name":"DataModel","tags":[]},{"ValueType":"int","type":"Property","Name":"CreatorId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"CreatorType","type":"Property","Name":"CreatorType","tags":["readonly"],"Class":"DataModel"},{"ValueType":"GearGenreSetting","type":"Property","Name":"GearGenreSetting","tags":["readonly"],"Class":"DataModel"},{"ValueType":"Genre","type":"Property","Name":"Genre","tags":["readonly"],"Class":"DataModel"},{"ValueType":"bool","type":"Property","Name":"IsPersonalServer","tags":["RobloxScriptSecurity"],"Class":"DataModel"},{"ValueType":"string","type":"Property","Name":"JobId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"bool","type":"Property","Name":"LocalSaveEnabled","tags":["RobloxScriptSecurity","readonly"],"Class":"DataModel"},{"ValueType":"int","type":"Property","Name":"PlaceId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"int","type":"Property","Name":"PlaceVersion","tags":["readonly"],"Class":"DataModel"},{"ValueType":"string","type":"Property","Name":"VIPServerId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"int","type":"Property","Name":"VIPServerOwnerId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"Object","type":"Property","Name":"Workspace","tags":["readonly"],"Class":"DataModel"},{"ValueType":"Object","type":"Property","Name":"lighting","tags":["deprecated","readonly"],"Class":"DataModel"},{"ValueType":"Object","type":"Property","Name":"workspace","tags":["deprecated","readonly"],"Class":"DataModel"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"displayName","Default":null},{"Type":"string","Name":"stat","Default":null}],"Name":"AddStat","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ClearMessage","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"localSave","Default":null}],"Name":"FinishShutdown","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"jobname","Default":null},{"Type":"double","Name":"greaterThan","Default":null}],"Name":"GetJobIntervalPeakFraction","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"jobname","Default":null},{"Type":"double","Name":"greaterThan","Default":null}],"Name":"GetJobTimePeakFraction","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetJobsExtendedStats","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetJobsInfo","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetMessage","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetRemoteBuildMode","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"bool","Name":"synchronous","Default":"false"}],"Name":"HttpGet","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"bool","Name":"synchronous","Default":"false"},{"Type":"string","Name":"contentType","Default":"*/*"}],"Name":"HttpPost","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"GearType","Name":"gearType","Default":null}],"Name":"IsGearTypeAllowed","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsLoaded","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Content","Name":"url","Default":null}],"Name":"Load","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetID","Default":null}],"Name":"LoadGame","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"LoadPlugins","tags":["RobloxSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetID","Default":null}],"Name":"LoadWorld","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"stat","Default":null}],"Name":"RemoveStat","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"category","Default":null},{"Type":"string","Name":"action","Default":"custom"},{"Type":"string","Name":"label","Default":"none"},{"Type":"int","Name":"value","Default":"0"}],"Name":"ReportInGoogleAnalytics","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"id","Default":null},{"Type":"string","Name":"key1","Default":null},{"Type":"string","Name":"value1","Default":null},{"Type":"string","Name":"key2","Default":null},{"Type":"string","Name":"value2","Default":null}],"Name":"ReportMeasurement","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Content","Name":"url","Default":null}],"Name":"Save","tags":["RobloxSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveStats","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ServerSave","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"creatorID","Default":null},{"Type":"CreatorType","Name":"creatorType","Default":null}],"Name":"SetCreatorID","tags":["PluginSecurity","deprecated"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"creatorId","Default":null},{"Type":"CreatorType","Name":"creatorType","Default":null}],"Name":"SetCreatorId","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"GearGenreSetting","Name":"genreRestriction","Default":null},{"Type":"int","Name":"allowedGenres","Default":null}],"Name":"SetGearSettings","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Genre","Name":"genre","Default":null}],"Name":"SetGenre","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"seconds","Default":null}],"Name":"SetJobsExtendedStatsWindow","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null}],"Name":"SetMessage","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SetMessageBrickCount","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeID","Default":null},{"Type":"bool","Name":"robloxPlace","Default":"false"}],"Name":"SetPlaceID","tags":["PluginSecurity","deprecated"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"bool","Name":"robloxPlace","Default":"false"}],"Name":"SetPlaceId","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"SetPlaceVersion","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"buildModeEnabled","Default":null}],"Name":"SetRemoteBuildMode","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"info","Default":null}],"Name":"SetScreenshotInfo","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetServerSaveUrl","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"universeId","Default":null}],"Name":"SetUniverseId","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"newId","Default":null}],"Name":"SetVIPServerId","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"newId","Default":null}],"Name":"SetVIPServerOwnerId","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"info","Default":null}],"Name":"SetVideoInfo","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Shutdown","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ToggleTools","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"HttpGetAsync","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"string","Name":"contentType","Default":"*/*"}],"Name":"HttpPostAsync","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"SaveFilter","Name":"saveFilter","Default":"SaveAll"}],"Name":"SavePlace","tags":[],"Class":"DataModel","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[],"Name":"SaveToRoblox","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"YieldFunction"},{"Arguments":[],"Name":"AllowedGearTypeChanged","tags":[],"Class":"DataModel","type":"Event"},{"Arguments":[{"Name":"betterQuality","Type":"bool"}],"Name":"GraphicsQualityChangeRequest","tags":[],"Class":"DataModel","type":"Event"},{"Arguments":[{"Name":"object","Type":"Instance"},{"Name":"descriptor","Type":"Property"}],"Name":"ItemChanged","tags":[],"Class":"DataModel","type":"Event"},{"Arguments":[],"Name":"Loaded","tags":[],"Class":"DataModel","type":"Event"},{"ReturnType":"Tuple","Arguments":[],"Name":"OnClose","tags":[],"Class":"DataModel","type":"Callback"},{"ReturnType":"bool","Arguments":[],"Name":"RequestShutdown","tags":["RobloxScriptSecurity","noyield"],"Class":"DataModel","type":"Callback"},{"Superclass":"ServiceProvider","type":"Class","Name":"GenericSettings","tags":[]},{"Superclass":"GenericSettings","type":"Class","Name":"GlobalSettings","tags":["notbrowsable"]},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"GetFFlag","tags":[],"Class":"GlobalSettings","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"GetFVariable","tags":[],"Class":"GlobalSettings","type":"Function"},{"ReturnType":"Dictionary","Arguments":[],"Name":"GetFVariables","tags":["RobloxScriptSecurity"],"Class":"GlobalSettings","type":"Function"},{"Superclass":"GenericSettings","type":"Class","Name":"UserSettings","tags":[]},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"IsUserFeatureEnabled","tags":[],"Class":"UserSettings","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Reset","tags":[],"Class":"UserSettings","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Sky","tags":[]},{"ValueType":"bool","type":"Property","Name":"CelestialBodiesShown","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxBk","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxDn","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxFt","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxLf","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxRt","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxUp","tags":[],"Class":"Sky"},{"ValueType":"int","type":"Property","Name":"StarCount","tags":[],"Class":"Sky"},{"Superclass":"Instance","type":"Class","Name":"Smoke","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Color","tags":[],"Class":"Smoke"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Smoke"},{"ValueType":"float","type":"Property","Name":"Opacity","tags":[],"Class":"Smoke"},{"ValueType":"float","type":"Property","Name":"RiseVelocity","tags":[],"Class":"Smoke"},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"Smoke"},{"Superclass":"Instance","type":"Class","Name":"SocialService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"bestFriendUrl","Default":null}],"Name":"SetBestFriendUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"friendUrl","Default":null}],"Name":"SetFriendUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"groupRankUrl","Default":null}],"Name":"SetGroupRankUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"groupRoleUrl","Default":null}],"Name":"SetGroupRoleUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"groupUrl","Default":null}],"Name":"SetGroupUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"stuffUrl","Default":null}],"Name":"SetPackageContentsUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"stuffUrl","Default":null}],"Name":"SetStuffUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Sound","tags":[]},{"ValueType":"bool","type":"Property","Name":"IsPaused","tags":["readonly"],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"IsPlaying","tags":["readonly"],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"Looped","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"MaxDistance","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"MinDistance","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"Pitch","tags":[],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"PlayOnRemove","tags":[],"Class":"Sound"},{"ValueType":"Content","type":"Property","Name":"SoundId","tags":[],"Class":"Sound"},{"ValueType":"double","type":"Property","Name":"TimeLength","tags":["readonly"],"Class":"Sound"},{"ValueType":"double","type":"Property","Name":"TimePosition","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"Volume","tags":[],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"isPlaying","tags":["deprecated","readonly"],"Class":"Sound"},{"ReturnType":"void","Arguments":[],"Name":"Pause","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Play","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Resume","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Stop","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"pause","tags":["deprecated"],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"play","tags":["deprecated"],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"stop","tags":["deprecated"],"Class":"Sound","type":"Function"},{"Arguments":[{"Name":"soundId","Type":"string"},{"Name":"numOfTimesLooped","Type":"int"}],"Name":"DidLoop","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Ended","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Paused","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Played","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Stopped","tags":[],"Class":"Sound","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"SoundService","tags":["notCreatable"]},{"ValueType":"ReverbType","type":"Property","Name":"AmbientReverb","tags":[],"Class":"SoundService"},{"ValueType":"float","type":"Property","Name":"DistanceFactor","tags":[],"Class":"SoundService"},{"ValueType":"float","type":"Property","Name":"DopplerScale","tags":[],"Class":"SoundService"},{"ValueType":"float","type":"Property","Name":"RolloffScale","tags":[],"Class":"SoundService"},{"ReturnType":"Tuple","Arguments":[],"Name":"GetListener","tags":[],"Class":"SoundService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"SoundType","Name":"sound","Default":null}],"Name":"PlayStockSound","tags":["RobloxScriptSecurity"],"Class":"SoundService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"ListenerType","Name":"listenerType","Default":null},{"Type":"Tuple","Name":"listener","Default":null}],"Name":"SetListener","tags":[],"Class":"SoundService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Sparkles","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Color","tags":["hidden"],"Class":"Sparkles"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Sparkles"},{"ValueType":"Color3","type":"Property","Name":"SparkleColor","tags":[],"Class":"Sparkles"},{"Superclass":"Instance","type":"Class","Name":"SpawnerService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"StarterGear","tags":[]},{"Superclass":"Instance","type":"Class","Name":"StarterPlayer","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoJumpEnabled","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"CameraMaxZoomDistance","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"CameraMinZoomDistance","tags":[],"Class":"StarterPlayer"},{"ValueType":"CameraMode","type":"Property","Name":"CameraMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevCameraOcclusionMode","type":"Property","Name":"DevCameraOcclusionMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevComputerCameraMovementMode","type":"Property","Name":"DevComputerCameraMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevComputerMovementMode","type":"Property","Name":"DevComputerMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevTouchCameraMovementMode","type":"Property","Name":"DevTouchCameraMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevTouchMovementMode","type":"Property","Name":"DevTouchMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"bool","type":"Property","Name":"EnableMouseLockOption","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"HealthDisplayDistance","tags":[],"Class":"StarterPlayer"},{"ValueType":"bool","type":"Property","Name":"LoadCharacterAppearance","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"NameDisplayDistance","tags":[],"Class":"StarterPlayer"},{"Superclass":"Instance","type":"Class","Name":"StarterPlayerScripts","tags":[]},{"Superclass":"StarterPlayerScripts","type":"Class","Name":"StarterCharacterScripts","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Stats","tags":["notCreatable"]},{"ValueType":"double","type":"Property","Name":"MinReportInterval","tags":["RobloxScriptSecurity"],"Class":"Stats"},{"ValueType":"string","type":"Property","Name":"ReporterType","tags":["RobloxScriptSecurity"],"Class":"Stats"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"category","Default":null},{"Type":"Dictionary","Name":"data","Default":null}],"Name":"Report","tags":["RobloxScriptSecurity"],"Class":"Stats","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ReportJobsStepWindow","tags":["RobloxScriptSecurity"],"Class":"Stats","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"includeJobs","Default":"false"}],"Name":"ReportTaskScheduler","tags":["RobloxScriptSecurity"],"Class":"Stats","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetReportUrl","tags":["RobloxScriptSecurity"],"Class":"Stats","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"StatsItem","tags":[]},{"ReturnType":"double","Arguments":[],"Name":"GetValue","tags":["PluginSecurity"],"Class":"StatsItem","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetValueString","tags":["PluginSecurity"],"Class":"StatsItem","type":"Function"},{"Superclass":"StatsItem","type":"Class","Name":"ProfilingItem","tags":[]},{"ReturnType":"Tuple","Arguments":[{"Type":"double","Name":"window","Default":"0"}],"Name":"GetTimes","tags":["PluginSecurity"],"Class":"ProfilingItem","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"frames","Default":"1"}],"Name":"GetTimesForFrames","tags":["PluginSecurity"],"Class":"ProfilingItem","type":"Function"},{"Superclass":"StatsItem","type":"Class","Name":"RunningAverageItemDouble","tags":[]},{"Superclass":"StatsItem","type":"Class","Name":"RunningAverageItemInt","tags":[]},{"Superclass":"StatsItem","type":"Class","Name":"RunningAverageTimeIntervalItem","tags":[]},{"Superclass":"StatsItem","type":"Class","Name":"TotalCountTimeIntervalItem","tags":[]},{"Superclass":"Instance","type":"Class","Name":"StringValue","tags":[]},{"ValueType":"string","type":"Property","Name":"Value","tags":[],"Class":"StringValue"},{"Arguments":[{"Name":"value","Type":"string"}],"Name":"Changed","tags":[],"Class":"StringValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"string"}],"Name":"changed","tags":["deprecated"],"Class":"StringValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"StudioTool","tags":[]},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"StudioTool"},{"Arguments":[],"Name":"Activated","tags":[],"Class":"StudioTool","type":"Event"},{"Arguments":[],"Name":"Deactivated","tags":[],"Class":"StudioTool","type":"Event"},{"Arguments":[{"Name":"mouse","Type":"Instance"}],"Name":"Equipped","tags":[],"Class":"StudioTool","type":"Event"},{"Arguments":[],"Name":"Unequipped","tags":[],"Class":"StudioTool","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"TaskScheduler","tags":[]},{"ValueType":"bool","type":"Property","Name":"AreArbitersThrottled","tags":[],"Class":"TaskScheduler"},{"ValueType":"ConcurrencyModel","type":"Property","Name":"Concurrency","tags":[],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"NumRunningJobs","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"NumSleepingJobs","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"NumWaitingJobs","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"PriorityMethod","type":"Property","Name":"PriorityMethod","tags":[],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"SchedulerDutyCycle","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"SchedulerRate","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"SleepAdjustMethod","type":"Property","Name":"SleepAdjustMethod","tags":[],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"ThreadAffinity","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"ThreadPoolConfig","type":"Property","Name":"ThreadPoolConfig","tags":[],"Class":"TaskScheduler"},{"ValueType":"int","type":"Property","Name":"ThreadPoolSize","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"ThrottledJobSleepTime","tags":[],"Class":"TaskScheduler"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"exclusive","Default":"true"},{"Type":"double","Name":"fps","Default":"30"}],"Name":"AddDummyJob","tags":["LocalUserSecurity"],"Class":"TaskScheduler","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"timeSlice","Default":null},{"Type":"int","Name":"numShare","Default":null}],"Name":"SetThreadShare","tags":["LocalUserSecurity","deprecated"],"Class":"TaskScheduler","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Team","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoAssignable","tags":[],"Class":"Team"},{"ValueType":"bool","type":"Property","Name":"AutoColorCharacters","tags":["deprecated"],"Class":"Team"},{"ValueType":"int","type":"Property","Name":"Score","tags":["deprecated"],"Class":"Team"},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"Team"},{"Superclass":"Instance","type":"Class","Name":"Teams","tags":["notCreatable"]},{"ReturnType":"Objects","Arguments":[],"Name":"GetTeams","tags":[],"Class":"Teams","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RebalanceTeams","tags":["deprecated"],"Class":"Teams","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TeleportService","tags":[]},{"ValueType":"bool","type":"Property","Name":"CustomizedTeleportUI","tags":["deprecated"],"Class":"TeleportService"},{"ReturnType":"Variant","Arguments":[],"Name":"GetLocalPlayerTeleportData","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"setting","Default":null}],"Name":"GetTeleportSetting","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"setting","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetTeleportSetting","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"Instance","Name":"player","Default":"nil"},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"Teleport","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"TeleportCancel","tags":["RobloxScriptSecurity"],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"string","Name":"instanceId","Default":null},{"Type":"Instance","Name":"player","Default":"nil"},{"Type":"string","Name":"spawnName","Default":""},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"TeleportToPlaceInstance","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"string","Name":"reservedServerAccessCode","Default":null},{"Type":"Objects","Name":"players","Default":null},{"Type":"string","Name":"spawnName","Default":""},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"TeleportToPrivateServer","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"string","Name":"spawnName","Default":null},{"Type":"Instance","Name":"player","Default":"nil"},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"TeleportToSpawnByName","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPlayerPlaceInstanceAsync","tags":[],"Class":"TeleportService","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"ReserveServer","tags":[],"Class":"TeleportService","type":"YieldFunction"},{"Arguments":[{"Name":"loadingGui","Type":"Instance"},{"Name":"dataTable","Type":"Variant"}],"Name":"LocalPlayerArrivedFromTeleport","tags":[],"Class":"TeleportService","type":"Event"},{"ReturnType":"bool","Arguments":[{"Name":"message","Type":"string"},{"Name":"placeId","Type":"int"},{"Name":"spawnName","Type":"string"}],"Name":"ConfirmationCallback","tags":["RobloxScriptSecurity","noyield"],"Class":"TeleportService","type":"Callback"},{"ReturnType":"void","Arguments":[{"Name":"message","Type":"string"}],"Name":"ErrorCallback","tags":["RobloxScriptSecurity","noyield"],"Class":"TeleportService","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"TerrainRegion","tags":[]},{"ValueType":"bool","type":"Property","Name":"IsSmooth","tags":["readonly"],"Class":"TerrainRegion"},{"ValueType":"Vector3","type":"Property","Name":"SizeInCells","tags":["readonly"],"Class":"TerrainRegion"},{"ReturnType":"void","Arguments":[],"Name":"ConvertToSmooth","tags":["PluginSecurity"],"Class":"TerrainRegion","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TestService","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoRuns","tags":[],"Class":"TestService"},{"ValueType":"string","type":"Property","Name":"Description","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"ErrorCount","tags":["readonly"],"Class":"TestService"},{"ValueType":"bool","type":"Property","Name":"Is30FpsThrottleEnabled","tags":[],"Class":"TestService"},{"ValueType":"bool","type":"Property","Name":"IsPhysicsEnvironmentalThrottled","tags":[],"Class":"TestService"},{"ValueType":"bool","type":"Property","Name":"IsSleepAllowed","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"NumberOfPlayers","tags":[],"Class":"TestService"},{"ValueType":"double","type":"Property","Name":"SimulateSecondsLag","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"TestCount","tags":["readonly"],"Class":"TestService"},{"ValueType":"double","type":"Property","Name":"Timeout","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"WarnCount","tags":["readonly"],"Class":"TestService"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"condition","Default":null},{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Check","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"text","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Checkpoint","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Done","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Error","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Fail","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"text","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Message","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"condition","Default":null},{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Require","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"condition","Default":null},{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Warn","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Run","tags":["PluginSecurity"],"Class":"TestService","type":"YieldFunction"},{"Arguments":[{"Name":"condition","Type":"bool"},{"Name":"text","Type":"string"},{"Name":"script","Type":"Instance"},{"Name":"line","Type":"int"}],"Name":"ServerCollectConditionalResult","tags":[],"Class":"TestService","type":"Event"},{"Arguments":[{"Name":"text","Type":"string"},{"Name":"script","Type":"Instance"},{"Name":"line","Type":"int"}],"Name":"ServerCollectResult","tags":[],"Class":"TestService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"TextService","tags":["notCreatable"]},{"ReturnType":"Vector2","Arguments":[{"Type":"string","Name":"string","Default":null},{"Type":"int","Name":"fontSize","Default":null},{"Type":"Font","Name":"font","Default":null},{"Type":"Vector2","Name":"frameSize","Default":null}],"Name":"GetTextSize","tags":["RobloxScriptSecurity"],"Class":"TextService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TimerService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"Toolbar","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"text","Default":null},{"Type":"string","Name":"tooltip","Default":null},{"Type":"string","Name":"iconname","Default":null}],"Name":"CreateButton","tags":["PluginSecurity"],"Class":"Toolbar","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TouchInputService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"TouchTransmitter","tags":["notCreatable","notbrowsable"]},{"Superclass":"Instance","type":"Class","Name":"TweenService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"UserGameSettings","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllTutorialsDisabled","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"CustomCameraMode","type":"Property","Name":"CameraMode","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"ComputerCameraMovementMode","type":"Property","Name":"ComputerCameraMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"ComputerMovementMode","type":"Property","Name":"ComputerMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"ControlMode","type":"Property","Name":"ControlMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"bool","type":"Property","Name":"Fullscreen","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"UploadSetting","type":"Property","Name":"ImageUploadPromptBehavior","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"float","type":"Property","Name":"MasterVolume","tags":[],"Class":"UserGameSettings"},{"ValueType":"float","type":"Property","Name":"MouseSensitivity","tags":[],"Class":"UserGameSettings"},{"ValueType":"RotationType","type":"Property","Name":"RotationType","tags":[],"Class":"UserGameSettings"},{"ValueType":"SavedQualitySetting","type":"Property","Name":"SavedQualityLevel","tags":[],"Class":"UserGameSettings"},{"ValueType":"TouchCameraMovementMode","type":"Property","Name":"TouchCameraMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"TouchMovementMode","type":"Property","Name":"TouchMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"bool","type":"Property","Name":"UsedHideHudShortcut","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"int","type":"Property","Name":"VRRotationIntensity","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"UploadSetting","type":"Property","Name":"VideoUploadPromptBehavior","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"tutorialId","Default":null}],"Name":"GetTutorialState","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"InFullScreen","tags":[],"Class":"UserGameSettings","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"InStudioMode","tags":[],"Class":"UserGameSettings","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"tutorialId","Default":null},{"Type":"bool","Name":"value","Default":null}],"Name":"SetTutorialState","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings","type":"Function"},{"Arguments":[{"Name":"isFullscreen","Type":"bool"}],"Name":"FullscreenChanged","tags":[],"Class":"UserGameSettings","type":"Event"},{"Arguments":[{"Name":"isStudioMode","Type":"bool"}],"Name":"StudioModeChanged","tags":[],"Class":"UserGameSettings","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"UserInputService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"AccelerometerEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"GamepadEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"GyroscopeEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"KeyboardEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"ModalEnabled","tags":[],"Class":"UserInputService"},{"ValueType":"MouseBehavior","type":"Property","Name":"MouseBehavior","tags":[],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"MouseEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"MouseIconEnabled","tags":[],"Class":"UserInputService"},{"ValueType":"OverrideMouseIconBehavior","type":"Property","Name":"OverrideMouseIconBehavior","tags":["RobloxScriptSecurity"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"TouchEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"CoordinateFrame","type":"Property","Name":"UserHeadCFrame","tags":["deprecated","readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"VREnabled","tags":["readonly"],"Class":"UserInputService"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null},{"Type":"KeyCode","Name":"gamepadKeyCode","Default":null}],"Name":"GamepadSupports","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetConnectedGamepads","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetDeviceAcceleration","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetDeviceGravity","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"GetDeviceRotation","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetFocusedTextBox","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null}],"Name":"GetGamepadConnected","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null}],"Name":"GetGamepadState","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetKeysPressed","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"UserInputType","Arguments":[],"Name":"GetLastInputType","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetNavigationGamepads","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Platform","Arguments":[],"Name":"GetPlatform","tags":["RobloxScriptSecurity"],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null}],"Name":"GetSupportedGamepadKeyCodes","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[{"Type":"UserCFrame","Name":"type","Default":null}],"Name":"GetUserCFrame","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"KeyCode","Name":"keyCode","Default":null}],"Name":"IsKeyDown","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"gamepadEnum","Default":null}],"Name":"IsNavigationGamepad","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RecenterUserHeadCFrame","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"gamepadEnum","Default":null},{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetNavigationGamepad","tags":[],"Class":"UserInputService","type":"Function"},{"Arguments":[{"Name":"acceleration","Type":"Instance"}],"Name":"DeviceAccelerationChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"gravity","Type":"Instance"}],"Name":"DeviceGravityChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"rotation","Type":"Instance"},{"Name":"cframe","Type":"CoordinateFrame"}],"Name":"DeviceRotationChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"gamepadNum","Type":"UserInputType"}],"Name":"GamepadConnected","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"gamepadNum","Type":"UserInputType"}],"Name":"GamepadDisconnected","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"InputBegan","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"InputChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"InputEnded","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[],"Name":"JumpRequest","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"lastInputType","Type":"UserInputType"}],"Name":"LastInputTypeChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"textboxReleased","Type":"Instance"}],"Name":"TextBoxFocusReleased","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"textboxFocused","Type":"Instance"}],"Name":"TextBoxFocused","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touch","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchEnded","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchLongPress","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touch","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchMoved","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"totalTranslation","Type":"Vector2"},{"Name":"velocity","Type":"Vector2"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchPan","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"scale","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchPinch","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"rotation","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchRotate","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touch","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchStarted","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"swipeDirection","Type":"SwipeDirection"},{"Name":"numberOfTouches","Type":"int"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchSwipe","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchTap","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"type","Type":"UserCFrame"},{"Name":"value","Type":"CoordinateFrame"}],"Name":"UserCFrameChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[],"Name":"WindowFocusReleased","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[],"Name":"WindowFocused","tags":[],"Class":"UserInputService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Vector3Value","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Value","tags":[],"Class":"Vector3Value"},{"Arguments":[{"Name":"value","Type":"Vector3"}],"Name":"Changed","tags":[],"Class":"Vector3Value","type":"Event"},{"Arguments":[{"Name":"value","Type":"Vector3"}],"Name":"changed","tags":["deprecated"],"Class":"Vector3Value","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"VirtualUser","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button1Down","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button1Up","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button2Down","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button2Up","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"CaptureController","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"ClickButton1","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"ClickButton2","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"MoveMouse","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"SetKeyDown","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"SetKeyUp","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StartRecording","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"StopRecording","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"TypeKey","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Visit","tags":["notCreatable"]},{"ReturnType":"string","Arguments":[],"Name":"GetUploadUrl","tags":["RobloxSecurity"],"Class":"Visit","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"pingUrl","Default":null},{"Type":"int","Name":"interval","Default":null}],"Name":"SetPing","tags":["RobloxSecurity"],"Class":"Visit","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetUploadUrl","tags":["RobloxSecurity"],"Class":"Visit","type":"Function"},{"type":"Enum","Name":"AASamples","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":1,"Enum":"AASamples"},{"type":"EnumItem","Name":"4","tags":[],"Value":4,"Enum":"AASamples"},{"type":"EnumItem","Name":"8","tags":[],"Value":8,"Enum":"AASamples"},{"type":"Enum","Name":"AccessType","tags":[]},{"type":"EnumItem","Name":"Me","tags":[],"Value":0,"Enum":"AccessType"},{"type":"EnumItem","Name":"Friends","tags":[],"Value":1,"Enum":"AccessType"},{"type":"EnumItem","Name":"Everyone","tags":[],"Value":2,"Enum":"AccessType"},{"type":"EnumItem","Name":"InviteOnly","tags":[],"Value":3,"Enum":"AccessType"},{"type":"Enum","Name":"ActionType","tags":[]},{"type":"EnumItem","Name":"Nothing","tags":[],"Value":0,"Enum":"ActionType"},{"type":"EnumItem","Name":"Pause","tags":[],"Value":1,"Enum":"ActionType"},{"type":"EnumItem","Name":"Lose","tags":[],"Value":2,"Enum":"ActionType"},{"type":"EnumItem","Name":"Draw","tags":[],"Value":3,"Enum":"ActionType"},{"type":"EnumItem","Name":"Win","tags":[],"Value":4,"Enum":"ActionType"},{"type":"Enum","Name":"ActuatorType","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"ActuatorType"},{"type":"EnumItem","Name":"Motor","tags":[],"Value":1,"Enum":"ActuatorType"},{"type":"EnumItem","Name":"Servo","tags":[],"Value":2,"Enum":"ActuatorType"},{"type":"Enum","Name":"AnimationPriority","tags":[]},{"type":"EnumItem","Name":"Idle","tags":[],"Value":0,"Enum":"AnimationPriority"},{"type":"EnumItem","Name":"Movement","tags":[],"Value":1,"Enum":"AnimationPriority"},{"type":"EnumItem","Name":"Action","tags":[],"Value":2,"Enum":"AnimationPriority"},{"type":"EnumItem","Name":"Core","tags":[],"Value":1000,"Enum":"AnimationPriority"},{"type":"Enum","Name":"Antialiasing","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"Antialiasing"},{"type":"EnumItem","Name":"Off","tags":[],"Value":2,"Enum":"Antialiasing"},{"type":"EnumItem","Name":"On","tags":[],"Value":1,"Enum":"Antialiasing"},{"type":"Enum","Name":"Axis","tags":[]},{"type":"EnumItem","Name":"X","tags":[],"Value":0,"Enum":"Axis"},{"type":"EnumItem","Name":"Y","tags":[],"Value":1,"Enum":"Axis"},{"type":"EnumItem","Name":"Z","tags":[],"Value":2,"Enum":"Axis"},{"type":"Enum","Name":"BinType","tags":[]},{"type":"EnumItem","Name":"Script","tags":[],"Value":0,"Enum":"BinType"},{"type":"EnumItem","Name":"GameTool","tags":[],"Value":1,"Enum":"BinType"},{"type":"EnumItem","Name":"Grab","tags":[],"Value":2,"Enum":"BinType"},{"type":"EnumItem","Name":"Clone","tags":[],"Value":3,"Enum":"BinType"},{"type":"EnumItem","Name":"Hammer","tags":[],"Value":4,"Enum":"BinType"},{"type":"Enum","Name":"BodyPart","tags":[]},{"type":"EnumItem","Name":"Head","tags":[],"Value":0,"Enum":"BodyPart"},{"type":"EnumItem","Name":"Torso","tags":[],"Value":1,"Enum":"BodyPart"},{"type":"EnumItem","Name":"LeftArm","tags":[],"Value":2,"Enum":"BodyPart"},{"type":"EnumItem","Name":"RightArm","tags":[],"Value":3,"Enum":"BodyPart"},{"type":"EnumItem","Name":"LeftLeg","tags":[],"Value":4,"Enum":"BodyPart"},{"type":"EnumItem","Name":"RightLeg","tags":[],"Value":5,"Enum":"BodyPart"},{"type":"Enum","Name":"Button","tags":[]},{"type":"EnumItem","Name":"Jump","tags":[],"Value":32,"Enum":"Button"},{"type":"EnumItem","Name":"Dismount","tags":[],"Value":8,"Enum":"Button"},{"type":"Enum","Name":"ButtonStyle","tags":[]},{"type":"EnumItem","Name":"Custom","tags":[],"Value":0,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxButtonDefault","tags":[],"Value":1,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxButton","tags":[],"Value":2,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxRoundButton","tags":[],"Value":3,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxRoundDefaultButton","tags":[],"Value":4,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxRoundDropdownButton","tags":[],"Value":5,"Enum":"ButtonStyle"},{"type":"Enum","Name":"CameraMode","tags":[]},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"CameraMode"},{"type":"EnumItem","Name":"LockFirstPerson","tags":[],"Value":1,"Enum":"CameraMode"},{"type":"Enum","Name":"CameraPanMode","tags":[]},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"CameraPanMode"},{"type":"EnumItem","Name":"EdgeBump","tags":[],"Value":1,"Enum":"CameraPanMode"},{"type":"Enum","Name":"CameraType","tags":[]},{"type":"EnumItem","Name":"Fixed","tags":[],"Value":0,"Enum":"CameraType"},{"type":"EnumItem","Name":"Watch","tags":[],"Value":2,"Enum":"CameraType"},{"type":"EnumItem","Name":"Attach","tags":[],"Value":1,"Enum":"CameraType"},{"type":"EnumItem","Name":"Track","tags":[],"Value":3,"Enum":"CameraType"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":4,"Enum":"CameraType"},{"type":"EnumItem","Name":"Custom","tags":[],"Value":5,"Enum":"CameraType"},{"type":"EnumItem","Name":"Scriptable","tags":[],"Value":6,"Enum":"CameraType"},{"type":"Enum","Name":"CellBlock","tags":[]},{"type":"EnumItem","Name":"Solid","tags":[],"Value":0,"Enum":"CellBlock"},{"type":"EnumItem","Name":"VerticalWedge","tags":[],"Value":1,"Enum":"CellBlock"},{"type":"EnumItem","Name":"CornerWedge","tags":[],"Value":2,"Enum":"CellBlock"},{"type":"EnumItem","Name":"InverseCornerWedge","tags":[],"Value":3,"Enum":"CellBlock"},{"type":"EnumItem","Name":"HorizontalWedge","tags":[],"Value":4,"Enum":"CellBlock"},{"type":"Enum","Name":"CellMaterial","tags":[]},{"type":"EnumItem","Name":"Empty","tags":[],"Value":0,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Grass","tags":[],"Value":1,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Sand","tags":[],"Value":2,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":3,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Granite","tags":[],"Value":4,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Asphalt","tags":[],"Value":5,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Iron","tags":[],"Value":6,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Aluminum","tags":[],"Value":7,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Gold","tags":[],"Value":8,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"WoodPlank","tags":[],"Value":9,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"WoodLog","tags":[],"Value":10,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Gravel","tags":[],"Value":11,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"CinderBlock","tags":[],"Value":12,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"MossyStone","tags":[],"Value":13,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Cement","tags":[],"Value":14,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"RedPlastic","tags":[],"Value":15,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"BluePlastic","tags":[],"Value":16,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Water","tags":[],"Value":17,"Enum":"CellMaterial"},{"type":"Enum","Name":"CellOrientation","tags":[]},{"type":"EnumItem","Name":"NegZ","tags":[],"Value":0,"Enum":"CellOrientation"},{"type":"EnumItem","Name":"X","tags":[],"Value":1,"Enum":"CellOrientation"},{"type":"EnumItem","Name":"Z","tags":[],"Value":2,"Enum":"CellOrientation"},{"type":"EnumItem","Name":"NegX","tags":[],"Value":3,"Enum":"CellOrientation"},{"type":"Enum","Name":"CenterDialogType","tags":[]},{"type":"EnumItem","Name":"UnsolicitedDialog","tags":[],"Value":1,"Enum":"CenterDialogType"},{"type":"EnumItem","Name":"PlayerInitiatedDialog","tags":[],"Value":2,"Enum":"CenterDialogType"},{"type":"EnumItem","Name":"ModalDialog","tags":[],"Value":3,"Enum":"CenterDialogType"},{"type":"EnumItem","Name":"QuitDialog","tags":[],"Value":4,"Enum":"CenterDialogType"},{"type":"Enum","Name":"ChatColor","tags":[]},{"type":"EnumItem","Name":"Blue","tags":[],"Value":0,"Enum":"ChatColor"},{"type":"EnumItem","Name":"Green","tags":[],"Value":1,"Enum":"ChatColor"},{"type":"EnumItem","Name":"Red","tags":[],"Value":2,"Enum":"ChatColor"},{"type":"Enum","Name":"ChatMode","tags":[]},{"type":"EnumItem","Name":"Menu","tags":[],"Value":0,"Enum":"ChatMode"},{"type":"EnumItem","Name":"TextAndMenu","tags":[],"Value":1,"Enum":"ChatMode"},{"type":"Enum","Name":"ChatStyle","tags":[]},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"ChatStyle"},{"type":"EnumItem","Name":"Bubble","tags":[],"Value":1,"Enum":"ChatStyle"},{"type":"EnumItem","Name":"ClassicAndBubble","tags":[],"Value":2,"Enum":"ChatStyle"},{"type":"Enum","Name":"CollisionFidelity","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"CollisionFidelity"},{"type":"EnumItem","Name":"Hull","tags":[],"Value":1,"Enum":"CollisionFidelity"},{"type":"EnumItem","Name":"Box","tags":[],"Value":2,"Enum":"CollisionFidelity"},{"type":"Enum","Name":"ComputerCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"ComputerCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"ComputerCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"ComputerCameraMovementMode"},{"type":"Enum","Name":"ComputerMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"ComputerMovementMode"},{"type":"EnumItem","Name":"KeyboardMouse","tags":[],"Value":1,"Enum":"ComputerMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":2,"Enum":"ComputerMovementMode"},{"type":"Enum","Name":"ConcurrencyModel","tags":[]},{"type":"EnumItem","Name":"Serial","tags":[],"Value":0,"Enum":"ConcurrencyModel"},{"type":"EnumItem","Name":"Safe","tags":[],"Value":1,"Enum":"ConcurrencyModel"},{"type":"EnumItem","Name":"Logical","tags":[],"Value":2,"Enum":"ConcurrencyModel"},{"type":"EnumItem","Name":"Empirical","tags":[],"Value":3,"Enum":"ConcurrencyModel"},{"type":"Enum","Name":"ControlMode","tags":[]},{"type":"EnumItem","Name":"MouseLockSwitch","tags":[],"Value":1,"Enum":"ControlMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"ControlMode"},{"type":"Enum","Name":"CoreGuiType","tags":[]},{"type":"EnumItem","Name":"PlayerList","tags":[],"Value":0,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"Health","tags":[],"Value":1,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"Backpack","tags":[],"Value":2,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"Chat","tags":[],"Value":3,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"All","tags":[],"Value":4,"Enum":"CoreGuiType"},{"type":"Enum","Name":"CreatorType","tags":[]},{"type":"EnumItem","Name":"User","tags":[],"Value":0,"Enum":"CreatorType"},{"type":"EnumItem","Name":"Group","tags":[],"Value":1,"Enum":"CreatorType"},{"type":"Enum","Name":"CurrencyType","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"CurrencyType"},{"type":"EnumItem","Name":"Robux","tags":[],"Value":1,"Enum":"CurrencyType"},{"type":"EnumItem","Name":"Tix","tags":[],"Value":2,"Enum":"CurrencyType"},{"type":"Enum","Name":"CustomCameraMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"CustomCameraMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"CustomCameraMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"CustomCameraMode"},{"type":"Enum","Name":"DevCameraOcclusionMode","tags":[]},{"type":"EnumItem","Name":"Zoom","tags":[],"Value":0,"Enum":"DevCameraOcclusionMode"},{"type":"EnumItem","Name":"Invisicam","tags":[],"Value":1,"Enum":"DevCameraOcclusionMode"},{"type":"Enum","Name":"DevComputerCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevComputerCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"DevComputerCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"DevComputerCameraMovementMode"},{"type":"Enum","Name":"DevComputerMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevComputerMovementMode"},{"type":"EnumItem","Name":"KeyboardMouse","tags":[],"Value":1,"Enum":"DevComputerMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":2,"Enum":"DevComputerMovementMode"},{"type":"EnumItem","Name":"Scriptable","tags":[],"Value":3,"Enum":"DevComputerMovementMode"},{"type":"Enum","Name":"DevTouchCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevTouchCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"DevTouchCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"DevTouchCameraMovementMode"},{"type":"Enum","Name":"DevTouchMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"Thumbstick","tags":[],"Value":1,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"DPad","tags":[],"Value":2,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"Thumbpad","tags":[],"Value":3,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":4,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"Scriptable","tags":[],"Value":5,"Enum":"DevTouchMovementMode"},{"type":"Enum","Name":"DialogPurpose","tags":[]},{"type":"EnumItem","Name":"Quest","tags":[],"Value":0,"Enum":"DialogPurpose"},{"type":"EnumItem","Name":"Help","tags":[],"Value":1,"Enum":"DialogPurpose"},{"type":"EnumItem","Name":"Shop","tags":[],"Value":2,"Enum":"DialogPurpose"},{"type":"Enum","Name":"DialogTone","tags":[]},{"type":"EnumItem","Name":"Neutral","tags":[],"Value":0,"Enum":"DialogTone"},{"type":"EnumItem","Name":"Friendly","tags":[],"Value":1,"Enum":"DialogTone"},{"type":"EnumItem","Name":"Enemy","tags":[],"Value":2,"Enum":"DialogTone"},{"type":"Enum","Name":"EasingDirection","tags":[]},{"type":"EnumItem","Name":"In","tags":[],"Value":0,"Enum":"EasingDirection"},{"type":"EnumItem","Name":"Out","tags":[],"Value":1,"Enum":"EasingDirection"},{"type":"EnumItem","Name":"InOut","tags":[],"Value":2,"Enum":"EasingDirection"},{"type":"Enum","Name":"EasingStyle","tags":[]},{"type":"EnumItem","Name":"Linear","tags":[],"Value":0,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Sine","tags":[],"Value":1,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Back","tags":[],"Value":2,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Quad","tags":[],"Value":3,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Quart","tags":[],"Value":4,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Quint","tags":[],"Value":5,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Bounce","tags":[],"Value":6,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Elastic","tags":[],"Value":7,"Enum":"EasingStyle"},{"type":"Enum","Name":"EnviromentalPhysicsThrottle","tags":[]},{"type":"EnumItem","Name":"DefaultAuto","tags":[],"Value":0,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Disabled","tags":[],"Value":1,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Always","tags":[],"Value":2,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip2","tags":[],"Value":3,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip4","tags":[],"Value":4,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip8","tags":[],"Value":5,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip16","tags":[],"Value":6,"Enum":"EnviromentalPhysicsThrottle"},{"type":"Enum","Name":"ErrorReporting","tags":[]},{"type":"EnumItem","Name":"DontReport","tags":[],"Value":0,"Enum":"ErrorReporting"},{"type":"EnumItem","Name":"Prompt","tags":[],"Value":1,"Enum":"ErrorReporting"},{"type":"EnumItem","Name":"Report","tags":[],"Value":2,"Enum":"ErrorReporting"},{"type":"Enum","Name":"ExplosionType","tags":[]},{"type":"EnumItem","Name":"NoCraters","tags":[],"Value":0,"Enum":"ExplosionType"},{"type":"EnumItem","Name":"Craters","tags":[],"Value":1,"Enum":"ExplosionType"},{"type":"EnumItem","Name":"CratersAndDebris","tags":[],"Value":2,"Enum":"ExplosionType"},{"type":"Enum","Name":"FilterResult","tags":[]},{"type":"EnumItem","Name":"Rejected","tags":[],"Value":1,"Enum":"FilterResult"},{"type":"EnumItem","Name":"Accepted","tags":[],"Value":0,"Enum":"FilterResult"},{"type":"Enum","Name":"Font","tags":[]},{"type":"EnumItem","Name":"Legacy","tags":[],"Value":0,"Enum":"Font"},{"type":"EnumItem","Name":"Arial","tags":[],"Value":1,"Enum":"Font"},{"type":"EnumItem","Name":"ArialBold","tags":[],"Value":2,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSans","tags":[],"Value":3,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSansBold","tags":[],"Value":4,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSansLight","tags":[],"Value":5,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSansItalic","tags":[],"Value":6,"Enum":"Font"},{"type":"Enum","Name":"FontSize","tags":[]},{"type":"EnumItem","Name":"Size8","tags":[],"Value":0,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size9","tags":[],"Value":1,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size10","tags":[],"Value":2,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size11","tags":[],"Value":3,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size12","tags":[],"Value":4,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size14","tags":[],"Value":5,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size18","tags":[],"Value":6,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size24","tags":[],"Value":7,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size36","tags":[],"Value":8,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size48","tags":[],"Value":9,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size28","tags":[],"Value":10,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size32","tags":[],"Value":11,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size42","tags":[],"Value":12,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size60","tags":[],"Value":13,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size96","tags":[],"Value":14,"Enum":"FontSize"},{"type":"Enum","Name":"FormFactor","tags":[]},{"type":"EnumItem","Name":"Symmetric","tags":[],"Value":0,"Enum":"FormFactor"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":1,"Enum":"FormFactor"},{"type":"EnumItem","Name":"Plate","tags":[],"Value":2,"Enum":"FormFactor"},{"type":"EnumItem","Name":"Custom","tags":[],"Value":3,"Enum":"FormFactor"},{"type":"Enum","Name":"FrameStyle","tags":[]},{"type":"EnumItem","Name":"Custom","tags":[],"Value":0,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"ChatBlue","tags":[],"Value":1,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"RobloxSquare","tags":[],"Value":2,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"RobloxRound","tags":[],"Value":3,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"ChatGreen","tags":[],"Value":4,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"ChatRed","tags":[],"Value":5,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"DropShadow","tags":[],"Value":6,"Enum":"FrameStyle"},{"type":"Enum","Name":"FramerateManagerMode","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"FramerateManagerMode"},{"type":"EnumItem","Name":"On","tags":[],"Value":1,"Enum":"FramerateManagerMode"},{"type":"EnumItem","Name":"Off","tags":[],"Value":2,"Enum":"FramerateManagerMode"},{"type":"Enum","Name":"FriendRequestEvent","tags":[]},{"type":"EnumItem","Name":"Issue","tags":[],"Value":0,"Enum":"FriendRequestEvent"},{"type":"EnumItem","Name":"Revoke","tags":[],"Value":1,"Enum":"FriendRequestEvent"},{"type":"EnumItem","Name":"Accept","tags":[],"Value":2,"Enum":"FriendRequestEvent"},{"type":"EnumItem","Name":"Deny","tags":[],"Value":3,"Enum":"FriendRequestEvent"},{"type":"Enum","Name":"FriendStatus","tags":[]},{"type":"EnumItem","Name":"Unknown","tags":[],"Value":0,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"NotFriend","tags":[],"Value":1,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"Friend","tags":[],"Value":2,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"FriendRequestSent","tags":[],"Value":3,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"FriendRequestReceived","tags":[],"Value":4,"Enum":"FriendStatus"},{"type":"Enum","Name":"FunctionalTestResult","tags":[]},{"type":"EnumItem","Name":"Passed","tags":[],"Value":0,"Enum":"FunctionalTestResult"},{"type":"EnumItem","Name":"Warning","tags":[],"Value":1,"Enum":"FunctionalTestResult"},{"type":"EnumItem","Name":"Error","tags":[],"Value":2,"Enum":"FunctionalTestResult"},{"type":"Enum","Name":"GearGenreSetting","tags":[]},{"type":"EnumItem","Name":"AllGenres","tags":[],"Value":0,"Enum":"GearGenreSetting"},{"type":"EnumItem","Name":"MatchingGenreOnly","tags":[],"Value":1,"Enum":"GearGenreSetting"},{"type":"Enum","Name":"GearType","tags":[]},{"type":"EnumItem","Name":"MeleeWeapons","tags":[],"Value":0,"Enum":"GearType"},{"type":"EnumItem","Name":"RangedWeapons","tags":[],"Value":1,"Enum":"GearType"},{"type":"EnumItem","Name":"Explosives","tags":[],"Value":2,"Enum":"GearType"},{"type":"EnumItem","Name":"PowerUps","tags":[],"Value":3,"Enum":"GearType"},{"type":"EnumItem","Name":"NavigationEnhancers","tags":[],"Value":4,"Enum":"GearType"},{"type":"EnumItem","Name":"MusicalInstruments","tags":[],"Value":5,"Enum":"GearType"},{"type":"EnumItem","Name":"SocialItems","tags":[],"Value":6,"Enum":"GearType"},{"type":"EnumItem","Name":"BuildingTools","tags":[],"Value":7,"Enum":"GearType"},{"type":"EnumItem","Name":"Transport","tags":[],"Value":8,"Enum":"GearType"},{"type":"Enum","Name":"Genre","tags":[]},{"type":"EnumItem","Name":"All","tags":[],"Value":0,"Enum":"Genre"},{"type":"EnumItem","Name":"TownAndCity","tags":[],"Value":1,"Enum":"Genre"},{"type":"EnumItem","Name":"Fantasy","tags":[],"Value":2,"Enum":"Genre"},{"type":"EnumItem","Name":"SciFi","tags":[],"Value":3,"Enum":"Genre"},{"type":"EnumItem","Name":"Ninja","tags":[],"Value":4,"Enum":"Genre"},{"type":"EnumItem","Name":"Scary","tags":[],"Value":5,"Enum":"Genre"},{"type":"EnumItem","Name":"Pirate","tags":[],"Value":6,"Enum":"Genre"},{"type":"EnumItem","Name":"Adventure","tags":[],"Value":7,"Enum":"Genre"},{"type":"EnumItem","Name":"Sports","tags":[],"Value":8,"Enum":"Genre"},{"type":"EnumItem","Name":"Funny","tags":[],"Value":9,"Enum":"Genre"},{"type":"EnumItem","Name":"WildWest","tags":[],"Value":10,"Enum":"Genre"},{"type":"EnumItem","Name":"War","tags":[],"Value":11,"Enum":"Genre"},{"type":"EnumItem","Name":"SkatePark","tags":[],"Value":12,"Enum":"Genre"},{"type":"EnumItem","Name":"Tutorial","tags":[],"Value":13,"Enum":"Genre"},{"type":"Enum","Name":"GraphicsMode","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":1,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"Direct3D9","tags":[],"Value":3,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"Direct3D11","tags":[],"Value":2,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"OpenGL","tags":[],"Value":4,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"NoGraphics","tags":[],"Value":5,"Enum":"GraphicsMode"},{"type":"Enum","Name":"HandlesStyle","tags":[]},{"type":"EnumItem","Name":"Resize","tags":[],"Value":0,"Enum":"HandlesStyle"},{"type":"EnumItem","Name":"Movement","tags":[],"Value":1,"Enum":"HandlesStyle"},{"type":"Enum","Name":"HttpContentType","tags":[]},{"type":"EnumItem","Name":"ApplicationJson","tags":[],"Value":0,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"ApplicationXml","tags":[],"Value":1,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"ApplicationUrlEncoded","tags":[],"Value":2,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"TextPlain","tags":[],"Value":3,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"TextXml","tags":[],"Value":4,"Enum":"HttpContentType"},{"type":"Enum","Name":"HumanoidDisplayDistanceType","tags":[]},{"type":"EnumItem","Name":"Viewer","tags":[],"Value":0,"Enum":"HumanoidDisplayDistanceType"},{"type":"EnumItem","Name":"Subject","tags":[],"Value":1,"Enum":"HumanoidDisplayDistanceType"},{"type":"EnumItem","Name":"None","tags":[],"Value":2,"Enum":"HumanoidDisplayDistanceType"},{"type":"Enum","Name":"HumanoidRigType","tags":[]},{"type":"EnumItem","Name":"R6","tags":[],"Value":0,"Enum":"HumanoidRigType"},{"type":"EnumItem","Name":"R15","tags":[],"Value":1,"Enum":"HumanoidRigType"},{"type":"Enum","Name":"HumanoidStateType","tags":[]},{"type":"EnumItem","Name":"FallingDown","tags":[],"Value":0,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Running","tags":[],"Value":8,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"RunningNoPhysics","tags":[],"Value":10,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Climbing","tags":[],"Value":12,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"StrafingNoPhysics","tags":[],"Value":11,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Ragdoll","tags":[],"Value":1,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"GettingUp","tags":[],"Value":2,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Jumping","tags":[],"Value":3,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Landed","tags":[],"Value":7,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Flying","tags":[],"Value":6,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Freefall","tags":[],"Value":5,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Seated","tags":[],"Value":13,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"PlatformStanding","tags":[],"Value":14,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Dead","tags":[],"Value":15,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Swimming","tags":[],"Value":4,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Physics","tags":[],"Value":16,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"None","tags":[],"Value":18,"Enum":"HumanoidStateType"},{"type":"Enum","Name":"InOut","tags":[]},{"type":"EnumItem","Name":"Edge","tags":[],"Value":0,"Enum":"InOut"},{"type":"EnumItem","Name":"Inset","tags":[],"Value":1,"Enum":"InOut"},{"type":"EnumItem","Name":"Center","tags":[],"Value":2,"Enum":"InOut"},{"type":"Enum","Name":"InfoType","tags":[]},{"type":"EnumItem","Name":"Asset","tags":[],"Value":0,"Enum":"InfoType"},{"type":"EnumItem","Name":"Product","tags":[],"Value":1,"Enum":"InfoType"},{"type":"Enum","Name":"InputType","tags":[]},{"type":"EnumItem","Name":"NoInput","tags":[],"Value":0,"Enum":"InputType"},{"type":"EnumItem","Name":"LeftTread","tags":[],"Value":1,"Enum":"InputType"},{"type":"EnumItem","Name":"RightTread","tags":[],"Value":2,"Enum":"InputType"},{"type":"EnumItem","Name":"Steer","tags":[],"Value":3,"Enum":"InputType"},{"type":"EnumItem","Name":"Throtle","tags":[],"Value":4,"Enum":"InputType"},{"type":"EnumItem","Name":"UpDown","tags":[],"Value":6,"Enum":"InputType"},{"type":"EnumItem","Name":"Action1","tags":[],"Value":7,"Enum":"InputType"},{"type":"EnumItem","Name":"Action2","tags":[],"Value":8,"Enum":"InputType"},{"type":"EnumItem","Name":"Action3","tags":[],"Value":9,"Enum":"InputType"},{"type":"EnumItem","Name":"Action4","tags":[],"Value":10,"Enum":"InputType"},{"type":"EnumItem","Name":"Action5","tags":[],"Value":11,"Enum":"InputType"},{"type":"EnumItem","Name":"Constant","tags":[],"Value":12,"Enum":"InputType"},{"type":"EnumItem","Name":"Sin","tags":[],"Value":13,"Enum":"InputType"},{"type":"Enum","Name":"JointCreationMode","tags":[]},{"type":"EnumItem","Name":"All","tags":[],"Value":0,"Enum":"JointCreationMode"},{"type":"EnumItem","Name":"Surface","tags":[],"Value":1,"Enum":"JointCreationMode"},{"type":"EnumItem","Name":"None","tags":[],"Value":2,"Enum":"JointCreationMode"},{"type":"Enum","Name":"JointType","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":22,"Enum":"JointType"},{"type":"EnumItem","Name":"Rotate","tags":[],"Value":6,"Enum":"JointType"},{"type":"EnumItem","Name":"RotateP","tags":[],"Value":7,"Enum":"JointType"},{"type":"EnumItem","Name":"RotateV","tags":[],"Value":8,"Enum":"JointType"},{"type":"EnumItem","Name":"Glue","tags":[],"Value":9,"Enum":"JointType"},{"type":"EnumItem","Name":"Weld","tags":[],"Value":1,"Enum":"JointType"},{"type":"EnumItem","Name":"Snap","tags":[],"Value":3,"Enum":"JointType"},{"type":"Enum","Name":"KeyCode","tags":[]},{"type":"EnumItem","Name":"Unknown","tags":[],"Value":0,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Backspace","tags":[],"Value":8,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Tab","tags":[],"Value":9,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Clear","tags":[],"Value":12,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Return","tags":[],"Value":13,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Pause","tags":[],"Value":19,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Escape","tags":[],"Value":27,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Space","tags":[],"Value":32,"Enum":"KeyCode"},{"type":"EnumItem","Name":"QuotedDouble","tags":[],"Value":34,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Hash","tags":[],"Value":35,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Dollar","tags":[],"Value":36,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Percent","tags":[],"Value":37,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Ampersand","tags":[],"Value":38,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Quote","tags":[],"Value":39,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftParenthesis","tags":[],"Value":40,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightParenthesis","tags":[],"Value":41,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Asterisk","tags":[],"Value":42,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Plus","tags":[],"Value":43,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Comma","tags":[],"Value":44,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Minus","tags":[],"Value":45,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Period","tags":[],"Value":46,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Slash","tags":[],"Value":47,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Zero","tags":[],"Value":48,"Enum":"KeyCode"},{"type":"EnumItem","Name":"One","tags":[],"Value":49,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Two","tags":[],"Value":50,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Three","tags":[],"Value":51,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Four","tags":[],"Value":52,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Five","tags":[],"Value":53,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Six","tags":[],"Value":54,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Seven","tags":[],"Value":55,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Eight","tags":[],"Value":56,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Nine","tags":[],"Value":57,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Colon","tags":[],"Value":58,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Semicolon","tags":[],"Value":59,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LessThan","tags":[],"Value":60,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Equals","tags":[],"Value":61,"Enum":"KeyCode"},{"type":"EnumItem","Name":"GreaterThan","tags":[],"Value":62,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Question","tags":[],"Value":63,"Enum":"KeyCode"},{"type":"EnumItem","Name":"At","tags":[],"Value":64,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftBracket","tags":[],"Value":91,"Enum":"KeyCode"},{"type":"EnumItem","Name":"BackSlash","tags":[],"Value":92,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightBracket","tags":[],"Value":93,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Caret","tags":[],"Value":94,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Underscore","tags":[],"Value":95,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Backquote","tags":[],"Value":96,"Enum":"KeyCode"},{"type":"EnumItem","Name":"A","tags":[],"Value":97,"Enum":"KeyCode"},{"type":"EnumItem","Name":"B","tags":[],"Value":98,"Enum":"KeyCode"},{"type":"EnumItem","Name":"C","tags":[],"Value":99,"Enum":"KeyCode"},{"type":"EnumItem","Name":"D","tags":[],"Value":100,"Enum":"KeyCode"},{"type":"EnumItem","Name":"E","tags":[],"Value":101,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F","tags":[],"Value":102,"Enum":"KeyCode"},{"type":"EnumItem","Name":"G","tags":[],"Value":103,"Enum":"KeyCode"},{"type":"EnumItem","Name":"H","tags":[],"Value":104,"Enum":"KeyCode"},{"type":"EnumItem","Name":"I","tags":[],"Value":105,"Enum":"KeyCode"},{"type":"EnumItem","Name":"J","tags":[],"Value":106,"Enum":"KeyCode"},{"type":"EnumItem","Name":"K","tags":[],"Value":107,"Enum":"KeyCode"},{"type":"EnumItem","Name":"L","tags":[],"Value":108,"Enum":"KeyCode"},{"type":"EnumItem","Name":"M","tags":[],"Value":109,"Enum":"KeyCode"},{"type":"EnumItem","Name":"N","tags":[],"Value":110,"Enum":"KeyCode"},{"type":"EnumItem","Name":"O","tags":[],"Value":111,"Enum":"KeyCode"},{"type":"EnumItem","Name":"P","tags":[],"Value":112,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Q","tags":[],"Value":113,"Enum":"KeyCode"},{"type":"EnumItem","Name":"R","tags":[],"Value":114,"Enum":"KeyCode"},{"type":"EnumItem","Name":"S","tags":[],"Value":115,"Enum":"KeyCode"},{"type":"EnumItem","Name":"T","tags":[],"Value":116,"Enum":"KeyCode"},{"type":"EnumItem","Name":"U","tags":[],"Value":117,"Enum":"KeyCode"},{"type":"EnumItem","Name":"V","tags":[],"Value":118,"Enum":"KeyCode"},{"type":"EnumItem","Name":"W","tags":[],"Value":119,"Enum":"KeyCode"},{"type":"EnumItem","Name":"X","tags":[],"Value":120,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Y","tags":[],"Value":121,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Z","tags":[],"Value":122,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftCurly","tags":[],"Value":123,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Pipe","tags":[],"Value":124,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightCurly","tags":[],"Value":125,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Tilde","tags":[],"Value":126,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Delete","tags":[],"Value":127,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadZero","tags":[],"Value":256,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadOne","tags":[],"Value":257,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadTwo","tags":[],"Value":258,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadThree","tags":[],"Value":259,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadFour","tags":[],"Value":260,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadFive","tags":[],"Value":261,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadSix","tags":[],"Value":262,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadSeven","tags":[],"Value":263,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadEight","tags":[],"Value":264,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadNine","tags":[],"Value":265,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadPeriod","tags":[],"Value":266,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadDivide","tags":[],"Value":267,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadMultiply","tags":[],"Value":268,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadMinus","tags":[],"Value":269,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadPlus","tags":[],"Value":270,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadEnter","tags":[],"Value":271,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadEquals","tags":[],"Value":272,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Up","tags":[],"Value":273,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Down","tags":[],"Value":274,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Right","tags":[],"Value":275,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Left","tags":[],"Value":276,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Insert","tags":[],"Value":277,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Home","tags":[],"Value":278,"Enum":"KeyCode"},{"type":"EnumItem","Name":"End","tags":[],"Value":279,"Enum":"KeyCode"},{"type":"EnumItem","Name":"PageUp","tags":[],"Value":280,"Enum":"KeyCode"},{"type":"EnumItem","Name":"PageDown","tags":[],"Value":281,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftShift","tags":[],"Value":304,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightShift","tags":[],"Value":303,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftMeta","tags":[],"Value":310,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightMeta","tags":[],"Value":309,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftAlt","tags":[],"Value":308,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightAlt","tags":[],"Value":307,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftControl","tags":[],"Value":306,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightControl","tags":[],"Value":305,"Enum":"KeyCode"},{"type":"EnumItem","Name":"CapsLock","tags":[],"Value":301,"Enum":"KeyCode"},{"type":"EnumItem","Name":"NumLock","tags":[],"Value":300,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ScrollLock","tags":[],"Value":302,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftSuper","tags":[],"Value":311,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightSuper","tags":[],"Value":312,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Mode","tags":[],"Value":313,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Compose","tags":[],"Value":314,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Help","tags":[],"Value":315,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Print","tags":[],"Value":316,"Enum":"KeyCode"},{"type":"EnumItem","Name":"SysReq","tags":[],"Value":317,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Break","tags":[],"Value":318,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Menu","tags":[],"Value":319,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Power","tags":[],"Value":320,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Euro","tags":[],"Value":321,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Undo","tags":[],"Value":322,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F1","tags":[],"Value":282,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F2","tags":[],"Value":283,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F3","tags":[],"Value":284,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F4","tags":[],"Value":285,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F5","tags":[],"Value":286,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F6","tags":[],"Value":287,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F7","tags":[],"Value":288,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F8","tags":[],"Value":289,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F9","tags":[],"Value":290,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F10","tags":[],"Value":291,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F11","tags":[],"Value":292,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F12","tags":[],"Value":293,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F13","tags":[],"Value":294,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F14","tags":[],"Value":295,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F15","tags":[],"Value":296,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World0","tags":[],"Value":160,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World1","tags":[],"Value":161,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World2","tags":[],"Value":162,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World3","tags":[],"Value":163,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World4","tags":[],"Value":164,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World5","tags":[],"Value":165,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World6","tags":[],"Value":166,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World7","tags":[],"Value":167,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World8","tags":[],"Value":168,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World9","tags":[],"Value":169,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World10","tags":[],"Value":170,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World11","tags":[],"Value":171,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World12","tags":[],"Value":172,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World13","tags":[],"Value":173,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World14","tags":[],"Value":174,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World15","tags":[],"Value":175,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World16","tags":[],"Value":176,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World17","tags":[],"Value":177,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World18","tags":[],"Value":178,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World19","tags":[],"Value":179,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World20","tags":[],"Value":180,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World21","tags":[],"Value":181,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World22","tags":[],"Value":182,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World23","tags":[],"Value":183,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World24","tags":[],"Value":184,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World25","tags":[],"Value":185,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World26","tags":[],"Value":186,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World27","tags":[],"Value":187,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World28","tags":[],"Value":188,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World29","tags":[],"Value":189,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World30","tags":[],"Value":190,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World31","tags":[],"Value":191,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World32","tags":[],"Value":192,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World33","tags":[],"Value":193,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World34","tags":[],"Value":194,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World35","tags":[],"Value":195,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World36","tags":[],"Value":196,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World37","tags":[],"Value":197,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World38","tags":[],"Value":198,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World39","tags":[],"Value":199,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World40","tags":[],"Value":200,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World41","tags":[],"Value":201,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World42","tags":[],"Value":202,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World43","tags":[],"Value":203,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World44","tags":[],"Value":204,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World45","tags":[],"Value":205,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World46","tags":[],"Value":206,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World47","tags":[],"Value":207,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World48","tags":[],"Value":208,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World49","tags":[],"Value":209,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World50","tags":[],"Value":210,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World51","tags":[],"Value":211,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World52","tags":[],"Value":212,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World53","tags":[],"Value":213,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World54","tags":[],"Value":214,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World55","tags":[],"Value":215,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World56","tags":[],"Value":216,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World57","tags":[],"Value":217,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World58","tags":[],"Value":218,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World59","tags":[],"Value":219,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World60","tags":[],"Value":220,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World61","tags":[],"Value":221,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World62","tags":[],"Value":222,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World63","tags":[],"Value":223,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World64","tags":[],"Value":224,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World65","tags":[],"Value":225,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World66","tags":[],"Value":226,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World67","tags":[],"Value":227,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World68","tags":[],"Value":228,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World69","tags":[],"Value":229,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World70","tags":[],"Value":230,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World71","tags":[],"Value":231,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World72","tags":[],"Value":232,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World73","tags":[],"Value":233,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World74","tags":[],"Value":234,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World75","tags":[],"Value":235,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World76","tags":[],"Value":236,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World77","tags":[],"Value":237,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World78","tags":[],"Value":238,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World79","tags":[],"Value":239,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World80","tags":[],"Value":240,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World81","tags":[],"Value":241,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World82","tags":[],"Value":242,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World83","tags":[],"Value":243,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World84","tags":[],"Value":244,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World85","tags":[],"Value":245,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World86","tags":[],"Value":246,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World87","tags":[],"Value":247,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World88","tags":[],"Value":248,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World89","tags":[],"Value":249,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World90","tags":[],"Value":250,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World91","tags":[],"Value":251,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World92","tags":[],"Value":252,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World93","tags":[],"Value":253,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World94","tags":[],"Value":254,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World95","tags":[],"Value":255,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonX","tags":[],"Value":1000,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonY","tags":[],"Value":1001,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonA","tags":[],"Value":1002,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonB","tags":[],"Value":1003,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonR1","tags":[],"Value":1004,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonL1","tags":[],"Value":1005,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonR2","tags":[],"Value":1006,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonL2","tags":[],"Value":1007,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonR3","tags":[],"Value":1008,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonL3","tags":[],"Value":1009,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonStart","tags":[],"Value":1010,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonSelect","tags":[],"Value":1011,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadLeft","tags":[],"Value":1012,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadRight","tags":[],"Value":1013,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadUp","tags":[],"Value":1014,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadDown","tags":[],"Value":1015,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Thumbstick1","tags":[],"Value":1016,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Thumbstick2","tags":[],"Value":1017,"Enum":"KeyCode"},{"type":"Enum","Name":"KeywordFilterType","tags":[]},{"type":"EnumItem","Name":"Include","tags":[],"Value":0,"Enum":"KeywordFilterType"},{"type":"EnumItem","Name":"Exclude","tags":[],"Value":1,"Enum":"KeywordFilterType"},{"type":"Enum","Name":"LeftRight","tags":[]},{"type":"EnumItem","Name":"Left","tags":[],"Value":0,"Enum":"LeftRight"},{"type":"EnumItem","Name":"Center","tags":[],"Value":1,"Enum":"LeftRight"},{"type":"EnumItem","Name":"Right","tags":[],"Value":2,"Enum":"LeftRight"},{"type":"Enum","Name":"LevelOfDetailSetting","tags":[]},{"type":"EnumItem","Name":"High","tags":[],"Value":2,"Enum":"LevelOfDetailSetting"},{"type":"EnumItem","Name":"Medium","tags":[],"Value":1,"Enum":"LevelOfDetailSetting"},{"type":"EnumItem","Name":"Low","tags":[],"Value":0,"Enum":"LevelOfDetailSetting"},{"type":"Enum","Name":"ListenerType","tags":[]},{"type":"EnumItem","Name":"Camera","tags":[],"Value":0,"Enum":"ListenerType"},{"type":"EnumItem","Name":"CFrame","tags":[],"Value":1,"Enum":"ListenerType"},{"type":"EnumItem","Name":"ObjectPosition","tags":[],"Value":2,"Enum":"ListenerType"},{"type":"EnumItem","Name":"ObjectCFrame","tags":[],"Value":3,"Enum":"ListenerType"},{"type":"Enum","Name":"Material","tags":[]},{"type":"EnumItem","Name":"Plastic","tags":[],"Value":256,"Enum":"Material"},{"type":"EnumItem","Name":"Wood","tags":[],"Value":512,"Enum":"Material"},{"type":"EnumItem","Name":"Slate","tags":[],"Value":800,"Enum":"Material"},{"type":"EnumItem","Name":"Concrete","tags":[],"Value":816,"Enum":"Material"},{"type":"EnumItem","Name":"CorrodedMetal","tags":[],"Value":1040,"Enum":"Material"},{"type":"EnumItem","Name":"DiamondPlate","tags":[],"Value":1056,"Enum":"Material"},{"type":"EnumItem","Name":"Foil","tags":[],"Value":1072,"Enum":"Material"},{"type":"EnumItem","Name":"Grass","tags":[],"Value":1280,"Enum":"Material"},{"type":"EnumItem","Name":"Ice","tags":[],"Value":1536,"Enum":"Material"},{"type":"EnumItem","Name":"Marble","tags":[],"Value":784,"Enum":"Material"},{"type":"EnumItem","Name":"Granite","tags":[],"Value":832,"Enum":"Material"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":848,"Enum":"Material"},{"type":"EnumItem","Name":"Pebble","tags":[],"Value":864,"Enum":"Material"},{"type":"EnumItem","Name":"Sand","tags":[],"Value":1296,"Enum":"Material"},{"type":"EnumItem","Name":"Fabric","tags":[],"Value":1312,"Enum":"Material"},{"type":"EnumItem","Name":"SmoothPlastic","tags":[],"Value":272,"Enum":"Material"},{"type":"EnumItem","Name":"Metal","tags":[],"Value":1088,"Enum":"Material"},{"type":"EnumItem","Name":"WoodPlanks","tags":[],"Value":528,"Enum":"Material"},{"type":"EnumItem","Name":"Cobblestone","tags":[],"Value":880,"Enum":"Material"},{"type":"EnumItem","Name":"Air","tags":["notbrowsable"],"Value":1792,"Enum":"Material"},{"type":"EnumItem","Name":"Water","tags":["notbrowsable"],"Value":2048,"Enum":"Material"},{"type":"EnumItem","Name":"Rock","tags":["notbrowsable"],"Value":896,"Enum":"Material"},{"type":"EnumItem","Name":"Glacier","tags":["notbrowsable"],"Value":1552,"Enum":"Material"},{"type":"EnumItem","Name":"Snow","tags":["notbrowsable"],"Value":1328,"Enum":"Material"},{"type":"EnumItem","Name":"Sandstone","tags":["notbrowsable"],"Value":912,"Enum":"Material"},{"type":"EnumItem","Name":"Mud","tags":["notbrowsable"],"Value":1344,"Enum":"Material"},{"type":"EnumItem","Name":"Basalt","tags":["notbrowsable"],"Value":788,"Enum":"Material"},{"type":"EnumItem","Name":"Ground","tags":["notbrowsable"],"Value":1360,"Enum":"Material"},{"type":"EnumItem","Name":"CrackedLava","tags":["notbrowsable"],"Value":804,"Enum":"Material"},{"type":"EnumItem","Name":"Neon","tags":[],"Value":288,"Enum":"Material"},{"type":"EnumItem","Name":"Asphalt","tags":["notbrowsable"],"Value":1376,"Enum":"Material"},{"type":"EnumItem","Name":"LeafyGrass","tags":["notbrowsable"],"Value":1284,"Enum":"Material"},{"type":"EnumItem","Name":"Salt","tags":["notbrowsable"],"Value":1392,"Enum":"Material"},{"type":"EnumItem","Name":"Limestone","tags":["notbrowsable"],"Value":820,"Enum":"Material"},{"type":"EnumItem","Name":"Pavement","tags":["notbrowsable"],"Value":836,"Enum":"Material"},{"type":"Enum","Name":"MembershipType","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"MembershipType"},{"type":"EnumItem","Name":"BuildersClub","tags":[],"Value":1,"Enum":"MembershipType"},{"type":"EnumItem","Name":"TurboBuildersClub","tags":[],"Value":2,"Enum":"MembershipType"},{"type":"EnumItem","Name":"OutrageousBuildersClub","tags":[],"Value":3,"Enum":"MembershipType"},{"type":"Enum","Name":"MeshType","tags":[]},{"type":"EnumItem","Name":"Head","tags":[],"Value":0,"Enum":"MeshType"},{"type":"EnumItem","Name":"Torso","tags":[],"Value":1,"Enum":"MeshType"},{"type":"EnumItem","Name":"Wedge","tags":[],"Value":2,"Enum":"MeshType"},{"type":"EnumItem","Name":"Prism","tags":["deprecated"],"Value":7,"Enum":"MeshType"},{"type":"EnumItem","Name":"Pyramid","tags":["deprecated"],"Value":8,"Enum":"MeshType"},{"type":"EnumItem","Name":"ParallelRamp","tags":["deprecated"],"Value":9,"Enum":"MeshType"},{"type":"EnumItem","Name":"RightAngleRamp","tags":["deprecated"],"Value":10,"Enum":"MeshType"},{"type":"EnumItem","Name":"CornerWedge","tags":["deprecated"],"Value":11,"Enum":"MeshType"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":6,"Enum":"MeshType"},{"type":"EnumItem","Name":"Sphere","tags":[],"Value":3,"Enum":"MeshType"},{"type":"EnumItem","Name":"Cylinder","tags":[],"Value":4,"Enum":"MeshType"},{"type":"EnumItem","Name":"FileMesh","tags":[],"Value":5,"Enum":"MeshType"},{"type":"Enum","Name":"MessageType","tags":[]},{"type":"EnumItem","Name":"MessageOutput","tags":[],"Value":0,"Enum":"MessageType"},{"type":"EnumItem","Name":"MessageInfo","tags":[],"Value":1,"Enum":"MessageType"},{"type":"EnumItem","Name":"MessageWarning","tags":[],"Value":2,"Enum":"MessageType"},{"type":"EnumItem","Name":"MessageError","tags":[],"Value":3,"Enum":"MessageType"},{"type":"Enum","Name":"MouseBehavior","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"MouseBehavior"},{"type":"EnumItem","Name":"LockCenter","tags":[],"Value":1,"Enum":"MouseBehavior"},{"type":"EnumItem","Name":"LockCurrentPosition","tags":[],"Value":2,"Enum":"MouseBehavior"},{"type":"Enum","Name":"MoveState","tags":[]},{"type":"EnumItem","Name":"Stopped","tags":[],"Value":0,"Enum":"MoveState"},{"type":"EnumItem","Name":"Coasting","tags":[],"Value":1,"Enum":"MoveState"},{"type":"EnumItem","Name":"Pushing","tags":[],"Value":2,"Enum":"MoveState"},{"type":"EnumItem","Name":"Stopping","tags":[],"Value":3,"Enum":"MoveState"},{"type":"EnumItem","Name":"AirFree","tags":[],"Value":4,"Enum":"MoveState"},{"type":"Enum","Name":"NameOcclusion","tags":[]},{"type":"EnumItem","Name":"OccludeAll","tags":[],"Value":2,"Enum":"NameOcclusion"},{"type":"EnumItem","Name":"EnemyOcclusion","tags":[],"Value":1,"Enum":"NameOcclusion"},{"type":"EnumItem","Name":"NoOcclusion","tags":[],"Value":0,"Enum":"NameOcclusion"},{"type":"Enum","Name":"NetworkOwnership","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"NetworkOwnership"},{"type":"EnumItem","Name":"Manual","tags":[],"Value":1,"Enum":"NetworkOwnership"},{"type":"Enum","Name":"NormalId","tags":[]},{"type":"EnumItem","Name":"Top","tags":[],"Value":1,"Enum":"NormalId"},{"type":"EnumItem","Name":"Bottom","tags":[],"Value":4,"Enum":"NormalId"},{"type":"EnumItem","Name":"Back","tags":[],"Value":2,"Enum":"NormalId"},{"type":"EnumItem","Name":"Front","tags":[],"Value":5,"Enum":"NormalId"},{"type":"EnumItem","Name":"Right","tags":[],"Value":0,"Enum":"NormalId"},{"type":"EnumItem","Name":"Left","tags":[],"Value":3,"Enum":"NormalId"},{"type":"Enum","Name":"OverrideMouseIconBehavior","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"OverrideMouseIconBehavior"},{"type":"EnumItem","Name":"ForceShow","tags":[],"Value":1,"Enum":"OverrideMouseIconBehavior"},{"type":"EnumItem","Name":"ForceHide","tags":[],"Value":2,"Enum":"OverrideMouseIconBehavior"},{"type":"Enum","Name":"PacketPriority","tags":[]},{"type":"EnumItem","Name":"IMMEDIATE_PRIORITY","tags":[],"Value":0,"Enum":"PacketPriority"},{"type":"EnumItem","Name":"HIGH_PRIORITY","tags":[],"Value":1,"Enum":"PacketPriority"},{"type":"EnumItem","Name":"MEDIUM_PRIORITY","tags":[],"Value":2,"Enum":"PacketPriority"},{"type":"EnumItem","Name":"LOW_PRIORITY","tags":[],"Value":3,"Enum":"PacketPriority"},{"type":"Enum","Name":"PacketReliability","tags":[]},{"type":"EnumItem","Name":"UNRELIABLE","tags":[],"Value":0,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"UNRELIABLE_SEQUENCED","tags":[],"Value":1,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"RELIABLE","tags":[],"Value":2,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"RELIABLE_ORDERED","tags":[],"Value":3,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"RELIABLE_SEQUENCED","tags":[],"Value":4,"Enum":"PacketReliability"},{"type":"Enum","Name":"PartType","tags":[]},{"type":"EnumItem","Name":"Ball","tags":[],"Value":0,"Enum":"PartType"},{"type":"EnumItem","Name":"Block","tags":[],"Value":1,"Enum":"PartType"},{"type":"EnumItem","Name":"Cylinder","tags":[],"Value":2,"Enum":"PartType"},{"type":"Enum","Name":"PathStatus","tags":[]},{"type":"EnumItem","Name":"Success","tags":[],"Value":0,"Enum":"PathStatus"},{"type":"EnumItem","Name":"ClosestNoPath","tags":[],"Value":1,"Enum":"PathStatus"},{"type":"EnumItem","Name":"ClosestOutOfRange","tags":[],"Value":2,"Enum":"PathStatus"},{"type":"EnumItem","Name":"FailStartNotEmpty","tags":[],"Value":3,"Enum":"PathStatus"},{"type":"EnumItem","Name":"FailFinishNotEmpty","tags":[],"Value":4,"Enum":"PathStatus"},{"type":"Enum","Name":"PhysicalPropertiesMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":1,"Enum":"PhysicalPropertiesMode"},{"type":"EnumItem","Name":"Legacy","tags":[],"Value":0,"Enum":"PhysicalPropertiesMode"},{"type":"EnumItem","Name":"New","tags":[],"Value":2,"Enum":"PhysicalPropertiesMode"},{"type":"Enum","Name":"PhysicsReceiveMethod","tags":[]},{"type":"EnumItem","Name":"Direct","tags":[],"Value":0,"Enum":"PhysicsReceiveMethod"},{"type":"EnumItem","Name":"Interpolation","tags":[],"Value":1,"Enum":"PhysicsReceiveMethod"},{"type":"Enum","Name":"PhysicsSendMethod","tags":[]},{"type":"EnumItem","Name":"ErrorComputation","tags":[],"Value":0,"Enum":"PhysicsSendMethod"},{"type":"EnumItem","Name":"ErrorComputation2","tags":[],"Value":1,"Enum":"PhysicsSendMethod"},{"type":"EnumItem","Name":"RoundRobin","tags":[],"Value":2,"Enum":"PhysicsSendMethod"},{"type":"EnumItem","Name":"TopNErrors","tags":[],"Value":3,"Enum":"PhysicsSendMethod"},{"type":"Enum","Name":"Platform","tags":[]},{"type":"EnumItem","Name":"Windows","tags":[],"Value":0,"Enum":"Platform"},{"type":"EnumItem","Name":"OSX","tags":[],"Value":1,"Enum":"Platform"},{"type":"EnumItem","Name":"IOS","tags":[],"Value":2,"Enum":"Platform"},{"type":"EnumItem","Name":"Android","tags":[],"Value":3,"Enum":"Platform"},{"type":"EnumItem","Name":"XBoxOne","tags":[],"Value":4,"Enum":"Platform"},{"type":"EnumItem","Name":"PS4","tags":[],"Value":5,"Enum":"Platform"},{"type":"EnumItem","Name":"PS3","tags":[],"Value":6,"Enum":"Platform"},{"type":"EnumItem","Name":"XBox360","tags":[],"Value":7,"Enum":"Platform"},{"type":"EnumItem","Name":"WiiU","tags":[],"Value":8,"Enum":"Platform"},{"type":"EnumItem","Name":"NX","tags":[],"Value":9,"Enum":"Platform"},{"type":"EnumItem","Name":"Ouya","tags":[],"Value":10,"Enum":"Platform"},{"type":"EnumItem","Name":"AndroidTV","tags":[],"Value":11,"Enum":"Platform"},{"type":"EnumItem","Name":"Chromecast","tags":[],"Value":12,"Enum":"Platform"},{"type":"EnumItem","Name":"Linux","tags":[],"Value":13,"Enum":"Platform"},{"type":"EnumItem","Name":"SteamOS","tags":[],"Value":14,"Enum":"Platform"},{"type":"EnumItem","Name":"WebOS","tags":[],"Value":15,"Enum":"Platform"},{"type":"EnumItem","Name":"DOS","tags":[],"Value":16,"Enum":"Platform"},{"type":"EnumItem","Name":"BeOS","tags":[],"Value":17,"Enum":"Platform"},{"type":"EnumItem","Name":"UWP","tags":[],"Value":18,"Enum":"Platform"},{"type":"EnumItem","Name":"None","tags":[],"Value":19,"Enum":"Platform"},{"type":"Enum","Name":"PlayerActions","tags":[]},{"type":"EnumItem","Name":"CharacterForward","tags":[],"Value":0,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterBackward","tags":[],"Value":1,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterLeft","tags":[],"Value":2,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterRight","tags":[],"Value":3,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterJump","tags":[],"Value":4,"Enum":"PlayerActions"},{"type":"Enum","Name":"PlayerChatType","tags":[]},{"type":"EnumItem","Name":"All","tags":[],"Value":0,"Enum":"PlayerChatType"},{"type":"EnumItem","Name":"Team","tags":[],"Value":1,"Enum":"PlayerChatType"},{"type":"EnumItem","Name":"Whisper","tags":[],"Value":2,"Enum":"PlayerChatType"},{"type":"Enum","Name":"PoseEasingDirection","tags":[]},{"type":"EnumItem","Name":"Out","tags":[],"Value":1,"Enum":"PoseEasingDirection"},{"type":"EnumItem","Name":"InOut","tags":[],"Value":2,"Enum":"PoseEasingDirection"},{"type":"EnumItem","Name":"In","tags":[],"Value":0,"Enum":"PoseEasingDirection"},{"type":"Enum","Name":"PoseEasingStyle","tags":[]},{"type":"EnumItem","Name":"Linear","tags":[],"Value":0,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Constant","tags":[],"Value":1,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Elastic","tags":[],"Value":2,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Cubic","tags":[],"Value":3,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Bounce","tags":[],"Value":4,"Enum":"PoseEasingStyle"},{"type":"Enum","Name":"PriorityMethod","tags":[]},{"type":"EnumItem","Name":"LastError","tags":[],"Value":0,"Enum":"PriorityMethod"},{"type":"EnumItem","Name":"AccumulatedError","tags":[],"Value":1,"Enum":"PriorityMethod"},{"type":"EnumItem","Name":"FIFO","tags":[],"Value":2,"Enum":"PriorityMethod"},{"type":"Enum","Name":"PrismSides","tags":[]},{"type":"EnumItem","Name":"3","tags":[],"Value":3,"Enum":"PrismSides"},{"type":"EnumItem","Name":"5","tags":[],"Value":5,"Enum":"PrismSides"},{"type":"EnumItem","Name":"6","tags":[],"Value":6,"Enum":"PrismSides"},{"type":"EnumItem","Name":"8","tags":[],"Value":8,"Enum":"PrismSides"},{"type":"EnumItem","Name":"10","tags":[],"Value":10,"Enum":"PrismSides"},{"type":"EnumItem","Name":"20","tags":[],"Value":20,"Enum":"PrismSides"},{"type":"Enum","Name":"PrivilegeType","tags":[]},{"type":"EnumItem","Name":"Owner","tags":[],"Value":255,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Admin","tags":[],"Value":240,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Member","tags":[],"Value":128,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Visitor","tags":[],"Value":10,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Banned","tags":[],"Value":0,"Enum":"PrivilegeType"},{"type":"Enum","Name":"ProductPurchaseDecision","tags":[]},{"type":"EnumItem","Name":"NotProcessedYet","tags":[],"Value":0,"Enum":"ProductPurchaseDecision"},{"type":"EnumItem","Name":"PurchaseGranted","tags":[],"Value":1,"Enum":"ProductPurchaseDecision"},{"type":"Enum","Name":"PyramidSides","tags":[]},{"type":"EnumItem","Name":"3","tags":[],"Value":3,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"4","tags":[],"Value":4,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"5","tags":[],"Value":5,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"6","tags":[],"Value":6,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"8","tags":[],"Value":8,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"10","tags":[],"Value":10,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"20","tags":[],"Value":20,"Enum":"PyramidSides"},{"type":"Enum","Name":"QualityLevel","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level01","tags":[],"Value":1,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level02","tags":[],"Value":2,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level03","tags":[],"Value":3,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level04","tags":[],"Value":4,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level05","tags":[],"Value":5,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level06","tags":[],"Value":6,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level07","tags":[],"Value":7,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level08","tags":[],"Value":8,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level09","tags":[],"Value":9,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level10","tags":[],"Value":10,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level11","tags":[],"Value":11,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level12","tags":[],"Value":12,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level13","tags":[],"Value":13,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level14","tags":[],"Value":14,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level15","tags":[],"Value":15,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level16","tags":[],"Value":16,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level17","tags":[],"Value":17,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level18","tags":[],"Value":18,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level19","tags":[],"Value":19,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level20","tags":[],"Value":20,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level21","tags":[],"Value":21,"Enum":"QualityLevel"},{"type":"Enum","Name":"RenderPriority","tags":[]},{"type":"EnumItem","Name":"First","tags":[],"Value":0,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Input","tags":[],"Value":100,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Camera","tags":[],"Value":200,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Character","tags":[],"Value":300,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Last","tags":[],"Value":2000,"Enum":"RenderPriority"},{"type":"Enum","Name":"Resolution","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"Resolution"},{"type":"EnumItem","Name":"720x526","tags":[],"Value":1,"Enum":"Resolution"},{"type":"EnumItem","Name":"800x600","tags":[],"Value":2,"Enum":"Resolution"},{"type":"EnumItem","Name":"1024x600","tags":[],"Value":3,"Enum":"Resolution"},{"type":"EnumItem","Name":"1024x768","tags":[],"Value":4,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x720","tags":[],"Value":5,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x768","tags":[],"Value":6,"Enum":"Resolution"},{"type":"EnumItem","Name":"1152x864","tags":[],"Value":7,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x800","tags":[],"Value":8,"Enum":"Resolution"},{"type":"EnumItem","Name":"1360x768","tags":[],"Value":9,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x960","tags":[],"Value":10,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x1024","tags":[],"Value":11,"Enum":"Resolution"},{"type":"EnumItem","Name":"1440x900","tags":[],"Value":12,"Enum":"Resolution"},{"type":"EnumItem","Name":"1600x900","tags":[],"Value":13,"Enum":"Resolution"},{"type":"EnumItem","Name":"1600x1024","tags":[],"Value":14,"Enum":"Resolution"},{"type":"EnumItem","Name":"1600x1200","tags":[],"Value":15,"Enum":"Resolution"},{"type":"EnumItem","Name":"1680x1050","tags":[],"Value":16,"Enum":"Resolution"},{"type":"EnumItem","Name":"1920x1080","tags":[],"Value":17,"Enum":"Resolution"},{"type":"EnumItem","Name":"1920x1200","tags":[],"Value":18,"Enum":"Resolution"},{"type":"Enum","Name":"ReverbType","tags":[]},{"type":"EnumItem","Name":"NoReverb","tags":[],"Value":0,"Enum":"ReverbType"},{"type":"EnumItem","Name":"GenericReverb","tags":[],"Value":1,"Enum":"ReverbType"},{"type":"EnumItem","Name":"PaddedCell","tags":[],"Value":2,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Room","tags":[],"Value":3,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Bathroom","tags":[],"Value":4,"Enum":"ReverbType"},{"type":"EnumItem","Name":"LivingRoom","tags":[],"Value":5,"Enum":"ReverbType"},{"type":"EnumItem","Name":"StoneRoom","tags":[],"Value":6,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Auditorium","tags":[],"Value":7,"Enum":"ReverbType"},{"type":"EnumItem","Name":"ConcertHall","tags":[],"Value":8,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Cave","tags":[],"Value":9,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Arena","tags":[],"Value":10,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Hangar","tags":[],"Value":11,"Enum":"ReverbType"},{"type":"EnumItem","Name":"CarpettedHallway","tags":[],"Value":12,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Hallway","tags":[],"Value":13,"Enum":"ReverbType"},{"type":"EnumItem","Name":"StoneCorridor","tags":[],"Value":14,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Alley","tags":[],"Value":15,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Forest","tags":[],"Value":16,"Enum":"ReverbType"},{"type":"EnumItem","Name":"City","tags":[],"Value":17,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Mountains","tags":[],"Value":18,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Quarry","tags":[],"Value":19,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Plain","tags":[],"Value":20,"Enum":"ReverbType"},{"type":"EnumItem","Name":"ParkingLot","tags":[],"Value":21,"Enum":"ReverbType"},{"type":"EnumItem","Name":"SewerPipe","tags":[],"Value":22,"Enum":"ReverbType"},{"type":"EnumItem","Name":"UnderWater","tags":[],"Value":23,"Enum":"ReverbType"},{"type":"Enum","Name":"RollOffMode","tags":[]},{"type":"EnumItem","Name":"Inverse","tags":[],"Value":0,"Enum":"RollOffMode"},{"type":"EnumItem","Name":"Linear","tags":[],"Value":1,"Enum":"RollOffMode"},{"type":"Enum","Name":"RotationType","tags":[]},{"type":"EnumItem","Name":"MovementRelative","tags":[],"Value":0,"Enum":"RotationType"},{"type":"EnumItem","Name":"CameraRelative","tags":[],"Value":1,"Enum":"RotationType"},{"type":"Enum","Name":"RuntimeUndoBehavior","tags":[]},{"type":"EnumItem","Name":"Aggregate","tags":[],"Value":0,"Enum":"RuntimeUndoBehavior"},{"type":"EnumItem","Name":"Snapshot","tags":[],"Value":1,"Enum":"RuntimeUndoBehavior"},{"type":"EnumItem","Name":"Hybrid","tags":[],"Value":2,"Enum":"RuntimeUndoBehavior"},{"type":"Enum","Name":"SaveFilter","tags":[]},{"type":"EnumItem","Name":"SaveAll","tags":[],"Value":2,"Enum":"SaveFilter"},{"type":"EnumItem","Name":"SaveWorld","tags":[],"Value":0,"Enum":"SaveFilter"},{"type":"EnumItem","Name":"SaveGame","tags":[],"Value":1,"Enum":"SaveFilter"},{"type":"Enum","Name":"SavedQualitySetting","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel1","tags":[],"Value":1,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel2","tags":[],"Value":2,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel3","tags":[],"Value":3,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel4","tags":[],"Value":4,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel5","tags":[],"Value":5,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel6","tags":[],"Value":6,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel7","tags":[],"Value":7,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel8","tags":[],"Value":8,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel9","tags":[],"Value":9,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel10","tags":[],"Value":10,"Enum":"SavedQualitySetting"},{"type":"Enum","Name":"ScaleType","tags":[]},{"type":"EnumItem","Name":"Stretch","tags":[],"Value":0,"Enum":"ScaleType"},{"type":"EnumItem","Name":"Slice","tags":[],"Value":1,"Enum":"ScaleType"},{"type":"Enum","Name":"SizeConstraint","tags":[]},{"type":"EnumItem","Name":"RelativeXY","tags":[],"Value":0,"Enum":"SizeConstraint"},{"type":"EnumItem","Name":"RelativeXX","tags":[],"Value":1,"Enum":"SizeConstraint"},{"type":"EnumItem","Name":"RelativeYY","tags":[],"Value":2,"Enum":"SizeConstraint"},{"type":"Enum","Name":"SleepAdjustMethod","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"SleepAdjustMethod"},{"type":"EnumItem","Name":"LastSample","tags":[],"Value":1,"Enum":"SleepAdjustMethod"},{"type":"EnumItem","Name":"AverageInterval","tags":[],"Value":2,"Enum":"SleepAdjustMethod"},{"type":"Enum","Name":"SoundType","tags":[]},{"type":"EnumItem","Name":"NoSound","tags":[],"Value":0,"Enum":"SoundType"},{"type":"EnumItem","Name":"Boing","tags":[],"Value":1,"Enum":"SoundType"},{"type":"EnumItem","Name":"Bomb","tags":[],"Value":2,"Enum":"SoundType"},{"type":"EnumItem","Name":"Break","tags":[],"Value":3,"Enum":"SoundType"},{"type":"EnumItem","Name":"Click","tags":[],"Value":4,"Enum":"SoundType"},{"type":"EnumItem","Name":"Clock","tags":[],"Value":5,"Enum":"SoundType"},{"type":"EnumItem","Name":"Slingshot","tags":[],"Value":6,"Enum":"SoundType"},{"type":"EnumItem","Name":"Page","tags":[],"Value":7,"Enum":"SoundType"},{"type":"EnumItem","Name":"Ping","tags":[],"Value":8,"Enum":"SoundType"},{"type":"EnumItem","Name":"Snap","tags":[],"Value":9,"Enum":"SoundType"},{"type":"EnumItem","Name":"Splat","tags":[],"Value":10,"Enum":"SoundType"},{"type":"EnumItem","Name":"Step","tags":[],"Value":11,"Enum":"SoundType"},{"type":"EnumItem","Name":"StepOn","tags":[],"Value":12,"Enum":"SoundType"},{"type":"EnumItem","Name":"Swoosh","tags":[],"Value":13,"Enum":"SoundType"},{"type":"EnumItem","Name":"Victory","tags":[],"Value":14,"Enum":"SoundType"},{"type":"Enum","Name":"SpecialKey","tags":[]},{"type":"EnumItem","Name":"Insert","tags":[],"Value":0,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"Home","tags":[],"Value":1,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"End","tags":[],"Value":2,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"PageUp","tags":[],"Value":3,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"PageDown","tags":[],"Value":4,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"ChatHotkey","tags":[],"Value":5,"Enum":"SpecialKey"},{"type":"Enum","Name":"Status","tags":[]},{"type":"EnumItem","Name":"Poison","tags":["deprecated"],"Value":0,"Enum":"Status"},{"type":"EnumItem","Name":"Confusion","tags":["deprecated"],"Value":1,"Enum":"Status"},{"type":"Enum","Name":"Stuff","tags":[]},{"type":"EnumItem","Name":"Heads","tags":[],"Value":0,"Enum":"Stuff"},{"type":"EnumItem","Name":"Faces","tags":[],"Value":1,"Enum":"Stuff"},{"type":"EnumItem","Name":"Hats","tags":[],"Value":2,"Enum":"Stuff"},{"type":"EnumItem","Name":"TShirts","tags":[],"Value":3,"Enum":"Stuff"},{"type":"EnumItem","Name":"Shirts","tags":[],"Value":4,"Enum":"Stuff"},{"type":"EnumItem","Name":"Pants","tags":[],"Value":5,"Enum":"Stuff"},{"type":"EnumItem","Name":"Gears","tags":[],"Value":6,"Enum":"Stuff"},{"type":"EnumItem","Name":"Torsos","tags":[],"Value":7,"Enum":"Stuff"},{"type":"EnumItem","Name":"LeftArms","tags":[],"Value":8,"Enum":"Stuff"},{"type":"EnumItem","Name":"RightArms","tags":[],"Value":9,"Enum":"Stuff"},{"type":"EnumItem","Name":"LeftLegs","tags":[],"Value":10,"Enum":"Stuff"},{"type":"EnumItem","Name":"RightLegs","tags":[],"Value":11,"Enum":"Stuff"},{"type":"EnumItem","Name":"Bodies","tags":[],"Value":12,"Enum":"Stuff"},{"type":"EnumItem","Name":"Costumes","tags":[],"Value":13,"Enum":"Stuff"},{"type":"Enum","Name":"Style","tags":[]},{"type":"EnumItem","Name":"AlternatingSupports","tags":[],"Value":0,"Enum":"Style"},{"type":"EnumItem","Name":"BridgeStyleSupports","tags":[],"Value":1,"Enum":"Style"},{"type":"EnumItem","Name":"NoSupports","tags":[],"Value":2,"Enum":"Style"},{"type":"Enum","Name":"SurfaceConstraint","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"SurfaceConstraint"},{"type":"EnumItem","Name":"Hinge","tags":[],"Value":1,"Enum":"SurfaceConstraint"},{"type":"EnumItem","Name":"SteppingMotor","tags":[],"Value":2,"Enum":"SurfaceConstraint"},{"type":"EnumItem","Name":"Motor","tags":[],"Value":3,"Enum":"SurfaceConstraint"},{"type":"Enum","Name":"SurfaceType","tags":[]},{"type":"EnumItem","Name":"Smooth","tags":[],"Value":0,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Glue","tags":[],"Value":1,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Weld","tags":[],"Value":2,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Studs","tags":[],"Value":3,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Inlet","tags":[],"Value":4,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Universal","tags":[],"Value":5,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Hinge","tags":[],"Value":6,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Motor","tags":[],"Value":7,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"SteppingMotor","tags":[],"Value":8,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Unjoinable","tags":[],"Value":9,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"SmoothNoOutlines","tags":[],"Value":10,"Enum":"SurfaceType"},{"type":"Enum","Name":"SwipeDirection","tags":[]},{"type":"EnumItem","Name":"Right","tags":[],"Value":0,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"Left","tags":[],"Value":1,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"Up","tags":[],"Value":2,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"Down","tags":[],"Value":3,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"None","tags":[],"Value":4,"Enum":"SwipeDirection"},{"type":"Enum","Name":"TeleportState","tags":[]},{"type":"EnumItem","Name":"RequestedFromServer","tags":[],"Value":0,"Enum":"TeleportState"},{"type":"EnumItem","Name":"Started","tags":[],"Value":1,"Enum":"TeleportState"},{"type":"EnumItem","Name":"WaitingForServer","tags":[],"Value":2,"Enum":"TeleportState"},{"type":"EnumItem","Name":"Failed","tags":[],"Value":3,"Enum":"TeleportState"},{"type":"EnumItem","Name":"InProgress","tags":[],"Value":4,"Enum":"TeleportState"},{"type":"Enum","Name":"TeleportType","tags":[]},{"type":"EnumItem","Name":"ToPlace","tags":[],"Value":0,"Enum":"TeleportType"},{"type":"EnumItem","Name":"ToInstance","tags":[],"Value":1,"Enum":"TeleportType"},{"type":"EnumItem","Name":"ToReservedServer","tags":[],"Value":2,"Enum":"TeleportType"},{"type":"Enum","Name":"TextXAlignment","tags":[]},{"type":"EnumItem","Name":"Left","tags":[],"Value":0,"Enum":"TextXAlignment"},{"type":"EnumItem","Name":"Center","tags":[],"Value":2,"Enum":"TextXAlignment"},{"type":"EnumItem","Name":"Right","tags":[],"Value":1,"Enum":"TextXAlignment"},{"type":"Enum","Name":"TextYAlignment","tags":[]},{"type":"EnumItem","Name":"Top","tags":[],"Value":0,"Enum":"TextYAlignment"},{"type":"EnumItem","Name":"Center","tags":[],"Value":1,"Enum":"TextYAlignment"},{"type":"EnumItem","Name":"Bottom","tags":[],"Value":2,"Enum":"TextYAlignment"},{"type":"Enum","Name":"ThreadPoolConfig","tags":[]},{"type":"EnumItem","Name":"Auto","tags":[],"Value":0,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore1","tags":[],"Value":101,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore2","tags":[],"Value":102,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore3","tags":[],"Value":103,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore4","tags":[],"Value":104,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads1","tags":[],"Value":1,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads2","tags":[],"Value":2,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads3","tags":[],"Value":3,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads4","tags":[],"Value":4,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads8","tags":[],"Value":8,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads16","tags":[],"Value":16,"Enum":"ThreadPoolConfig"},{"type":"Enum","Name":"ThrottlingPriority","tags":[]},{"type":"EnumItem","Name":"Extreme","tags":[],"Value":2,"Enum":"ThrottlingPriority"},{"type":"EnumItem","Name":"ElevatedOnServer","tags":[],"Value":1,"Enum":"ThrottlingPriority"},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"ThrottlingPriority"},{"type":"Enum","Name":"TickCountSampleMethod","tags":[]},{"type":"EnumItem","Name":"Fast","tags":[],"Value":0,"Enum":"TickCountSampleMethod"},{"type":"EnumItem","Name":"Benchmark","tags":[],"Value":1,"Enum":"TickCountSampleMethod"},{"type":"EnumItem","Name":"Precise","tags":[],"Value":2,"Enum":"TickCountSampleMethod"},{"type":"Enum","Name":"TopBottom","tags":[]},{"type":"EnumItem","Name":"Top","tags":[],"Value":0,"Enum":"TopBottom"},{"type":"EnumItem","Name":"Center","tags":[],"Value":1,"Enum":"TopBottom"},{"type":"EnumItem","Name":"Bottom","tags":[],"Value":2,"Enum":"TopBottom"},{"type":"Enum","Name":"TouchCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"TouchCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"TouchCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"TouchCameraMovementMode"},{"type":"Enum","Name":"TouchMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"Thumbstick","tags":[],"Value":1,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"DPad","tags":[],"Value":2,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"Thumbpad","tags":[],"Value":3,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":4,"Enum":"TouchMovementMode"},{"type":"Enum","Name":"TweenStatus","tags":[]},{"type":"EnumItem","Name":"Canceled","tags":[],"Value":0,"Enum":"TweenStatus"},{"type":"EnumItem","Name":"Completed","tags":[],"Value":1,"Enum":"TweenStatus"},{"type":"Enum","Name":"UiMessageType","tags":[]},{"type":"EnumItem","Name":"UiMessageError","tags":[],"Value":0,"Enum":"UiMessageType"},{"type":"EnumItem","Name":"UiMessageInfo","tags":[],"Value":1,"Enum":"UiMessageType"},{"type":"Enum","Name":"UploadSetting","tags":[]},{"type":"EnumItem","Name":"Never","tags":[],"Value":0,"Enum":"UploadSetting"},{"type":"EnumItem","Name":"Ask","tags":[],"Value":1,"Enum":"UploadSetting"},{"type":"EnumItem","Name":"Always","tags":[],"Value":2,"Enum":"UploadSetting"},{"type":"Enum","Name":"UserCFrame","tags":[]},{"type":"EnumItem","Name":"Head","tags":[],"Value":0,"Enum":"UserCFrame"},{"type":"EnumItem","Name":"LeftHand","tags":[],"Value":1,"Enum":"UserCFrame"},{"type":"EnumItem","Name":"RightHand","tags":[],"Value":2,"Enum":"UserCFrame"},{"type":"Enum","Name":"UserInputState","tags":[]},{"type":"EnumItem","Name":"Begin","tags":[],"Value":0,"Enum":"UserInputState"},{"type":"EnumItem","Name":"Change","tags":[],"Value":1,"Enum":"UserInputState"},{"type":"EnumItem","Name":"End","tags":[],"Value":2,"Enum":"UserInputState"},{"type":"EnumItem","Name":"Cancel","tags":[],"Value":3,"Enum":"UserInputState"},{"type":"EnumItem","Name":"None","tags":[],"Value":4,"Enum":"UserInputState"},{"type":"Enum","Name":"UserInputType","tags":[]},{"type":"EnumItem","Name":"MouseButton1","tags":[],"Value":0,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseButton2","tags":[],"Value":1,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseButton3","tags":[],"Value":2,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseWheel","tags":[],"Value":3,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseMovement","tags":[],"Value":4,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Touch","tags":[],"Value":7,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Keyboard","tags":[],"Value":8,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Focus","tags":[],"Value":9,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Accelerometer","tags":[],"Value":10,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gyro","tags":[],"Value":11,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad1","tags":[],"Value":12,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad2","tags":[],"Value":13,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad3","tags":[],"Value":14,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad4","tags":[],"Value":15,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad5","tags":[],"Value":16,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad6","tags":[],"Value":17,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad7","tags":[],"Value":18,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad8","tags":[],"Value":19,"Enum":"UserInputType"},{"type":"EnumItem","Name":"TextInput","tags":[],"Value":20,"Enum":"UserInputType"},{"type":"EnumItem","Name":"None","tags":[],"Value":21,"Enum":"UserInputType"},{"type":"Enum","Name":"VibrationMotor","tags":[]},{"type":"EnumItem","Name":"Large","tags":[],"Value":0,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"Small","tags":[],"Value":1,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"LeftTrigger","tags":[],"Value":2,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"RightTrigger","tags":[],"Value":3,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"LeftHand","tags":[],"Value":4,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"RightHand","tags":[],"Value":5,"Enum":"VibrationMotor"},{"type":"Enum","Name":"VideoQualitySettings","tags":[]},{"type":"EnumItem","Name":"LowResolution","tags":[],"Value":0,"Enum":"VideoQualitySettings"},{"type":"EnumItem","Name":"MediumResolution","tags":[],"Value":1,"Enum":"VideoQualitySettings"},{"type":"EnumItem","Name":"HighResolution","tags":[],"Value":2,"Enum":"VideoQualitySettings"},{"type":"Enum","Name":"WaterDirection","tags":[]},{"type":"EnumItem","Name":"NegX","tags":[],"Value":0,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"X","tags":[],"Value":1,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"NegY","tags":[],"Value":2,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"Y","tags":[],"Value":3,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"NegZ","tags":[],"Value":4,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"Z","tags":[],"Value":5,"Enum":"WaterDirection"},{"type":"Enum","Name":"WaterForce","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Small","tags":[],"Value":1,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Medium","tags":[],"Value":2,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Strong","tags":[],"Value":3,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Max","tags":[],"Value":4,"Enum":"WaterForce"}]
]===]
			return rawApiJson
		end

		function getCurrentApiJson()
			local jsonStr = nil
			if readfile and getelysianpath then
				if readfile(getelysianpath().."Xpl0rerApi.txt") then
					print("Api found in folder!")
					jsonStr = readfile(getelysianpath().."Xpl0rerApi.txt")
					return jsonStr
				end
			end
			local success, err = pcall(function()
				jsonStr = httpGet(apiUrl)
				print("Fetched json successfully")
			end)
			if success then
				print("Returning json")
				--print(jsonStr:sub(1,500))
				return jsonStr
			else
				print("Error fetching json: " .. tostring(err))
				print("Falling back to local copy")
				return getLocalApiJson()
			end
		end

		function splitStringIntoChunks(jsonStr)
			-- Splits up a string into a table with a given size
			local t = {}
			for i = 1, math.ceil(string.len(jsonStr)/maxChunkSize) do
				local str = jsonStr:sub((i-1)*maxChunkSize+1, i*maxChunkSize)
				table.insert(t, str)
			end
			return t
		end

		local jsonToParse = getCurrentApiJson()
		local apiChunks = splitStringIntoChunks(jsonToParse)

		function getRbxApi()
--[[
	Api.Classes
	Api.Enums
	Api.GetProperties(className)
	Api.IsEnum(valueType)
--]]

			-- Services
			local HttpService = game:GetService("HttpService")
			local ServerStorage = game:GetService("ServerStorage")
			local ReplicatedStorage = game:GetService("ReplicatedStorage")

			-- Remotes
			--local Remotes = ReplicatedStorage:WaitForChild("OnlineStudio"):WaitForChild("Remotes")
			--local GetApiJsonFunction = Remotes:WaitForChild("GetApiJson")

			-- Functions
			local JsonDecode = function(s) return HttpService:JSONDecode(s) end

			local function GetApiRemoteFunction(index)
				if (apiChunks[index]) then 
					return apiChunks[index], #apiChunks
				else
					print("Bad index for GetApiJson")
					return nil
				end
			end

			local function getApiJson()
				local apiTable = {}
				local firstPage, pageCount = GetApiRemoteFunction(1)
				table.insert(apiTable, firstPage)
				for i = 2, pageCount do
					--print("Fetching API page # " .. tostring(i))
					local result = GetApiRemoteFunction(i)
					table.insert(apiTable, result)
				end
				return table.concat(apiTable)
			end

			local json = getApiJson()
			local apiDump =  JsonDecode(json)

			local Classes = {}
			local Enums = {}

			local function sortAlphabetic(t, property)
				table.sort(t, 
					function(x,y) return x[property] < y[property]
					end)
			end

			local function isEnum(name)
				return Enums[name] ~= nil
			end

			local function getProperties(className)
				local class = Classes[className]
				local properties = {}

				if not class then return properties end

				while class do
					for _,property in pairs(class.Properties) do
						table.insert(properties, property)
					end
					class = Classes[class.Superclass]
				end

				sortAlphabetic(properties, "Name")

				return properties
			end

			for _,item in pairs(apiDump) do
				local itemType = item.type
				-- Classes --
				if (itemType == 'Class') then
					Classes[item.Name] = item
					item.Properties = {}
					item.Functions = {}
					item.YieldFunctions = {}
					item.Events = {}
					item.Callbacks = {}
					-- Members --
				elseif (itemType == 'Property') then
					table.insert(Classes[item.Class].Properties, item)
				elseif (itemType == 'Function') then
					table.insert(Classes[item.Class].Functions, item)
				elseif (itemType == 'YieldFunction') then
					table.insert(Classes[item.Class].YieldFunctions, item)
				elseif (itemType == 'Event') then
					table.insert(Classes[item.Class].Events, item)
				elseif (itemType == 'Callback') then
					table.insert(Classes[item.Class].Callbacks, item)
					-- Enums --
				elseif (itemType == 'Enum') then
					Enums[item.Name] = item
					item.EnumItems = {}
				elseif (itemType == 'EnumItem') then
					Enums[item.Enum].EnumItems[item.Name] = item
				end
			end

			return {
				Classes = Classes;
				Enums = Enums;
				GetProperties = getProperties;
				IsEnum = isEnum;
			}
		end

		-- Modules
		local Permissions = {CanEdit = true}
		local RbxApi = getRbxApi()

--[[
	RbxApi.Classes
	RbxApi.Enums
	RbxApi.GetProperties(className)
	RbxApi.IsEnum(valueType)
--]]

		-- Styles

		local function CreateColor3(r, g, b) return Color3.new(r/255,g/255,b/255) end

		local Styles = {
			Font = Enum.Font.Arial;
			Margin = 5;
			Black = CreateColor3(0,0,0);
			White = CreateColor3(255,255,255);
		}

		local Row = {
			Font = Styles.Font;
			FontSize = Enum.FontSize.Size14;
			TextXAlignment = Enum.TextXAlignment.Left;
			TextColor = Styles.Black;
			TextColorOver = Styles.White;
			TextLockedColor = CreateColor3(120,120,120);
			Height = 24;
			BorderColor = CreateColor3(216,216,216);
			BackgroundColor = Styles.White;
			BackgroundColorAlternate = CreateColor3(246,246,246);
			BackgroundColorMouseover = CreateColor3(211,224,244);
			TitleMarginLeft = 15;
		}

		local DropDown = {
			Font = Styles.Font;
			FontSize = Enum.FontSize.Size14;
			TextColor = CreateColor3(0,0,0);
			TextColorOver = Styles.White;
			TextXAlignment = Enum.TextXAlignment.Left;
			Height = 16;
			BackColor = Styles.White;
			BackColorOver = CreateColor3(86,125,188);
			BorderColor = CreateColor3(216,216,216);
			BorderSizePixel = 2;
			ArrowColor = CreateColor3(160,160,160);
			ArrowColorOver = Styles.Black;
		}

		local BrickColors = {
			BoxSize = 13;
			BorderSizePixel = 1;
			BorderColor = CreateColor3(160,160,160);
			FrameColor = CreateColor3(160,160,160);
			Size = 20;
			Padding = 4;
			ColorsPerRow = 8;
			OuterBorder = 1;
			OuterBorderColor = Styles.Black;
		}

		wait(1)

		local Gui = D_E_X
		local PropertiesFrame = Gui:WaitForChild("PropertiesFrame")
		local ExplorerFrame = Gui:WaitForChild("ExplorerPanel")

		local bindGetSelection = ExplorerFrame.GetSelection
		local bindSelectionChanged = ExplorerFrame.SelectionChanged
		local bindGetApi = PropertiesFrame.GetApi
		local bindGetAwait = PropertiesFrame.GetAwaiting
		local bindSetAwait = PropertiesFrame.SetAwaiting

		local ContentUrl = ContentProvider.BaseUrl .. "asset/?id="

		local SettingsRemote = Gui:WaitForChild("SettingsPanel"):WaitForChild("GetSetting")

		local propertiesSearch = PropertiesFrame.Header.TextBox

		local AwaitingObjectValue = false
		local AwaitingObjectObj
		local AwaitingObjectProp

		function searchingProperties()
			if propertiesSearch.Text ~= "" and propertiesSearch.Text ~= "Search Properties" then
				return true
			end
			return false
		end

		local function GetSelection()
			local selection = bindGetSelection:Invoke()
			if #selection == 0 then
				return nil
			else
				return selection
			end 
		end

		-- Number

		local function Round(number, decimalPlaces)
			return tonumber(string.format("%." .. (decimalPlaces or 0) .. "f", number))
		end

		-- Strings

		local function Split(str, delimiter)
			local start = 1
			local t = {}
			while true do
				local pos = string.find (str, delimiter, start, true)
				if not pos then
					break
				end
				table.insert (t, string.sub (str, start, pos - 1))
				start = pos + string.len (delimiter)
			end
			table.insert (t, string.sub (str, start))
			return t
		end

		-- Data Type Handling

		local function ToString(value, type)
			if type == "float" then
				return tostring(Round(value,2))
			elseif type == "Content" then
				if string.find(value,"/asset") then
					local match = string.find(value, "=") + 1
					local id = string.sub(value, match)
					return id
				else
					return tostring(value)
				end
			elseif type == "Vector2" then
				local x = value.x
				local y = value.y
				return string.format("%g, %g", x,y)
			elseif type == "Vector3" then
				local x = value.x
				local y = value.y
				local z = value.z
				return string.format("%g, %g, %g", x,y,z)
			elseif type == "Color3" then
				local r = value.r
				local g = value.g
				local b = value.b
				return string.format("%d, %d, %d", r*255,g*255,b*255)
			elseif type == "UDim2" then
				local xScale = value.X.Scale
				local xOffset = value.X.Offset
				local yScale = value.Y.Scale
				local yOffset = value.Y.Offset
				return string.format("{%d, %d}, {%d, %d}", xScale, xOffset, yScale, yOffset)
			else
				return tostring(value)
			end
		end

		local function ToValue(value,type)
			if type == "Vector2" then
				local list = Split(value,",")
				if #list < 2 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				return Vector2.new(x,y)
			elseif type == "Vector3" then
				local list = Split(value,",")
				if #list < 3 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				local z = tonumber(list[3]) or 0
				return Vector3.new(x,y,z)
			elseif type == "Color3" then
				local list = Split(value,",")
				if #list < 3 then return nil end
				local r = tonumber(list[1]) or 0
				local g = tonumber(list[2]) or 0
				local b = tonumber(list[3]) or 0
				return Color3.new(r/255,g/255, b/255)
			elseif type == "UDim2" then
				local list = Split(string.gsub(string.gsub(value, "{", ""),"}",""),",")
				if #list < 4 then return nil end
				local xScale = tonumber(list[1]) or 0
				local xOffset = tonumber(list[2]) or 0
				local yScale = tonumber(list[3]) or 0
				local yOffset = tonumber(list[4]) or 0
				return UDim2.new(xScale, xOffset, yScale, yOffset)
			elseif type == "Content" then
				if tonumber(value) ~= nil then
					value = ContentUrl .. value
				end
				return value
			elseif type == "float" or type == "int" or type == "double" then
				return tonumber(value)
			elseif type == "string" then
				return value
			elseif type == "NumberRange" then
				local list = Split(value,",")
				if #list == 1 then
					if tonumber(list[1]) == nil then return nil end
					local newVal = tonumber(list[1]) or 0
					return NumberRange.new(newVal)
				end
				if #list < 2 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				return NumberRange.new(x,y)
			else
				return nil
			end
		end


		-- Tables

		local function CopyTable(T)
			local t2 = {}
			for k,v in pairs(T) do
				t2[k] = v
			end
			return t2
		end

		local function SortTable(T)
			table.sort(T, 
				function(x,y) return x.Name < y.Name
				end)
		end

		-- Spritesheet
		local Sprite = {
			Width = 13;
			Height = 13;
		}

		local Spritesheet = {
			Image = "http://www.roblox.com/asset/?id=128896947";
			Height = 256;
			Width = 256;
		}

		local Images = {
			"unchecked",
			"checked",
			"unchecked_over",
			"checked_over",
			"unchecked_disabled",
			"checked_disabled"
		}

		local function SpritePosition(spriteName)
			local x = 0
			local y = 0
			for i,v in pairs(Images) do
				if (v == spriteName) then
					return {x, y}
				end
				x = x + Sprite.Height
				if (x + Sprite.Width) > Spritesheet.Width then
					x = 0
					y = y + Sprite.Height
				end
			end
		end

		local function GetCheckboxImageName(checked, readOnly, mouseover)
			if checked then
				if readOnly then
					return "checked_disabled"
				elseif mouseover then
					return "checked_over"
				else
					return "checked"
				end
			else
				if readOnly then
					return "unchecked_disabled"
				elseif mouseover then
					return "unchecked_over"
				else
					return "unchecked"
				end
			end
		end

		local MAP_ID = 418720155

		-- Gui Controls --

		---- IconMap ----
		-- Image size: 256px x 256px
		-- Icon size: 16px x 16px
		-- Padding between each icon: 2px
		-- Padding around image edge: 1px
		-- Total icons: 14 x 14 (196)
		local Icon do
			local iconMap = 'http://www.roblox.com/asset/?id=' .. MAP_ID
			game:GetService('ContentProvider'):Preload(iconMap)
			local iconDehash do
				-- 14 x 14, 0-based input, 0-based output
				local f=math.floor
				function iconDehash(h)
					return f(h/14%14),f(h%14)
				end
			end

			function Icon(IconFrame,index)
				local row,col = iconDehash(index)
				local mapSize = Vector2.new(256,256)
				local pad,border = 2,1
				local iconSize = 16

				local class = 'Frame'
				if type(IconFrame) == 'string' then
					class = IconFrame
					IconFrame = nil
				end

				if not IconFrame then
					IconFrame = Create(class,{
						Name = "Icon";
						BackgroundTransparency = 1;
						ClipsDescendants = true;
						Create('ImageLabel',{
							Name = "IconMap";
							Active = false;
							BackgroundTransparency = 1;
							Image = iconMap;
							Size = UDim2.new(mapSize.x/iconSize,0,mapSize.y/iconSize,0);
						});
					})
				end

				IconFrame.IconMap.Position = UDim2.new(-col - (pad*(col+1) + border)/iconSize,0,-row - (pad*(row+1) + border)/iconSize,0)
				return IconFrame
			end
		end

		local function CreateCell()
			local tableCell = Instance.new("Frame")
			tableCell.Size = UDim2.new(0.5, -1, 1, 0)
			tableCell.BackgroundColor3 = Row.BackgroundColor
			tableCell.BorderColor3 = Row.BorderColor
			return tableCell
		end

		local function CreateLabel(readOnly)
			local label = Instance.new("TextLabel")
			label.Font = Row.Font
			label.FontSize = Row.FontSize
			label.TextXAlignment = Row.TextXAlignment
			label.BackgroundTransparency = 1

			if readOnly then
				label.TextColor3 = Row.TextLockedColor
			else
				label.TextColor3 = Row.TextColor
			end
			return label
		end

		local function CreateTextButton(readOnly, onClick)
			local button = Instance.new("TextButton")
			button.Font = Row.Font
			button.FontSize = Row.FontSize
			button.TextXAlignment = Row.TextXAlignment
			button.BackgroundTransparency = 1
			if readOnly then
				button.TextColor3 = Row.TextLockedColor
			else
				button.TextColor3 = Row.TextColor
				button.MouseButton1Click:connect(function()
					onClick()
				end)
			end
			return button
		end

		local function CreateObject(readOnly)
			local button = Instance.new("TextButton")
			button.Font = Row.Font
			button.FontSize = Row.FontSize
			button.TextXAlignment = Row.TextXAlignment
			button.BackgroundTransparency = 1
			if readOnly then
				button.TextColor3 = Row.TextLockedColor
			else
				button.TextColor3 = Row.TextColor
			end
			local cancel = Create(Icon('ImageButton',177),{
				Name = "Cancel";
				Visible = false;
				Position = UDim2.new(1,-20,0,0);
				Size = UDim2.new(0,20,0,20);
				Parent = button;
			})
			return button
		end

		local function CreateTextBox(readOnly)
			if readOnly then
				local box = CreateLabel(readOnly)
				return box
			else
				local box = Instance.new("TextBox")
				if not SettingsRemote:Invoke("ClearProps") then
					box.ClearTextOnFocus = false
				end
				box.Font = Row.Font
				box.FontSize = Row.FontSize
				box.TextXAlignment = Row.TextXAlignment
				box.BackgroundTransparency = 1
				box.TextColor3 = Row.TextColor
				return box
			end
		end

		local function CreateDropDownItem(text, onClick)
			local button = Instance.new("TextButton")
			button.Font = DropDown.Font
			button.FontSize = DropDown.FontSize
			button.TextColor3 = DropDown.TextColor
			button.TextXAlignment = DropDown.TextXAlignment
			button.BackgroundColor3 = DropDown.BackColor
			button.AutoButtonColor = false
			button.BorderSizePixel = 0
			button.Active = true
			button.Text = text

			button.MouseEnter:connect(function()
				button.TextColor3 = DropDown.TextColorOver
				button.BackgroundColor3 = DropDown.BackColorOver
			end)
			button.MouseLeave:connect(function()
				button.TextColor3 = DropDown.TextColor
				button.BackgroundColor3 = DropDown.BackColor
			end)
			button.MouseButton1Click:connect(function()
				onClick(text)
			end)	
			return button
		end

		local function CreateDropDown(choices, currentChoice, readOnly, onClick)
			local frame = Instance.new("Frame")	
			frame.Name = "DropDown"
			frame.Size = UDim2.new(1, 0, 1, 0)
			frame.BackgroundTransparency = 1
			frame.Active = true

			local menu = nil
			local arrow = nil
			local expanded = false
			local margin = DropDown.BorderSizePixel;

			local button = Instance.new("TextButton")
			button.Font = Row.Font
			button.FontSize = Row.FontSize
			button.TextXAlignment = Row.TextXAlignment
			button.BackgroundTransparency = 1
			button.TextColor3 = Row.TextColor
			if readOnly then
				button.TextColor3 = Row.TextLockedColor
			end
			button.Text = currentChoice
			button.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
			button.Position = UDim2.new(0, Styles.Margin, 0, 0)
			button.Parent = frame

			local function showArrow(color)
				if arrow then arrow:Destroy() end

				local graphicTemplate = Create('Frame',{
					Name="Graphic";
					BorderSizePixel = 0;
					BackgroundColor3 = color;
				})
				local graphicSize = 16/2

				arrow = ArrowGraphic(graphicSize,'Down',true,graphicTemplate)
				arrow.Position = UDim2.new(1,-graphicSize * 2,0.5,-graphicSize/2)
				arrow.Parent = frame
			end

			local function hideMenu()
				expanded = false
				showArrow(DropDown.ArrowColor)
				if menu then menu:Destroy() end
			end

			local function showMenu()
				expanded = true
				menu = Instance.new("Frame")
				menu.Size = UDim2.new(1, -2 * margin, 0, #choices * DropDown.Height)
				menu.Position = UDim2.new(0, margin, 0, Row.Height + margin)
				menu.BackgroundTransparency = 0
				menu.BackgroundColor3 = DropDown.BackColor
				menu.BorderColor3 = DropDown.BorderColor
				menu.BorderSizePixel = DropDown.BorderSizePixel
				menu.Active = true
				menu.ZIndex = 5
				menu.Parent = frame

				local parentFrameHeight = menu.Parent.Parent.Parent.Parent.Size.Y.Offset
				local rowHeight = menu.Parent.Parent.Parent.Position.Y.Offset
				if (rowHeight + menu.Size.Y.Offset) > math.max(parentFrameHeight,PropertiesFrame.AbsoluteSize.y) then
					menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
				end

				local function choice(name)
					onClick(name)
					hideMenu()
				end

				for i,name in pairs(choices) do
					local option = CreateDropDownItem(name, function()
						choice(name)
					end)
					option.Size = UDim2.new(1, 0, 0, 16)
					option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
					option.ZIndex = menu.ZIndex
					option.Parent = menu
				end
			end

			showArrow(DropDown.ArrowColor)

			if not readOnly then

				button.MouseEnter:connect(function()
					button.TextColor3 = Row.TextColor
					showArrow(DropDown.ArrowColorOver)
				end)
				button.MouseLeave:connect(function()
					button.TextColor3 = Row.TextColor
					if not expanded then
						showArrow(DropDown.ArrowColor)
					end
				end)
				button.MouseButton1Click:connect(function()
					if expanded then
						hideMenu()
					else
						showMenu()
					end
				end)
			end

			return frame,button
		end

		local function CreateBrickColor(readOnly, onClick)
			local frame = Instance.new("Frame")
			frame.Size = UDim2.new(1,0,1,0)
			frame.BackgroundTransparency = 1

			local colorPalette = Instance.new("Frame")
			colorPalette.BackgroundTransparency = 0
			colorPalette.SizeConstraint = Enum.SizeConstraint.RelativeXX
			colorPalette.Size = UDim2.new(1, -2 * BrickColors.OuterBorder, 1, -2 * BrickColors.OuterBorder)
			colorPalette.BorderSizePixel = BrickColors.BorderSizePixel
			colorPalette.BorderColor3 = BrickColors.BorderColor
			colorPalette.Position = UDim2.new(0, BrickColors.OuterBorder, 0, BrickColors.OuterBorder + Row.Height)
			colorPalette.ZIndex = 5
			colorPalette.Visible = false
			colorPalette.BorderSizePixel = BrickColors.OuterBorder
			colorPalette.BorderColor3 = BrickColors.OuterBorderColor
			colorPalette.Parent = frame

			local function show()
				colorPalette.Visible = true
			end

			local function hide()
				colorPalette.Visible = false
			end

			local function toggle()
				colorPalette.Visible = not colorPalette.Visible
			end

			local colorBox = Instance.new("TextButton", frame)
			colorBox.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)
			colorBox.Size = UDim2.new(0, BrickColors.BoxSize, 0, BrickColors.BoxSize)
			colorBox.Text = ""
			colorBox.MouseButton1Click:connect(function()
				if not readOnly then
					toggle()
				end
			end)

			if readOnly then
				colorBox.AutoButtonColor = false
			end

			local spacingBefore = (Styles.Margin * 2) + BrickColors.BoxSize

			local propertyLabel = CreateTextButton(readOnly, function()
				if not readOnly then
					toggle()
				end
			end)
			propertyLabel.Size = UDim2.new(1, (-1 * spacingBefore) - Styles.Margin, 1, 0)
			propertyLabel.Position = UDim2.new(0, spacingBefore, 0, 0)
			propertyLabel.Parent = frame

			local size = (1 / BrickColors.ColorsPerRow)

			for index = 0, 127 do
				local brickColor = BrickColor.palette(index)
				local color3 = brickColor.Color

				local x = size * (index % BrickColors.ColorsPerRow)
				local y = size * math.floor(index / BrickColors.ColorsPerRow)

				local brickColorBox = Instance.new("TextButton")
				brickColorBox.Text = ""
				brickColorBox.Size = UDim2.new(size,0,size,0)
				brickColorBox.BackgroundColor3 = color3
				brickColorBox.Position = UDim2.new(x, 0, y, 0)
				brickColorBox.ZIndex = colorPalette.ZIndex
				brickColorBox.Parent = colorPalette

				brickColorBox.MouseButton1Click:connect(function()
					hide()
					onClick(brickColor)
				end)
			end

			return frame,propertyLabel,colorBox
		end

		local function CreateColor3Control(readOnly, onClick)
			local frame = Instance.new("Frame")
			frame.Size = UDim2.new(1,0,1,0)
			frame.BackgroundTransparency = 1

			local colorBox = Instance.new("TextButton", frame)
			colorBox.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)
			colorBox.Size = UDim2.new(0, BrickColors.BoxSize, 0, BrickColors.BoxSize)
			colorBox.Text = ""
			colorBox.AutoButtonColor = false

			local spacingBefore = (Styles.Margin * 2) + BrickColors.BoxSize
			local box = CreateTextBox(readOnly)
			box.Size = UDim2.new(1, (-1 * spacingBefore) - Styles.Margin, 1, 0)
			box.Position = UDim2.new(0, spacingBefore, 0, 0)
			box.Parent = frame

			return frame,box,colorBox
		end

		function CreateCheckbox(value, readOnly, onClick)
			local checked = value
			local mouseover = false

			local checkboxFrame = Instance.new("ImageButton")
			checkboxFrame.Size = UDim2.new(0, Sprite.Width, 0, Sprite.Height)
			checkboxFrame.BackgroundTransparency = 1
			checkboxFrame.ClipsDescendants = true
			--checkboxFrame.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)

			local spritesheetImage = Instance.new("ImageLabel", checkboxFrame)
			spritesheetImage.Name = "SpritesheetImageLabel"
			spritesheetImage.Size = UDim2.new(0, Spritesheet.Width, 0, Spritesheet.Height)
			spritesheetImage.Image = Spritesheet.Image
			spritesheetImage.BackgroundTransparency = 1

			local function updateSprite()
				local spriteName = GetCheckboxImageName(checked, readOnly, mouseover)
				local spritePosition = SpritePosition(spriteName)
				spritesheetImage.Position = UDim2.new(0, -1 * spritePosition[1], 0, -1 * spritePosition[2])
			end

			local function setValue(val)
				checked = val
				updateSprite()
			end

			if not readOnly then
				checkboxFrame.MouseEnter:connect(function() mouseover = true updateSprite() end)
				checkboxFrame.MouseLeave:connect(function() mouseover = false updateSprite() end)
				checkboxFrame.MouseButton1Click:connect(function()
					onClick(checked)
				end)
			end

			updateSprite()

			return checkboxFrame, setValue
		end



		-- Code for handling controls of various data types --

		local Controls = {}

		Controls["default"] = function(object, propertyData, readOnly)
			local propertyName = propertyData["Name"]
			local propertyType = propertyData["ValueType"]

			local box = CreateTextBox(readOnly)
			box.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
			box.Position = UDim2.new(0, Styles.Margin, 0, 0)

			local function update()
				local value = object[propertyName]
				box.Text = ToString(value, propertyType)
			end

			if not readOnly then
				box.FocusLost:connect(function(enterPressed)
					Set(object, propertyData, ToValue(box.Text,propertyType))
					update()
				end)
			end

			update()

			object.Changed:connect(function(property)
				if (property == propertyName) then
					update()
				end
			end)

			return box
		end

		Controls["bool"] = function(object, propertyData, readOnly)
			local propertyName = propertyData["Name"]
			local checked = object[propertyName]

			local checkbox, setValue = CreateCheckbox(checked, readOnly, function(value)
				Set(object, propertyData, not checked)
			end)
			checkbox.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)

			setValue(checked)

			local function update()
				checked = object[propertyName]
				setValue(checked)
			end

			object.Changed:connect(function(property)
				if (property == propertyName) then
					update()
				end
			end)

			if object:IsA("BoolValue") then
				object.Changed:connect(function(val)
					update()
				end)
			end

			update()

			return checkbox
		end

		Controls["BrickColor"] = function(object, propertyData, readOnly)
			local propertyName = propertyData["Name"]

			local frame,label,brickColorBox = CreateBrickColor(readOnly, function(brickColor)
				Set(object, propertyData, brickColor)
			end)

			local function update()
				local value = object[propertyName]
				brickColorBox.BackgroundColor3 = value.Color
				label.Text = tostring(value)
			end

			update()

			object.Changed:connect(function(property)
				if (property == propertyName) then
					update()
				end
			end)

			return frame
		end

		Controls["Color3"] = function(object, propertyData, readOnly)
			local propertyName = propertyData["Name"]

			local frame,textBox,colorBox = CreateColor3Control(readOnly)

			textBox.FocusLost:connect(function(enterPressed)
				Set(object, propertyData, ToValue(textBox.Text,"Color3"))
				local value = object[propertyName]
				colorBox.BackgroundColor3 = value
				textBox.Text = ToString(value, "Color3")
			end)

			local function update()
				local value = object[propertyName]
				colorBox.BackgroundColor3 = value
				textBox.Text = ToString(value, "Color3")
			end

			update()

			object.Changed:connect(function(property)
				if (property == propertyName) then
					update()
				end
			end)

			return frame
		end

		Controls["Enum"] = function(object, propertyData, readOnly)
			local propertyName = propertyData["Name"]
			local propertyType = propertyData["ValueType"]

			local enumName = object[propertyName].Name

			local enumNames = {}
			for _,enum in pairs(Enum[tostring(propertyType)]:GetEnumItems()) do
				table.insert(enumNames, enum.Name)
			end

			local dropdown, propertyLabel = CreateDropDown(enumNames, enumName, readOnly, function(value)
				Set(object, propertyData, value)
			end)
			--dropdown.Parent = frame

			local function update()
				local value = object[propertyName].Name
				propertyLabel.Text = tostring(value)
			end

			update()

			object.Changed:connect(function(property)
				if (property == propertyName) then
					update()
				end
			end)

			return dropdown
		end

		Controls["Object"] = function(object, propertyData, readOnly)
			local propertyName = propertyData["Name"]
			local propertyType = propertyData["ValueType"]

			local box = CreateObject(readOnly,function()end)
			box.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
			box.Position = UDim2.new(0, Styles.Margin, 0, 0)

			local function update()
				if AwaitingObjectObj == object then
					if AwaitingObjectValue == true then
						box.Text = "Select an Object"
						return
					end
				end
				local value = object[propertyName]
				box.Text = ToString(value, propertyType)
			end

			if not readOnly then
				box.MouseButton1Click:connect(function()
					if AwaitingObjectValue then
						AwaitingObjectValue = false
						update()
						return
					end
					AwaitingObjectValue = true
					AwaitingObjectObj = object
					AwaitingObjectProp = propertyData
					box.Text = "Select an Object"
				end)

				box.Cancel.Visible = true
				box.Cancel.MouseButton1Click:connect(function()
					object[propertyName] = nil
				end)
			end

			update()

			object.Changed:connect(function(property)
				if (property == propertyName) then
					update()
				end
			end)

			if object:IsA("ObjectValue") then
				object.Changed:connect(function(val)
					update()
				end)
			end

			return box
		end

		function GetControl(object, propertyData, readOnly)
			local propertyType = propertyData["ValueType"]
			local control = nil

			if Controls[propertyType] then
				control = Controls[propertyType](object, propertyData, readOnly)
			elseif RbxApi.IsEnum(propertyType) then
				control = Controls["Enum"](object, propertyData, readOnly)
			else
				control = Controls["default"](object, propertyData, readOnly)
			end
			return control
		end
		-- Permissions

		function CanEditObject(object)
			local player = Players.LocalPlayer
			local character = player.Character
			return Permissions.CanEdit
		end

		function CanEditProperty(object,propertyData)
			local tags = propertyData["tags"]
			for _,name in pairs(tags) do
				if name == "readonly" then
					return false
				end
			end
			return CanEditObject(object)
		end

		--RbxApi
		local function PropertyIsHidden(propertyData)
			local tags = propertyData["tags"]
			for _,name in pairs(tags) do
				if name == "deprecated"
					or name == "hidden"
					or name == "writeonly" then
					return true
				end
			end
			return false
		end

		function Set(object, propertyData, value)
			local propertyName = propertyData["Name"]
			local propertyType = propertyData["ValueType"]

			if value == nil then return end

			for i,v in pairs(GetSelection()) do
				if CanEditProperty(v,propertyData) then
					pcall(function()
						--print("Setting " .. propertyName .. " to " .. tostring(value))
						v[propertyName] = value
					end)
				end
			end
		end

		function CreateRow(object, propertyData, isAlternateRow)
			local propertyName = propertyData["Name"]
			local propertyType = propertyData["ValueType"]
			local propertyValue = object[propertyName]
			--rowValue, rowValueType, isAlternate
			local backColor = Row.BackgroundColor;
			if (isAlternateRow) then
				backColor = Row.BackgroundColorAlternate
			end

			local readOnly = not CanEditProperty(object, propertyData)
			if propertyType == "Instance" or propertyName == "Parent" then readOnly = true end

			local rowFrame = Instance.new("Frame")
			rowFrame.Size = UDim2.new(1,0,0,Row.Height)
			rowFrame.BackgroundTransparency = 1
			rowFrame.Name = 'Row'

			local propertyLabelFrame = CreateCell()
			propertyLabelFrame.Parent = rowFrame
			propertyLabelFrame.ClipsDescendants = true

			local propertyLabel = CreateLabel(readOnly)
			propertyLabel.Text = propertyName
			propertyLabel.Size = UDim2.new(1, -1 * Row.TitleMarginLeft, 1, 0)
			propertyLabel.Position = UDim2.new(0, Row.TitleMarginLeft, 0, 0)
			propertyLabel.Parent = propertyLabelFrame

			local propertyValueFrame = CreateCell()
			propertyValueFrame.Size = UDim2.new(0.5, -1, 1, 0)
			propertyValueFrame.Position = UDim2.new(0.5, 0, 0, 0)
			propertyValueFrame.Parent = rowFrame

			local control = GetControl(object, propertyData, readOnly)
			control.Parent = propertyValueFrame

			rowFrame.MouseEnter:connect(function()
				propertyLabelFrame.BackgroundColor3 = Row.BackgroundColorMouseover
				propertyValueFrame.BackgroundColor3 = Row.BackgroundColorMouseover
			end)
			rowFrame.MouseLeave:connect(function()
				propertyLabelFrame.BackgroundColor3 = backColor
				propertyValueFrame.BackgroundColor3 = backColor
			end)

			propertyLabelFrame.BackgroundColor3 = backColor
			propertyValueFrame.BackgroundColor3 = backColor

			return rowFrame
		end

		function ClearPropertiesList()
			for _,instance in pairs(ContentFrame:GetChildren()) do
				instance:Destroy()
			end
		end

		local selection = Gui:FindFirstChild("Selection", 1)
		print(selection)

		function displayProperties(props)
			for i,v in pairs(props) do
				pcall(function()
					local a = CreateRow(v.object, v.propertyData, ((numRows % 2) == 0))
					a.Position = UDim2.new(0,0,0,numRows*Row.Height)
					a.Parent = ContentFrame
					numRows = numRows + 1
				end)
			end
		end

		function checkForDupe(prop,props)
			for i,v in pairs(props) do
				if v.propertyData.Name == prop.Name and v.propertyData.ValueType == prop.ValueType then
					return true
				end
			end
			return false
		end

		function sortProps(t)
			table.sort(t, 
				function(x,y) return x.propertyData.Name < y.propertyData.Name
				end)
		end

		function showProperties(obj)
			ClearPropertiesList()
			if obj == nil then return end
			local propHolder = {}
			local foundProps = {}
			numRows = 0
			for _,nextObj in pairs(obj) do
				if not foundProps[nextObj.className] then
					foundProps[nextObj.className] = true
					for i,v in pairs(RbxApi.GetProperties(nextObj.className)) do
						local suc, err = pcall(function()
							if not (PropertyIsHidden(v)) and not checkForDupe(v,propHolder) then
								if string.find(string.lower(v.Name),string.lower(propertiesSearch.Text)) or not searchingProperties() then
									table.insert(propHolder,{propertyData = v, object = nextObj})
								end
							end
						end)
				--[[if not suc then 
					warn("Problem getting the value of property " .. v.Name .. " | " .. err)
				end	--]]
					end
				end
			end
			sortProps(propHolder)
			displayProperties(propHolder)
			ContentFrame.Size = UDim2.new(1, 0, 0, numRows * Row.Height)
			scrollBar.ScrollIndex = 0
			scrollBar.TotalSpace = numRows * Row.Height
			scrollBar.Update()
		end

		----------------------------------------------------------------
		-----------------------SCROLLBAR STUFF--------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		local ScrollBarWidth = 16

		local ScrollStyles = {
			Background      = Color3.new(233/255, 233/255, 233/255);
			Border          = Color3.new(149/255, 149/255, 149/255);
			Selected        = Color3.new( 63/255, 119/255, 189/255);
			BorderSelected  = Color3.new( 55/255, 106/255, 167/255);
			Text            = Color3.new(  0/255,   0/255,   0/255);
			TextDisabled    = Color3.new(128/255, 128/255, 128/255);
			TextSelected    = Color3.new(255/255, 255/255, 255/255);
			Button          = Color3.new(221/255, 221/255, 221/255);
			ButtonBorder    = Color3.new(149/255, 149/255, 149/255);
			ButtonSelected  = Color3.new(255/255,   0/255,   0/255);
			Field           = Color3.new(255/255, 255/255, 255/255);
			FieldBorder     = Color3.new(191/255, 191/255, 191/255);
			TitleBackground = Color3.new(178/255, 178/255, 178/255);
		}
		do
			local ZIndexLock = {}
			function SetZIndex(object,z)
				if not ZIndexLock[object] then
					ZIndexLock[object] = true
					if object:IsA'GuiObject' then
						object.ZIndex = z
					end
					local children = object:GetChildren()
					for i = 1,#children do
						SetZIndex(children[i],z)
					end
					ZIndexLock[object] = nil
				end
			end
		end
		function SetZIndexOnChanged(object)
			return object.Changed:connect(function(p)
				if p == "ZIndex" then
					SetZIndex(object,object.ZIndex)
				end
			end)
		end
		function Create(ty,data)
			local obj
			if type(ty) == 'string' then
				obj = Instance.new(ty)
			else
				obj = ty
			end
			for k, v in pairs(data) do
				if type(k) == 'number' then
					v.Parent = obj
				else
					obj[k] = v
				end
			end
			return obj
		end
		-- returns the ascendant ScreenGui of an object
		function GetScreen(screen)
			if screen == nil then return nil end
			while not screen:IsA("ScreenGui") do
				screen = screen.Parent
				if screen == nil then return nil end
			end
			return screen
		end
		-- AutoButtonColor doesn't always reset properly
		function ResetButtonColor(button)
			local active = button.Active
			button.Active = not active
			button.Active = active
		end

		function ArrowGraphic(size,dir,scaled,template)
			local Frame = Create('Frame',{
				Name = "Arrow Graphic";
				BorderSizePixel = 0;
				Size = UDim2.new(0,size,0,size);
				Transparency = 1;
			})
			if not template then
				template = Instance.new("Frame")
				template.BorderSizePixel = 0
			end

			local transform
			if dir == nil or dir == 'Up' then
				function transform(p,s) return p,s end
			elseif dir == 'Down' then
				function transform(p,s) return UDim2.new(0,p.X.Offset,0,size-p.Y.Offset-1),s end
			elseif dir == 'Left' then
				function transform(p,s) return UDim2.new(0,p.Y.Offset,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
			elseif dir == 'Right' then
				function transform(p,s) return UDim2.new(0,size-p.Y.Offset-1,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
			end

			local scale
			if scaled then
				function scale(p,s) return UDim2.new(p.X.Offset/size,0,p.Y.Offset/size,0),UDim2.new(s.X.Offset/size,0,s.Y.Offset/size,0) end
			else
				function scale(p,s) return p,s end
			end

			local o = math.floor(size/4)
			if size%2 == 0 then
				local n = size/2-1
				for i = 0,n do
					local t = template:Clone()
					local p,s = scale(transform(
						UDim2.new(0,n-i,0,o+i),
						UDim2.new(0,(i+1)*2,0,1)
						))
					t.Position = p
					t.Size = s
					t.Parent = Frame
				end
			else
				local n = (size-1)/2
				for i = 0,n do
					local t = template:Clone()
					local p,s = scale(transform(
						UDim2.new(0,n-i,0,o+i),
						UDim2.new(0,i*2+1,0,1)
						))
					t.Position = p
					t.Size = s
					t.Parent = Frame
				end
			end
			if size%4 > 1 then
				local t = template:Clone()
				local p,s = scale(transform(
					UDim2.new(0,0,0,size-o-1),
					UDim2.new(0,size,0,1)
					))
				t.Position = p
				t.Size = s
				t.Parent = Frame
			end
			return Frame
		end

		function GripGraphic(size,dir,spacing,scaled,template)
			local Frame = Create('Frame',{
				Name = "Grip Graphic";
				BorderSizePixel = 0;
				Size = UDim2.new(0,size.x,0,size.y);
				Transparency = 1;
			})
			if not template then
				template = Instance.new("Frame")
				template.BorderSizePixel = 0
			end

			spacing = spacing or 2

			local scale
			if scaled then
				function scale(p) return UDim2.new(p.X.Offset/size.x,0,p.Y.Offset/size.y,0) end
			else
				function scale(p) return p end
			end

			if dir == 'Vertical' then
				for i=0,size.x-1,spacing do
					local t = template:Clone()
					t.Size = scale(UDim2.new(0,1,0,size.y))
					t.Position = scale(UDim2.new(0,i,0,0))
					t.Parent = Frame
				end
			elseif dir == nil or dir == 'Horizontal' then
				for i=0,size.y-1,spacing do
					local t = template:Clone()
					t.Size = scale(UDim2.new(0,size.x,0,1))
					t.Position = scale(UDim2.new(0,0,0,i))
					t.Parent = Frame
				end
			end

			return Frame
		end

		do
			local mt = {
				__index = {
					GetScrollPercent = function(self)
						return self.ScrollIndex/(self.TotalSpace-self.VisibleSpace)
					end;
					CanScrollDown = function(self)
						return self.ScrollIndex + self.VisibleSpace < self.TotalSpace
					end;
					CanScrollUp = function(self)
						return self.ScrollIndex > 0
					end;
					ScrollDown = function(self)
						self.ScrollIndex = self.ScrollIndex + self.PageIncrement
						self:Update()
					end;
					ScrollUp = function(self)
						self.ScrollIndex = self.ScrollIndex - self.PageIncrement
						self:Update()
					end;
					ScrollTo = function(self,index)
						self.ScrollIndex = index
						self:Update()
					end;
					SetScrollPercent = function(self,percent)
						self.ScrollIndex = math.floor((self.TotalSpace - self.VisibleSpace)*percent + 0.5)
						self:Update()
					end;
				};
			}
			mt.__index.CanScrollRight = mt.__index.CanScrollDown
			mt.__index.CanScrollLeft = mt.__index.CanScrollUp
			mt.__index.ScrollLeft = mt.__index.ScrollUp
			mt.__index.ScrollRight = mt.__index.ScrollDown

			function ScrollBar(horizontal)
				-- create row scroll bar
				local ScrollFrame = Create('Frame',{
					Name = "ScrollFrame";
					Position = horizontal and UDim2.new(0,0,1,-ScrollBarWidth) or UDim2.new(1,-ScrollBarWidth,0,0);
					Size = horizontal and UDim2.new(1,0,0,ScrollBarWidth) or UDim2.new(0,ScrollBarWidth,1,0);
					BackgroundTransparency = 1;
					Create('ImageButton',{
						Name = "ScrollDown";
						Position = horizontal and UDim2.new(1,-ScrollBarWidth,0,0) or UDim2.new(0,0,1,-ScrollBarWidth);
						Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
						BackgroundColor3 = ScrollStyles.Button;
						BorderColor3 = ScrollStyles.Border;
						--BorderSizePixel = 0;
					});
					Create('ImageButton',{
						Name = "ScrollUp";
						Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
						BackgroundColor3 = ScrollStyles.Button;
						BorderColor3 = ScrollStyles.Border;
						--BorderSizePixel = 0;
					});
					Create('ImageButton',{
						Name = "ScrollBar";
						Size = horizontal and UDim2.new(1,-ScrollBarWidth*2,1,0) or UDim2.new(1,0,1,-ScrollBarWidth*2);
						Position = horizontal and UDim2.new(0,ScrollBarWidth,0,0) or UDim2.new(0,0,0,ScrollBarWidth);
						AutoButtonColor = false;
						BackgroundColor3 = Color3.new(0.94902, 0.94902, 0.94902);
						BorderColor3 = ScrollStyles.Border;
						--BorderSizePixel = 0;
						Create('ImageButton',{
							Name = "ScrollThumb";
							AutoButtonColor = false;
							Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
							BackgroundColor3 = ScrollStyles.Button;
							BorderColor3 = ScrollStyles.Border;
							--BorderSizePixel = 0;
						});
					});
				})

				local graphicTemplate = Create('Frame',{
					Name="Graphic";
					BorderSizePixel = 0;
					BackgroundColor3 = ScrollStyles.Border;
				})
				local graphicSize = ScrollBarWidth/2

				local ScrollDownFrame = ScrollFrame.ScrollDown
				local ScrollDownGraphic = ArrowGraphic(graphicSize,horizontal and 'Right' or 'Down',true,graphicTemplate)
				ScrollDownGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
				ScrollDownGraphic.Parent = ScrollDownFrame
				local ScrollUpFrame = ScrollFrame.ScrollUp
				local ScrollUpGraphic = ArrowGraphic(graphicSize,horizontal and 'Left' or 'Up',true,graphicTemplate)
				ScrollUpGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
				ScrollUpGraphic.Parent = ScrollUpFrame
				local ScrollBarFrame = ScrollFrame.ScrollBar
				local ScrollThumbFrame = ScrollBarFrame.ScrollThumb
				do
					local size = ScrollBarWidth*3/8
					local Decal = GripGraphic(Vector2.new(size,size),horizontal and 'Vertical' or 'Horizontal',2,graphicTemplate)
					Decal.Position = UDim2.new(0.5,-size/2,0.5,-size/2)
					Decal.Parent = ScrollThumbFrame
				end

				local MouseDrag = Create('ImageButton',{
					Name = "MouseDrag";
					Position = UDim2.new(-0.25,0,-0.25,0);
					Size = UDim2.new(1.5,0,1.5,0);
					Transparency = 1;
					AutoButtonColor = false;
					Active = true;
					ZIndex = 10;
				})

				local Class = setmetatable({
					GUI = ScrollFrame;
					ScrollIndex = 0;
					VisibleSpace = 0;
					TotalSpace = 0;
					PageIncrement = 1;
				},mt)

				local UpdateScrollThumb
				if horizontal then
					function UpdateScrollThumb()
						ScrollThumbFrame.Size = UDim2.new(Class.VisibleSpace/Class.TotalSpace,0,0,ScrollBarWidth)
						if ScrollThumbFrame.AbsoluteSize.x < ScrollBarWidth then
							ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
						end
						local barSize = ScrollBarFrame.AbsoluteSize.x
						ScrollThumbFrame.Position = UDim2.new(Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.x)/barSize,0,0,0)
					end
				else
					function UpdateScrollThumb()
						ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,Class.VisibleSpace/Class.TotalSpace,0)
						if ScrollThumbFrame.AbsoluteSize.y < ScrollBarWidth then
							ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
						end
						local barSize = ScrollBarFrame.AbsoluteSize.y
						ScrollThumbFrame.Position = UDim2.new(0,0,Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.y)/barSize,0)
					end
				end

				local lastDown
				local lastUp
				local scrollStyle = {BackgroundColor3=ScrollStyles.Border,BackgroundTransparency=0}
				local scrollStyle_ds = {BackgroundColor3=ScrollStyles.Border,BackgroundTransparency=0.7}

				local function Update()
					local t = Class.TotalSpace
					local v = Class.VisibleSpace
					local s = Class.ScrollIndex
					if v <= t then
						if s > 0 then
							if s + v > t then
								Class.ScrollIndex = t - v
							end
						else
							Class.ScrollIndex = 0
						end
					else
						Class.ScrollIndex = 0
					end

					if Class.UpdateCallback then
						if Class.UpdateCallback(Class) == false then
							return
						end
					end

					local down = Class:CanScrollDown()
					local up = Class:CanScrollUp()
					if down ~= lastDown then
						lastDown = down
						ScrollDownFrame.Active = down
						ScrollDownFrame.AutoButtonColor = down
						local children = ScrollDownGraphic:GetChildren()
						local style = down and scrollStyle or scrollStyle_ds
						for i = 1,#children do
							Create(children[i],style)
						end
					end
					if up ~= lastUp then
						lastUp = up
						ScrollUpFrame.Active = up
						ScrollUpFrame.AutoButtonColor = up
						local children = ScrollUpGraphic:GetChildren()
						local style = up and scrollStyle or scrollStyle_ds
						for i = 1,#children do
							Create(children[i],style)
						end
					end
					ScrollThumbFrame.Visible = down or up
					UpdateScrollThumb()
				end
				Class.Update = Update

				SetZIndexOnChanged(ScrollFrame)

				local scrollEventID = 0
				ScrollDownFrame.MouseButton1Down:connect(function()
					scrollEventID = tick()
					local current = scrollEventID
					local up_con
					up_con = MouseDrag.MouseButton1Up:connect(function()
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollDownFrame)
						up_con:disconnect(); drag = nil
					end)
					MouseDrag.Parent = GetScreen(ScrollFrame)
					Class:ScrollDown()
					wait(0.2) -- delay before auto scroll
					while scrollEventID == current do
						Class:ScrollDown()
						if not Class:CanScrollDown() then break end
						wait()
					end
				end)

				ScrollDownFrame.MouseButton1Up:connect(function()
					scrollEventID = tick()
				end)

				ScrollUpFrame.MouseButton1Down:connect(function()
					scrollEventID = tick()
					local current = scrollEventID
					local up_con
					up_con = MouseDrag.MouseButton1Up:connect(function()
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollUpFrame)
						up_con:disconnect(); drag = nil
					end)
					MouseDrag.Parent = GetScreen(ScrollFrame)
					Class:ScrollUp()
					wait(0.2)
					while scrollEventID == current do
						Class:ScrollUp()
						if not Class:CanScrollUp() then break end
						wait()
					end
				end)

				ScrollUpFrame.MouseButton1Up:connect(function()
					scrollEventID = tick()
				end)

				if horizontal then
					ScrollBarFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local current = scrollEventID
						local up_con
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollUpFrame)
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
						if x > ScrollThumbFrame.AbsolutePosition.x then
							Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if x < ScrollThumbFrame.AbsolutePosition.x + ScrollThumbFrame.AbsoluteSize.x then break end
								Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
								wait()
							end
						else
							Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if x > ScrollThumbFrame.AbsolutePosition.x then break end
								Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
								wait()
							end
						end
					end)
				else
					ScrollBarFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local current = scrollEventID
						local up_con
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollUpFrame)
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
						if y > ScrollThumbFrame.AbsolutePosition.y then
							Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if y < ScrollThumbFrame.AbsolutePosition.y + ScrollThumbFrame.AbsoluteSize.y then break end
								Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
								wait()
							end
						else
							Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if y > ScrollThumbFrame.AbsolutePosition.y then break end
								Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
								wait()
							end
						end
					end)
				end

				if horizontal then
					ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local mouse_offset = x - ScrollThumbFrame.AbsolutePosition.x
						local drag_con
						local up_con
						drag_con = MouseDrag.MouseMoved:connect(function(x,y)
							local bar_abs_pos = ScrollBarFrame.AbsolutePosition.x
							local bar_drag = ScrollBarFrame.AbsoluteSize.x - ScrollThumbFrame.AbsoluteSize.x
							local bar_abs_one = bar_abs_pos + bar_drag
							x = x - mouse_offset
							x = x < bar_abs_pos and bar_abs_pos or x > bar_abs_one and bar_abs_one or x
							x = x - bar_abs_pos
							Class:SetScrollPercent(x/(bar_drag))
						end)
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollThumbFrame)
							drag_con:disconnect(); drag_con = nil
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
					end)
				else
					ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local mouse_offset = y - ScrollThumbFrame.AbsolutePosition.y
						local drag_con
						local up_con
						drag_con = MouseDrag.MouseMoved:connect(function(x,y)
							local bar_abs_pos = ScrollBarFrame.AbsolutePosition.y
							local bar_drag = ScrollBarFrame.AbsoluteSize.y - ScrollThumbFrame.AbsoluteSize.y
							local bar_abs_one = bar_abs_pos + bar_drag
							y = y - mouse_offset
							y = y < bar_abs_pos and bar_abs_pos or y > bar_abs_one and bar_abs_one or y
							y = y - bar_abs_pos
							Class:SetScrollPercent(y/(bar_drag))
						end)
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollThumbFrame)
							drag_con:disconnect(); drag_con = nil
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
					end)
				end

				function Class:Destroy()
					ScrollFrame:Destroy()
					MouseDrag:Destroy()
					for k in pairs(Class) do
						Class[k] = nil
					end
					setmetatable(Class,nil)
				end

				Update()

				return Class
			end
		end

		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------

		local MainFrame = Instance.new("Frame")
		MainFrame.Name = "MainFrame"
		MainFrame.Size = UDim2.new(1, -1 * ScrollBarWidth, 1, 0)
		MainFrame.Position = UDim2.new(0, 0, 0, 0)
		MainFrame.BackgroundTransparency = 1
		MainFrame.ClipsDescendants = true
		MainFrame.Parent = PropertiesFrame

		ContentFrame = Instance.new("Frame")
		ContentFrame.Name = "ContentFrame"
		ContentFrame.Size = UDim2.new(1, 0, 0, 0)
		ContentFrame.BackgroundTransparency = 1
		ContentFrame.Parent = MainFrame

		scrollBar = ScrollBar(false)
		scrollBar.PageIncrement = 1
		Create(scrollBar.GUI,{
			Position = UDim2.new(1,-ScrollBarWidth,0,0);
			Size = UDim2.new(0,ScrollBarWidth,1,0);
			Parent = PropertiesFrame;
		})

		scrollBarH = ScrollBar(true)
		scrollBarH.PageIncrement = ScrollBarWidth
		Create(scrollBarH.GUI,{
			Position = UDim2.new(0,0,1,-ScrollBarWidth);
			Size = UDim2.new(1,-ScrollBarWidth,0,ScrollBarWidth);
			Visible = false;
			Parent = PropertiesFrame;
		})

		do
			local listEntries = {}
			local nameConnLookup = {}

			function scrollBar.UpdateCallback(self)
				scrollBar.TotalSpace = ContentFrame.AbsoluteSize.Y
				scrollBar.VisibleSpace = MainFrame.AbsoluteSize.Y
				ContentFrame.Position = UDim2.new(ContentFrame.Position.X.Scale,ContentFrame.Position.X.Offset,0,-1*scrollBar.ScrollIndex)
			end

			function scrollBarH.UpdateCallback(self)

			end

			MainFrame.Changed:connect(function(p)
				if p == 'AbsoluteSize' then
					scrollBarH.VisibleSpace = math.ceil(MainFrame.AbsoluteSize.x)
					scrollBarH:Update()
					scrollBar.VisibleSpace = math.ceil(MainFrame.AbsoluteSize.y)
					scrollBar:Update()
				end
			end)

			local wheelAmount = Row.Height
			PropertiesFrame.MouseWheelForward:connect(function()
				if scrollBar.VisibleSpace - 1 > wheelAmount then
					scrollBar:ScrollTo(scrollBar.ScrollIndex - wheelAmount)
				else
					scrollBar:ScrollTo(scrollBar.ScrollIndex - scrollBar.VisibleSpace)
				end
			end)
			PropertiesFrame.MouseWheelBackward:connect(function()
				if scrollBar.VisibleSpace - 1 > wheelAmount then
					scrollBar:ScrollTo(scrollBar.ScrollIndex + wheelAmount)
				else
					scrollBar:ScrollTo(scrollBar.ScrollIndex + scrollBar.VisibleSpace)
				end
			end)
		end

		scrollBar.VisibleSpace = math.ceil(MainFrame.AbsoluteSize.y)
		scrollBar:Update()

		showProperties(GetSelection())

		bindSelectionChanged.Event:connect(function()
			showProperties(GetSelection())
		end)

		bindSetAwait.Event:connect(function(obj)
			if AwaitingObjectValue then
				AwaitingObjectValue = false
				local mySel = obj
				if mySel then
					pcall(function()
						Set(AwaitingObjectObj, AwaitingObjectProp, mySel)
					end)
				end
			end
		end)

		propertiesSearch.Changed:connect(function(prop)
			if prop == "Text" then
				showProperties(GetSelection())
			end
		end)

		bindGetApi.OnInvoke = function()
			return RbxApi
		end

		bindGetAwait.OnInvoke = function()
			return AwaitingObjectValue
		end
	end)
	spawn(function()
		local top = D_E_X.ScriptEditor

		local editorGrid = top:WaitForChild("EditorGrid")

		local currentSource = ""

		local currentEditor = {
			x = 0,
			y = 0
		}

		local userInput = game:GetService("UserInputService")
		local mouse = game.Players.LocalPlayer:GetMouse()

		local topBar = top:WaitForChild("TopBar")
		local scriptBar = topBar:WaitForChild("ScriptBar")
		local scriptBarLeft = topBar:WaitForChild("ScriptBarLeft")
		local scriptBarRight = topBar:WaitForChild("ScriptBarRight")
		local clipboardButton = topBar:WaitForChild("Clipboard")

		local entryTemplate = topBar:WaitForChild("Entry")

		local openEvent = top:WaitForChild("OpenScript")

		local closeButton = top:WaitForChild("Close")

		local memoryScripts = {}

		local editingIndex = 0

		-- Scrollbar

		local ScrollBarWidth = 16

		local ScrollStyles = {
			Background      = Color3.new(233/255, 233/255, 233/255);
			Border          = Color3.new(149/255, 149/255, 149/255);
			Selected        = Color3.new( 63/255, 119/255, 189/255);
			BorderSelected  = Color3.new( 55/255, 106/255, 167/255);
			Text            = Color3.new(  0/255,   0/255,   0/255);
			TextDisabled    = Color3.new(128/255, 128/255, 128/255);
			TextSelected    = Color3.new(255/255, 255/255, 255/255);
			Button          = Color3.new(221/255, 221/255, 221/255);
			ButtonBorder    = Color3.new(149/255, 149/255, 149/255);
			ButtonSelected  = Color3.new(255/255,   0/255,   0/255);
			Field           = Color3.new(255/255, 255/255, 255/255);
			FieldBorder     = Color3.new(191/255, 191/255, 191/255);
			TitleBackground = Color3.new(178/255, 178/255, 178/255);
		}
		do
			local ZIndexLock = {}
			function SetZIndex(object,z)
				if not ZIndexLock[object] then
					ZIndexLock[object] = true
					if object:IsA'GuiObject' then
						object.ZIndex = z
					end
					local children = object:GetChildren()
					for i = 1,#children do
						SetZIndex(children[i],z)
					end
					ZIndexLock[object] = nil
				end
			end
		end
		function SetZIndexOnChanged(object)
			return object.Changed:connect(function(p)
				if p == "ZIndex" then
					SetZIndex(object,object.ZIndex)
				end
			end)
		end
		function Create(ty,data)
			local obj
			if type(ty) == 'string' then
				obj = Instance.new(ty)
			else
				obj = ty
			end
			for k, v in pairs(data) do
				if type(k) == 'number' then
					v.Parent = obj
				else
					obj[k] = v
				end
			end
			return obj
		end
		-- returns the ascendant ScreenGui of an object
		function GetScreen(screen)
			if screen == nil then return nil end
			while not screen:IsA("ScreenGui") do
				screen = screen.Parent
				if screen == nil then return nil end
			end
			return screen
		end
		-- AutoButtonColor doesn't always reset properly
		function ResetButtonColor(button)
			local active = button.Active
			button.Active = not active
			button.Active = active
		end

		function ArrowGraphic(size,dir,scaled,template)
			local Frame = Create('Frame',{
				Name = "Arrow Graphic";
				BorderSizePixel = 0;
				Size = UDim2.new(0,size,0,size);
				Transparency = 1;
			})
			if not template then
				template = Instance.new("Frame")
				template.BorderSizePixel = 0
			end

			local transform
			if dir == nil or dir == 'Up' then
				function transform(p,s) return p,s end
			elseif dir == 'Down' then
				function transform(p,s) return UDim2.new(0,p.X.Offset,0,size-p.Y.Offset-1),s end
			elseif dir == 'Left' then
				function transform(p,s) return UDim2.new(0,p.Y.Offset,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
			elseif dir == 'Right' then
				function transform(p,s) return UDim2.new(0,size-p.Y.Offset-1,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
			end

			local scale
			if scaled then
				function scale(p,s) return UDim2.new(p.X.Offset/size,0,p.Y.Offset/size,0),UDim2.new(s.X.Offset/size,0,s.Y.Offset/size,0) end
			else
				function scale(p,s) return p,s end
			end

			local o = math.floor(size/4)
			if size%2 == 0 then
				local n = size/2-1
				for i = 0,n do
					local t = template:Clone()
					local p,s = scale(transform(
						UDim2.new(0,n-i,0,o+i),
						UDim2.new(0,(i+1)*2,0,1)
						))
					t.Position = p
					t.Size = s
					t.Parent = Frame
				end
			else
				local n = (size-1)/2
				for i = 0,n do
					local t = template:Clone()
					local p,s = scale(transform(
						UDim2.new(0,n-i,0,o+i),
						UDim2.new(0,i*2+1,0,1)
						))
					t.Position = p
					t.Size = s
					t.Parent = Frame
				end
			end
			if size%4 > 1 then
				local t = template:Clone()
				local p,s = scale(transform(
					UDim2.new(0,0,0,size-o-1),
					UDim2.new(0,size,0,1)
					))
				t.Position = p
				t.Size = s
				t.Parent = Frame
			end
			return Frame
		end

		function GripGraphic(size,dir,spacing,scaled,template)
			local Frame = Create('Frame',{
				Name = "Grip Graphic";
				BorderSizePixel = 0;
				Size = UDim2.new(0,size.x,0,size.y);
				Transparency = 1;
			})
			if not template then
				template = Instance.new("Frame")
				template.BorderSizePixel = 0
			end

			spacing = spacing or 2

			local scale
			if scaled then
				function scale(p) return UDim2.new(p.X.Offset/size.x,0,p.Y.Offset/size.y,0) end
			else
				function scale(p) return p end
			end

			if dir == 'Vertical' then
				for i=0,size.x-1,spacing do
					local t = template:Clone()
					t.Size = scale(UDim2.new(0,1,0,size.y))
					t.Position = scale(UDim2.new(0,i,0,0))
					t.Parent = Frame
				end
			elseif dir == nil or dir == 'Horizontal' then
				for i=0,size.y-1,spacing do
					local t = template:Clone()
					t.Size = scale(UDim2.new(0,size.x,0,1))
					t.Position = scale(UDim2.new(0,0,0,i))
					t.Parent = Frame
				end
			end

			return Frame
		end

		do
			local mt = {
				__index = {
					GetScrollPercent = function(self)
						return self.ScrollIndex/(self.TotalSpace-self.VisibleSpace)
					end;
					CanScrollDown = function(self)
						return self.ScrollIndex + self.VisibleSpace < self.TotalSpace
					end;
					CanScrollUp = function(self)
						return self.ScrollIndex > 0
					end;
					ScrollDown = function(self)
						self.ScrollIndex = self.ScrollIndex + self.PageIncrement
						self:Update()
					end;
					ScrollUp = function(self)
						self.ScrollIndex = self.ScrollIndex - self.PageIncrement
						self:Update()
					end;
					ScrollTo = function(self,index)
						self.ScrollIndex = index
						self:Update()
					end;
					SetScrollPercent = function(self,percent)
						self.ScrollIndex = math.floor((self.TotalSpace - self.VisibleSpace)*percent + 0.5)
						self:Update()
					end;
				};
			}
			mt.__index.CanScrollRight = mt.__index.CanScrollDown
			mt.__index.CanScrollLeft = mt.__index.CanScrollUp
			mt.__index.ScrollLeft = mt.__index.ScrollUp
			mt.__index.ScrollRight = mt.__index.ScrollDown

			function ScrollBar(horizontal)
				-- create row scroll bar
				local ScrollFrame = Create('Frame',{
					Name = "ScrollFrame";
					Position = horizontal and UDim2.new(0,0,1,-ScrollBarWidth) or UDim2.new(1,-ScrollBarWidth,0,0);
					Size = horizontal and UDim2.new(1,0,0,ScrollBarWidth) or UDim2.new(0,ScrollBarWidth,1,0);
					BackgroundTransparency = 1;
					Create('ImageButton',{
						Name = "ScrollDown";
						Position = horizontal and UDim2.new(1,-ScrollBarWidth,0,0) or UDim2.new(0,0,1,-ScrollBarWidth);
						Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
						BackgroundColor3 = ScrollStyles.Button;
						BorderColor3 = ScrollStyles.Border;
						--BorderSizePixel = 0;
					});
					Create('ImageButton',{
						Name = "ScrollUp";
						Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
						BackgroundColor3 = ScrollStyles.Button;
						BorderColor3 = ScrollStyles.Border;
						--BorderSizePixel = 0;
					});
					Create('ImageButton',{
						Name = "ScrollBar";
						Size = horizontal and UDim2.new(1,-ScrollBarWidth*2,1,0) or UDim2.new(1,0,1,-ScrollBarWidth*2);
						Position = horizontal and UDim2.new(0,ScrollBarWidth,0,0) or UDim2.new(0,0,0,ScrollBarWidth);
						AutoButtonColor = false;
						BackgroundColor3 = Color3.new(0.94902, 0.94902, 0.94902);
						BorderColor3 = ScrollStyles.Border;
						--BorderSizePixel = 0;
						Create('ImageButton',{
							Name = "ScrollThumb";
							AutoButtonColor = false;
							Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
							BackgroundColor3 = ScrollStyles.Button;
							BorderColor3 = ScrollStyles.Border;
							--BorderSizePixel = 0;
						});
					});
				})

				local graphicTemplate = Create('Frame',{
					Name="Graphic";
					BorderSizePixel = 0;
					BackgroundColor3 = ScrollStyles.Border;
				})
				local graphicSize = ScrollBarWidth/2

				local ScrollDownFrame = ScrollFrame.ScrollDown
				local ScrollDownGraphic = ArrowGraphic(graphicSize,horizontal and 'Right' or 'Down',true,graphicTemplate)
				ScrollDownGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
				ScrollDownGraphic.Parent = ScrollDownFrame
				local ScrollUpFrame = ScrollFrame.ScrollUp
				local ScrollUpGraphic = ArrowGraphic(graphicSize,horizontal and 'Left' or 'Up',true,graphicTemplate)
				ScrollUpGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
				ScrollUpGraphic.Parent = ScrollUpFrame
				local ScrollBarFrame = ScrollFrame.ScrollBar
				local ScrollThumbFrame = ScrollBarFrame.ScrollThumb
				do
					local size = ScrollBarWidth*3/8
					local Decal = GripGraphic(Vector2.new(size,size),horizontal and 'Vertical' or 'Horizontal',2,graphicTemplate)
					Decal.Position = UDim2.new(0.5,-size/2,0.5,-size/2)
					Decal.Parent = ScrollThumbFrame
				end

				local MouseDrag = Create('ImageButton',{
					Name = "MouseDrag";
					Position = UDim2.new(-0.25,0,-0.25,0);
					Size = UDim2.new(1.5,0,1.5,0);
					Transparency = 1;
					AutoButtonColor = false;
					Active = true;
					ZIndex = 10;
				})

				local Class = setmetatable({
					GUI = ScrollFrame;
					ScrollIndex = 0;
					VisibleSpace = 0;
					TotalSpace = 0;
					PageIncrement = 1;
				},mt)

				local UpdateScrollThumb
				if horizontal then
					function UpdateScrollThumb()
						ScrollThumbFrame.Size = UDim2.new(Class.VisibleSpace/Class.TotalSpace,0,0,ScrollBarWidth)
						if ScrollThumbFrame.AbsoluteSize.x < ScrollBarWidth then
							ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
						end
						local barSize = ScrollBarFrame.AbsoluteSize.x
						ScrollThumbFrame.Position = UDim2.new(Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.x)/barSize,0,0,0)
					end
				else
					function UpdateScrollThumb()
						ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,Class.VisibleSpace/Class.TotalSpace,0)
						if ScrollThumbFrame.AbsoluteSize.y < ScrollBarWidth then
							ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
						end
						local barSize = ScrollBarFrame.AbsoluteSize.y
						ScrollThumbFrame.Position = UDim2.new(0,0,Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.y)/barSize,0)
					end
				end

				local lastDown
				local lastUp
				local scrollStyle = {BackgroundColor3=ScrollStyles.Border,BackgroundTransparency=0}
				local scrollStyle_ds = {BackgroundColor3=ScrollStyles.Border,BackgroundTransparency=0.7}

				local function Update()
					local t = Class.TotalSpace
					local v = Class.VisibleSpace
					local s = Class.ScrollIndex
					if v <= t then
						if s > 0 then
							if s + v > t then
								Class.ScrollIndex = t - v
							end
						else
							Class.ScrollIndex = 0
						end
					else
						Class.ScrollIndex = 0
					end

					if Class.UpdateCallback then
						if Class.UpdateCallback(Class) == false then
							return
						end
					end

					local down = Class:CanScrollDown()
					local up = Class:CanScrollUp()
					if down ~= lastDown then
						lastDown = down
						ScrollDownFrame.Active = down
						ScrollDownFrame.AutoButtonColor = down
						local children = ScrollDownGraphic:GetChildren()
						local style = down and scrollStyle or scrollStyle_ds
						for i = 1,#children do
							Create(children[i],style)
						end
					end
					if up ~= lastUp then
						lastUp = up
						ScrollUpFrame.Active = up
						ScrollUpFrame.AutoButtonColor = up
						local children = ScrollUpGraphic:GetChildren()
						local style = up and scrollStyle or scrollStyle_ds
						for i = 1,#children do
							Create(children[i],style)
						end
					end
					ScrollThumbFrame.Visible = down or up
					UpdateScrollThumb()
				end
				Class.Update = Update

				SetZIndexOnChanged(ScrollFrame)

				local scrollEventID = 0
				ScrollDownFrame.MouseButton1Down:connect(function()
					scrollEventID = tick()
					local current = scrollEventID
					local up_con
					up_con = MouseDrag.MouseButton1Up:connect(function()
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollDownFrame)
						up_con:disconnect(); drag = nil
					end)
					MouseDrag.Parent = GetScreen(ScrollFrame)
					Class:ScrollDown()
					wait(0.2) -- delay before auto scroll
					while scrollEventID == current do
						Class:ScrollDown()
						if not Class:CanScrollDown() then break end
						wait()
					end
				end)

				ScrollDownFrame.MouseButton1Up:connect(function()
					scrollEventID = tick()
				end)

				ScrollUpFrame.MouseButton1Down:connect(function()
					scrollEventID = tick()
					local current = scrollEventID
					local up_con
					up_con = MouseDrag.MouseButton1Up:connect(function()
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollUpFrame)
						up_con:disconnect(); drag = nil
					end)
					MouseDrag.Parent = GetScreen(ScrollFrame)
					Class:ScrollUp()
					wait(0.2)
					while scrollEventID == current do
						Class:ScrollUp()
						if not Class:CanScrollUp() then break end
						wait()
					end
				end)

				ScrollUpFrame.MouseButton1Up:connect(function()
					scrollEventID = tick()
				end)

				if horizontal then
					ScrollBarFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local current = scrollEventID
						local up_con
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollUpFrame)
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
						if x > ScrollThumbFrame.AbsolutePosition.x then
							Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if x < ScrollThumbFrame.AbsolutePosition.x + ScrollThumbFrame.AbsoluteSize.x then break end
								Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
								wait()
							end
						else
							Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if x > ScrollThumbFrame.AbsolutePosition.x then break end
								Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
								wait()
							end
						end
					end)
				else
					ScrollBarFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local current = scrollEventID
						local up_con
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollUpFrame)
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
						if y > ScrollThumbFrame.AbsolutePosition.y then
							Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if y < ScrollThumbFrame.AbsolutePosition.y + ScrollThumbFrame.AbsoluteSize.y then break end
								Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
								wait()
							end
						else
							Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if y > ScrollThumbFrame.AbsolutePosition.y then break end
								Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
								wait()
							end
						end
					end)
				end

				if horizontal then
					ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local mouse_offset = x - ScrollThumbFrame.AbsolutePosition.x
						local drag_con
						local up_con
						drag_con = MouseDrag.MouseMoved:connect(function(x,y)
							local bar_abs_pos = ScrollBarFrame.AbsolutePosition.x
							local bar_drag = ScrollBarFrame.AbsoluteSize.x - ScrollThumbFrame.AbsoluteSize.x
							local bar_abs_one = bar_abs_pos + bar_drag
							x = x - mouse_offset
							x = x < bar_abs_pos and bar_abs_pos or x > bar_abs_one and bar_abs_one or x
							x = x - bar_abs_pos
							Class:SetScrollPercent(x/(bar_drag))
						end)
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollThumbFrame)
							drag_con:disconnect(); drag_con = nil
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
					end)
				else
					ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local mouse_offset = y - ScrollThumbFrame.AbsolutePosition.y
						local drag_con
						local up_con
						drag_con = MouseDrag.MouseMoved:connect(function(x,y)
							local bar_abs_pos = ScrollBarFrame.AbsolutePosition.y
							local bar_drag = ScrollBarFrame.AbsoluteSize.y - ScrollThumbFrame.AbsoluteSize.y
							local bar_abs_one = bar_abs_pos + bar_drag
							y = y - mouse_offset
							y = y < bar_abs_pos and bar_abs_pos or y > bar_abs_one and bar_abs_one or y
							y = y - bar_abs_pos
							Class:SetScrollPercent(y/(bar_drag))
						end)
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollThumbFrame)
							drag_con:disconnect(); drag_con = nil
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
					end)
				end

				function Class:Destroy()
					ScrollFrame:Destroy()
					MouseDrag:Destroy()
					for k in pairs(Class) do
						Class[k] = nil
					end
					setmetatable(Class,nil)
				end

				Update()

				return Class
			end
		end

		-- End Scrollbar

		local scrollBar = ScrollBar(false)
		scrollBar.PageIncrement = 16
		Create(scrollBar.GUI,{
			Position = UDim2.new(1,0,0,0);
			Size = UDim2.new(0,ScrollBarWidth,1,0);
			Parent = editorGrid;
		})

		local scrollBarH = ScrollBar(true)
		scrollBarH.PageIncrement = 8
		Create(scrollBarH.GUI,{
			Position = UDim2.new(0,0,1,0);
			Size = UDim2.new(1,0,0,ScrollBarWidth);
			Parent = editorGrid;
		})

		local entries = {}

		local grid = {}

		local count = 1
		local xCount = 1

		local lineSpan = 0

		for i = 0,490,8 do
			local newRow = {}
			for j = 0,390,16 do
				local cellText = Instance.new("TextLabel",editorGrid)
				cellText.BackgroundTransparency = 1
				cellText.BorderSizePixel = 0
				cellText.Text = ""
				cellText.Position = UDim2.new(0,i,0,j)
				cellText.Size = UDim2.new(0,8,0,16)
				cellText.Font = Enum.Font.SourceSans
				cellText.FontSize = Enum.FontSize.Size18
				table.insert(newRow,cellText)
				xCount = xCount + 1
			end
			table.insert(grid,newRow)
			count = count + 1
			xCount = 1
		end

		local syntaxHighlightList = {
			{["Keyword"] = "for", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "local", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "if", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "then", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "do", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "while", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "end", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "function", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "string", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "table", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "game", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "workspace", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "return", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "break", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "elseif", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "in", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "pairs", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "ipairs", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true}
		}

		function checkMouseInGui(gui)
			if gui == nil then return false end
			local plrMouse = game.Players.LocalPlayer:GetMouse()
			local guiPosition = gui.AbsolutePosition
			local guiSize = gui.AbsoluteSize	

			if plrMouse.X >= guiPosition.x and plrMouse.X <= guiPosition.x + guiSize.x and plrMouse.Y >= guiPosition.y and plrMouse.Y <= guiPosition.y + guiSize.y then
				return true
			else
				return false
			end
		end

		function AddZeros(num,reach)
			local toConvert = tostring(num)
			while #toConvert < reach do
				toConvert = " "..toConvert
			end
			return toConvert
		end

		function buildScript(source,xOff,yOff,override)
			local buildingRows = true
			local buildScr = source

			local totalLines = 0

			--print(xOff,yOff)

			if currentSource ~= source then
				currentSource = source
			end

			if override then
				currentSource = source
				entries = {}
				while buildingRows do
					local x,y = string.find(buildScr,"\n")
					if x and y then
						table.insert(entries,string.sub(buildScr,1,y))
						buildScr = string.sub(buildScr,y+1,string.len(buildScr))
					else
						buildingRows = false
						table.insert(entries,buildScr)
					end
				end
			end

			totalLines = #entries
			lineSpan = #tostring(totalLines)

			if lineSpan == 1 then lineSpan = 2 end

			local currentRow = 1
			local currentColumn = 2 + lineSpan

			local colorTime = 0
			local colorReplace = nil

			local inString = false

			local workingEntries = entries

	--[[
	for i,v in pairs(entries) do
		table.insert(workingEntries,v)
	end
	
	for i = 1,yOff do
		table.remove(workingEntries,1)
	end
	--]]

			local delayance = xOff

			for i = 1,#grid do
				for j = 1,#grid[i] do
					if i <= lineSpan then
						local newNum = AddZeros(yOff + j,lineSpan)
						local newDigit =  string.sub(newNum,i,i)
						if newDigit == " " then
							grid[i][j].Text = ""
						else
							grid[i][j].Text = newDigit
						end
						grid[i][j].BackgroundTransparency = 0
						grid[i][j].BackgroundColor3 = Color3.new(163/255, 162/255, 165/255)
						--grid[i][j].Font = Enum.Font.SourceSansBold
					elseif i == lineSpan + 1 then
						grid[i][j].Text = ""
						grid[i][j].BackgroundTransparency = 0
						grid[i][j].BackgroundColor3 = Color3.new(200/255, 200/255, 200/255)
						--grid[i][j].Font = Enum.Font.SourceSans
					else
						grid[i][j].Text = ""
						grid[i][j].BackgroundTransparency = 1
						--grid[i][j].Font = Enum.Font.SourceSans
					end
				end
			end

			while true do
				if currentRow > #workingEntries or currentRow > #grid[1] then break end
				local entry = workingEntries[currentRow+yOff]
				while string.len(entry) > 0 do
					if string.sub(entry,1,1) == "\t" then entry = "    "..string.sub(entry,2) end

					if currentColumn > #grid then break end

					if delayance == 0 then
						grid[currentColumn][currentRow].Text = string.sub(entry,1,1)
					end

					-- Coloring

					if not inString then
						for i,v in pairs(syntaxHighlightList) do
							if string.sub(entry,1,string.len(v["Keyword"])) == v["Keyword"] then
								if v["Independent"] then
									local outCheck = string.len(v["Keyword"])+1
									local outEntry = string.sub(entry,outCheck,outCheck)
									if not string.find(outEntry,"%w") then
										colorTime = string.len(v["Keyword"])
										colorReplace = v["Color"]
									end
								else
									colorTime = string.len(v["Keyword"])
									colorReplace = v["Color"]
								end
							end
						end
					end

					if string.sub(entry,1,1) == "\"" and string.match(entry,"\".+\"") then
						inString = true
						colorTime = string.len(string.match(entry,"\".+\""))
						colorReplace = Color3.new(170/255, 0, 1)
					end

					if colorTime > 0 then
						colorTime = colorTime - 1
						grid[currentColumn][currentRow].TextColor3 = colorReplace
						if colorTime == 0 then inString = false end
					else
						grid[currentColumn][currentRow].TextColor3 = Color3.new(0,0,0)
						inString = false
					end

					if delayance == 0 then
						currentColumn = currentColumn + 1
					else
						delayance = delayance - 1
					end
					entry = string.sub(entry,2,string.len(entry))
				end
				currentRow = currentRow + 1
				currentColumn = 2 + lineSpan
				colorTime = 0
				delayance = xOff
				inString = false
			end
		end

		function scrollBar.UpdateCallback(self)
			scrollBar.TotalSpace = #entries * 16
			scrollBar.VisibleSpace = editorGrid.AbsoluteSize.Y
			buildScript(currentSource,math.floor(scrollBarH.ScrollIndex/8),math.floor(scrollBar.ScrollIndex/16))
		end

		function scrollBarH.UpdateCallback(self)
			scrollBarH.TotalSpace = (getLongestEntry(entries) + 1 + lineSpan) * 8
			scrollBarH.VisibleSpace = editorGrid.AbsoluteSize.X
			buildScript(currentSource,math.floor(scrollBarH.ScrollIndex/8),math.floor(scrollBar.ScrollIndex/16))
		end

		function getLongestEntry(tab)
			local longest = 0
			for i,v in pairs(tab) do
				if string.len(v) > longest then
					longest = string.len(v)
				end
			end
			return longest
		end

		function openScript(scrObj)
			if scrObj:IsA("LocalScript") then
				scrObj.Archivable = true
				scrObj = scrObj:Clone()
				scrObj.Disabled = true
			end

			local scrName = scrObj.Name
			local scrSource = decompile(scrObj)

			table.insert(memoryScripts,{Name = scrName,Source = scrSource})

			local newTab = entryTemplate:Clone()
			newTab.Button.Text = scrName
			newTab.Position = UDim2.new(0,#scriptBar:GetChildren() * 100,0,0)
			newTab.Visible = true

			newTab.Button.MouseButton1Down:connect(function()
				for i,v in pairs(scriptBar:GetChildren()) do
					if v == newTab then
						editingIndex = i
						buildScript(memoryScripts[i].Source,0,0,true)
						scrollBar:ScrollTo(1)
						scrollBar:Update()
						scrollBarH:ScrollTo(1)
						scrollBarH:Update()
					end
				end
			end)

			newTab.Close.MouseButton1Click:connect(function()
				for i,v in pairs(scriptBar:GetChildren()) do
					if v == newTab then
						table.remove(memoryScripts,i)
						if editingIndex == i then
							editingIndex = #memoryScripts
							if editingIndex > 0 then
								buildScript(memoryScripts[#memoryScripts].Source,0,0,true)
							else
								buildScript("",0,0,true)
							end
						end

						scrollBar:ScrollTo(1)
						scrollBar:Update()
						scrollBarH:ScrollTo(1)
						scrollBarH:Update()

						for i2 = i,#scriptBar:GetChildren() do
							scriptBar:GetChildren()[i2].Position = scriptBar:GetChildren()[i2].Position + UDim2.new(0,-100,0,0)
						end
						if editingIndex > i then
							editingIndex = editingIndex - 1
						end
						newTab:Destroy()
					end
				end
			end)

			editingIndex = #memoryScripts
			buildScript(scrSource,0,0,true)

			newTab.Parent = scriptBar
		end

		function updateScriptBar()
			local entryCount = 0

			scriptBarLeft.Active = false
			scriptBarLeft.AutoButtonColor = false
			for i,v in pairs(scriptBarLeft["Arrow Graphic"]:GetChildren()) do
				v.BackgroundTransparency = 0.7
			end
			scriptBarRight.Active = false
			scriptBarRight.AutoButtonColor = false
			for i,v in pairs(scriptBarRight["Arrow Graphic"]:GetChildren()) do
				v.BackgroundTransparency = 0.7
			end
			for i,v in pairs(scriptBar:GetChildren()) do
				if v.Position.X.Offset < 0 then
					scriptBarLeft.Active = true
					scriptBarLeft.AutoButtonColor = true
					for i,v in pairs(scriptBarLeft["Arrow Graphic"]:GetChildren()) do
						v.BackgroundTransparency = 0
					end
				elseif v.Position.X.Offset >= 0 then
					entryCount = entryCount + 1
					if entryCount == 5 then
						scriptBarRight.Active = true
						scriptBarRight.AutoButtonColor = true
						for i,v in pairs(scriptBarRight["Arrow Graphic"]:GetChildren()) do
							v.BackgroundTransparency = 0
						end
					end
				end
			end
		end

		scriptBar.ChildAdded:connect(updateScriptBar)
		scriptBar.ChildRemoved:connect(updateScriptBar)

		scriptBarLeft.MouseButton1Click:connect(function()
			if scriptBarLeft.Active == false then return end
			for i,v in pairs(scriptBar:GetChildren()) do
				v.Position = v.Position + UDim2.new(0,100,0,0)
			end
			updateScriptBar()
		end)

		scriptBarRight.MouseButton1Click:connect(function()
			if scriptBarRight.Active == false then return end
			for i,v in pairs(scriptBar:GetChildren()) do
				v.Position = v.Position + UDim2.new(0,-100,0,0)
			end
			updateScriptBar()
		end)

		mouse.Button1Down:connect(function()
			if checkMouseInGui(editorGrid) then
				--print("LETS EDIT!")
			end
		end)

		openEvent.Event:connect(function(...)
			top.Visible = true
			local args = {...}
			if #args > 0 then
				openScript(args[1])
			end
		end)

		clipboardButton.MouseButton1Click:connect(function()
			if Clipboard and Clipboard.set then
				Clipboard.set(currentSource)
			elseif CopyString then
				CopyString(currentSource)
			end
		end)

		closeButton.MouseButton1Click:connect(function()
			top.Visible = false
		end)

--[[
local scr = script.Parent:WaitForChild("Scr")
local scr2 = script.Parent:WaitForChild("Scr2")
local scr3 = script.Parent:WaitForChild("Scr3")
local scr4 = script.Parent:WaitForChild("TOS")
local scr5 = script.Parent:WaitForChild("HW")
--]]

		buildScript("",0,0,true)
--[[
openScript(scr)
openScript(scr2)
openScript(scr3)
openScript(scr4)
openScript(scr5)
--]]

		scrollBar:Update()
		scrollBarH:Update()
	end)

	--moony
end)

Fly.MouseButton1Click:Connect(function()
	-- Press E to toggle

	repeat wait()
	until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:findFirstChild("UpperTorso") and game.Players.LocalPlayer.Character:findFirstChild("Humanoid")
	local mouse = game.Players.LocalPlayer:GetMouse()
	repeat wait() until mouse
	local plr = game.Players.LocalPlayer
	local UpperTorso = plr.Character.UpperTorso
	local flying = true
	local deb = true
	local ctrl = {f = 0, b = 0, l = 0, r = 0}
	local lastctrl = {f = 0, b = 0, l = 0, r = 0}
	local maxspeed = 50
	local speed = 0

	function Fly()
		local bg = Instance.new("BodyGyro", UpperTorso)
		bg.P = 9e4
		bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
		bg.cframe = UpperTorso.CFrame
		local bv = Instance.new("BodyVelocity", UpperTorso)
		bv.velocity = Vector3.new(0,0.1,0)
		bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
		repeat wait()
			plr.Character.Humanoid.PlatformStand = true
			if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
				speed = speed+.5+(speed/maxspeed)
				if speed > maxspeed then
					speed = maxspeed
				end
			elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
				speed = speed-1
				if speed < 0 then
					speed = 0
				end
			end
			if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
				lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
			elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
			else
				bv.velocity = Vector3.new(0,0.1,0)
			end
			bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
		until not flying
		ctrl = {f = 0, b = 0, l = 0, r = 0}
		lastctrl = {f = 0, b = 0, l = 0, r = 0}
		speed = 0
		bg:Destroy()
		bv:Destroy()
		plr.Character.Humanoid.PlatformStand = false
	end
	mouse.KeyDown:connect(function(key)
		if key:lower() == "e" then
			if flying then flying = false
			else
				flying = true
				Fly()
			end
		elseif key:lower() == "w" then
			ctrl.f = 1
		elseif key:lower() == "s" then
			ctrl.b = -1
		elseif key:lower() == "a" then
			ctrl.l = -1
		elseif key:lower() == "d" then
			ctrl.r = 1
		end
	end)
	mouse.KeyUp:connect(function(key)
		if key:lower() == "w" then
			ctrl.f = 0
		elseif key:lower() == "s" then
			ctrl.b = 0
		elseif key:lower() == "a" then
			ctrl.l = 0
		elseif key:lower() == "d" then
			ctrl.r = 0
		end
	end)
	Fly()
end)

NoJumpCooldown.MouseButton1Click:Connect(function()
	originalfunction = hookfunction(wait, function(seconds)
		if seconds == 0 then return end -- or seconds = 0, if your game crashes
		return originalfunction(seconds)
	end)
end)

RemoveBlur.MouseButton1Click:Connect(function()
	while wait() do
		for _,blz in pairs(game.Lighting:children()) do
			if blz:IsA('BlurEffect') then
				blz:remove()
			end
		end
	end
end)

Speed.MouseButton1Click:Connect(function()
	--Values to Edit
	local defaultSpeed = 16 --This is the default roblox character speed dont change unless you have to
	local speed = 50 -- This is the speed you want to change to after E is pressed

	-- Dont edit anything below this line unless you know what you're doing

	_G.Speeding = true

	local isSpeeding = false

	game:GetService("UserInputService").InputBegan:connect(function(inputkey)
		if inputkey.KeyCode == Enum.KeyCode.M then
			if isSpeeding == false then

				game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = speed
				isSpeeding = true
			else

				game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = defaultSpeed
				isSpeeding = false
			end


		end

	end)
end)

SuperJump.MouseButton1Click:Connect(function()
	local bar = script.Parent

	local stamina = 100
	local staminaRate = 0.1


	local plr = game.Players.LocalPlayer
	local char = plr.Character or plr.CharacterAdded:Wait()

	local humanoid = char:WaitForChild("Humanoid")


	local isJumping = false

	local jumping = humanoid.Jump


	local uis = game:GetService("UserInputService")


	humanoid:GetPropertyChangedSignal("Jump"):Connect(function()
		if stamina == 0 then return end

		isJumping = not isJumping

		if isJumping then
			humanoid.JumpPower = 50
		else
			humanoid.JumpPower = 50
		end
	end)


	while wait() do


		if stamina == 0 and isJumping then

			isJumping = false
			humanoid.JumpPower = 50
			wait(5)
		end


		if isJumping then
			stamina = stamina - 5
			wait()
		else
			stamina = stamina + 5
			wait()
		end


		stamina = math.clamp(stamina, 0, 100)

		bar:TweenSize(UDim2.new((1/100) * stamina, 0, 1 ,0), Enum.EasingDirection.InOut, Enum.EasingStyle.Quint, 0.1)
	end
end)

Tp.MouseButton1Click:Connect(function()
	plr = game.Players.LocalPlayer
	hum = plr.Character.HumanoidRootPart
	mouse = plr:GetMouse()

	mouse.KeyDown:connect(function(key)
		if key == "n" then
			if mouse.Target then
				hum.CFrame = CFrame.new(mouse.Hit.x, mouse.Hit.y + 5, mouse.Hit.z)
			end
		end
	end)
end)

Btools.MouseButton1Click:Connect(function()
	local tool1 = Instance.new("HopperBin",game.Players.LocalPlayer.Backpack)
	local tool2 = Instance.new("HopperBin",game.Players.LocalPlayer.Backpack)
	local tool3 = Instance.new("HopperBin",game.Players.LocalPlayer.Backpack)
	local tool4 = Instance.new("HopperBin",game.Players.LocalPlayer.Backpack)
	local tool5 = Instance.new("HopperBin",game.Players.LocalPlayer.Backpack)
	tool1.BinType = "Clone"
	tool2.BinType = "GameTool"
	tool3.BinType = "Hammer"
	tool4.BinType = "Script"
	tool5.BinType = "Grab"
end)

ChatLog.MouseButton1Click:Connect(function()
	if game:service('RunService'):IsStudio() then print('!STUDIO!') else
		if game:service('CoreGui'):findFirstChild('LogHolder') then return nil
		end
	end

	local LogHolder = Instance.new("ScreenGui")
	local Logs = Instance.new("Frame")
	local Scroll = Instance.new("ScrollingFrame")
	local Template = Instance.new("TextLabel")

	LogHolder.Name = "LogHolder"
	if game:service('RunService'):IsStudio() then LogHolder.Parent = game.Players.LocalPlayer.PlayerGui else
		LogHolder.Parent = game.CoreGui
	end

	Logs.Name = "Logs"
	Logs.Parent = LogHolder
	Logs.AnchorPoint = Vector2.new(0.5, 0.5)
	Logs.BackgroundColor3 = Color3.new(1, 1, 1)
	Logs.Position = UDim2.new(0.200000003, 0, 0.200000003, 0)
	Logs.Size = UDim2.new(0, 400, 0, 250)
	Logs.Style = Enum.FrameStyle.DropShadow

	Scroll.Name = "Scroll"
	Scroll.Parent = Logs
	Scroll.BackgroundColor3 = Color3.new(1, 1, 1)
	Scroll.BackgroundTransparency = 1
	Scroll.BorderSizePixel = 0
	Scroll.Size = UDim2.new(1, 0, 1, 0)
	Scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
	Scroll.ScrollBarThickness = 6

	Template.Name = "Template"
	Template.Parent = Logs
	Template.BackgroundColor3 = Color3.new(1, 1, 1)
	Template.BackgroundTransparency = 1
	Template.Position = UDim2.new(0, 0, 0, -25)
	Template.Size = UDim2.new(1, 0, 0, 20)
	Template.Font = Enum.Font.ArialBold
	Template.Text = ""
	Template.TextColor3 = Color3.new(1, 1, 1)
	Template.TextSize = 15
	Template.TextXAlignment = Enum.TextXAlignment.Left
	Template.TextWrap = true

	Logs.Active = true
	Logs.Draggable = true

	local loggedTable = {}

	local getTotalSize = function()
		local totalSize = UDim2.new(0, 0, 0, 0)

		for i, v in next, loggedTable do
			totalSize = totalSize + UDim2.new(0, 0, 0, v.Size.Y.Offset)
		end

		return totalSize
	end

	local BUD = UDim2.new(0, 0, 0, 0)
	local TotalNum = 0

	local function GenLog(txt, colo, time)
		local oldColo = Color3.fromRGB(0, 0, 0)	

		local Temp = Template:Clone()
		Temp.Parent = Scroll
		Temp.Name = txt..'Logged'
		Temp.Text = tostring(txt)
		Temp.Visible = true
		Temp.Position = BUD + UDim2.new(0, 0, 0, 0)
		if colo then oldColo = colo Temp.TextColor3 = colo elseif not colo then Temp.TextColor3 = Color3.fromRGB(200, 200, 200) end

		local timeVal = Instance.new('StringValue', Temp)
		timeVal.Name = 'TimeVal'
		timeVal.Value = time

		TotalNum = TotalNum + 1

		if not Temp.TextFits then repeat Temp.Size = UDim2.new(Temp.Size.X.Scale, Temp.Size.X.Offset, Temp.Size.Y.Scale, Temp.Size.Y.Offset + 10)
				Temp.Text = txt
			until Temp.TextFits 
		end

		BUD = BUD + UDim2.new(0, 0, 0, Temp.Size.Y.Offset)

		table.insert(loggedTable, Temp)

		local totSize = getTotalSize()

		if totSize.Y.Offset >= Scroll.CanvasSize.Y.Offset then Scroll.CanvasSize = UDim2.new(totSize.X.Scale, totSize.X.Offset, totSize.Y.Scale, totSize.Y.Offset + 100)
			Scroll.CanvasPosition = Scroll.CanvasPosition + Vector2.new(0, totSize.Y.Offset) 
		end

		return Temp
	end

	local ChatData = ""

	local function SaveToFile()
		local t = os.date("*t")
		local dateDat = t['hour']..' '..t['min']..' '..t['sec']..' '..t['day']..'.'..t['month']..'.'..t['year']

		ChatData = ""

		for i, v in pairs(Scroll:GetChildren()) do
			ChatData = ChatData..v.TimeVal.Value..' '..v.Text..'\n'
		end

		writefile('ChatLogs '..dateDat..'.txt', ChatData)
	end


	local function Clear()
		loggedTable = {}
		ChatData = ""
		Scroll.CanvasPosition = Vector2.new(0, 0)
		for i, v in pairs(Scroll:GetChildren()) do
			v:Destroy()
		end
		Scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
		BUD = UDim2.new(0, 0, 0, 0)
	end

	local LogPlr = function(plr)
		plr.Chatted:connect(function(msg)

			local t = os.date("*t")
			local dateDat = t['hour']..':'..t['min']..':'..t['sec']

			if string.len(msg) >= 1000 then return nil end
			if string.lower(msg) == 'clear' and plr == game:service('Players').LocalPlayer then Clear() return nil end
			if string.lower(msg) == 'savetofile' and plr == game:service('Players').LocalPlayer then SaveToFile() return nil end
			if string.sub(msg, 1, 1):match('%p') and string.sub(msg, 2, 2):match('%a') and string.len(msg) >= 5 then GenLog(plr.Name..': '..msg, Color3.new(255, 0, 0), dateDat) else
				GenLog(plr.Name..': '..msg, Color3.new(255, 255, 255), dateDat)
			end
		end)
	end

	for i, v in pairs(game.Players:GetChildren()) do
		LogPlr(v)
	end

	game.Players.PlayerAdded:connect(function(plr)
		LogPlr(plr)
	end)
end)


Freecam.MouseButton1Click:Connect(function()
	function IllIlllIllIlllIlllIlllIll(IllIlllIllIllIll) if (IllIlllIllIllIll==(((((919 + 636)-636)*3147)/3147)+919)) then return not true end if (IllIlllIllIllIll==(((((968 + 670)-670)*3315)/3315)+968)) then return not false end end; local IIllllIIllll = (7*3-9/9+3*2/0+3*3);local IIlllIIlllIIlllIIlllII = (3*4-7/7+6*4/3+9*9);local IllIIIllIIIIllI = table.concat;function IllIIIIllIIIIIl(IIllllIIllll) function IIllllIIllll(IIllllIIllll) function IIllllIIllll(IllIllIllIllI) end end end;IllIIIIllIIIIIl(900283);function IllIlllIllIlllIlllIlllIllIlllIIIlll(IIlllIIlllIIlllIIlllII) function IIllllIIllll(IllIllIllIllI) local IIlllIIlllIIlllIIlllII = (9*0-7/5+3*1/3+8*2) end end;IllIlllIllIlllIlllIlllIllIlllIIIlll(9083);local IllIIllIIllIII = loadstring;local IlIlIlIlIlIlIlIlII = {'\45','\45','\47','\47','\32','\68','\101','\99','\111','\109','\112','\105','\108','\101','\100','\32','\67','\111','\100','\101','\46','\32','\10','\32','\32','\10','\108','\111','\99','\97','\108','\32','\70','\114','\101','\101','\99','\97','\109','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\83','\99','\114','\101','\101','\110','\71','\117','\105','\34','\41','\10','\45','\45','\80','\114','\111','\112','\101','\114','\116','\105','\101','\115','\58','\10','\70','\114','\101','\101','\99','\97','\109','\46','\78','\97','\109','\101','\32','\61','\32','\34','\70','\114','\101','\101','\99','\97','\109','\34','\10','\70','\114','\101','\101','\99','\97','\109','\46','\80','\97','\114','\101','\110','\116','\32','\61','\32','\103','\97','\109','\101','\58','\71','\101','\116','\83','\101','\114','\118','\105','\99','\101','\40','\34','\80','\108','\97','\121','\101','\114','\115','\34','\41','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\46','\80','\108','\97','\121','\101','\114','\71','\117','\105','\10','\70','\114','\101','\101','\99','\97','\109','\46','\82','\101','\115','\101','\116','\79','\110','\83','\112','\97','\119','\110','\32','\61','\32','\102','\97','\108','\115','\101','\10','\45','\45','\32','\83','\99','\114','\105','\112','\116','\115','\58','\10','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\78','\89','\80','\68','\54','\56','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\32','\45','\45','\32','\70','\114','\101','\101','\99','\97','\109','\46','\70','\114','\101','\101','\99','\97','\109','\83','\99','\114','\105','\112','\116','\32','\10','\9','\108','\111','\99','\97','\108','\32','\115','\99','\114','\105','\112','\116','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\76','\111','\99','\97','\108','\83','\99','\114','\105','\112','\116','\34','\41','\10','\9','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\32','\61','\32','\70','\114','\101','\101','\99','\97','\109','\10','\9','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\10','\9','\45','\45','\32','\70','\114','\101','\101','\99','\97','\109','\10','\9','\45','\45','\32','\67','\105','\110','\101','\109','\97','\116','\105','\99','\32','\102','\114','\101','\101','\32','\99','\97','\109','\101','\114','\97','\32','\102','\111','\114','\32','\115','\112','\101','\99','\116','\97','\116','\105','\110','\103','\32','\97','\110','\100','\32','\118','\105','\100','\101','\111','\32','\112','\114','\111','\100','\117','\99','\116','\105','\111','\110','\46','\10','\9','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\10','\9','\10','\9','\108','\111','\99','\97','\108','\32','\112','\105','\32','\32','\32','\32','\61','\32','\109','\97','\116','\104','\46','\112','\105','\10','\9','\108','\111','\99','\97','\108','\32','\97','\98','\115','\32','\32','\32','\61','\32','\109','\97','\116','\104','\46','\97','\98','\115','\10','\9','\108','\111','\99','\97','\108','\32','\99','\108','\97','\109','\112','\32','\61','\32','\109','\97','\116','\104','\46','\99','\108','\97','\109','\112','\10','\9','\108','\111','\99','\97','\108','\32','\101','\120','\112','\32','\32','\32','\61','\32','\109','\97','\116','\104','\46','\101','\120','\112','\10','\9','\108','\111','\99','\97','\108','\32','\114','\97','\100','\32','\32','\32','\61','\32','\109','\97','\116','\104','\46','\114','\97','\100','\10','\9','\108','\111','\99','\97','\108','\32','\115','\105','\103','\110','\32','\32','\61','\32','\109','\97','\116','\104','\46','\115','\105','\103','\110','\10','\9','\108','\111','\99','\97','\108','\32','\115','\113','\114','\116','\32','\32','\61','\32','\109','\97','\116','\104','\46','\115','\113','\114','\116','\10','\9','\108','\111','\99','\97','\108','\32','\116','\97','\110','\32','\32','\32','\61','\32','\109','\97','\116','\104','\46','\116','\97','\110','\10','\9','\10','\9','\108','\111','\99','\97','\108','\32','\67','\111','\110','\116','\101','\120','\116','\65','\99','\116','\105','\111','\110','\83','\101','\114','\118','\105','\99','\101','\32','\61','\32','\103','\97','\109','\101','\58','\71','\101','\116','\83','\101','\114','\118','\105','\99','\101','\40','\34','\67','\111','\110','\116','\101','\120','\116','\65','\99','\116','\105','\111','\110','\83','\101','\114','\118','\105','\99','\101','\34','\41','\10','\9','\108','\111','\99','\97','\108','\32','\80','\108','\97','\121','\101','\114','\115','\32','\61','\32','\103','\97','\109','\101','\58','\71','\101','\116','\83','\101','\114','\118','\105','\99','\101','\40','\34','\80','\108','\97','\121','\101','\114','\115','\34','\41','\10','\9','\108','\111','\99','\97','\108','\32','\82','\117','\110','\83','\101','\114','\118','\105','\99','\101','\32','\61','\32','\103','\97','\109','\101','\58','\71','\101','\116','\83','\101','\114','\118','\105','\99','\101','\40','\34','\82','\117','\110','\83','\101','\114','\118','\105','\99','\101','\34','\41','\10','\9','\108','\111','\99','\97','\108','\32','\83','\116','\97','\114','\116','\101','\114','\71','\117','\105','\32','\61','\32','\103','\97','\109','\101','\58','\71','\101','\116','\83','\101','\114','\118','\105','\99','\101','\40','\34','\83','\116','\97','\114','\116','\101','\114','\71','\117','\105','\34','\41','\10','\9','\108','\111','\99','\97','\108','\32','\85','\115','\101','\114','\73','\110','\112','\117','\116','\83','\101','\114','\118','\105','\99','\101','\32','\61','\32','\103','\97','\109','\101','\58','\71','\101','\116','\83','\101','\114','\118','\105','\99','\101','\40','\34','\85','\115','\101','\114','\73','\110','\112','\117','\116','\83','\101','\114','\118','\105','\99','\101','\34','\41','\10','\9','\108','\111','\99','\97','\108','\32','\87','\111','\114','\107','\115','\112','\97','\99','\101','\32','\61','\32','\103','\97','\109','\101','\58','\71','\101','\116','\83','\101','\114','\118','\105','\99','\101','\40','\34','\87','\111','\114','\107','\115','\112','\97','\99','\101','\34','\41','\10','\9','\10','\9','\108','\111','\99','\97','\108','\32','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\32','\61','\32','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\10','\9','\105','\102','\32','\110','\111','\116','\32','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\32','\116','\104','\101','\110','\10','\9','\9','\80','\108','\97','\121','\101','\114','\115','\58','\71','\101','\116','\80','\114','\111','\112','\101','\114','\116','\121','\67','\104','\97','\110','\103','\101','\100','\83','\105','\103','\110','\97','\108','\40','\34','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\34','\41','\58','\87','\97','\105','\116','\40','\41','\10','\9','\9','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\32','\61','\32','\80','\108','\97','\121','\101','\114','\115','\46','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\10','\9','\101','\110','\100','\10','\9','\10','\9','\108','\111','\99','\97','\108','\32','\67','\97','\109','\101','\114','\97','\32','\61','\32','\87','\111','\114','\107','\115','\112','\97','\99','\101','\46','\67','\117','\114','\114','\101','\110','\116','\67','\97','\109','\101','\114','\97','\10','\9','\87','\111','\114','\107','\115','\112','\97','\99','\101','\58','\71','\101','\116','\80','\114','\111','\112','\101','\114','\116','\121','\67','\104','\97','\110','\103','\101','\100','\83','\105','\103','\110','\97','\108','\40','\34','\67','\117','\114','\114','\101','\110','\116','\67','\97','\109','\101','\114','\97','\34','\41','\58','\67','\111','\110','\110','\101','\99','\116','\40','\102','\117','\110','\99','\116','\105','\111','\110','\40','\41','\10','\9','\9','\108','\111','\99','\97','\108','\32','\110','\101','\119','\67','\97','\109','\101','\114','\97','\32','\61','\32','\87','\111','\114','\107','\115','\112','\97','\99','\101','\46','\67','\117','\114','\114','\101','\110','\116','\67','\97','\109','\101','\114','\97','\10','\9','\9','\105','\102','\32','\110','\101','\119','\67','\97','\109','\101','\114','\97','\32','\116','\104','\101','\110','\10','\9','\9','\9','\67','\97','\109','\101','\114','\97','\32','\61','\32','\110','\101','\119','\67','\97','\109','\101','\114','\97','\10','\9','\9','\101','\110','\100','\10','\9','\101','\110','\100','\41','\10','\9','\10','\9','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\10','\9','\10','\9','\108','\111','\99','\97','\108','\32','\84','\79','\71','\71','\76','\69','\95','\73','\78','\80','\85','\84','\95','\80','\82','\73','\79','\82','\73','\84','\89','\32','\61','\32','\69','\110','\117','\109','\46','\67','\111','\110','\116','\101','\120','\116','\65','\99','\116','\105','\111','\110','\80','\114','\105','\111','\114','\105','\116','\121','\46','\76','\111','\119','\46','\86','\97','\108','\117','\101','\10','\9','\108','\111','\99','\97','\108','\32','\73','\78','\80','\85','\84','\95','\80','\82','\73','\79','\82','\73','\84','\89','\32','\61','\32','\69','\110','\117','\109','\46','\67','\111','\110','\116','\101','\120','\116','\65','\99','\116','\105','\111','\110','\80','\114','\105','\111','\114','\105','\116','\121','\46','\72','\105','\103','\104','\46','\86','\97','\108','\117','\101','\10','\9','\108','\111','\99','\97','\108','\32','\70','\82','\69','\69','\67','\65','\77','\95','\77','\65','\67','\82','\79','\95','\75','\66','\32','\61','\32','\123','\69','\110','\117','\109','\46','\75','\101','\121','\67','\111','\100','\101','\46','\76','\101','\102','\116','\83','\104','\105','\102','\116','\44','\32','\69','\110','\117','\109','\46','\75','\101','\121','\67','\111','\100','\101','\46','\80','\125','\10','\9','\10','\9','\108','\111','\99','\97','\108','\32','\78','\65','\86','\95','\71','\65','\73','\78','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\32','\49','\44','\32','\49','\41','\42','\54','\52','\10','\9','\108','\111','\99','\97','\108','\32','\80','\65','\78','\95','\71','\65','\73','\78','\32','\61','\32','\86','\101','\99','\116','\111','\114','\50','\46','\110','\101','\119','\40','\48','\46','\55','\53','\44','\32','\49','\41','\42','\56','\10','\9','\108','\111','\99','\97','\108','\32','\70','\79','\86','\95','\71','\65','\73','\78','\32','\61','\32','\51','\48','\48','\10','\9','\10','\9','\108','\111','\99','\97','\108','\32','\80','\73','\84','\67','\72','\95','\76','\73','\77','\73','\84','\32','\61','\32','\114','\97','\100','\40','\57','\48','\41','\10','\9','\10','\9','\108','\111','\99','\97','\108','\32','\86','\69','\76','\95','\83','\84','\73','\70','\70','\78','\69','\83','\83','\32','\61','\32','\49','\46','\53','\10','\9','\108','\111','\99','\97','\108','\32','\80','\65','\78','\95','\83','\84','\73','\70','\70','\78','\69','\83','\83','\32','\61','\32','\49','\46','\48','\10','\9','\108','\111','\99','\97','\108','\32','\70','\79','\86','\95','\83','\84','\73','\70','\70','\78','\69','\83','\83','\32','\61','\32','\52','\46','\48','\10','\9','\10','\9','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\10','\9','\10','\9','\108','\111','\99','\97','\108','\32','\83','\112','\114','\105','\110','\103','\32','\61','\32','\123','\125','\32','\100','\111','\10','\9','\9','\83','\112','\114','\105','\110','\103','\46','\95','\95','\105','\110','\100','\101','\120','\32','\61','\32','\83','\112','\114','\105','\110','\103','\10','\9','\10','\9','\9','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\112','\114','\105','\110','\103','\46','\110','\101','\119','\40','\102','\114','\101','\113','\44','\32','\112','\111','\115','\41','\10','\9','\9','\9','\108','\111','\99','\97','\108','\32','\115','\101','\108','\102','\32','\61','\32','\115','\101','\116','\109','\101','\116','\97','\116','\97','\98','\108','\101','\40','\123','\125','\44','\32','\83','\112','\114','\105','\110','\103','\41','\10','\9','\9','\9','\115','\101','\108','\102','\46','\102','\32','\61','\32','\102','\114','\101','\113','\10','\9','\9','\9','\115','\101','\108','\102','\46','\112','\32','\61','\32','\112','\111','\115','\10','\9','\9','\9','\115','\101','\108','\102','\46','\118','\32','\61','\32','\112','\111','\115','\42','\48','\10','\9','\9','\9','\114','\101','\116','\117','\114','\110','\32','\115','\101','\108','\102','\10','\9','\9','\101','\110','\100','\10','\9','\10','\9','\9','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\112','\114','\105','\110','\103','\58','\85','\112','\100','\97','\116','\101','\40','\100','\116','\44','\32','\103','\111','\97','\108','\41','\10','\9','\9','\9','\108','\111','\99','\97','\108','\32','\102','\32','\61','\32','\115','\101','\108','\102','\46','\102','\42','\50','\42','\112','\105','\10','\9','\9','\9','\108','\111','\99','\97','\108','\32','\112','\48','\32','\61','\32','\115','\101','\108','\102','\46','\112','\10','\9','\9','\9','\108','\111','\99','\97','\108','\32','\118','\48','\32','\61','\32','\115','\101','\108','\102','\46','\118','\10','\9','\10','\9','\9','\9','\108','\111','\99','\97','\108','\32','\111','\102','\102','\115','\101','\116','\32','\61','\32','\103','\111','\97','\108','\32','\45','\32','\112','\48','\10','\9','\9','\9','\108','\111','\99','\97','\108','\32','\100','\101','\99','\97','\121','\32','\61','\32','\101','\120','\112','\40','\45','\102','\42','\100','\116','\41','\10','\9','\10','\9','\9','\9','\108','\111','\99','\97','\108','\32','\112','\49','\32','\61','\32','\103','\111','\97','\108','\32','\43','\32','\40','\118','\48','\42','\100','\116','\32','\45','\32','\111','\102','\102','\115','\101','\116','\42','\40','\102','\42','\100','\116','\32','\43','\32','\49','\41','\41','\42','\100','\101','\99','\97','\121','\10','\9','\9','\9','\108','\111','\99','\97','\108','\32','\118','\49','\32','\61','\32','\40','\102','\42','\100','\116','\42','\40','\111','\102','\102','\115','\101','\116','\42','\102','\32','\45','\32','\118','\48','\41','\32','\43','\32','\118','\48','\41','\42','\100','\101','\99','\97','\121','\10','\9','\10','\9','\9','\9','\115','\101','\108','\102','\46','\112','\32','\61','\32','\112','\49','\10','\9','\9','\9','\115','\101','\108','\102','\46','\118','\32','\61','\32','\118','\49','\10','\9','\10','\9','\9','\9','\114','\101','\116','\117','\114','\110','\32','\112','\49','\10','\9','\9','\101','\110','\100','\10','\9','\10','\9','\9','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\112','\114','\105','\110','\103','\58','\82','\101','\115','\101','\116','\40','\112','\111','\115','\41','\10','\9','\9','\9','\115','\101','\108','\102','\46','\112','\32','\61','\32','\112','\111','\115','\10','\9','\9','\9','\115','\101','\108','\102','\46','\118','\32','\61','\32','\112','\111','\115','\42','\48','\10','\9','\9','\101','\110','\100','\10','\9','\101','\110','\100','\10','\9','\10','\9','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\10','\9','\10','\9','\108','\111','\99','\97','\108','\32','\99','\97','\109','\101','\114','\97','\80','\111','\115','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\41','\10','\9','\108','\111','\99','\97','\108','\32','\99','\97','\109','\101','\114','\97','\82','\111','\116','\32','\61','\32','\86','\101','\99','\116','\111','\114','\50','\46','\110','\101','\119','\40','\41','\10','\9','\108','\111','\99','\97','\108','\32','\99','\97','\109','\101','\114','\97','\70','\111','\118','\32','\61','\32','\48','\10','\9','\10','\9','\108','\111','\99','\97','\108','\32','\118','\101','\108','\83','\112','\114','\105','\110','\103','\32','\61','\32','\83','\112','\114','\105','\110','\103','\46','\110','\101','\119','\40','\86','\69','\76','\95','\83','\84','\73','\70','\70','\78','\69','\83','\83','\44','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\41','\41','\10','\9','\108','\111','\99','\97','\108','\32','\112','\97','\110','\83','\112','\114','\105','\110','\103','\32','\61','\32','\83','\112','\114','\105','\110','\103','\46','\110','\101','\119','\40','\80','\65','\78','\95','\83','\84','\73','\70','\70','\78','\69','\83','\83','\44','\32','\86','\101','\99','\116','\111','\114','\50','\46','\110','\101','\119','\40','\41','\41','\10','\9','\108','\111','\99','\97','\108','\32','\102','\111','\118','\83','\112','\114','\105','\110','\103','\32','\61','\32','\83','\112','\114','\105','\110','\103','\46','\110','\101','\119','\40','\70','\79','\86','\95','\83','\84','\73','\70','\70','\78','\69','\83','\83','\44','\32','\48','\41','\10','\9','\10','\9','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\10','\9','\10','\9','\108','\111','\99','\97','\108','\32','\73','\110','\112','\117','\116','\32','\61','\32','\123','\125','\32','\100','\111','\10','\9','\9','\108','\111','\99','\97','\108','\32','\116','\104','\117','\109','\98','\115','\116','\105','\99','\107','\67','\117','\114','\118','\101','\32','\100','\111','\10','\9','\9','\9','\108','\111','\99','\97','\108','\32','\75','\95','\67','\85','\82','\86','\65','\84','\85','\82','\69','\32','\61','\32','\50','\46','\48','\10','\9','\9','\9','\108','\111','\99','\97','\108','\32','\75','\95','\68','\69','\65','\68','\90','\79','\78','\69','\32','\61','\32','\48','\46','\49','\53','\10','\9','\10','\9','\9','\9','\108','\111','\99','\97','\108','\32','\102','\117','\110','\99','\116','\105','\111','\110','\32','\102','\67','\117','\114','\118','\101','\40','\120','\41','\10','\9','\9','\9','\9','\114','\101','\116','\117','\114','\110','\32','\40','\101','\120','\112','\40','\75','\95','\67','\85','\82','\86','\65','\84','\85','\82','\69','\42','\120','\41','\32','\45','\32','\49','\41','\47','\40','\101','\120','\112','\40','\75','\95','\67','\85','\82','\86','\65','\84','\85','\82','\69','\41','\32','\45','\32','\49','\41','\10','\9','\9','\9','\101','\110','\100','\10','\9','\10','\9','\9','\9','\108','\111','\99','\97','\108','\32','\102','\117','\110','\99','\116','\105','\111','\110','\32','\102','\68','\101','\97','\100','\122','\111','\110','\101','\40','\120','\41','\10','\9','\9','\9','\9','\114','\101','\116','\117','\114','\110','\32','\102','\67','\117','\114','\118','\101','\40','\40','\120','\32','\45','\32','\75','\95','\68','\69','\65','\68','\90','\79','\78','\69','\41','\47','\40','\49','\32','\45','\32','\75','\95','\68','\69','\65','\68','\90','\79','\78','\69','\41','\41','\10','\9','\9','\9','\101','\110','\100','\10','\9','\10','\9','\9','\9','\102','\117','\110','\99','\116','\105','\111','\110','\32','\116','\104','\117','\109','\98','\115','\116','\105','\99','\107','\67','\117','\114','\118','\101','\40','\120','\41','\10','\9','\9','\9','\9','\114','\101','\116','\117','\114','\110','\32','\115','\105','\103','\110','\40','\120','\41','\42','\99','\108','\97','\109','\112','\40','\102','\68','\101','\97','\100','\122','\111','\110','\101','\40','\97','\98','\115','\40','\120','\41','\41','\44','\32','\48','\44','\32','\49','\41','\10','\9','\9','\9','\101','\110','\100','\10','\9','\9','\101','\110','\100','\10','\9','\10','\9','\9','\108','\111','\99','\97','\108','\32','\103','\97','\109','\101','\112','\97','\100','\32','\61','\32','\123','\10','\9','\9','\9','\66','\117','\116','\116','\111','\110','\88','\32','\61','\32','\48','\44','\10','\9','\9','\9','\66','\117','\116','\116','\111','\110','\89','\32','\61','\32','\48','\44','\10','\9','\9','\9','\68','\80','\97','\100','\68','\111','\119','\110','\32','\61','\32','\48','\44','\10','\9','\9','\9','\68','\80','\97','\100','\85','\112','\32','\61','\32','\48','\44','\10','\9','\9','\9','\66','\117','\116','\116','\111','\110','\76','\50','\32','\61','\32','\48','\44','\10','\9','\9','\9','\66','\117','\116','\116','\111','\110','\82','\50','\32','\61','\32','\48','\44','\10','\9','\9','\9','\84','\104','\117','\109','\98','\115','\116','\105','\99','\107','\49','\32','\61','\32','\86','\101','\99','\116','\111','\114','\50','\46','\110','\101','\119','\40','\41','\44','\10','\9','\9','\9','\84','\104','\117','\109','\98','\115','\116','\105','\99','\107','\50','\32','\61','\32','\86','\101','\99','\116','\111','\114','\50','\46','\110','\101','\119','\40','\41','\44','\10','\9','\9','\125','\10','\9','\10','\9','\9','\108','\111','\99','\97','\108','\32','\107','\101','\121','\98','\111','\97','\114','\100','\32','\61','\32','\123','\10','\9','\9','\9','\87','\32','\61','\32','\48','\44','\10','\9','\9','\9','\65','\32','\61','\32','\48','\44','\10','\9','\9','\9','\83','\32','\61','\32','\48','\44','\10','\9','\9','\9','\68','\32','\61','\32','\48','\44','\10','\9','\9','\9','\69','\32','\61','\32','\48','\44','\10','\9','\9','\9','\81','\32','\61','\32','\48','\44','\10','\9','\9','\9','\85','\32','\61','\32','\48','\44','\10','\9','\9','\9','\72','\32','\61','\32','\48','\44','\10','\9','\9','\9','\74','\32','\61','\32','\48','\44','\10','\9','\9','\9','\75','\32','\61','\32','\48','\44','\10','\9','\9','\9','\73','\32','\61','\32','\48','\44','\10','\9','\9','\9','\89','\32','\61','\32','\48','\44','\10','\9','\9','\9','\85','\112','\32','\61','\32','\48','\44','\10','\9','\9','\9','\68','\111','\119','\110','\32','\61','\32','\48','\44','\10','\9','\9','\9','\76','\101','\102','\116','\83','\104','\105','\102','\116','\32','\61','\32','\48','\44','\10','\9','\9','\9','\82','\105','\103','\104','\116','\83','\104','\105','\102','\116','\32','\61','\32','\48','\44','\10','\9','\9','\125','\10','\9','\10','\9','\9','\108','\111','\99','\97','\108','\32','\109','\111','\117','\115','\101','\32','\61','\32','\123','\10','\9','\9','\9','\68','\101','\108','\116','\97','\32','\61','\32','\86','\101','\99','\116','\111','\114','\50','\46','\110','\101','\119','\40','\41','\44','\10','\9','\9','\9','\77','\111','\117','\115','\101','\87','\104','\101','\101','\108','\32','\61','\32','\48','\44','\10','\9','\9','\125','\10','\9','\10','\9','\9','\108','\111','\99','\97','\108','\32','\78','\65','\86','\95','\71','\65','\77','\69','\80','\65','\68','\95','\83','\80','\69','\69','\68','\32','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\32','\49','\44','\32','\49','\41','\10','\9','\9','\108','\111','\99','\97','\108','\32','\78','\65','\86','\95','\75','\69','\89','\66','\79','\65','\82','\68','\95','\83','\80','\69','\69','\68','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\49','\44','\32','\49','\44','\32','\49','\41','\10','\9','\9','\108','\111','\99','\97','\108','\32','\80','\65','\78','\95','\77','\79','\85','\83','\69','\95','\83','\80','\69','\69','\68','\32','\32','\32','\32','\61','\32','\86','\101','\99','\116','\111','\114','\50','\46','\110','\101','\119','\40','\49','\44','\32','\49','\41','\42','\40','\112','\105','\47','\54','\52','\41','\10','\9','\9','\108','\111','\99','\97','\108','\32','\80','\65','\78','\95','\71','\65','\77','\69','\80','\65','\68','\95','\83','\80','\69','\69','\68','\32','\32','\61','\32','\86','\101','\99','\116','\111','\114','\50','\46','\110','\101','\119','\40','\49','\44','\32','\49','\41','\42','\40','\112','\105','\47','\56','\41','\10','\9','\9','\108','\111','\99','\97','\108','\32','\70','\79','\86','\95','\87','\72','\69','\69','\76','\95','\83','\80','\69','\69','\68','\32','\32','\32','\32','\61','\32','\49','\46','\48','\10','\9','\9','\108','\111','\99','\97','\108','\32','\70','\79','\86','\95','\71','\65','\77','\69','\80','\65','\68','\95','\83','\80','\69','\69','\68','\32','\32','\61','\32','\48','\46','\50','\53','\10','\9','\9','\108','\111','\99','\97','\108','\32','\78','\65','\86','\95','\65','\68','\74','\95','\83','\80','\69','\69','\68','\32','\32','\32','\32','\32','\32','\61','\32','\48','\46','\55','\53','\10','\9','\9','\108','\111','\99','\97','\108','\32','\78','\65','\86','\95','\83','\72','\73','\70','\84','\95','\77','\85','\76','\32','\32','\32','\32','\32','\32','\61','\32','\48','\46','\50','\53','\10','\9','\10','\9','\9','\108','\111','\99','\97','\108','\32','\110','\97','\118','\83','\112','\101','\101','\100','\32','\61','\32','\49','\10','\9','\10','\9','\9','\102','\117','\110','\99','\116','\105','\111','\110','\32','\73','\110','\112','\117','\116','\46','\86','\101','\108','\40','\100','\116','\41','\10','\9','\9','\9','\110','\97','\118','\83','\112','\101','\101','\100','\32','\61','\32','\99','\108','\97','\109','\112','\40','\110','\97','\118','\83','\112','\101','\101','\100','\32','\43','\32','\100','\116','\42','\40','\107','\101','\121','\98','\111','\97','\114','\100','\46','\85','\112','\32','\45','\32','\107','\101','\121','\98','\111','\97','\114','\100','\46','\68','\111','\119','\110','\41','\42','\78','\65','\86','\95','\65','\68','\74','\95','\83','\80','\69','\69','\68','\44','\32','\48','\46','\48','\49','\44','\32','\52','\41','\10','\9','\10','\9','\9','\9','\108','\111','\99','\97','\108','\32','\107','\71','\97','\109','\101','\112','\97','\100','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\10','\9','\9','\9','\9','\116','\104','\117','\109','\98','\115','\116','\105','\99','\107','\67','\117','\114','\118','\101','\40','\103','\97','\109','\101','\112','\97','\100','\46','\84','\104','\117','\109','\98','\115','\116','\105','\99','\107','\49','\46','\120','\41','\44','\10','\9','\9','\9','\9','\116','\104','\117','\109','\98','\115','\116','\105','\99','\107','\67','\117','\114','\118','\101','\40','\103','\97','\109','\101','\112','\97','\100','\46','\66','\117','\116','\116','\111','\110','\82','\50','\41','\32','\45','\32','\116','\104','\117','\109','\98','\115','\116','\105','\99','\107','\67','\117','\114','\118','\101','\40','\103','\97','\109','\101','\112','\97','\100','\46','\66','\117','\116','\116','\111','\110','\76','\50','\41','\44','\10','\9','\9','\9','\9','\116','\104','\117','\109','\98','\115','\116','\105','\99','\107','\67','\117','\114','\118','\101','\40','\45','\103','\97','\109','\101','\112','\97','\100','\46','\84','\104','\117','\109','\98','\115','\116','\105','\99','\107','\49','\46','\121','\41','\10','\9','\9','\9','\41','\42','\78','\65','\86','\95','\71','\65','\77','\69','\80','\65','\68','\95','\83','\80','\69','\69','\68','\10','\9','\10','\9','\9','\9','\108','\111','\99','\97','\108','\32','\107','\75','\101','\121','\98','\111','\97','\114','\100','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\10','\9','\9','\9','\9','\107','\101','\121','\98','\111','\97','\114','\100','\46','\68','\32','\45','\32','\107','\101','\121','\98','\111','\97','\114','\100','\46','\65','\32','\43','\32','\107','\101','\121','\98','\111','\97','\114','\100','\46','\75','\32','\45','\32','\107','\101','\121','\98','\111','\97','\114','\100','\46','\72','\44','\10','\9','\9','\9','\9','\107','\101','\121','\98','\111','\97','\114','\100','\46','\69','\32','\45','\32','\107','\101','\121','\98','\111','\97','\114','\100','\46','\81','\32','\43','\32','\107','\101','\121','\98','\111','\97','\114','\100','\46','\73','\32','\45','\32','\107','\101','\121','\98','\111','\97','\114','\100','\46','\89','\44','\10','\9','\9','\9','\9','\107','\101','\121','\98','\111','\97','\114','\100','\46','\83','\32','\45','\32','\107','\101','\121','\98','\111','\97','\114','\100','\46','\87','\32','\43','\32','\107','\101','\121','\98','\111','\97','\114','\100','\46','\74','\32','\45','\32','\107','\101','\121','\98','\111','\97','\114','\100','\46','\85','\10','\9','\9','\9','\41','\42','\78','\65','\86','\95','\75','\69','\89','\66','\79','\65','\82','\68','\95','\83','\80','\69','\69','\68','\10','\9','\10','\9','\9','\9','\108','\111','\99','\97','\108','\32','\115','\104','\105','\102','\116','\32','\61','\32','\85','\115','\101','\114','\73','\110','\112','\117','\116','\83','\101','\114','\118','\105','\99','\101','\58','\73','\115','\75','\101','\121','\68','\111','\119','\110','\40','\69','\110','\117','\109','\46','\75','\101','\121','\67','\111','\100','\101','\46','\76','\101','\102','\116','\83','\104','\105','\102','\116','\41','\32','\111','\114','\32','\85','\115','\101','\114','\73','\110','\112','\117','\116','\83','\101','\114','\118','\105','\99','\101','\58','\73','\115','\75','\101','\121','\68','\111','\119','\110','\40','\69','\110','\117','\109','\46','\75','\101','\121','\67','\111','\100','\101','\46','\82','\105','\103','\104','\116','\83','\104','\105','\102','\116','\41','\10','\9','\10','\9','\9','\9','\114','\101','\116','\117','\114','\110','\32','\40','\107','\71','\97','\109','\101','\112','\97','\100','\32','\43','\32','\107','\75','\101','\121','\98','\111','\97','\114','\100','\41','\42','\40','\110','\97','\118','\83','\112','\101','\101','\100','\42','\40','\115','\104','\105','\102','\116','\32','\97','\110','\100','\32','\78','\65','\86','\95','\83','\72','\73','\70','\84','\95','\77','\85','\76','\32','\111','\114','\32','\49','\41','\41','\10','\9','\9','\101','\110','\100','\10','\9','\10','\9','\9','\102','\117','\110','\99','\116','\105','\111','\110','\32','\73','\110','\112','\117','\116','\46','\80','\97','\110','\40','\100','\116','\41','\10','\9','\9','\9','\108','\111','\99','\97','\108','\32','\107','\71','\97','\109','\101','\112','\97','\100','\32','\61','\32','\86','\101','\99','\116','\111','\114','\50','\46','\110','\101','\119','\40','\10','\9','\9','\9','\9','\116','\104','\117','\109','\98','\115','\116','\105','\99','\107','\67','\117','\114','\118','\101','\40','\103','\97','\109','\101','\112','\97','\100','\46','\84','\104','\117','\109','\98','\115','\116','\105','\99','\107','\50','\46','\121','\41','\44','\10','\9','\9','\9','\9','\116','\104','\117','\109','\98','\115','\116','\105','\99','\107','\67','\117','\114','\118','\101','\40','\45','\103','\97','\109','\101','\112','\97','\100','\46','\84','\104','\117','\109','\98','\115','\116','\105','\99','\107','\50','\46','\120','\41','\10','\9','\9','\9','\41','\42','\80','\65','\78','\95','\71','\65','\77','\69','\80','\65','\68','\95','\83','\80','\69','\69','\68','\10','\9','\9','\9','\108','\111','\99','\97','\108','\32','\107','\77','\111','\117','\115','\101','\32','\61','\32','\109','\111','\117','\115','\101','\46','\68','\101','\108','\116','\97','\42','\80','\65','\78','\95','\77','\79','\85','\83','\69','\95','\83','\80','\69','\69','\68','\10','\9','\9','\9','\109','\111','\117','\115','\101','\46','\68','\101','\108','\116','\97','\32','\61','\32','\86','\101','\99','\116','\111','\114','\50','\46','\110','\101','\119','\40','\41','\10','\9','\9','\9','\114','\101','\116','\117','\114','\110','\32','\107','\71','\97','\109','\101','\112','\97','\100','\32','\43','\32','\107','\77','\111','\117','\115','\101','\10','\9','\9','\101','\110','\100','\10','\9','\10','\9','\9','\102','\117','\110','\99','\116','\105','\111','\110','\32','\73','\110','\112','\117','\116','\46','\70','\111','\118','\40','\100','\116','\41','\10','\9','\9','\9','\108','\111','\99','\97','\108','\32','\107','\71','\97','\109','\101','\112','\97','\100','\32','\61','\32','\40','\103','\97','\109','\101','\112','\97','\100','\46','\66','\117','\116','\116','\111','\110','\88','\32','\45','\32','\103','\97','\109','\101','\112','\97','\100','\46','\66','\117','\116','\116','\111','\110','\89','\41','\42','\70','\79','\86','\95','\71','\65','\77','\69','\80','\65','\68','\95','\83','\80','\69','\69','\68','\10','\9','\9','\9','\108','\111','\99','\97','\108','\32','\107','\77','\111','\117','\115','\101','\32','\61','\32','\109','\111','\117','\115','\101','\46','\77','\111','\117','\115','\101','\87','\104','\101','\101','\108','\42','\70','\79','\86','\95','\87','\72','\69','\69','\76','\95','\83','\80','\69','\69','\68','\10','\9','\9','\9','\109','\111','\117','\115','\101','\46','\77','\111','\117','\115','\101','\87','\104','\101','\101','\108','\32','\61','\32','\48','\10','\9','\9','\9','\114','\101','\116','\117','\114','\110','\32','\107','\71','\97','\109','\101','\112','\97','\100','\32','\43','\32','\107','\77','\111','\117','\115','\101','\10','\9','\9','\101','\110','\100','\10','\9','\10','\9','\9','\100','\111','\10','\9','\9','\9','\108','\111','\99','\97','\108','\32','\102','\117','\110','\99','\116','\105','\111','\110','\32','\75','\101','\121','\112','\114','\101','\115','\115','\40','\97','\99','\116','\105','\111','\110','\44','\32','\115','\116','\97','\116','\101','\44','\32','\105','\110','\112','\117','\116','\41','\10','\9','\9','\9','\9','\107','\101','\121','\98','\111','\97','\114','\100','\91','\105','\110','\112','\117','\116','\46','\75','\101','\121','\67','\111','\100','\101','\46','\78','\97','\109','\101','\93','\32','\61','\32','\115','\116','\97','\116','\101','\32','\61','\61','\32','\69','\110','\117','\109','\46','\85','\115','\101','\114','\73','\110','\112','\117','\116','\83','\116','\97','\116','\101','\46','\66','\101','\103','\105','\110','\32','\97','\110','\100','\32','\49','\32','\111','\114','\32','\48','\10','\9','\9','\9','\9','\114','\101','\116','\117','\114','\110','\32','\69','\110','\117','\109','\46','\67','\111','\110','\116','\101','\120','\116','\65','\99','\116','\105','\111','\110','\82','\101','\115','\117','\108','\116','\46','\83','\105','\110','\107','\10','\9','\9','\9','\101','\110','\100','\10','\9','\10','\9','\9','\9','\108','\111','\99','\97','\108','\32','\102','\117','\110','\99','\116','\105','\111','\110','\32','\71','\112','\66','\117','\116','\116','\111','\110','\40','\97','\99','\116','\105','\111','\110','\44','\32','\115','\116','\97','\116','\101','\44','\32','\105','\110','\112','\117','\116','\41','\10','\9','\9','\9','\9','\103','\97','\109','\101','\112','\97','\100','\91','\105','\110','\112','\117','\116','\46','\75','\101','\121','\67','\111','\100','\101','\46','\78','\97','\109','\101','\93','\32','\61','\32','\115','\116','\97','\116','\101','\32','\61','\61','\32','\69','\110','\117','\109','\46','\85','\115','\101','\114','\73','\110','\112','\117','\116','\83','\116','\97','\116','\101','\46','\66','\101','\103','\105','\110','\32','\97','\110','\100','\32','\49','\32','\111','\114','\32','\48','\10','\9','\9','\9','\9','\114','\101','\116','\117','\114','\110','\32','\69','\110','\117','\109','\46','\67','\111','\110','\116','\101','\120','\116','\65','\99','\116','\105','\111','\110','\82','\101','\115','\117','\108','\116','\46','\83','\105','\110','\107','\10','\9','\9','\9','\101','\110','\100','\10','\9','\10','\9','\9','\9','\108','\111','\99','\97','\108','\32','\102','\117','\110','\99','\116','\105','\111','\110','\32','\77','\111','\117','\115','\101','\80','\97','\110','\40','\97','\99','\116','\105','\111','\110','\44','\32','\115','\116','\97','\116','\101','\44','\32','\105','\110','\112','\117','\116','\41','\10','\9','\9','\9','\9','\108','\111','\99','\97','\108','\32','\100','\101','\108','\116','\97','\32','\61','\32','\105','\110','\112','\117','\116','\46','\68','\101','\108','\116','\97','\10','\9','\9','\9','\9','\109','\111','\117','\115','\101','\46','\68','\101','\108','\116','\97','\32','\61','\32','\86','\101','\99','\116','\111','\114','\50','\46','\110','\101','\119','\40','\45','\100','\101','\108','\116','\97','\46','\121','\44','\32','\45','\100','\101','\108','\116','\97','\46','\120','\41','\10','\9','\9','\9','\9','\114','\101','\116','\117','\114','\110','\32','\69','\110','\117','\109','\46','\67','\111','\110','\116','\101','\120','\116','\65','\99','\116','\105','\111','\110','\82','\101','\115','\117','\108','\116','\46','\83','\105','\110','\107','\10','\9','\9','\9','\101','\110','\100','\10','\9','\10','\9','\9','\9','\108','\111','\99','\97','\108','\32','\102','\117','\110','\99','\116','\105','\111','\110','\32','\84','\104','\117','\109','\98','\40','\97','\99','\116','\105','\111','\110','\44','\32','\115','\116','\97','\116','\101','\44','\32','\105','\110','\112','\117','\116','\41','\10','\9','\9','\9','\9','\103','\97','\109','\101','\112','\97','\100','\91','\105','\110','\112','\117','\116','\46','\75','\101','\121','\67','\111','\100','\101','\46','\78','\97','\109','\101','\93','\32','\61','\32','\105','\110','\112','\117','\116','\46','\80','\111','\115','\105','\116','\105','\111','\110','\10','\9','\9','\9','\9','\114','\101','\116','\117','\114','\110','\32','\69','\110','\117','\109','\46','\67','\111','\110','\116','\101','\120','\116','\65','\99','\116','\105','\111','\110','\82','\101','\115','\117','\108','\116','\46','\83','\105','\110','\107','\10','\9','\9','\9','\101','\110','\100','\10','\9','\10','\9','\9','\9','\108','\111','\99','\97','\108','\32','\102','\117','\110','\99','\116','\105','\111','\110','\32','\84','\114','\105','\103','\103','\101','\114','\40','\97','\99','\116','\105','\111','\110','\44','\32','\115','\116','\97','\116','\101','\44','\32','\105','\110','\112','\117','\116','\41','\10','\9','\9','\9','\9','\103','\97','\109','\101','\112','\97','\100','\91','\105','\110','\112','\117','\116','\46','\75','\101','\121','\67','\111','\100','\101','\46','\78','\97','\109','\101','\93','\32','\61','\32','\105','\110','\112','\117','\116','\46','\80','\111','\115','\105','\116','\105','\111','\110','\46','\122','\10','\9','\9','\9','\9','\114','\101','\116','\117','\114','\110','\32','\69','\110','\117','\109','\46','\67','\111','\110','\116','\101','\120','\116','\65','\99','\116','\105','\111','\110','\82','\101','\115','\117','\108','\116','\46','\83','\105','\110','\107','\10','\9','\9','\9','\101','\110','\100','\10','\9','\10','\9','\9','\9','\108','\111','\99','\97','\108','\32','\102','\117','\110','\99','\116','\105','\111','\110','\32','\77','\111','\117','\115','\101','\87','\104','\101','\101','\108','\40','\97','\99','\116','\105','\111','\110','\44','\32','\115','\116','\97','\116','\101','\44','\32','\105','\110','\112','\117','\116','\41','\10','\9','\9','\9','\9','\109','\111','\117','\115','\101','\91','\105','\110','\112','\117','\116','\46','\85','\115','\101','\114','\73','\110','\112','\117','\116','\84','\121','\112','\101','\46','\78','\97','\109','\101','\93','\32','\61','\32','\45','\105','\110','\112','\117','\116','\46','\80','\111','\115','\105','\116','\105','\111','\110','\46','\122','\10','\9','\9','\9','\9','\114','\101','\116','\117','\114','\110','\32','\69','\110','\117','\109','\46','\67','\111','\110','\116','\101','\120','\116','\65','\99','\116','\105','\111','\110','\82','\101','\115','\117','\108','\116','\46','\83','\105','\110','\107','\10','\9','\9','\9','\101','\110','\100','\10','\9','\10','\9','\9','\9','\108','\111','\99','\97','\108','\32','\102','\117','\110','\99','\116','\105','\111','\110','\32','\90','\101','\114','\111','\40','\116','\41','\10','\9','\9','\9','\9','\102','\111','\114','\32','\107','\44','\32','\118','\32','\105','\110','\32','\112','\97','\105','\114','\115','\40','\116','\41','\32','\100','\111','\10','\9','\9','\9','\9','\9','\116','\91','\107','\93','\32','\61','\32','\118','\42','\48','\10','\9','\9','\9','\9','\101','\110','\100','\10','\9','\9','\9','\101','\110','\100','\10','\9','\10','\9','\9','\9','\102','\117','\110','\99','\116','\105','\111','\110','\32','\73','\110','\112','\117','\116','\46','\83','\116','\97','\114','\116','\67','\97','\112','\116','\117','\114','\101','\40','\41','\10','\9','\9','\9','\9','\67','\111','\110','\116','\101','\120','\116','\65','\99','\116','\105','\111','\110','\83','\101','\114','\118','\105','\99','\101','\58','\66','\105','\110','\100','\65','\99','\116','\105','\111','\110','\65','\116','\80','\114','\105','\111','\114','\105','\116','\121','\40','\34','\70','\114','\101','\101','\99','\97','\109','\75','\101','\121','\98','\111','\97','\114','\100','\34','\44','\32','\75','\101','\121','\112','\114','\101','\115','\115','\44','\32','\102','\97','\108','\115','\101','\44','\32','\73','\78','\80','\85','\84','\95','\80','\82','\73','\79','\82','\73','\84','\89','\44','\10','\9','\9','\9','\9','\9','\69','\110','\117','\109','\46','\75','\101','\121','\67','\111','\100','\101','\46','\87','\44','\32','\69','\110','\117','\109','\46','\75','\101','\121','\67','\111','\100','\101','\46','\85','\44','\10','\9','\9','\9','\9','\9','\69','\110','\117','\109','\46','\75','\101','\121','\67','\111','\100','\101','\46','\65','\44','\32','\69','\110','\117','\109','\46','\75','\101','\121','\67','\111','\100','\101','\46','\72','\44','\10','\9','\9','\9','\9','\9','\69','\110','\117','\109','\46','\75','\101','\121','\67','\111','\100','\101','\46','\83','\44','\32','\69','\110','\117','\109','\46','\75','\101','\121','\67','\111','\100','\101','\46','\74','\44','\10','\9','\9','\9','\9','\9','\69','\110','\117','\109','\46','\75','\101','\121','\67','\111','\100','\101','\46','\68','\44','\32','\69','\110','\117','\109','\46','\75','\101','\121','\67','\111','\100','\101','\46','\75','\44','\10','\9','\9','\9','\9','\9','\69','\110','\117','\109','\46','\75','\101','\121','\67','\111','\100','\101','\46','\69','\44','\32','\69','\110','\117','\109','\46','\75','\101','\121','\67','\111','\100','\101','\46','\73','\44','\10','\9','\9','\9','\9','\9','\69','\110','\117','\109','\46','\75','\101','\121','\67','\111','\100','\101','\46','\81','\44','\32','\69','\110','\117','\109','\46','\75','\101','\121','\67','\111','\100','\101','\46','\89','\44','\10','\9','\9','\9','\9','\9','\69','\110','\117','\109','\46','\75','\101','\121','\67','\111','\100','\101','\46','\85','\112','\44','\32','\69','\110','\117','\109','\46','\75','\101','\121','\67','\111','\100','\101','\46','\68','\111','\119','\110','\10','\9','\9','\9','\9','\41','\10','\9','\9','\9','\9','\67','\111','\110','\116','\101','\120','\116','\65','\99','\116','\105','\111','\110','\83','\101','\114','\118','\105','\99','\101','\58','\66','\105','\110','\100','\65','\99','\116','\105','\111','\110','\65','\116','\80','\114','\105','\111','\114','\105','\116','\121','\40','\34','\70','\114','\101','\101','\99','\97','\109','\77','\111','\117','\115','\101','\80','\97','\110','\34','\44','\32','\32','\32','\32','\32','\32','\32','\32','\32','\32','\77','\111','\117','\115','\101','\80','\97','\110','\44','\32','\32','\32','\102','\97','\108','\115','\101','\44','\32','\73','\78','\80','\85','\84','\95','\80','\82','\73','\79','\82','\73','\84','\89','\44','\32','\69','\110','\117','\109','\46','\85','\115','\101','\114','\73','\110','\112','\117','\116','\84','\121','\112','\101','\46','\77','\111','\117','\115','\101','\77','\111','\118','\101','\109','\101','\110','\116','\41','\10','\9','\9','\9','\9','\67','\111','\110','\116','\101','\120','\116','\65','\99','\116','\105','\111','\110','\83','\101','\114','\118','\105','\99','\101','\58','\66','\105','\110','\100','\65','\99','\116','\105','\111','\110','\65','\116','\80','\114','\105','\111','\114','\105','\116','\121','\40','\34','\70','\114','\101','\101','\99','\97','\109','\77','\111','\117','\115','\101','\87','\104','\101','\101','\108','\34','\44','\32','\32','\32','\32','\32','\32','\32','\32','\77','\111','\117','\115','\101','\87','\104','\101','\101','\108','\44','\32','\102','\97','\108','\115','\101','\44','\32','\73','\78','\80','\85','\84','\95','\80','\82','\73','\79','\82','\73','\84','\89','\44','\32','\69','\110','\117','\109','\46','\85','\115','\101','\114','\73','\110','\112','\117','\116','\84','\121','\112','\101','\46','\77','\111','\117','\115','\101','\87','\104','\101','\101','\108','\41','\10','\9','\9','\9','\9','\67','\111','\110','\116','\101','\120','\116','\65','\99','\116','\105','\111','\110','\83','\101','\114','\118','\105','\99','\101','\58','\66','\105','\110','\100','\65','\99','\116','\105','\111','\110','\65','\116','\80','\114','\105','\111','\114','\105','\116','\121','\40','\34','\70','\114','\101','\101','\99','\97','\109','\71','\97','\109','\101','\112','\97','\100','\66','\117','\116','\116','\111','\110','\34','\44','\32','\32','\32','\32','\32','\71','\112','\66','\117','\116','\116','\111','\110','\44','\32','\32','\32','\102','\97','\108','\115','\101','\44','\32','\73','\78','\80','\85','\84','\95','\80','\82','\73','\79','\82','\73','\84','\89','\44','\32','\69','\110','\117','\109','\46','\75','\101','\121','\67','\111','\100','\101','\46','\66','\117','\116','\116','\111','\110','\88','\44','\32','\69','\110','\117','\109','\46','\75','\101','\121','\67','\111','\100','\101','\46','\66','\117','\116','\116','\111','\110','\89','\41','\10','\9','\9','\9','\9','\67','\111','\110','\116','\101','\120','\116','\65','\99','\116','\105','\111','\110','\83','\101','\114','\118','\105','\99','\101','\58','\66','\105','\110','\100','\65','\99','\116','\105','\111','\110','\65','\116','\80','\114','\105','\111','\114','\105','\116','\121','\40','\34','\70','\114','\101','\101','\99','\97','\109','\71','\97','\109','\101','\112','\97','\100','\84','\114','\105','\103','\103','\101','\114','\34','\44','\32','\32','\32','\32','\84','\114','\105','\103','\103','\101','\114','\44','\32','\32','\32','\32','\102','\97','\108','\115','\101','\44','\32','\73','\78','\80','\85','\84','\95','\80','\82','\73','\79','\82','\73','\84','\89','\44','\32','\69','\110','\117','\109','\46','\75','\101','\121','\67','\111','\100','\101','\46','\66','\117','\116','\116','\111','\110','\82','\50','\44','\32','\69','\110','\117','\109','\46','\75','\101','\121','\67','\111','\100','\101','\46','\66','\117','\116','\116','\111','\110','\76','\50','\41','\10','\9','\9','\9','\9','\67','\111','\110','\116','\101','\120','\116','\65','\99','\116','\105','\111','\110','\83','\101','\114','\118','\105','\99','\101','\58','\66','\105','\110','\100','\65','\99','\116','\105','\111','\110','\65','\116','\80','\114','\105','\111','\114','\105','\116','\121','\40','\34','\70','\114','\101','\101','\99','\97','\109','\71','\97','\109','\101','\112','\97','\100','\84','\104','\117','\109','\98','\115','\116','\105','\99','\107','\34','\44','\32','\84','\104','\117','\109','\98','\44','\32','\32','\32','\32','\32','\32','\102','\97','\108','\115','\101','\44','\32','\73','\78','\80','\85','\84','\95','\80','\82','\73','\79','\82','\73','\84','\89','\44','\32','\69','\110','\117','\109','\46','\75','\101','\121','\67','\111','\100','\101','\46','\84','\104','\117','\109','\98','\115','\116','\105','\99','\107','\49','\44','\32','\69','\110','\117','\109','\46','\75','\101','\121','\67','\111','\100','\101','\46','\84','\104','\117','\109','\98','\115','\116','\105','\99','\107','\50','\41','\10','\9','\9','\9','\101','\110','\100','\10','\9','\10','\9','\9','\9','\102','\117','\110','\99','\116','\105','\111','\110','\32','\73','\110','\112','\117','\116','\46','\83','\116','\111','\112','\67','\97','\112','\116','\117','\114','\101','\40','\41','\10','\9','\9','\9','\9','\110','\97','\118','\83','\112','\101','\101','\100','\32','\61','\32','\49','\10','\9','\9','\9','\9','\90','\101','\114','\111','\40','\103','\97','\109','\101','\112','\97','\100','\41','\10','\9','\9','\9','\9','\90','\101','\114','\111','\40','\107','\101','\121','\98','\111','\97','\114','\100','\41','\10','\9','\9','\9','\9','\90','\101','\114','\111','\40','\109','\111','\117','\115','\101','\41','\10','\9','\9','\9','\9','\67','\111','\110','\116','\101','\120','\116','\65','\99','\116','\105','\111','\110','\83','\101','\114','\118','\105','\99','\101','\58','\85','\110','\98','\105','\110','\100','\65','\99','\116','\105','\111','\110','\40','\34','\70','\114','\101','\101','\99','\97','\109','\75','\101','\121','\98','\111','\97','\114','\100','\34','\41','\10','\9','\9','\9','\9','\67','\111','\110','\116','\101','\120','\116','\65','\99','\116','\105','\111','\110','\83','\101','\114','\118','\105','\99','\101','\58','\85','\110','\98','\105','\110','\100','\65','\99','\116','\105','\111','\110','\40','\34','\70','\114','\101','\101','\99','\97','\109','\77','\111','\117','\115','\101','\80','\97','\110','\34','\41','\10','\9','\9','\9','\9','\67','\111','\110','\116','\101','\120','\116','\65','\99','\116','\105','\111','\110','\83','\101','\114','\118','\105','\99','\101','\58','\85','\110','\98','\105','\110','\100','\65','\99','\116','\105','\111','\110','\40','\34','\70','\114','\101','\101','\99','\97','\109','\77','\111','\117','\115','\101','\87','\104','\101','\101','\108','\34','\41','\10','\9','\9','\9','\9','\67','\111','\110','\116','\101','\120','\116','\65','\99','\116','\105','\111','\110','\83','\101','\114','\118','\105','\99','\101','\58','\85','\110','\98','\105','\110','\100','\65','\99','\116','\105','\111','\110','\40','\34','\70','\114','\101','\101','\99','\97','\109','\71','\97','\109','\101','\112','\97','\100','\66','\117','\116','\116','\111','\110','\34','\41','\10','\9','\9','\9','\9','\67','\111','\110','\116','\101','\120','\116','\65','\99','\116','\105','\111','\110','\83','\101','\114','\118','\105','\99','\101','\58','\85','\110','\98','\105','\110','\100','\65','\99','\116','\105','\111','\110','\40','\34','\70','\114','\101','\101','\99','\97','\109','\71','\97','\109','\101','\112','\97','\100','\84','\114','\105','\103','\103','\101','\114','\34','\41','\10','\9','\9','\9','\9','\67','\111','\110','\116','\101','\120','\116','\65','\99','\116','\105','\111','\110','\83','\101','\114','\118','\105','\99','\101','\58','\85','\110','\98','\105','\110','\100','\65','\99','\116','\105','\111','\110','\40','\34','\70','\114','\101','\101','\99','\97','\109','\71','\97','\109','\101','\112','\97','\100','\84','\104','\117','\109','\98','\115','\116','\105','\99','\107','\34','\41','\10','\9','\9','\9','\101','\110','\100','\10','\9','\9','\101','\110','\100','\10','\9','\101','\110','\100','\10','\9','\10','\9','\108','\111','\99','\97','\108','\32','\102','\117','\110','\99','\116','\105','\111','\110','\32','\71','\101','\116','\70','\111','\99','\117','\115','\68','\105','\115','\116','\97','\110','\99','\101','\40','\99','\97','\109','\101','\114','\97','\70','\114','\97','\109','\101','\41','\10','\9','\9','\108','\111','\99','\97','\108','\32','\122','\110','\101','\97','\114','\32','\61','\32','\48','\46','\49','\10','\9','\9','\108','\111','\99','\97','\108','\32','\118','\105','\101','\119','\112','\111','\114','\116','\32','\61','\32','\67','\97','\109','\101','\114','\97','\46','\86','\105','\101','\119','\112','\111','\114','\116','\83','\105','\122','\101','\10','\9','\9','\108','\111','\99','\97','\108','\32','\112','\114','\111','\106','\121','\32','\61','\32','\50','\42','\116','\97','\110','\40','\99','\97','\109','\101','\114','\97','\70','\111','\118','\47','\50','\41','\10','\9','\9','\108','\111','\99','\97','\108','\32','\112','\114','\111','\106','\120','\32','\61','\32','\118','\105','\101','\119','\112','\111','\114','\116','\46','\120','\47','\118','\105','\101','\119','\112','\111','\114','\116','\46','\121','\42','\112','\114','\111','\106','\121','\10','\9','\9','\108','\111','\99','\97','\108','\32','\102','\120','\32','\61','\32','\99','\97','\109','\101','\114','\97','\70','\114','\97','\109','\101','\46','\114','\105','\103','\104','\116','\86','\101','\99','\116','\111','\114','\10','\9','\9','\108','\111','\99','\97','\108','\32','\102','\121','\32','\61','\32','\99','\97','\109','\101','\114','\97','\70','\114','\97','\109','\101','\46','\117','\112','\86','\101','\99','\116','\111','\114','\10','\9','\9','\108','\111','\99','\97','\108','\32','\102','\122','\32','\61','\32','\99','\97','\109','\101','\114','\97','\70','\114','\97','\109','\101','\46','\108','\111','\111','\107','\86','\101','\99','\116','\111','\114','\10','\9','\10','\9','\9','\108','\111','\99','\97','\108','\32','\109','\105','\110','\86','\101','\99','\116','\32','\61','\32','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\41','\10','\9','\9','\108','\111','\99','\97','\108','\32','\109','\105','\110','\68','\105','\115','\116','\32','\61','\32','\53','\49','\50','\10','\9','\10','\9','\9','\102','\111','\114','\32','\120','\32','\61','\32','\48','\44','\32','\49','\44','\32','\48','\46','\53','\32','\100','\111','\10','\9','\9','\9','\102','\111','\114','\32','\121','\32','\61','\32','\48','\44','\32','\49','\44','\32','\48','\46','\53','\32','\100','\111','\10','\9','\9','\9','\9','\108','\111','\99','\97','\108','\32','\99','\120','\32','\61','\32','\40','\120','\32','\45','\32','\48','\46','\53','\41','\42','\112','\114','\111','\106','\120','\10','\9','\9','\9','\9','\108','\111','\99','\97','\108','\32','\99','\121','\32','\61','\32','\40','\121','\32','\45','\32','\48','\46','\53','\41','\42','\112','\114','\111','\106','\121','\10','\9','\9','\9','\9','\108','\111','\99','\97','\108','\32','\111','\102','\102','\115','\101','\116','\32','\61','\32','\102','\120','\42','\99','\120','\32','\45','\32','\102','\121','\42','\99','\121','\32','\43','\32','\102','\122','\10','\9','\9','\9','\9','\108','\111','\99','\97','\108','\32','\111','\114','\105','\103','\105','\110','\32','\61','\32','\99','\97','\109','\101','\114','\97','\70','\114','\97','\109','\101','\46','\112','\32','\43','\32','\111','\102','\102','\115','\101','\116','\42','\122','\110','\101','\97','\114','\10','\9','\9','\9','\9','\108','\111','\99','\97','\108','\32','\95','\44','\32','\104','\105','\116','\32','\61','\32','\87','\111','\114','\107','\115','\112','\97','\99','\101','\58','\70','\105','\110','\100','\80','\97','\114','\116','\79','\110','\82','\97','\121','\40','\82','\97','\121','\46','\110','\101','\119','\40','\111','\114','\105','\103','\105','\110','\44','\32','\111','\102','\102','\115','\101','\116','\46','\117','\110','\105','\116','\42','\109','\105','\110','\68','\105','\115','\116','\41','\41','\10','\9','\9','\9','\9','\108','\111','\99','\97','\108','\32','\100','\105','\115','\116','\32','\61','\32','\40','\104','\105','\116','\32','\45','\32','\111','\114','\105','\103','\105','\110','\41','\46','\109','\97','\103','\110','\105','\116','\117','\100','\101','\10','\9','\9','\9','\9','\105','\102','\32','\109','\105','\110','\68','\105','\115','\116','\32','\62','\32','\100','\105','\115','\116','\32','\116','\104','\101','\110','\10','\9','\9','\9','\9','\9','\109','\105','\110','\68','\105','\115','\116','\32','\61','\32','\100','\105','\115','\116','\10','\9','\9','\9','\9','\9','\109','\105','\110','\86','\101','\99','\116','\32','\61','\32','\111','\102','\102','\115','\101','\116','\46','\117','\110','\105','\116','\10','\9','\9','\9','\9','\101','\110','\100','\10','\9','\9','\9','\101','\110','\100','\10','\9','\9','\101','\110','\100','\10','\9','\10','\9','\9','\114','\101','\116','\117','\114','\110','\32','\102','\122','\58','\68','\111','\116','\40','\109','\105','\110','\86','\101','\99','\116','\41','\42','\109','\105','\110','\68','\105','\115','\116','\10','\9','\101','\110','\100','\10','\9','\10','\9','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\10','\9','\10','\9','\108','\111','\99','\97','\108','\32','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\116','\101','\112','\70','\114','\101','\101','\99','\97','\109','\40','\100','\116','\41','\10','\9','\9','\108','\111','\99','\97','\108','\32','\118','\101','\108','\32','\61','\32','\118','\101','\108','\83','\112','\114','\105','\110','\103','\58','\85','\112','\100','\97','\116','\101','\40','\100','\116','\44','\32','\73','\110','\112','\117','\116','\46','\86','\101','\108','\40','\100','\116','\41','\41','\10','\9','\9','\108','\111','\99','\97','\108','\32','\112','\97','\110','\32','\61','\32','\112','\97','\110','\83','\112','\114','\105','\110','\103','\58','\85','\112','\100','\97','\116','\101','\40','\100','\116','\44','\32','\73','\110','\112','\117','\116','\46','\80','\97','\110','\40','\100','\116','\41','\41','\10','\9','\9','\108','\111','\99','\97','\108','\32','\102','\111','\118','\32','\61','\32','\102','\111','\118','\83','\112','\114','\105','\110','\103','\58','\85','\112','\100','\97','\116','\101','\40','\100','\116','\44','\32','\73','\110','\112','\117','\116','\46','\70','\111','\118','\40','\100','\116','\41','\41','\10','\9','\10','\9','\9','\108','\111','\99','\97','\108','\32','\122','\111','\111','\109','\70','\97','\99','\116','\111','\114','\32','\61','\32','\115','\113','\114','\116','\40','\116','\97','\110','\40','\114','\97','\100','\40','\55','\48','\47','\50','\41','\41','\47','\116','\97','\110','\40','\114','\97','\100','\40','\99','\97','\109','\101','\114','\97','\70','\111','\118','\47','\50','\41','\41','\41','\10','\9','\10','\9','\9','\99','\97','\109','\101','\114','\97','\70','\111','\118','\32','\61','\32','\99','\108','\97','\109','\112','\40','\99','\97','\109','\101','\114','\97','\70','\111','\118','\32','\43','\32','\102','\111','\118','\42','\70','\79','\86','\95','\71','\65','\73','\78','\42','\40','\100','\116','\47','\122','\111','\111','\109','\70','\97','\99','\116','\111','\114','\41','\44','\32','\49','\44','\32','\49','\50','\48','\41','\10','\9','\9','\99','\97','\109','\101','\114','\97','\82','\111','\116','\32','\61','\32','\99','\97','\109','\101','\114','\97','\82','\111','\116','\32','\43','\32','\112','\97','\110','\42','\80','\65','\78','\95','\71','\65','\73','\78','\42','\40','\100','\116','\47','\122','\111','\111','\109','\70','\97','\99','\116','\111','\114','\41','\10','\9','\9','\99','\97','\109','\101','\114','\97','\82','\111','\116','\32','\61','\32','\86','\101','\99','\116','\111','\114','\50','\46','\110','\101','\119','\40','\99','\108','\97','\109','\112','\40','\99','\97','\109','\101','\114','\97','\82','\111','\116','\46','\120','\44','\32','\45','\80','\73','\84','\67','\72','\95','\76','\73','\77','\73','\84','\44','\32','\80','\73','\84','\67','\72','\95','\76','\73','\77','\73','\84','\41','\44','\32','\99','\97','\109','\101','\114','\97','\82','\111','\116','\46','\121','\37','\40','\50','\42','\112','\105','\41','\41','\10','\9','\10','\9','\9','\108','\111','\99','\97','\108','\32','\99','\97','\109','\101','\114','\97','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\99','\97','\109','\101','\114','\97','\80','\111','\115','\41','\42','\67','\70','\114','\97','\109','\101','\46','\102','\114','\111','\109','\79','\114','\105','\101','\110','\116','\97','\116','\105','\111','\110','\40','\99','\97','\109','\101','\114','\97','\82','\111','\116','\46','\120','\44','\32','\99','\97','\109','\101','\114','\97','\82','\111','\116','\46','\121','\44','\32','\48','\41','\42','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\118','\101','\108','\42','\78','\65','\86','\95','\71','\65','\73','\78','\42','\100','\116','\41','\10','\9','\9','\99','\97','\109','\101','\114','\97','\80','\111','\115','\32','\61','\32','\99','\97','\109','\101','\114','\97','\67','\70','\114','\97','\109','\101','\46','\112','\10','\9','\10','\9','\9','\67','\97','\109','\101','\114','\97','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\99','\97','\109','\101','\114','\97','\67','\70','\114','\97','\109','\101','\10','\9','\9','\67','\97','\109','\101','\114','\97','\46','\70','\111','\99','\117','\115','\32','\61','\32','\99','\97','\109','\101','\114','\97','\67','\70','\114','\97','\109','\101','\42','\67','\70','\114','\97','\109','\101','\46','\110','\101','\119','\40','\48','\44','\32','\48','\44','\32','\45','\71','\101','\116','\70','\111','\99','\117','\115','\68','\105','\115','\116','\97','\110','\99','\101','\40','\99','\97','\109','\101','\114','\97','\67','\70','\114','\97','\109','\101','\41','\41','\10','\9','\9','\67','\97','\109','\101','\114','\97','\46','\70','\105','\101','\108','\100','\79','\102','\86','\105','\101','\119','\32','\61','\32','\99','\97','\109','\101','\114','\97','\70','\111','\118','\10','\9','\101','\110','\100','\10','\9','\10','\9','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\10','\9','\10','\9','\108','\111','\99','\97','\108','\32','\80','\108','\97','\121','\101','\114','\83','\116','\97','\116','\101','\32','\61','\32','\123','\125','\32','\100','\111','\10','\9','\9','\108','\111','\99','\97','\108','\32','\109','\111','\117','\115','\101','\66','\101','\104','\97','\118','\105','\111','\114','\10','\9','\9','\108','\111','\99','\97','\108','\32','\109','\111','\117','\115','\101','\73','\99','\111','\110','\69','\110','\97','\98','\108','\101','\100','\10','\9','\9','\108','\111','\99','\97','\108','\32','\99','\97','\109','\101','\114','\97','\84','\121','\112','\101','\10','\9','\9','\108','\111','\99','\97','\108','\32','\99','\97','\109','\101','\114','\97','\70','\111','\99','\117','\115','\10','\9','\9','\108','\111','\99','\97','\108','\32','\99','\97','\109','\101','\114','\97','\67','\70','\114','\97','\109','\101','\10','\9','\9','\108','\111','\99','\97','\108','\32','\99','\97','\109','\101','\114','\97','\70','\105','\101','\108','\100','\79','\102','\86','\105','\101','\119','\10','\9','\9','\108','\111','\99','\97','\108','\32','\115','\99','\114','\101','\101','\110','\71','\117','\105','\115','\32','\61','\32','\123','\125','\10','\9','\9','\108','\111','\99','\97','\108','\32','\99','\111','\114','\101','\71','\117','\105','\115','\32','\61','\32','\123','\10','\9','\9','\9','\66','\97','\99','\107','\112','\97','\99','\107','\32','\61','\32','\116','\114','\117','\101','\44','\10','\9','\9','\9','\67','\104','\97','\116','\32','\61','\32','\116','\114','\117','\101','\44','\10','\9','\9','\9','\72','\101','\97','\108','\116','\104','\32','\61','\32','\116','\114','\117','\101','\44','\10','\9','\9','\9','\80','\108','\97','\121','\101','\114','\76','\105','\115','\116','\32','\61','\32','\116','\114','\117','\101','\44','\10','\9','\9','\125','\10','\9','\9','\108','\111','\99','\97','\108','\32','\115','\101','\116','\67','\111','\114','\101','\115','\32','\61','\32','\123','\10','\9','\9','\9','\66','\97','\100','\103','\101','\115','\78','\111','\116','\105','\102','\105','\99','\97','\116','\105','\111','\110','\115','\65','\99','\116','\105','\118','\101','\32','\61','\32','\116','\114','\117','\101','\44','\10','\9','\9','\9','\80','\111','\105','\110','\116','\115','\78','\111','\116','\105','\102','\105','\99','\97','\116','\105','\111','\110','\115','\65','\99','\116','\105','\118','\101','\32','\61','\32','\116','\114','\117','\101','\44','\10','\9','\9','\125','\10','\9','\10','\9','\9','\45','\45','\32','\83','\97','\118','\101','\32','\115','\116','\97','\116','\101','\32','\97','\110','\100','\32','\115','\101','\116','\32','\117','\112','\32','\102','\111','\114','\32','\102','\114','\101','\101','\99','\97','\109','\10','\9','\9','\102','\117','\110','\99','\116','\105','\111','\110','\32','\80','\108','\97','\121','\101','\114','\83','\116','\97','\116','\101','\46','\80','\117','\115','\104','\40','\41','\10','\9','\9','\9','\102','\111','\114','\32','\110','\97','\109','\101','\32','\105','\110','\32','\112','\97','\105','\114','\115','\40','\99','\111','\114','\101','\71','\117','\105','\115','\41','\32','\100','\111','\10','\9','\9','\9','\9','\99','\111','\114','\101','\71','\117','\105','\115','\91','\110','\97','\109','\101','\93','\32','\61','\32','\83','\116','\97','\114','\116','\101','\114','\71','\117','\105','\58','\71','\101','\116','\67','\111','\114','\101','\71','\117','\105','\69','\110','\97','\98','\108','\101','\100','\40','\69','\110','\117','\109','\46','\67','\111','\114','\101','\71','\117','\105','\84','\121','\112','\101','\91','\110','\97','\109','\101','\93','\41','\10','\9','\9','\9','\9','\83','\116','\97','\114','\116','\101','\114','\71','\117','\105','\58','\83','\101','\116','\67','\111','\114','\101','\71','\117','\105','\69','\110','\97','\98','\108','\101','\100','\40','\69','\110','\117','\109','\46','\67','\111','\114','\101','\71','\117','\105','\84','\121','\112','\101','\91','\110','\97','\109','\101','\93','\44','\32','\102','\97','\108','\115','\101','\41','\10','\9','\9','\9','\101','\110','\100','\10','\9','\9','\9','\102','\111','\114','\32','\110','\97','\109','\101','\32','\105','\110','\32','\112','\97','\105','\114','\115','\40','\115','\101','\116','\67','\111','\114','\101','\115','\41','\32','\100','\111','\10','\9','\9','\9','\9','\115','\101','\116','\67','\111','\114','\101','\115','\91','\110','\97','\109','\101','\93','\32','\61','\32','\83','\116','\97','\114','\116','\101','\114','\71','\117','\105','\58','\71','\101','\116','\67','\111','\114','\101','\40','\110','\97','\109','\101','\41','\10','\9','\9','\9','\9','\83','\116','\97','\114','\116','\101','\114','\71','\117','\105','\58','\83','\101','\116','\67','\111','\114','\101','\40','\110','\97','\109','\101','\44','\32','\102','\97','\108','\115','\101','\41','\10','\9','\9','\9','\101','\110','\100','\10','\9','\9','\9','\108','\111','\99','\97','\108','\32','\112','\108','\97','\121','\101','\114','\103','\117','\105','\32','\61','\32','\76','\111','\99','\97','\108','\80','\108','\97','\121','\101','\114','\58','\70','\105','\110','\100','\70','\105','\114','\115','\116','\67','\104','\105','\108','\100','\79','\102','\67','\108','\97','\115','\115','\40','\34','\80','\108','\97','\121','\101','\114','\71','\117','\105','\34','\41','\10','\9','\9','\9','\105','\102','\32','\112','\108','\97','\121','\101','\114','\103','\117','\105','\32','\116','\104','\101','\110','\10','\9','\9','\9','\9','\102','\111','\114','\32','\95','\44','\32','\103','\117','\105','\32','\105','\110','\32','\112','\97','\105','\114','\115','\40','\112','\108','\97','\121','\101','\114','\103','\117','\105','\58','\71','\101','\116','\67','\104','\105','\108','\100','\114','\101','\110','\40','\41','\41','\32','\100','\111','\10','\9','\9','\9','\9','\9','\105','\102','\32','\103','\117','\105','\58','\73','\115','\65','\40','\34','\83','\99','\114','\101','\101','\110','\71','\117','\105','\34','\41','\32','\97','\110','\100','\32','\103','\117','\105','\46','\69','\110','\97','\98','\108','\101','\100','\32','\116','\104','\101','\110','\10','\9','\9','\9','\9','\9','\9','\115','\99','\114','\101','\101','\110','\71','\117','\105','\115','\91','\35','\115','\99','\114','\101','\101','\110','\71','\117','\105','\115','\32','\43','\32','\49','\93','\32','\61','\32','\103','\117','\105','\10','\9','\9','\9','\9','\9','\9','\103','\117','\105','\46','\69','\110','\97','\98','\108','\101','\100','\32','\61','\32','\102','\97','\108','\115','\101','\10','\9','\9','\9','\9','\9','\101','\110','\100','\10','\9','\9','\9','\9','\101','\110','\100','\10','\9','\9','\9','\101','\110','\100','\10','\9','\10','\9','\9','\9','\99','\97','\109','\101','\114','\97','\70','\105','\101','\108','\100','\79','\102','\86','\105','\101','\119','\32','\61','\32','\67','\97','\109','\101','\114','\97','\46','\70','\105','\101','\108','\100','\79','\102','\86','\105','\101','\119','\10','\9','\9','\9','\67','\97','\109','\101','\114','\97','\46','\70','\105','\101','\108','\100','\79','\102','\86','\105','\101','\119','\32','\61','\32','\55','\48','\10','\9','\10','\9','\9','\9','\99','\97','\109','\101','\114','\97','\84','\121','\112','\101','\32','\61','\32','\67','\97','\109','\101','\114','\97','\46','\67','\97','\109','\101','\114','\97','\84','\121','\112','\101','\10','\9','\9','\9','\67','\97','\109','\101','\114','\97','\46','\67','\97','\109','\101','\114','\97','\84','\121','\112','\101','\32','\61','\32','\69','\110','\117','\109','\46','\67','\97','\109','\101','\114','\97','\84','\121','\112','\101','\46','\67','\117','\115','\116','\111','\109','\10','\9','\10','\9','\9','\9','\99','\97','\109','\101','\114','\97','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\97','\109','\101','\114','\97','\46','\67','\70','\114','\97','\109','\101','\10','\9','\9','\9','\99','\97','\109','\101','\114','\97','\70','\111','\99','\117','\115','\32','\61','\32','\67','\97','\109','\101','\114','\97','\46','\70','\111','\99','\117','\115','\10','\9','\10','\9','\9','\9','\109','\111','\117','\115','\101','\73','\99','\111','\110','\69','\110','\97','\98','\108','\101','\100','\32','\61','\32','\85','\115','\101','\114','\73','\110','\112','\117','\116','\83','\101','\114','\118','\105','\99','\101','\46','\77','\111','\117','\115','\101','\73','\99','\111','\110','\69','\110','\97','\98','\108','\101','\100','\10','\9','\9','\9','\85','\115','\101','\114','\73','\110','\112','\117','\116','\83','\101','\114','\118','\105','\99','\101','\46','\77','\111','\117','\115','\101','\73','\99','\111','\110','\69','\110','\97','\98','\108','\101','\100','\32','\61','\32','\102','\97','\108','\115','\101','\10','\9','\10','\9','\9','\9','\109','\111','\117','\115','\101','\66','\101','\104','\97','\118','\105','\111','\114','\32','\61','\32','\85','\115','\101','\114','\73','\110','\112','\117','\116','\83','\101','\114','\118','\105','\99','\101','\46','\77','\111','\117','\115','\101','\66','\101','\104','\97','\118','\105','\111','\114','\10','\9','\9','\9','\85','\115','\101','\114','\73','\110','\112','\117','\116','\83','\101','\114','\118','\105','\99','\101','\46','\77','\111','\117','\115','\101','\66','\101','\104','\97','\118','\105','\111','\114','\32','\61','\32','\69','\110','\117','\109','\46','\77','\111','\117','\115','\101','\66','\101','\104','\97','\118','\105','\111','\114','\46','\68','\101','\102','\97','\117','\108','\116','\10','\9','\9','\101','\110','\100','\10','\9','\10','\9','\9','\45','\45','\32','\82','\101','\115','\116','\111','\114','\101','\32','\115','\116','\97','\116','\101','\10','\9','\9','\102','\117','\110','\99','\116','\105','\111','\110','\32','\80','\108','\97','\121','\101','\114','\83','\116','\97','\116','\101','\46','\80','\111','\112','\40','\41','\10','\9','\9','\9','\102','\111','\114','\32','\110','\97','\109','\101','\44','\32','\105','\115','\69','\110','\97','\98','\108','\101','\100','\32','\105','\110','\32','\112','\97','\105','\114','\115','\40','\99','\111','\114','\101','\71','\117','\105','\115','\41','\32','\100','\111','\10','\9','\9','\9','\9','\83','\116','\97','\114','\116','\101','\114','\71','\117','\105','\58','\83','\101','\116','\67','\111','\114','\101','\71','\117','\105','\69','\110','\97','\98','\108','\101','\100','\40','\69','\110','\117','\109','\46','\67','\111','\114','\101','\71','\117','\105','\84','\121','\112','\101','\91','\110','\97','\109','\101','\93','\44','\32','\105','\115','\69','\110','\97','\98','\108','\101','\100','\41','\10','\9','\9','\9','\101','\110','\100','\10','\9','\9','\9','\102','\111','\114','\32','\110','\97','\109','\101','\44','\32','\105','\115','\69','\110','\97','\98','\108','\101','\100','\32','\105','\110','\32','\112','\97','\105','\114','\115','\40','\115','\101','\116','\67','\111','\114','\101','\115','\41','\32','\100','\111','\10','\9','\9','\9','\9','\83','\116','\97','\114','\116','\101','\114','\71','\117','\105','\58','\83','\101','\116','\67','\111','\114','\101','\40','\110','\97','\109','\101','\44','\32','\105','\115','\69','\110','\97','\98','\108','\101','\100','\41','\10','\9','\9','\9','\101','\110','\100','\10','\9','\9','\9','\102','\111','\114','\32','\95','\44','\32','\103','\117','\105','\32','\105','\110','\32','\112','\97','\105','\114','\115','\40','\115','\99','\114','\101','\101','\110','\71','\117','\105','\115','\41','\32','\100','\111','\10','\9','\9','\9','\9','\105','\102','\32','\103','\117','\105','\46','\80','\97','\114','\101','\110','\116','\32','\116','\104','\101','\110','\10','\9','\9','\9','\9','\9','\103','\117','\105','\46','\69','\110','\97','\98','\108','\101','\100','\32','\61','\32','\116','\114','\117','\101','\10','\9','\9','\9','\9','\101','\110','\100','\10','\9','\9','\9','\101','\110','\100','\10','\9','\10','\9','\9','\9','\67','\97','\109','\101','\114','\97','\46','\70','\105','\101','\108','\100','\79','\102','\86','\105','\101','\119','\32','\61','\32','\99','\97','\109','\101','\114','\97','\70','\105','\101','\108','\100','\79','\102','\86','\105','\101','\119','\10','\9','\9','\9','\99','\97','\109','\101','\114','\97','\70','\105','\101','\108','\100','\79','\102','\86','\105','\101','\119','\32','\61','\32','\110','\105','\108','\10','\9','\10','\9','\9','\9','\67','\97','\109','\101','\114','\97','\46','\67','\97','\109','\101','\114','\97','\84','\121','\112','\101','\32','\61','\32','\99','\97','\109','\101','\114','\97','\84','\121','\112','\101','\10','\9','\9','\9','\99','\97','\109','\101','\114','\97','\84','\121','\112','\101','\32','\61','\32','\110','\105','\108','\10','\9','\10','\9','\9','\9','\67','\97','\109','\101','\114','\97','\46','\67','\70','\114','\97','\109','\101','\32','\61','\32','\99','\97','\109','\101','\114','\97','\67','\70','\114','\97','\109','\101','\10','\9','\9','\9','\99','\97','\109','\101','\114','\97','\67','\70','\114','\97','\109','\101','\32','\61','\32','\110','\105','\108','\10','\9','\10','\9','\9','\9','\67','\97','\109','\101','\114','\97','\46','\70','\111','\99','\117','\115','\32','\61','\32','\99','\97','\109','\101','\114','\97','\70','\111','\99','\117','\115','\10','\9','\9','\9','\99','\97','\109','\101','\114','\97','\70','\111','\99','\117','\115','\32','\61','\32','\110','\105','\108','\10','\9','\10','\9','\9','\9','\85','\115','\101','\114','\73','\110','\112','\117','\116','\83','\101','\114','\118','\105','\99','\101','\46','\77','\111','\117','\115','\101','\73','\99','\111','\110','\69','\110','\97','\98','\108','\101','\100','\32','\61','\32','\109','\111','\117','\115','\101','\73','\99','\111','\110','\69','\110','\97','\98','\108','\101','\100','\10','\9','\9','\9','\109','\111','\117','\115','\101','\73','\99','\111','\110','\69','\110','\97','\98','\108','\101','\100','\32','\61','\32','\110','\105','\108','\10','\9','\10','\9','\9','\9','\85','\115','\101','\114','\73','\110','\112','\117','\116','\83','\101','\114','\118','\105','\99','\101','\46','\77','\111','\117','\115','\101','\66','\101','\104','\97','\118','\105','\111','\114','\32','\61','\32','\109','\111','\117','\115','\101','\66','\101','\104','\97','\118','\105','\111','\114','\10','\9','\9','\9','\109','\111','\117','\115','\101','\66','\101','\104','\97','\118','\105','\111','\114','\32','\61','\32','\110','\105','\108','\10','\9','\9','\101','\110','\100','\10','\9','\101','\110','\100','\10','\9','\10','\9','\108','\111','\99','\97','\108','\32','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\116','\97','\114','\116','\70','\114','\101','\101','\99','\97','\109','\40','\41','\10','\9','\9','\108','\111','\99','\97','\108','\32','\99','\97','\109','\101','\114','\97','\67','\70','\114','\97','\109','\101','\32','\61','\32','\67','\97','\109','\101','\114','\97','\46','\67','\70','\114','\97','\109','\101','\10','\9','\9','\99','\97','\109','\101','\114','\97','\82','\111','\116','\32','\61','\32','\86','\101','\99','\116','\111','\114','\50','\46','\110','\101','\119','\40','\99','\97','\109','\101','\114','\97','\67','\70','\114','\97','\109','\101','\58','\116','\111','\69','\117','\108','\101','\114','\65','\110','\103','\108','\101','\115','\89','\88','\90','\40','\41','\41','\10','\9','\9','\99','\97','\109','\101','\114','\97','\80','\111','\115','\32','\61','\32','\99','\97','\109','\101','\114','\97','\67','\70','\114','\97','\109','\101','\46','\112','\10','\9','\9','\99','\97','\109','\101','\114','\97','\70','\111','\118','\32','\61','\32','\67','\97','\109','\101','\114','\97','\46','\70','\105','\101','\108','\100','\79','\102','\86','\105','\101','\119','\10','\9','\10','\9','\9','\118','\101','\108','\83','\112','\114','\105','\110','\103','\58','\82','\101','\115','\101','\116','\40','\86','\101','\99','\116','\111','\114','\51','\46','\110','\101','\119','\40','\41','\41','\10','\9','\9','\112','\97','\110','\83','\112','\114','\105','\110','\103','\58','\82','\101','\115','\101','\116','\40','\86','\101','\99','\116','\111','\114','\50','\46','\110','\101','\119','\40','\41','\41','\10','\9','\9','\102','\111','\118','\83','\112','\114','\105','\110','\103','\58','\82','\101','\115','\101','\116','\40','\48','\41','\10','\9','\10','\9','\9','\80','\108','\97','\121','\101','\114','\83','\116','\97','\116','\101','\46','\80','\117','\115','\104','\40','\41','\10','\9','\9','\82','\117','\110','\83','\101','\114','\118','\105','\99','\101','\58','\66','\105','\110','\100','\84','\111','\82','\101','\110','\100','\101','\114','\83','\116','\101','\112','\40','\34','\70','\114','\101','\101','\99','\97','\109','\34','\44','\32','\69','\110','\117','\109','\46','\82','\101','\110','\100','\101','\114','\80','\114','\105','\111','\114','\105','\116','\121','\46','\67','\97','\109','\101','\114','\97','\46','\86','\97','\108','\117','\101','\44','\32','\83','\116','\101','\112','\70','\114','\101','\101','\99','\97','\109','\41','\10','\9','\9','\73','\110','\112','\117','\116','\46','\83','\116','\97','\114','\116','\67','\97','\112','\116','\117','\114','\101','\40','\41','\10','\9','\101','\110','\100','\10','\9','\10','\9','\108','\111','\99','\97','\108','\32','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\116','\111','\112','\70','\114','\101','\101','\99','\97','\109','\40','\41','\10','\9','\9','\73','\110','\112','\117','\116','\46','\83','\116','\111','\112','\67','\97','\112','\116','\117','\114','\101','\40','\41','\10','\9','\9','\82','\117','\110','\83','\101','\114','\118','\105','\99','\101','\58','\85','\110','\98','\105','\110','\100','\70','\114','\111','\109','\82','\101','\110','\100','\101','\114','\83','\116','\101','\112','\40','\34','\70','\114','\101','\101','\99','\97','\109','\34','\41','\10','\9','\9','\80','\108','\97','\121','\101','\114','\83','\116','\97','\116','\101','\46','\80','\111','\112','\40','\41','\10','\9','\101','\110','\100','\10','\9','\10','\9','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\45','\10','\9','\10','\9','\100','\111','\10','\9','\9','\108','\111','\99','\97','\108','\32','\101','\110','\97','\98','\108','\101','\100','\32','\61','\32','\102','\97','\108','\115','\101','\10','\9','\10','\9','\9','\108','\111','\99','\97','\108','\32','\102','\117','\110','\99','\116','\105','\111','\110','\32','\84','\111','\103','\103','\108','\101','\70','\114','\101','\101','\99','\97','\109','\40','\41','\10','\9','\9','\9','\105','\102','\32','\101','\110','\97','\98','\108','\101','\100','\32','\116','\104','\101','\110','\10','\9','\9','\9','\9','\83','\116','\111','\112','\70','\114','\101','\101','\99','\97','\109','\40','\41','\10','\9','\9','\9','\101','\108','\115','\101','\10','\9','\9','\9','\9','\83','\116','\97','\114','\116','\70','\114','\101','\101','\99','\97','\109','\40','\41','\10','\9','\9','\9','\101','\110','\100','\10','\9','\9','\9','\101','\110','\97','\98','\108','\101','\100','\32','\61','\32','\110','\111','\116','\32','\101','\110','\97','\98','\108','\101','\100','\10','\9','\9','\101','\110','\100','\10','\9','\10','\9','\9','\108','\111','\99','\97','\108','\32','\102','\117','\110','\99','\116','\105','\111','\110','\32','\67','\104','\101','\99','\107','\77','\97','\99','\114','\111','\40','\109','\97','\99','\114','\111','\41','\10','\9','\9','\9','\102','\111','\114','\32','\105','\32','\61','\32','\49','\44','\32','\35','\109','\97','\99','\114','\111','\32','\45','\32','\49','\32','\100','\111','\10','\9','\9','\9','\9','\105','\102','\32','\110','\111','\116','\32','\85','\115','\101','\114','\73','\110','\112','\117','\116','\83','\101','\114','\118','\105','\99','\101','\58','\73','\115','\75','\101','\121','\68','\111','\119','\110','\40','\109','\97','\99','\114','\111','\91','\105','\93','\41','\32','\116','\104','\101','\110','\10','\9','\9','\9','\9','\9','\114','\101','\116','\117','\114','\110','\10','\9','\9','\9','\9','\101','\110','\100','\10','\9','\9','\9','\101','\110','\100','\10','\9','\9','\9','\84','\111','\103','\103','\108','\101','\70','\114','\101','\101','\99','\97','\109','\40','\41','\10','\9','\9','\101','\110','\100','\10','\9','\10','\9','\9','\108','\111','\99','\97','\108','\32','\102','\117','\110','\99','\116','\105','\111','\110','\32','\72','\97','\110','\100','\108','\101','\65','\99','\116','\105','\118','\97','\116','\105','\111','\110','\73','\110','\112','\117','\116','\40','\97','\99','\116','\105','\111','\110','\44','\32','\115','\116','\97','\116','\101','\44','\32','\105','\110','\112','\117','\116','\41','\10','\9','\9','\9','\105','\102','\32','\115','\116','\97','\116','\101','\32','\61','\61','\32','\69','\110','\117','\109','\46','\85','\115','\101','\114','\73','\110','\112','\117','\116','\83','\116','\97','\116','\101','\46','\66','\101','\103','\105','\110','\32','\116','\104','\101','\110','\10','\9','\9','\9','\9','\105','\102','\32','\105','\110','\112','\117','\116','\46','\75','\101','\121','\67','\111','\100','\101','\32','\61','\61','\32','\70','\82','\69','\69','\67','\65','\77','\95','\77','\65','\67','\82','\79','\95','\75','\66','\91','\35','\70','\82','\69','\69','\67','\65','\77','\95','\77','\65','\67','\82','\79','\95','\75','\66','\93','\32','\116','\104','\101','\110','\10','\9','\9','\9','\9','\9','\67','\104','\101','\99','\107','\77','\97','\99','\114','\111','\40','\70','\82','\69','\69','\67','\65','\77','\95','\77','\65','\67','\82','\79','\95','\75','\66','\41','\10','\9','\9','\9','\9','\101','\110','\100','\10','\9','\9','\9','\101','\110','\100','\10','\9','\9','\9','\114','\101','\116','\117','\114','\110','\32','\69','\110','\117','\109','\46','\67','\111','\110','\116','\101','\120','\116','\65','\99','\116','\105','\111','\110','\82','\101','\115','\117','\108','\116','\46','\80','\97','\115','\115','\10','\9','\9','\101','\110','\100','\10','\9','\10','\9','\9','\67','\111','\110','\116','\101','\120','\116','\65','\99','\116','\105','\111','\110','\83','\101','\114','\118','\105','\99','\101','\58','\66','\105','\110','\100','\65','\99','\116','\105','\111','\110','\65','\116','\80','\114','\105','\111','\114','\105','\116','\121','\40','\34','\70','\114','\101','\101','\99','\97','\109','\84','\111','\103','\103','\108','\101','\34','\44','\32','\72','\97','\110','\100','\108','\101','\65','\99','\116','\105','\118','\97','\116','\105','\111','\110','\73','\110','\112','\117','\116','\44','\32','\102','\97','\108','\115','\101','\44','\32','\84','\79','\71','\71','\76','\69','\95','\73','\78','\80','\85','\84','\95','\80','\82','\73','\79','\82','\73','\84','\89','\44','\32','\70','\82','\69','\69','\67','\65','\77','\95','\77','\65','\67','\82','\79','\95','\75','\66','\91','\35','\70','\82','\69','\69','\67','\65','\77','\95','\77','\65','\67','\82','\79','\95','\75','\66','\93','\41','\10','\9','\101','\110','\100','\10','\10','\101','\110','\100','\10','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\78','\89','\80','\68','\54','\56','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\10','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\79','\70','\81','\81','\56','\50','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\32','\45','\45','\32','\70','\114','\101','\101','\99','\97','\109','\46','\78','\111','\116','\105','\102','\105','\99','\97','\116','\105','\111','\110','\32','\10','\9','\108','\111','\99','\97','\108','\32','\115','\99','\114','\105','\112','\116','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\76','\111','\99','\97','\108','\83','\99','\114','\105','\112','\116','\39','\41','\10','\9','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\32','\61','\32','\70','\114','\101','\101','\99','\97','\109','\10','\9','\108','\111','\99','\97','\108','\32','\78','\111','\116','\105','\102','\105','\99','\97','\116','\105','\111','\110','\66','\105','\110','\100','\97','\98','\108','\101','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\34','\66','\105','\110','\100','\97','\98','\108','\101','\70','\117','\110','\99','\116','\105','\111','\110','\34','\41','\10','\9','\10','\9','\103','\97','\109','\101','\46','\83','\116','\97','\114','\116','\101','\114','\71','\117','\105','\58','\83','\101','\116','\67','\111','\114','\101','\40','\34','\83','\101','\110','\100','\78','\111','\116','\105','\102','\105','\99','\97','\116','\105','\111','\110','\34','\44','\32','\123','\10','\9','\32','\32','\32','\32','\84','\105','\116','\108','\101','\32','\61','\32','\34','\70','\114','\101','\101','\32','\67','\97','\109','\101','\114','\97','\34','\59','\10','\9','\32','\32','\32','\32','\84','\101','\120','\116','\32','\61','\32','\34','\77','\97','\100','\101','\32','\98','\121','\32','\76','\111','\110','\100','\105','\117','\104','\34','\59','\10','\9','\32','\32','\32','\32','\45','\45','\73','\99','\111','\110','\32','\61','\32','\34','\114','\98','\120','\97','\115','\115','\101','\116','\105','\100','\58','\47','\47','\48','\34','\59','\10','\9','\32','\32','\32','\32','\68','\117','\114','\97','\116','\105','\111','\110','\32','\61','\32','\48','\46','\50','\59','\10','\9','\32','\32','\32','\32','\45','\45','\66','\117','\116','\116','\111','\110','\49','\32','\61','\32','\34','\79','\107','\97','\121','\34','\59','\10','\9','\32','\32','\32','\32','\67','\97','\108','\108','\98','\97','\99','\107','\32','\61','\32','\78','\111','\116','\105','\102','\105','\99','\97','\116','\105','\111','\110','\66','\105','\110','\100','\97','\98','\108','\101','\59','\10','\9','\125','\41','\10','\9','\10','\9','\119','\97','\105','\116','\40','\50','\41','\10','\9','\10','\9','\103','\97','\109','\101','\46','\83','\116','\97','\114','\116','\101','\114','\71','\117','\105','\58','\83','\101','\116','\67','\111','\114','\101','\40','\34','\83','\101','\110','\100','\78','\111','\116','\105','\102','\105','\99','\97','\116','\105','\111','\110','\34','\44','\32','\123','\10','\9','\32','\32','\32','\32','\84','\105','\116','\108','\101','\32','\61','\32','\34','\70','\114','\101','\101','\32','\67','\97','\109','\101','\114','\97','\34','\59','\10','\9','\32','\32','\32','\32','\84','\101','\120','\116','\32','\61','\32','\34','\83','\104','\105','\102','\116','\32','\43','\32','\80','\32','\116','\111','\32','\103','\111','\32','\105','\110','\32','\102','\114','\101','\101','\32','\99','\97','\109','\101','\114','\97','\32','\109','\111','\100','\101','\34','\59','\10','\9','\32','\32','\32','\32','\73','\99','\111','\110','\32','\61','\32','\34','\114','\98','\120','\97','\115','\115','\101','\116','\105','\100','\58','\47','\47','\53','\49','\53','\48','\53','\54','\57','\54','\34','\59','\10','\9','\32','\32','\32','\32','\68','\117','\114','\97','\116','\105','\111','\110','\32','\61','\32','\109','\97','\116','\104','\46','\104','\117','\103','\101','\59','\10','\9','\32','\32','\32','\32','\66','\117','\116','\116','\111','\110','\49','\32','\61','\32','\34','\79','\107','\97','\121','\34','\59','\10','\9','\32','\32','\32','\32','\67','\97','\108','\108','\98','\97','\99','\107','\32','\61','\32','\78','\111','\116','\105','\102','\105','\99','\97','\116','\105','\111','\110','\66','\105','\110','\100','\97','\98','\108','\101','\59','\10','\9','\125','\41','\10','\10','\101','\110','\100','\10','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\79','\70','\81','\81','\56','\50','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\10','\102','\117','\110','\99','\116','\105','\111','\110','\32','\83','\67','\82','\73','\80','\84','\95','\67','\70','\87','\72','\55','\54','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\40','\41','\32','\45','\45','\32','\70','\114','\101','\101','\99','\97','\109','\46','\82','\97','\110','\100','\111','\109','\78','\97','\109','\101','\115','\32','\10','\9','\108','\111','\99','\97','\108','\32','\115','\99','\114','\105','\112','\116','\32','\61','\32','\73','\110','\115','\116','\97','\110','\99','\101','\46','\110','\101','\119','\40','\39','\76','\111','\99','\97','\108','\83','\99','\114','\105','\112','\116','\39','\41','\10','\9','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\32','\61','\32','\70','\114','\101','\101','\99','\97','\109','\10','\9','\102','\117','\110','\99','\116','\105','\111','\110','\32','\82','\97','\110','\100','\111','\109','\86','\97','\114','\105','\97','\98','\108','\101','\40','\108','\101','\110','\103','\116','\104','\41','\10','\9','\9','\108','\111','\99','\97','\108','\32','\114','\101','\115','\32','\61','\32','\34','\34','\10','\9','\9','\102','\111','\114','\32','\105','\32','\61','\32','\49','\44','\32','\108','\101','\110','\103','\116','\104','\32','\100','\111','\10','\9','\9','\9','\114','\101','\115','\32','\61','\32','\114','\101','\115','\32','\46','\46','\32','\115','\116','\114','\105','\110','\103','\46','\99','\104','\97','\114','\40','\109','\97','\116','\104','\46','\114','\97','\110','\100','\111','\109','\40','\57','\55','\44','\32','\49','\50','\50','\41','\41','\10','\9','\9','\101','\110','\100','\10','\9','\9','\114','\101','\116','\117','\114','\110','\32','\114','\101','\115','\10','\9','\101','\110','\100','\10','\9','\10','\9','\119','\104','\105','\108','\101','\32','\116','\114','\117','\101','\32','\100','\111','\10','\9','\9','\115','\99','\114','\105','\112','\116','\46','\80','\97','\114','\101','\110','\116','\46','\78','\97','\109','\101','\32','\61','\32','\82','\97','\110','\100','\111','\109','\86','\97','\114','\105','\97','\98','\108','\101','\40','\49','\48','\41','\10','\9','\9','\119','\97','\105','\116','\40','\54','\48','\41','\10','\9','\101','\110','\100','\10','\10','\101','\110','\100','\10','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\114','\101','\115','\117','\109','\101','\40','\99','\111','\114','\111','\117','\116','\105','\110','\101','\46','\99','\114','\101','\97','\116','\101','\40','\83','\67','\82','\73','\80','\84','\95','\67','\70','\87','\72','\55','\54','\95','\70','\65','\75','\69','\83','\67','\82','\73','\80','\84','\41','\41','\10','\10','\32','\32','\10',}IllIIllIIllIII(IllIIIllIIIIllI(IlIlIlIlIlIlIlIlII,IIIIIIIIllllllllIIIIIIII))()
end)

FullBright.MouseButton1Click:Connect(function()
	if not _G.FullBrightExecuted then

		_G.FullBrightEnabled = false

		_G.NormalLightingSettings = {
			Brightness = game:GetService("Lighting").Brightness,
			ClockTime = game:GetService("Lighting").ClockTime,
			FogEnd = game:GetService("Lighting").FogEnd,
			GlobalShadows = game:GetService("Lighting").GlobalShadows,
			Ambient = game:GetService("Lighting").Ambient
		}

		game:GetService("Lighting"):GetPropertyChangedSignal("Brightness"):Connect(function()
			if game:GetService("Lighting").Brightness ~= 1 and game:GetService("Lighting").Brightness ~= _G.NormalLightingSettings.Brightness then
				_G.NormalLightingSettings.Brightness = game:GetService("Lighting").Brightness
				if not _G.FullBrightEnabled then
					repeat
						wait()
					until _G.FullBrightEnabled
				end
				game:GetService("Lighting").Brightness = 1
			end
		end)

		game:GetService("Lighting"):GetPropertyChangedSignal("ClockTime"):Connect(function()
			if game:GetService("Lighting").ClockTime ~= 12 and game:GetService("Lighting").ClockTime ~= _G.NormalLightingSettings.ClockTime then
				_G.NormalLightingSettings.ClockTime = game:GetService("Lighting").ClockTime
				if not _G.FullBrightEnabled then
					repeat
						wait()
					until _G.FullBrightEnabled
				end
				game:GetService("Lighting").ClockTime = 12
			end
		end)

		game:GetService("Lighting"):GetPropertyChangedSignal("FogEnd"):Connect(function()
			if game:GetService("Lighting").FogEnd ~= 786543 and game:GetService("Lighting").FogEnd ~= _G.NormalLightingSettings.FogEnd then
				_G.NormalLightingSettings.FogEnd = game:GetService("Lighting").FogEnd
				if not _G.FullBrightEnabled then
					repeat
						wait()
					until _G.FullBrightEnabled
				end
				game:GetService("Lighting").FogEnd = 786543
			end
		end)

		game:GetService("Lighting"):GetPropertyChangedSignal("GlobalShadows"):Connect(function()
			if game:GetService("Lighting").GlobalShadows ~= false and game:GetService("Lighting").GlobalShadows ~= _G.NormalLightingSettings.GlobalShadows then
				_G.NormalLightingSettings.GlobalShadows = game:GetService("Lighting").GlobalShadows
				if not _G.FullBrightEnabled then
					repeat
						wait()
					until _G.FullBrightEnabled
				end
				game:GetService("Lighting").GlobalShadows = false
			end
		end)

		game:GetService("Lighting"):GetPropertyChangedSignal("Ambient"):Connect(function()
			if game:GetService("Lighting").Ambient ~= Color3.fromRGB(178, 178, 178) and game:GetService("Lighting").Ambient ~= _G.NormalLightingSettings.Ambient then
				_G.NormalLightingSettings.Ambient = game:GetService("Lighting").Ambient
				if not _G.FullBrightEnabled then
					repeat
						wait()
					until _G.FullBrightEnabled
				end
				game:GetService("Lighting").Ambient = Color3.fromRGB(178, 178, 178)
			end
		end)

		game:GetService("Lighting").Brightness = 1
		game:GetService("Lighting").ClockTime = 12
		game:GetService("Lighting").FogEnd = 786543
		game:GetService("Lighting").GlobalShadows = false
		game:GetService("Lighting").Ambient = Color3.fromRGB(178, 178, 178)

		local LatestValue = true
		spawn(function()
			repeat
				wait()
			until _G.FullBrightEnabled
			while wait() do
				if _G.FullBrightEnabled ~= LatestValue then
					if not _G.FullBrightEnabled then
						game:GetService("Lighting").Brightness = _G.NormalLightingSettings.Brightness
						game:GetService("Lighting").ClockTime = _G.NormalLightingSettings.ClockTime
						game:GetService("Lighting").FogEnd = _G.NormalLightingSettings.FogEnd
						game:GetService("Lighting").GlobalShadows = _G.NormalLightingSettings.GlobalShadows
						game:GetService("Lighting").Ambient = _G.NormalLightingSettings.Ambient
					else
						game:GetService("Lighting").Brightness = 1
						game:GetService("Lighting").ClockTime = 12
						game:GetService("Lighting").FogEnd = 786543
						game:GetService("Lighting").GlobalShadows = false
						game:GetService("Lighting").Ambient = Color3.fromRGB(178, 178, 178)
					end
					LatestValue = not LatestValue
				end
			end
		end)
	end

	_G.FullBrightExecuted = true
	_G.FullBrightEnabled = not _G.FullBrightEnabled
end)

Gamesense.MouseButton1Click:Connect(function()
	warn([[
GameSense Free | December 8, 2018

Discord: Avexus#1866
GameSense 2.0 has been released! Check it out on the V3rmillion exploiting section.
]])

	-- If you have any intentions of reading this code, I advise you don't... If you do, bring eye bleach, because I assure you it's the worst programming you'll ever see. Even Ubisoft can optimize better than this. I have improved *immensely* since I made this.

	local UIS = game:GetService('UserInputService')
	local RS = game:GetService('RunService')
	local Players = game:GetService('Players')
	local StarterGui = game:GetService('StarterGui')
	local Player = Players.LocalPlayer
	local Studio = RS:IsStudio()
	local PlayerGui = RS:IsStudio() and Player:WaitForChild('PlayerGui') or game.CoreGui
	local Mouse = Player:GetMouse()
	local old_icon = Mouse.Icon
	local Camera = workspace.CurrentCamera
	targetpart = 'Head' -- Don't change this.
	-- It can be changed with the targetpart_change hotkey ingame.
	local target
	local target_old
	local alert = false
	local lockedon = false
	local settingkey = false
	local upvals = nil
	local val = 1
	local windows = {}
	local function hb() RS.Heartbeat:wait() end

	local version = 1.25
	local Spawn = nil or game.PlaceId == 292439477 and workspace:WaitForChild('Lobby',2):WaitForChild('Spawn1',2)
	local spawned = false

	script.Name = 'GameSense!'
	Mouse.TargetFilter = Camera

	-- hotkey
	toggle_aim = Enum.UserInputType.MouseButton2
	toggle_aimbot = Enum.KeyCode.LeftAlt
	toggle_trigger = Enum.KeyCode.RightAlt
	toggle_esp = Enum.KeyCode.End
	toggle_gui = Enum.KeyCode.F6
	toggle_bottompos = Enum.KeyCode.F7
	toggle_performance = Enum.KeyCode.F8
	toggle_bones = Enum.KeyCode.Delete
	toggle_chams = Enum.KeyCode.F3
	toggle_tracers = Enum.KeyCode.F2
	toggle_boxes = Enum.KeyCode.F4
	toggle_font = Enum.KeyCode.F1
	ffatoggle = Enum.KeyCode.Home
	targetpart_change = Enum.KeyCode.BackSlash
	priority_toggle = Enum.KeyCode.Insert
	sethotkey = Enum.KeyCode.RightControl
	-- aim fov
	fov_increase = Enum.KeyCode.KeypadPlus
	fov_decrease = Enum.KeyCode.KeypadMinus
	-- aim sens (how smooth your crosshair will move)
	sens_increase = Enum.KeyCode.RightBracket
	sens_decrease = Enum.KeyCode.LeftBracket

	-- parts
	parts = {
		'Head';
		'Torso'
	}

	fonts = {
		Enum.Font.SourceSansBold,
		Enum.Font.Cartoon,
		Enum.Font.Arcade,
		Enum.Font.SciFi,
		Enum.Font.Fantasy,
		Enum.Font.Code,
		Enum.Font.Highway,
		Enum.Font.Bodoni
	}

	textSet = false

	currentfont = 1
	ffa = false
	hidden = false
	performancemode = false
	-- aim
	fov = 5
	sens = .25
	drop = .45
	aim_toggled = false
	bottompos = true
	aim_priority = 2
	-- [2] FOV or [1] Distance
	aimingcolor = Color3.fromRGB(0,165,255)
	aimbot_toggled = true
	aim_line = true
	locksoundid = 538769304
	mouseiconid =  18671553

	-- trigger
	trigger_toggled = false
	trigger_delay = 1/20

	-- esp
	esp_toggled = true
	esp_bones = false
	esp_chams = true
	esp_tracers = true
	-- item_esp (coming soon)
	linesize = 1
	showdists = true
	textsize = 14
	textoffset = 20
	visiblecolor = Color3.fromRGB(38,255,99)
	hiddencolor = Color3.fromRGB(255,37,40)
	headboxsize = 4
	headboxaimsize = 6
	headboxshape = 'diamond'
	-- rectangle or diamond

	-- box esp
	bounding_box = true
	-- box_pointsize = 0 [UNUSED]
	box_line_size = 1
	-- box_line_size_visible = 2 [UNUSED]

	local GUI = Instance.new('ScreenGui',PlayerGui)
	GUI.Name = 'GameSense '..version
	GUI.ResetOnSpawn = false

	ESP = Instance.new('Folder',GUI)
	ESP.Name = 'ESP'
	local Bottom = Instance.new('Frame',ESP)
	Bottom.Name = 'Bottom'
	Bottom.BackgroundTransparency = 1
	Bottom.Size = UDim2.new(0,1,0,1)
	Bottom.Position = UDim2.new(.5,0,1,1)

	local Status = Instance.new('TextLabel',GUI)
	Status.Name = 'Status'
	Status.BackgroundTransparency = 1
	Status.Size = UDim2.new(0,500,0,50)
	Status.Position = UDim2.new(.5,-250,.85,0)
	Status.TextSize = 24
	Status.Font = Enum.Font.SourceSansBold
	Status.TextColor3 = Color3.new(1,1,1)
	Status.TextStrokeColor3 = Color3.new(0,0,0)
	Status.TextStrokeTransparency = .6
	Status.Text = 'On Standby'
	Status.ZIndex = 50

	local Credits = Status:Clone()
	Credits.Name = 'Credits'
	Credits.Parent = GUI
	Credits.Position = UDim2.new(.5,-250,.85,-20)
	Credits.TextSize = 16
	Credits.Text = 'GameSense '..version..' by Avexus!'

	local FovGui = Instance.new('ImageLabel',GUI)
	FovGui.Name = 'FovGui'
	FovGui.Image = 'rbxassetid://324848180'
	FovGui.Size = UDim2.new(0,(Camera.ViewportSize.X/(90/fov))*2,0,(Camera.ViewportSize.X/(90/fov))*2)
	FovGui.Position = UDim2.new(0.5,-FovGui.AbsoluteSize.X/2,0.5,-FovGui.AbsoluteSize.Y/2)
	FovGui.BackgroundTransparency = 1
	FovGui.ImageTransparency = .9
	FovGui.ImageColor3 = Color3.new(1,0,0)

	local Indicator = Instance.new('TextLabel',GUI)
	Indicator.Name = 'Indicator'
	Indicator.Font = Enum.Font.SourceSans
	Indicator.TextSize = 14
	Indicator.TextXAlignment = Enum.TextXAlignment.Center
	Indicator.TextYAlignment = Enum.TextYAlignment.Center
	Indicator.TextStrokeTransparency = .75
	Indicator.Text = aim_priority>1 and 'FOV: '..fov or 'Distance'

	local SensAdjust = Instance.new('TextBox',GUI)
	SensAdjust.Name = 'SensAdjust'
	SensAdjust.Font = Enum.Font.SourceSans
	SensAdjust.BackgroundTransparency = .75
	SensAdjust.BackgroundColor3 = Color3.new(0,0,0)
	SensAdjust.BorderColor3 = Color3.new(1,1,1)
	SensAdjust.Size = UDim2.new(0,50,0,20)
	SensAdjust.TextStrokeTransparency = .6
	SensAdjust.TextColor3 = Color3.new(1,1,1)
	SensAdjust.TextSize = 14
	SensAdjust.PlaceholderText = 'Sens'
	SensAdjust.Text = tonumber(sens)
	SensAdjust.Position = Credits.Position + UDim2.new(0,250,0,75)

	local SensLabel = Instance.new('TextLabel',SensAdjust)
	SensLabel.Name = 'SensLabel'
	SensLabel.Font = Enum.Font.SourceSans
	SensLabel.Size = UDim2.new(1,0,1,0)
	SensLabel.BackgroundTransparency = 1
	SensLabel.TextSize = 14
	SensLabel.TextColor3 = Color3.new(1,1,1)
	SensLabel.TextStrokeColor3 = Color3.new(0,0,0)
	SensLabel.TextStrokeTransparency = .6
	SensLabel.Text = 'Sens:'
	SensLabel.Position = UDim2.new(-1,0,0,0)
	SensLabel.TextXAlignment = Enum.TextXAlignment.Left

	local FovAdjust = SensAdjust:Clone()
	FovAdjust.Parent = GUI
	FovAdjust.PlaceholderText = 'FOV'
	FovAdjust.Name = 'FovAdjust'
	FovAdjust.Text = tonumber(fov)
	FovAdjust.Position = SensAdjust.Position + UDim2.new(0,0,0,20)
	FovAdjust.SensLabel.Name = 'FovLabel'
	FovAdjust.FovLabel.Text = 'Fov:'

	local DropAdjust = SensAdjust:Clone()
	DropAdjust.Parent = GUI
	DropAdjust.PlaceholderText = 'Drop'
	DropAdjust.Name = 'DropAdjust'
	DropAdjust.Text = tonumber(drop)
	DropAdjust.Position = SensAdjust.Position + UDim2.new(0,0,0,40)
	DropAdjust.SensLabel.Name = 'DropLabel'
	DropAdjust.DropLabel.Text = 'Drop:'

	local KeysList = Instance.new('TextLabel',GUI)
	KeysList.Name = 'KeysList'
	KeysList.Font = Enum.Font.SourceSans
	KeysList.TextStrokeTransparency = .6
	KeysList.TextSize = 14
	KeysList.TextColor3 = Color3.new(1,1,1)
	KeysList.Size = UDim2.new(0,0,1,0)
	KeysList.Position = UDim2.new(0,5,0,-280)
	KeysList.BackgroundTransparency = 1
	KeysList.Active = false
	KeysList.TextXAlignment = Enum.TextXAlignment.Left
	KeysList.TextYAlignment = Enum.TextYAlignment.Bottom
	KeysList.Text = 'AimBot Toggle: '..toggle_aimbot.Name..'\nAim Toggle: '..toggle_aim.Name..'\nAim Part Toggle: '..targetpart_change.Name..'\nPriority Toggle: '..priority_toggle.Name
		..'\nESP Toggle: '..toggle_esp.Name..'\nBones Toggle: '..toggle_bones.Name..'\nChams Toggle: '..toggle_chams.Name..'\nBoxes Toggle: '..toggle_boxes.Name..'\nFOV Increase: '..fov_increase.Name..'\nFOV Decrease: '..fov_decrease.Name..'\nSens Increase: '
		..sens_increase.Name..'\nSens Decrease: '..sens_decrease.Name..'\nTrigger Toggle: '..toggle_trigger.Name..'\nFFA Toggle: '..ffatoggle.Name..'\nHide Cheats: '..toggle_gui.Name
		..'\nChange ESP Origin: '..toggle_bottompos.Name..'\nPerformance Mode: '..toggle_performance.Name..'\nChange Font: '..toggle_font.Name

	local n = 0

	spawn(function()
		while Status do
			Indicator.TextColor3 = Color3.fromHSV(n,.5,1)
			FovGui.ImageColor3 = Indicator.TextColor3
			if not textSet then
				if aim_toggled and target then
					Status.TextColor3 = aimingcolor
					Status.Text = ('Aiming at '..target.Name)
				else
					Status.TextColor3 = Color3.fromHSV(n,.5,1)
					Status.Text = 'On Standby'
				end
			end
			n = (n+.005)%1
			hb()
		end
	end)

	SensAdjust.InputEnded:Connect(function() if SensAdjust.Text~='' then sens = tonumber(SensAdjust.Text)>0 and tonumber(SensAdjust.Text) or sens end end)
	FovAdjust.InputEnded:Connect(function() if FovAdjust.Text~='' then fov = tonumber(FovAdjust.Text)>0 and tonumber(FovAdjust.Text) or fov
			FovGui:TweenSize(UDim2.new(0,(Camera.ViewportSize.X/(90/fov))*2,0,(Camera.ViewportSize.X/(90/fov))*2),Enum.EasingDirection.InOut,Enum.EasingStyle.Quad,.1,true) end end)
	DropAdjust.InputEnded:Connect(function() if DropAdjust.Text~='' then drop = tonumber(DropAdjust.Text)>=0 and tonumber(DropAdjust.Text) or drop end end)

	local function distfromspawn(x)
		if Spawn then
			return x:DistanceFromCharacter(Spawn.Position)
		else
			return 201
		end
	end

	local function setText(text)
		spawn(function()
			textSet = true
			Status.Text = text
			Status.TextColor3 = Color3.new(1,1,1)
			wait(#text/4)
			textSet = false
		end)
	end

	local function playsound(id)
		local sound = Instance.new('Sound',Camera)
		sound.SoundId = 'rbxassetid://'..id
		sound.Volume = 3
		sound:Play()
		game:GetService('Debris'):AddItem(sound,5)
	end

	playsound(1168009121)
	Mouse.Icon = 'rbxassetid://'..mouseiconid

	local function Notification(...)
		playsound(140910211)
		StarterGui:SetCore('SendNotification',...)
	end

	local function DrawLine(Folder,P1,P2,Thickness,Color,LineTransparency,BorderThickness,BorderColor)
		-- Declare variables
		local Point1,Point2 = P1.Position,P2.Position
		if Point1 and Point2 then
			local X,Y = Camera.ViewportSize.X, Camera.ViewportSize.Y
			local X1,X2 = (X * Point1.X.Scale + Point1.X.Offset + P1.Size.X.Offset/2), (X * Point2.X.Scale + Point2.X.Offset + P2.Size.X.Offset/2)
			local Y1,Y2 = (Y * Point1.Y.Scale + Point1.Y.Offset + P1.Size.Y.Offset/2), (Y * Point2.Y.Scale + Point2.Y.Offset + P2.Size.Y.Offset/2)
			local MidX,MidY = (X1+X2)/2, (Y1+Y2)/2
			-- Set defaults to prevent errors
			Thickness = Thickness or 1
			Color = Color or Color3.new(1,1,1)
			LineTransparency =  LineTransparency or 0
			BorderThickness = BorderThickness or 0
			BorderColor = BorderColor or Color3.new(0,0,0)
			-- Draw the line
			local Line = Folder:FindFirstChild(P1.Name..'-'..P2.Name) or Instance.new('Frame',Folder)
			Line.Visible = false
			Line.BackgroundTransparency = LineTransparency
			Line.BorderSizePixel = BorderThickness
			Line.BorderColor3 = BorderColor
			Line.Size = UDim2.new(0,(Vector2.new(X1,Y1) - Vector2.new(X2,Y2)).magnitude-1,0,Thickness)
			Line.Position = UDim2.new(0,MidX-Line.AbsoluteSize.X/2,0,MidY-Line.AbsoluteSize.Y)
			Line.BackgroundColor3 = Color
			Line.Rotation = math.deg(math.atan2((Y2-Y1),(X2-X1)))
			Line.Name = P1.Name..'-'..P2.Name
			Line.Visible = true
			return Line
		else
			return nil
		end
	end

	local function GetNearest(Mode)
		local lowest,nearest,gui = math.huge,nil,nil
		if Mode==1 then
			for _,plr in next,Players:GetPlayers() do 
				if plr.Name~=Player.Name and plr.Character~=nil and plr.Character:FindFirstChild(targetpart) then
					local dist = Player:DistanceFromCharacter(plr.Character[targetpart].Position)
					local ray = Ray.new(Player.Character.Head.Position,(plr.Character[targetpart].Position-Player.Character.Head.Position).unit*5000)
					local part,point = workspace:FindPartOnRayWithIgnoreList(ray,{Camera,Player.Character,unpack(windows)})
					local Z = Camera:WorldToScreenPoint(plr.Character[targetpart].Position).Z
					if part and part:IsDescendantOf(plr.Character) and Z>0 and dist < lowest and (ffa or plr.TeamColor~=Player.TeamColor) then lowest = dist nearest = plr.Character end
				end
			end
		elseif Mode==2 then
			for _,plr in next,Players:GetPlayers() do
				if plr.Name~=Player.Name and plr.Character~=nil and plr.Character:FindFirstChild(targetpart) then
					local pos = Camera:WorldToScreenPoint(plr.Character[targetpart].Position)
					local ray = Ray.new(Player.Character[targetpart].Position,(plr.Character[targetpart].Position-Player.Character[targetpart].Position).unit*2048)
					local part,point = workspace:FindPartOnRayWithIgnoreList(ray,{Camera,Player.Character,unpack(windows)})
					local dist = (Vector2.new(Mouse.X,Mouse.Y)-Vector2.new(pos.X,pos.Y)).magnitude
					if part and part:IsDescendantOf(plr.Character) and pos.Z>0 and dist <= Camera.ViewportSize.X/(90/fov) and dist < lowest and (ffa or plr.TeamColor~=Player.TeamColor) then lowest = dist nearest = plr.Character end
				end
			end
		end
		return nearest
	end

	Mouse.Move:Connect(function()
		cursor = ESP:FindFirstChild('Cursor') or Instance.new('Frame',ESP)
		cursor.Name = 'Cursor'
		cursor.BackgroundTransparency = 1
		cursor.Size = UDim2.new(0,1,0,1)
		cursor.Position = UDim2.new(0,Mouse.X,0,Mouse.Y)
	end)

	UIS.InputBegan:Connect(function(Input)
		if Input.KeyCode == toggle_aim or Input.UserInputType == toggle_aim then
			aim_toggled = true
			warn('GS: aim toggled',aim_toggled and 'on' or 'off')
			alert = true
			while aim_toggled and aimbot_toggled do
				target = GetNearest(aim_priority)
				if target then
					local dist = Player:DistanceFromCharacter(target[targetpart].Position)
					local headpos = Camera:WorldToScreenPoint(target[targetpart].Position+Vector3.new(0,dist/(100/drop),0))
					local moveto = Vector2.new((headpos.X-Mouse.X)*sens,(headpos.Y-Mouse.Y)*sens)
					aimpos = GUI:FindFirstChild('AimPos') or Instance.new('Frame',GUI)
					if not GUI:FindFirstChild('AimPos') then
						aimpos.Name = 'AimPos'
						aimpos.BorderSizePixel = 1
						aimpos.BorderColor3 = Color3.new(0,0,0)
						aimpos.BackgroundTransparency = 0
						aimpos.BackgroundColor3 = Color3.new(1,1,1)
						aimpos.Rotation = 45
						aimpos.ZIndex = 4
						aimpos.Size = UDim2.new(0,3,0,3)
					end
					aimpos.Position = UDim2.new(0,headpos.X-aimpos.AbsoluteSize.X/2,0,headpos.Y-aimpos.AbsoluteSize.Y/2)
					aimpos.Visible = true
					mousemoverel(moveto.X,moveto.Y)
					if alert or target~=target_old then
						playsound(locksoundid)
						print('GS: locked onto',target.Name)
						lockedon = true
						alert = false
					end
				end
				RS.Heartbeat:wait()
				target_old = target
				if aimpos then
					aimpos.Visible = false
				end
			end
			lockedon = false
		elseif Input.KeyCode == toggle_trigger then
			trigger_toggled = not trigger_toggled
			setText('Toggled TriggerBot '..(trigger_toggled and 'On' or 'Off'))
			Notification({Title='TriggerBot';Text='TriggerBot was toggled '..(trigger_toggled and 'On' or 'Off');Duration=2;})
			warn('trigger toggled',trigger_toggled and 'on' or 'off')
			local Box = Instance.new('SelectionBox',PlayerGui)
			Box.Color3 = Color3.new(1,0,0)
			Box.LineThickness = .05
			Box.Adornee = nil
			if trigger_delay>0 then wait(trigger_delay) end
			while trigger_toggled do
				local Target = Mouse.Target
				local plr = Players:FindFirstChild(Target.Parent.Name)
				if Target and Target.Parent and plr~=nil and plr~=Player and ffa or plr~=nil and plr.TeamColor~=Player.TeamColor then
					Box.Adornee = Mouse.Target
					mouse1press()
					wait()
					mouse1release()
				end
				RS.Heartbeat:wait()
			end
			Box:Destroy()
		elseif Input.KeyCode == toggle_esp then
			esp_toggled = not esp_toggled
			Notification({Title='ESP';Text='ESP was toggled '..(esp_toggled and 'On' or 'Off');Duration=2;})
			setText('Toggled ESP '..(esp_toggled and 'On' or 'Off'))
		elseif Input.KeyCode == toggle_aimbot then
			aimbot_toggled = not aimbot_toggled	
			Notification({Title='AimBot';Text='AimBot was toggled '..(aimbot_toggled and 'On' or 'Off');Duration=2;})
			setText('Toggled AimBot '..(aimbot_toggled and 'On' or 'Off'))
		elseif Input.KeyCode == fov_increase then
			fov = fov + .5
			FovAdjust.Text = tonumber(fov)
			if FovGui.Visible then
				FovGui:TweenSize(UDim2.new(0,(Camera.ViewportSize.X/(90/fov))*2,0,(Camera.ViewportSize.X/(90/fov))*2),Enum.EasingDirection.InOut,Enum.EasingStyle.Quad,.1,true)
			end
			setText('Aim FOV: '..fov)
		elseif Input.KeyCode == fov_decrease and fov>0 then
			fov = fov - .5
			FovAdjust.Text = tonumber(fov)
			if FovGui.Visible then
				FovGui:TweenSize(UDim2.new(0,(Camera.ViewportSize.X/(90/fov))*2,0,(Camera.ViewportSize.X/(90/fov))*2),Enum.EasingDirection.InOut,Enum.EasingStyle.Quad,.1,true)
			end
			setText('Aim FOV: '..fov)
		elseif Input.KeyCode == sens_increase then
			sens = sens + .05
			SensAdjust.Text = tonumber(sens)
			setText('Sens: '..sens)
		elseif Input.KeyCode == sens_decrease then
			sens = sens - .05
			SensAdjust.Text = tonumber(sens)
			setText('Sens: '..sens)
		elseif Input.KeyCode == targetpart_change then
			val = val+1
			targetpart = val<=#parts and parts[val] or parts[1]
			if parts[1]==targetpart then val = 1 end
			Notification({Title='Target Part';Text='Target part set to '..targetpart;Duration=2;})
			setText('Target Part: '..targetpart)
		elseif Input.KeyCode == ffatoggle then
			ffa = not ffa
			Notification({Title='FFA Mode';Text='FFA Mode is '..(ffa and 'Enabled' or 'Disabled');Duration=2;})
			setText('FFA Mode: '..(ffa and 'Enabled' or 'Disabled'))
		elseif Input.KeyCode == priority_toggle then
			aim_priority = aim_priority+1>2 and 0 or 1
			aim_priority = aim_priority+1
			FovGui.Visible = aim_priority>1
			Notification({Title='Aim Priority';Text='Aim Priority: '..(aim_priority==1 and 'Distance' or 'FOV');Duration=2;})
			setText('Aim Priority: '..(aim_priority==1 and 'Distance' or 'FOV'))
		elseif Input.KeyCode == toggle_bones then
			esp_bones = not esp_bones
			if not esp_bones then
				for _,v in next,ESP:GetDescendants() do
					if v:IsA('Frame') and v.Name:match('-') then
						v:Destroy()
					end
				end
			end
			Notification({Title='ESP';Text='ESP Bones: '..(esp_bones and 'Enabled' or 'Disabled');Duration=2;})
			setText('Toggled ESP Bones '..(esp_bones and 'Enabled' or 'Disabled'))
		elseif Input.KeyCode == toggle_gui then
			hidden = not hidden
			for _,gui in next,GUI:GetDescendants() do
				if gui:IsA('GuiObject') and not hidden and not gui.Visible then
					gui.Visible = true
					Mouse.Icon = 'rbxassetid://'..mouseiconid
				elseif gui:IsA('GuiObject') and gui.Visible then
					gui.Visible = false
					esp_toggled = false
					Mouse.Icon = old_icon
				end
			end
		elseif Input.KeyCode == toggle_bottompos then
			bottompos = not bottompos
			if bottompos then
				Bottom.Position = UDim2.new(.5,0,1,1)
			end
		elseif Input.KeyCode == toggle_performance then
			performancemode = not performancemode
			setText('Performance Mode '..(performancemode and 'Enabled' or 'Disabled'))
		elseif Input.KeyCode == toggle_chams then
			esp_chams = not esp_chams
			setText('Chams '..(esp_chams and 'Enabled' or 'Disabled'))
			Notification({Title='ESP';Text='Chams: '..(esp_chams and 'Enabled' or 'Disabled');Duration=2;})
		elseif Input.KeyCode == toggle_tracers then
			esp_tracers = not esp_tracers
			setText('Tracers '..(esp_chams and 'Enabled' or 'Disabled'))
			Notification({Title='ESP';Text='Tracers: '..(esp_tracers and 'Enabled' or 'Disabled');Duration=2;})
		elseif Input.KeyCode == toggle_boxes then
			bounding_box = not bounding_box
			setText('Bounding Boxes '..(bounding_box and 'Enabled' or 'Disabled'))
			Notification({Title='ESP';Text='Bounding Boxes: '..(bounding_box and 'Enabled' or 'Disabled');Duration=2;})
		elseif Input.KeyCode == toggle_font then
			currentfont = (currentfont+1)>#fonts and 1 or currentfont+1
			for _,v in next,GUI:GetDescendants() do
				if v.Name~='KeysList' then
					if v:IsA('TextLabel') or v:IsA('TextButton') then
						v.Font = fonts[currentfont]
					end
				end
			end
		end
	end)

	UIS.InputEnded:Connect(function(Input)
		if Input.KeyCode == toggle_aim or Input.UserInputType == toggle_aim then
			aim_toggled = false
		end
	end)

	local function checkifspawned(x)
		spawned = false
		while not spawned and game.PlaceId==292439477 do
			spawned = distfromspawn(x)>200 and true or false
			wait(1/5)
		end
		spawned = true
	end

	checkifspawned(Player)
	Player.CharacterAdded:Connect(function(c)
		checkifspawned(Player)

		for _,v in next,ESP:GetDescendants() do
			if v:IsA('Frame') and v.Name:match('-') then
				v:Destroy()
			end
		end
	end)

	Notification({Title='GameSense '..version;Text='Cheat loaded successfully.';Icon='rbxassetid://2572157833';Duration=10;})
	wait(.5)
	Notification({Title='GameSense '..version;Text='GameSense 2.0 has been released!.';Icon='rbxassetid://2572157833';Duration=10;})
	wait(.5)
	Notification({Title='Main Coder';Text='AvexusDev';Duration=4;Icon='https://www.roblox.com/Thumbs/Avatar.ashx?x=100&y=100&username=AvexusDev'})
	wait(.5)
	Notification({Title='Thank you!';Text='If you like this script, please leave a vouch on my thread!';Duration=4;})

	RS.RenderStepped:Connect(function()
		if cursor then
			FovGui.Position = cursor.Position-UDim2.new(0,FovGui.AbsoluteSize.X/2,0,FovGui.AbsoluteSize.Y/2)
			Indicator.Position = cursor.Position+UDim2.new(0,0,0,40)
		end
	end)

	Mouse.Button1Down:Connect(function()
		spawn(function()
			if FovGui.Visible then
				FovGui:TweenSize(UDim2.new(0,Camera.ViewportSize.X/(90/fov)*2.35,0,Camera.ViewportSize.X/(90/fov)*2.35),Enum.EasingDirection.InOut,Enum.EasingStyle.Quad,.1,true)
				wait(.1)
				FovGui:TweenSize(UDim2.new(0,Camera.ViewportSize.X/(90/fov)*2,0,Camera.ViewportSize.X/(90/fov)*2),Enum.EasingDirection.InOut,Enum.EasingStyle.Quad,.1,true)
			end
		end)
	end)

	while true do
		Indicator.Text = (aim_priority>1 and 'FOV: '..fov or 'Distance') ..'\nSens: '..sens..(aim_toggled and '\nAiming' or '')
		if not bottompos then Bottom.Position = cursor.Position end
		if esp_toggled then
			for _,v in next,ESP:children() do
				if v~=Bottom and not Players:FindFirstChild(v.Name) then
					v:Destroy()
				end
			end
			for _,v in next,Players:GetPlayers() do
				local Char = v.Character
				if Char and spawned and v~=Player and Char:FindFirstChild(targetpart) and distfromspawn(v)>100 then
					if ffa or v.TeamColor~=Player.TeamColor then
						local X = Camera:GetPartsObscuringTarget({Camera.CFrame.p,Char[targetpart].CFrame.p},{v.Character,Char,Camera,unpack(windows)})
						local Dist = Player:DistanceFromCharacter(Char:FindFirstChild(targetpart).Position)
						local Color = hiddencolor
						local Folder = ESP:FindFirstChild(v.Name) or Instance.new('Folder',ESP)
						Folder.Name = v.Name
						-- ESP
						local Head = Folder:FindFirstChild('Head') or Instance.new('Frame',Folder)
						if not Folder:FindFirstChild('Head') then
							Head.Name = 'Head'
							Head.BorderSizePixel = 1
							Head.BorderColor3 = Color3.new(0,0,0)
							Head.BackgroundTransparency = 0
						end
						Head.BackgroundColor3 = #X>0 and hiddencolor or #X==0 and visiblecolor
						Head.Rotation = headboxshape=='diamond' and 45 or 0
						Head.ZIndex = 3
						local HP = Folder:FindFirstChild('HP') or Instance.new('TextLabel',Folder)
						if not Folder:FindFirstChild('HP') then
							HP.Name = 'HP'
							HP.TextTransparency = Head.BackgroundTransparency-.4
							HP.Font = fonts[currentfont]
							HP.TextStrokeTransparency = .6
							HP.BackgroundTransparency = 1
							HP.TextSize = 14
						end
						HP.Text = showdists and Char.Name..'\n'..math.floor(Dist+.5) or Char.Name
						if aim_toggled and target==Char then
							Head.Size = UDim2.new(0,headboxaimsize,0,headboxaimsize)
							Head.BackgroundColor3 = aimingcolor
							HP.Text = showdists and '['..Char.Name..']'..'\n'..math.floor(Dist+.5) or '['..Char.Name..']'
							HP.TextSize = 16
						else
							Head.Size = UDim2.new(0,headboxsize,0,headboxsize)
						end
						HP.TextColor3 = Head.BackgroundColor3
						local toScreen = Camera:WorldToScreenPoint(Char[targetpart].CFrame.p)
						if #X==0 then Color = visiblecolor end
						Head.Position = UDim2.new(0,toScreen.X-Head.Size.X.Offset/2,0,toScreen.Y-Head.Size.Y.Offset/2)
						HP.Position = Head.Position-UDim2.new(0,0,0,textoffset)
						if esp_tracers then
							local Line = DrawLine(Folder,ESP.Bottom,Head,linesize,Head.BackgroundColor3,.75,1,Color3.new(0,0,0))
							Line.Visible = Head.Visible
						else
							local imtired = Folder:FindFirstChild(ESP.Bottom.Name..'-'..Head.Name)
							if imtired then
								imtired:Destroy()
							end
						end
						if toScreen.Z<=0 then Head.Visible = false else Head.Visible = true end
						HP.Visible = Head.Visible
						if Char:FindFirstChild('Humanoid') and Char.Humanoid.RigType==Enum.HumanoidRigType.R6 then
							local Neck = Folder:FindFirstChild('Neck') or Instance.new('Frame',Folder)
							Neck.Name = 'Neck'
							Neck.ZIndex = 2
							if Char['Torso']~=nil then
								local Pos = (Char.Torso.CFrame*CFrame.new(0,.8,0)).p
								local X,Y,Z = Camera:WorldToScreenPoint(Pos).X,Camera:WorldToScreenPoint(Pos).Y,Camera:WorldToScreenPoint(Pos).Z
								Neck.Position = UDim2.new(0,X,0,Y)
								Neck.BorderSizePixel = 0
								if Z<=0 then Neck.Visible = false else Neck.Visible = true end
							else
								Neck.Visible = false
							end
							--
							local Pelvis = Folder:FindFirstChild('Pelvis') or Instance.new('Frame',Folder)
							Pelvis.Name = 'Pelvis'
							Pelvis.ZIndex = 2
							Pelvis.BorderSizePixel = 0
							if Char['Torso']~=nil then
								local Pos = (Char.Torso.CFrame*CFrame.new(0,-1,0)).p
								local X,Y,Z = Camera:WorldToScreenPoint(Pos).X,Camera:WorldToScreenPoint(Pos).Y,Camera:WorldToScreenPoint(Pos).Z
								Pelvis.Position = UDim2.new(0,X,0,Y)
								if Z<=0 then Pelvis.Visible = false else Pelvis.Visible = true end
							else
								Pelvis.Visible = false
							end
							--
							local RightFoot = Folder:FindFirstChild('Right Foot') or Instance.new('Frame',Folder)
							RightFoot.Name = 'Right Foot'
							RightFoot.ZIndex = 2
							RightFoot.BorderSizePixel = 0
							if Char['Right Leg']~=nil then
								local Pos = (Char['Right Leg'].CFrame*CFrame.new(0,-1,0)).p
								local X,Y,Z = Camera:WorldToScreenPoint(Pos).X,Camera:WorldToScreenPoint(Pos).Y,Camera:WorldToScreenPoint(Pos).Z
								RightFoot.Position = UDim2.new(0,X,0,Y)
								if Z<=0 then RightFoot.Visible = false else RightFoot.Visible = true end
							else
								RightFoot.Visible = false
							end
							--
							local LeftFoot = Folder:FindFirstChild('Left Foot') or Instance.new('Frame',Folder)
							LeftFoot.Name = 'Left Foot'
							if Char['Left Leg']~=nil then
								local Pos = (Char['Left Leg'].CFrame*CFrame.new(0,-1,0)).p
								local X,Y,Z = Camera:WorldToScreenPoint(Pos).X,Camera:WorldToScreenPoint(Pos).Y,Camera:WorldToScreenPoint(Pos).Z
								LeftFoot.Position = UDim2.new(0,X,0,Y)
								LeftFoot.BorderSizePixel = 0
								if Z<=0 then LeftFoot.Visible = false else LeftFoot.Visible = true end
							else
								LeftFoot.Visible = false
							end
							--
							local RightHand = Folder:FindFirstChild('Right Hand') or Instance.new('Frame',Folder)
							RightHand.Name = 'Right Hand'
							RightHand.ZIndex = 2
							RightHand.BorderSizePixel = 0
							if Char['Right Arm']~=nil then
								local Pos = (Char['Right Arm'].CFrame*CFrame.new(0,-1,0)).p
								local X,Y,Z = Camera:WorldToScreenPoint(Pos).X,Camera:WorldToScreenPoint(Pos).Y,Camera:WorldToScreenPoint(Pos).Z
								RightHand.Position = UDim2.new(0,X,0,Y)
								if Z<=0 then RightHand.Visible = false else RightHand.Visible = true end
							else
								RightHand.Visible = false
							end
							--
							local LeftHand = Folder:FindFirstChild('Left Hand') or Instance.new('Frame',Folder)
							LeftHand.Name = 'Left Hand'
							LeftHand.ZIndex = 2
							LeftHand.BorderSizePixel = 0
							if Char['Left Arm']~=nil then
								local Pos = (Char['Left Arm'].CFrame*CFrame.new(0,-1,0)).p
								local X,Y,Z = Camera:WorldToScreenPoint(Pos).X,Camera:WorldToScreenPoint(Pos).Y,Camera:WorldToScreenPoint(Pos).Z
								LeftHand.Position = UDim2.new(0,X,0,Y)
								if Z<=0 then LeftHand.Visible = false else LeftHand.Visible = true end
							else
								LeftHand.Visible = false
							end
							-- draw joints
							if esp_bones then
								if Head.Visible then DrawLine(Folder,Head,Neck,1,Color3.new(1,1,1),Head.BackgroundTransparency) end
								if Neck.Visible then DrawLine(Folder,Neck,Pelvis,1,Color3.new(1,1,1),Head.BackgroundTransparency) end
								if Neck.Visible then DrawLine(Folder,Neck,RightHand,1,Color3.new(1,1,1),Head.BackgroundTransparency) end
								if Neck.Visible then DrawLine(Folder,Neck,LeftHand,1,Color3.new(1,1,1),Head.BackgroundTransparency) end
								if Pelvis.Visible then DrawLine(Folder,Pelvis,RightFoot,1,Color3.new(1,1,1),Head.BackgroundTransparency) end
								if Pelvis.Visible then DrawLine(Folder,Pelvis,LeftFoot,1,Color3.new(1,1,1),Head.BackgroundTransparency) end
							end
						end

						if esp_chams then
							for _,Part in next,Char:children() do
								if Part:IsA('BasePart') and Part.Name~='HumanoidRootPart' then
									local Adornment = Folder:FindFirstChild(Part.Name..'_Cham') or Instance.new('BoxHandleAdornment',Folder)
									if not Folder:FindFirstChild(Part.Name..'_Cham') then
										Adornment.Name = Part.Name..'_Cham'
										Adornment.Adornee = Part
										Adornment.AlwaysOnTop = true
										Adornment.Size = Part.Name=='Head' and Vector3.new(1,1,1) or Part.Size
										Adornment.ZIndex = 1
									end
									Adornment.Color3 = Head.BackgroundColor3
								end
							end
						else
							for _,v in next,Folder:GetDescendants() do
								if v.Name:match('Cham') then
									v:Destroy()
								end
							end
						end

						if bounding_box and Char:FindFirstChild('HumanoidRootPart') then
							local Box = Char:FindFirstChild('Box') or Instance.new('BillboardGui',Char)
							if not Char:FindFirstChild('Box') then
								Box.Name = 'Box'
								Box.Adornee = Char:FindFirstChild('HumanoidRootPart')
								Box.AlwaysOnTop = true
								Box.LightInfluence = 0
								Box.StudsOffset = Vector3.new(0,-Box.Adornee.Size.Y/4,0)
								Box.Size = UDim2.new(4,1,5,1)
								local Top = Instance.new('Frame',Box)
								Top.Size = UDim2.new(1,0,0,box_line_size)
								Top.BorderSizePixel = 0
								local Bot = Top:Clone()
								Bot.Position = UDim2.new(0,0,1,-box_line_size)
								Bot.Parent = Box
								local Left = Top:Clone()
								Left.Size = UDim2.new(0,1,1,0)
								Left.Parent = Box
								local Right = Left:Clone()
								Right.Position = UDim2.new(1,-box_line_size,0,0)
								Right.Parent = Box
							end
							for _,v in next,Box:children() do
								if v:IsA('Frame') then
									v.BackgroundColor3 = Head.BackgroundColor3
								end
							end
						else
							local Box = Char:FindFirstChild('Box')
							if Box then
								Box:Destroy()
							end
						end

						if lockedon and target and aim_line and ESP:FindFirstChild(target.Name) then
							DrawLine(ESP,cursor,ESP:FindFirstChild(target.Name).Head,1,Head.BackgroundColor3,.5)
						end

					else
						if ESP:FindFirstChild(v.Name) then
							ESP:FindFirstChild(v.Name):Destroy()
						end
					end
				else
					if ESP:FindFirstChild(v.Name) then
						ESP:FindFirstChild(v.Name):Destroy()
					end
				end
			end
		else
			for _,v in next,ESP:children() do
				if v:IsA('Folder') then
					v:Destroy()
				end
			end
		end
		if performancemode then
			wait(1/(workspace:GetRealPhysicsFPS()*.75))
		else
			RS.Stepped:wait()
		end
	end
end)

Hitbox.MouseButton1Click:Connect(function()
	for k,v in next, game:GetService('Players'):GetChildren() do 
		oghead = v.Character:FindFirstChild('Head')
		if oghead then 
			oghead.Size = Vector3.new(4, 4, 4) 
			game.Players.LocalPlayer.Character.Head.Size = Vector3.new(2, 1, 1)
			v.Character:FindFirstChild("Head").Transparency = 0.5
		end
	end
end)

Multiple.MouseButton1Click:Connect(function()
	game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
		if key == "z" then -- key to equip swords
			for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
				if v:IsA("Tool") then
					v.Parent = game.Players.LocalPlayer.Character
				end
			end
		end
	end)
end)

Noclip.MouseButton1Click:Connect(function()
	noclip = false
	game:GetService('RunService').Stepped:connect(function()
		if noclip then
			game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
		end
	end)
	plr = game.Players.LocalPlayer
	mouse = plr:GetMouse()
	mouse.KeyDown:connect(function(key)

		if key == "k" then
			noclip = not noclip
			game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
		end
	end)
	print('Loaded')
	print('Press "K" to noclip')
end)

RevizAdmin.MouseButton1Click:Connect(function()
	-- Creator: illremember#3799

	-- Credits to infinite yield, harkinian, dex creators

	prefix = ";"
	wait(0.3)
	Commands = {
		'[-] cmdbar is shown when ; is pressed.',
		'[1] kill [plr] -- You need a tool! Will kill the player, use rkill to kill you and player',
		'[2] bring [plr] -- You need a tool! Will bring player to you',
		'[3] spin [plr] -- You need a tool! Makes you and the player spin crazy',
		'[4] unspin -- Use after using spin cmd and dying, so you stop loop teleporting',
		'[5] attach [plr] -- You need a tool! Attaches you to player',
		'[6] unattach [plr] -- Attempts to unattach you from a player',
		'[7] follow [plr] -- Makes you follow behind the player',
		'[8] unfollow',
		'[9] freefall [plr] -- You need a tool! Teleports you and the player up into the air',
		'[10] trail [plr] -- The opposite of follow, you stay infront of player',
		'[11] untrail',
		'[12] orbit [plr] -- Makes you orbit the player',
		'[13] unorbit',
		'[14] fling [plr] -- Makes you fling the player',
		'[15] unfling',
		'[16] fecheck -- Checks if the game is FE or not',
		'[17] void [plr] -- Teleports player to the void',
		'[18] noclip -- Gives you noclip to walk through walls',
		'[19] clip -- Removes noclip',
		'[20] speed [num]/ws [num] -- Changes how fast you walk 16 is default',
		'[21] jumppower [num]/jp [num] -- Changes how high you jump 50 is default',
		'[22] hipheight [num]/hh [num] -- Changes how high you float 0 is default',
		'[23] default -- Changes your speed, jumppower and hipheight to default values',
		'[24] annoy [plr] -- Loop teleports you to the player',
		'[25] unannoy',
		'[26] headwalk [plr] -- Loop teleports you to the player head',
		'[27] unheadwalk',
		'[28] nolimbs -- Removes your arms and legs',
		'[29] god -- Gives you FE Godmode',
		'[30] drophats -- Drops your accessories',
		'[31] droptool -- Drops any tool you have equipped',
		'[32] loopdhats -- Loop drops your accessories',
		'[33] unloopdhats',
		'[34] loopdtool -- Loop drops any tools you have equipped',
		'[35] unloopdtool',
		'[36] invisible -- Gives you invisibility CREDIT TO TIMELESS',
		'[37] view [plr] -- Changes your camera to the player character',
		'[38] unview',
		'[39] goto [plr] -- Teleports you to player',
		'[40] fly -- Allows you to fly, credit to Infinite Yield',
		'[41] unfly',
		'[42] chat [msg] -- Makes you chat a message',
		'[43] spam [msg] -- Spams a message',
		'[44] unspam',
		'[45] spamwait [num] -- Changes delay of chatting a message for the spam command in seconds default is 1 second',
		'[46] pmspam [plr] -- Spams a player in private message',
		'[47] unpmspam',
		'[48] cfreeze [plr] -- Freezes a player on your client, they will only be frozen for you',
		'[49] uncfreeze [plr]',
		'[50] unlockws -- Unlocks the workspace',
		'[51] lockws -- Locks the workspace',
		'[52] btools -- Gives you btools that will only show to you useful for deleting certain blocks only for you',
		'[53] pstand -- Enables platform stand',
		'[54] unpstand -- Disables platform stand',
		'[55] blockhead -- Removes your head mesh',
		'[56] sit',
		'[57] bringobj [obj] -- Only shows on client, brings an object/part to you constantly, can be used to bring healing parts, weapons, money etc, type in exact name',
		'[58] wsvis [num] -- Changes visibility of workspace parts, num should be between 0 and 1, only shows client sided',
		'[59] hypertotal -- Loads in my FE GUI Hypertotal',
		'[60] cmds -- Prints all commands',
		'[61] rmeshhats/blockhats -- Removes the meshes of all your accessories aka block hats',
		'[62] rmeshtool/blocktool -- Removes the mesh of the tool you have equipped aka block tool',
		'[63] spinner -- Makes you spin',
		'[64] nospinner',
		'[65] reach [num] -- Gives you reach, mostly used for swords, say ;reachd for default and enter number after for custom',
		'[66] noreach -- Removes reach, must have tool equipped',
		'[67] rkill [plr] -- Kills you and the player, use kill to just kill the player without dying',
		'[68] tp me [plr] -- Alternative to goto',
		'[69] cbring [plr] -- Brings player infront of you, shows only on client, allows you to do damage to player',
		'[70] uncbring',
		'[71] swap [plr] -- You need a tool! Swaps players position with yours and your position with players',
		'[72] givetool [plr] -- Gives the tool you have equipped to the player',
		'[73] glitch [plr] -- Glitches you and the player, looks very cool',
		'[74] unglitch -- Unglitches you',
		'[75] grespawn -- Alternative to normal respawn and usually works best for when you want to reset with FE Godmode',
		'[76] explorer -- Loads up DEX',
		'[77] reset -- Resets your character.',
		'[78] anim [id] -- Applies an animation on you, must be created by ROBLOX',
		'[79] animgui -- Loads up Energize animations GUI',
		'[80] savepos -- Saves your current position',
		'[81] loadpos -- Teleports you to your saved position',
		'[82] bang [plr] -- 18+ will not work if you have FE Godmode on',
		'[83] unbang',
		'[84] delcmdbar -- Removes the command bar completely',
		'[85] bringmod [obj] -- Brings all the parts in a model, client only, comes from ;bringobj enter exact name of model',
		'[86] shutdown -- Uses harkinians script to shutdown server',
		'[87] respawn -- If grespawn doesnt work you can use respawn',
		'[88] delobj [obj] -- Deletes a certain brick in workspace, client sided',
		'[89] getplrs -- Prints all players in game',
		'[90] deldecal -- Deletes all decals client sided',
		'[91] opfinality -- Loads in my FE GUI Opfinality',
		'[92] remotes -- Prints all remotes in the game in the console when added',
		'[93] noremotes -- Stops printing remotes',
		'[94] tpdefault -- Stops all loop teleports to a player',
		'[95] stopsit -- Will not allow you to sit',
		'[96] gosit -- Allows you to sit',
		'[97] clicktp -- Enables click tp',
		'[98] noclicktp -- Disables click tp',
		'[99] toolson -- If any tools are dropped in the workspace you will automatically get them',
		'[100] toolsoff -- Stops ;toolson',
		'[101] version -- Gets the admin version',
		'[102] state [num] -- Changes your humanoid state, ;unstate to stop.',
		'[103] gravity [num] -- Changes workspace gravity default is 196.2',
		'[104] pgs -- Checks if the game has PGSPhysicsSolverEnabled enabled',
		'[105] clickdel -- Delete any block you press q on, client sided',
		'[106] noclickdel -- Stops clickdel',
		'[107] looprhats -- Loop removes mesh of your hats/loop block hats',
		'[108] unlooprhats -- Stops loop removing mesh',
		'[109] looprtool -- Loop removes mesh of your tool/loop block tools',
		'[110] unlooprtool -- Stops loop removing mesh',
		'[111] givealltools [plr] -- Gives all the tools you have in your backpack to the player',
		'[112] age [plr] -- Makes you chat the account age of the player',
		'[113] id [plr] -- Makes you chat the account ID of the player',
		'[114] .age [plr] -- Privately shows you the account age of the player',
		'[115] .id [plr] -- Privately shows you the account ID of the player',
		'[116] gameid -- Shows the game ID',
		'[117] removeinvis -- Removes all invisible walls/parts, client sided',
		'[118] removefog -- Removes fog, client sided',
		'[119] disable -- Disables your character by removing humanoid',
		'[120] enable -- Enables your character by adding humanoid',
		'[121] prefix [key] -- Changes the prefix used, default is ;',
		'[122] ;resetprefix -- Resets the prefix to ; incase you change it to an unusable prefix. Say exactly ";resetprefix" to do this command, no matter what your prefix is set to.',
		'[123] flyspeed [num] -- Change your fly speed, default is 1',
		'[124] carpet [plr] -- Makes you a carpet for a player, will not work if FE Godmode is on',
		'[125] uncarpet -- Stops carpet player',
		'[126] stare [plr] -- Turns your character to stare at another player',
		'[127] unstare -- Stops stare player',
		'[128] logchat -- Logs all chat (including /e and whispers) of all players',
		'[129] unlogchat -- Disables logchat',
		'[130] fixcam -- Fixes/resets your camera',
		'[131] unstate -- Stops changing state',
	}
	speedget = 1

	lplayer = game:GetService("Players").LocalPlayer

	lplayer.CharacterAdded:Connect(function(character)
		spin = false
		flying = false
		staring = false
		banpl = false
	end)

	function change()
		prefix = prefix
		speedfly = speedfly
	end

	function GetPlayer(String) -- Credit to Timeless/xFunnieuss
		local Found = {}
		local strl = String:lower()
		if strl == "all" then
			for i,v in pairs(game:GetService("Players"):GetPlayers()) do
				table.insert(Found,v)
			end
		elseif strl == "others" then
			for i,v in pairs(game:GetService("Players"):GetPlayers()) do
				if v.Name ~= lplayer.Name then
					table.insert(Found,v)
				end
			end   
		elseif strl == "me" then
			for i,v in pairs(game:GetService("Players"):GetPlayers()) do
				if v.Name == lplayer.Name then
					table.insert(Found,v)
				end
			end  
		else
			for i,v in pairs(game:GetService("Players"):GetPlayers()) do
				if v.Name:lower():sub(1, #String) == String:lower() then
					table.insert(Found,v)
				end
			end    
		end
		return Found    
	end

	local Mouse = lplayer:GetMouse()

	spin = false
	followed = false
	traill = false
	noclip = false
	annoying = false
	hwalk = false
	droppinghats = false
	droppingtools = false
	flying = false
	spamdelay = 1
	spamming = false
	spammingpm = false
	cbringing = false
	remotes = true
	added = true
	binds = false
	stopsitting = false
	clickgoto = false
	gettingtools = false
	removingmeshhats = false
	removingmeshtool = false
	clickdel = false
	staring = false
	chatlogs = false
	banpl = false
	changingstate = false
	statechosen = 0

	adminversion = "Reviz Admin by illremember, Version 2.0"

	flying = false
	speedfly = 1

	function plrchat(plr, chat)
		print(plr.Name..": "..tick().."\n"..chat)
	end

	for i,v in pairs(game:GetService("Players"):GetPlayers()) do
		v.Chatted:connect(function(chat)
			if chatlogs then
				plrchat(v, chat)
			end
		end)
	end
	game:GetService("Players").PlayerAdded:connect(function(plr)
		plr.Chatted:connect(function(chat)
			if chatlogs then
				plrchat(plr, chat)
			end
		end)
	end)


	local ScreenGui = Instance.new("ScreenGui")
	local Frame = Instance.new("Frame")
	local CMDBAR = Instance.new("TextBox")
	ScreenGui.Parent = game:GetService("CoreGui")
	Frame.Parent = ScreenGui
	Frame.BackgroundColor3 = Color3.new(0.3, 0.1, 0.1)
	Frame.BackgroundTransparency = 0.3
	Frame.Position = UDim2.new(0.5, 0, 0, 10)
	Frame.Size = UDim2.new(0, 200, 0, 40)
	Frame.Active = true
	Frame.Draggable = true
	CMDBAR.Name = "CMDBAR"
	CMDBAR.Parent = Frame
	CMDBAR.BackgroundColor3 = Color3.new(0.105882, 0.164706, 0.207843)
	CMDBAR.BackgroundTransparency = 0.20000000298023
	CMDBAR.Size = UDim2.new(0, 180, 0, 20)
	CMDBAR.Position = UDim2.new(0.05, 0, 0.25, 0)
	CMDBAR.Font = Enum.Font.SourceSansLight
	CMDBAR.FontSize = Enum.FontSize.Size14
	CMDBAR.TextColor3 = Color3.new(0.945098, 0.945098, 0.945098)
	CMDBAR.TextScaled = true
	CMDBAR.TextSize = 14
	CMDBAR.TextWrapped = true
	CMDBAR.Text = "Press ; to type, Enter to execute"

	local CMDS = Instance.new("ScreenGui")
	local CMDSFRAME = Instance.new("Frame")
	local ScrollingFrame = Instance.new("ScrollingFrame")
	local TextLabel = Instance.new("TextLabel")
	local closegui = Instance.new("TextButton")
	CMDS.Name = "CMDS"
	CMDS.Parent = game:GetService("CoreGui")
	CMDSFRAME.Name = "CMDSFRAME"
	CMDSFRAME.Parent = CMDS
	CMDSFRAME.Active = true
	CMDSFRAME.BackgroundColor3 = Color3.new(0.223529, 0.231373, 0.309804)
	CMDSFRAME.BorderSizePixel = 0
	CMDSFRAME.Draggable = true
	CMDSFRAME.Position = UDim2.new(0, 315, 0, 100)
	CMDSFRAME.Size = UDim2.new(0, 275, 0, 275)
	CMDSFRAME.Visible = false
	ScrollingFrame.Parent = CMDSFRAME
	ScrollingFrame.BackgroundColor3 = Color3.new(0.160784, 0.160784, 0.203922)
	ScrollingFrame.BorderSizePixel = 0
	ScrollingFrame.Position = UDim2.new(0, 0, 0.0729999989, 0)
	ScrollingFrame.Size = UDim2.new(1.04999995, 0, 0.92900002, 0)
	ScrollingFrame.CanvasSize = UDim2.new(0, 0, 10, 0)
	TextLabel.Parent = ScrollingFrame
	TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
	TextLabel.BackgroundTransparency = 1
	TextLabel.Size = UDim2.new(0.930000007, 0, 1, 0)
	TextLabel.Font = Enum.Font.SourceSans
	TextLabel.FontSize = Enum.FontSize.Size18
	TextLabel.Text = "[-] cmdbar is shown when ; is pressed.,\n[1] kill [plr] -- You need a tool! Will kill the player, use rkill to kill you and player,\n[2] bring [plr] -- You need a tool! Will bring player to you,\n[3] spin [plr] -- You need a tool! Makes you and the player spin crazy,\n[4] unspin -- Use after using spin cmd and dying, so you stop loop teleporting,\n[5] attach [plr] -- You need a tool! Attaches you to player,\n[6] unattach [plr] -- Attempts to unattach you from a player,\n[7] follow [plr] -- Makes you follow behind the player,\n[8] unfollow,\n[9] freefall [plr] -- You need a tool! Teleports you and the player up into the air,\n[10] trail [plr] -- The opposite of follow, you stay infront of player,\n[11] untrail,\n[12] orbit [plr] -- Makes you orbit the player,\n[13] unorbit,\n[14] fling [plr] -- Makes you fling the player,\n[15] unfling,\n[16] fecheck -- Checks if the game is FE or not,\n[17] void [plr] -- Teleports player to the void,\n[18] noclip -- Gives you noclip to walk through walls,\n[19] clip -- Removes noclip,\n[20] speed [num]/ws [num] -- Changes how fast you walk 16 is default,\n[21] jumppower [num]/jp [num] -- Changes how high you jump 50 is default,\n[22] hipheight [num]/hh [num] -- Changes how high you float 0 is default,\n[23] default -- Changes your speed, jumppower and hipheight to default values,\n[24] annoy [plr] -- Loop teleports you to the player,\n[25] unannoy,\n[26] headwalk [plr] -- Loop teleports you to the player head,\n[27] unheadwalk,\n[28] nolimbs -- Removes your arms and legs,\n[29] god -- Gives you FE Godmode,\n[30] drophats -- Drops your accessories,\n[31] droptool -- Drops any tool you have equipped,\n[32] loopdhats -- Loop drops your accessories,\n[33] unloopdhats,\n[34] loopdtool -- Loop drops any tools you have equipped,\n[35] unloopdtool,\n[36] invisible -- Gives you invisibility CREDIT TO TIMELESS,\n[37] view [plr] -- Changes your camera to the player character,\n[38] unview,\n[39] goto [plr] -- Teleports you to player,\n[40] fly -- Allows you to fly,\n[41] unfly,\n[42] chat [msg] -- Makes you chat a message,\n[43] spam [msg] -- Spams a message,\n[44] unspam,\n[45] spamwait [num] -- Changes delay of chatting a message for the spam command in seconds default is 1 second,\n[46] pmspam [plr] -- Spams a player in private message,\n[47] unpmspam,\n[48] cfreeze [plr] -- Freezes a player on your client, they will only be frozen for you,\n[49] uncfreeze [plr],\n[50] unlockws -- Unlocks the workspace,\n[51] lockws -- Locks the workspace,\n[52] btools -- Gives you btools that will only show to you useful for deleting certain blocks only for you,\n[53] pstand -- Enables platform stand,\n[54] unpstand -- Disables platform stand,\n[55] blockhead -- Removes your head mesh,\n[56] sit,\n[57] bringobj [obj] -- Only shows on client, brings an object/part to you constantly, can be used to bring healing parts, weapons, money etc, type in exact name,\n[58] wsvis [num] -- Changes visibility of workspace parts, num should be between 0 and 1, only shows client sided,\n[59] hypertotal -- Loads in my FE GUI Hypertotal,\n[60] cmds -- Prints all commands,\n[61] rmeshhats/blockhats -- Removes the meshes of all your accessories aka block hats,\n[62] rmeshtool/blocktool -- Removes the mesh of the tool you have equipped aka block tool,\n[63] spinner -- Makes you spin,\n[64] nospinner,\n[65] reach [num] -- Gives you reach, mostly used for swords, say ;reachd for default and enter number after for custom,\n[66] noreach -- Removes reach, must have tool equipped,\n[67] rkill [plr] -- Kills you and the player, use kill to just kill the player without dying,\n[68] tp me [plr] -- Alternative to goto,\n[69] cbring [plr] -- Brings player infront of you, shows only on client, allows you to do damage to player,\n[70] uncbring,\n[71] swap [plr] -- You need a tool! Swaps players position with yours and your position with players,\n[72] givetool [plr] -- Gives the tool you have equipped to the player,\n[73] glitch [plr] -- Glitches you and the player, looks very cool,\n[74] unglitch -- Unglitches you,\n[75] grespawn -- Alternative to normal respawn and usually works best for when you want to reset with FE Godmode,\n[76] explorer -- Loads up DEX,\n[77] reset -- Resets your character.,\n[78] anim [id] -- Applies an animation on you, must be created by ROBLOX,\n[79] animgui -- Loads up Energize animations GUI,\n[80] savepos -- Saves your current position,\n[81] loadpos -- Teleports you to your saved position,\n[82] bang [plr] -- 18+,\n[83] unbang,\n[84] delcmdbar -- Removes the command bar completely,\n[85] bringmod [obj] -- Brings all the parts in a model, client only, comes from ;bringobj enter exact name of model,\n[86] shutdown -- Uses harkinians script to shutdown server,\n[87] respawn -- If grespawn doesnt work you can use respawn,\n[88] delobj [obj] -- Deletes a certain brick in workspace, client sided,\n[89] getplrs -- Prints all players in game,\n[90] deldecal -- Deletes all decals client sided,\n[91] opfinality -- Loads in my FE GUI Opfinality,\n[92] remotes -- Prints all remotes in the game in the console when added,\n[93] noremotes -- Stops printing remotes,\n[94] tpdefault -- Stops all loop teleports to a player,\n[95] stopsit -- Will not allow you to sit,\n[96] gosit -- Allows you to sit,\n[97] clicktp -- Enables click tp,\n[98] noclicktp -- Disables click tp,\n[99] toolson -- If any tools are dropped in the workspace you will automatically get them,\n[100] toolsoff -- Stops ;toolson,\n[101] version -- Gets the admin version, \n This list of commands is NOT showing everything, go to my thread in the pastebin link to see ALL commands."
	TextLabel.TextColor3 = Color3.new(1, 1, 1)
	TextLabel.TextSize = 15
	TextLabel.TextWrapped = true
	TextLabel.TextXAlignment = Enum.TextXAlignment.Left
	TextLabel.TextYAlignment = Enum.TextYAlignment.Top
	closegui.Name = "closegui"
	closegui.Parent = CMDSFRAME
	closegui.BackgroundColor3 = Color3.new(0.890196, 0.223529, 0.0588235)
	closegui.BorderSizePixel = 0
	closegui.Position = UDim2.new(0.995000005, 0, 0, 0)
	closegui.Size = UDim2.new(0.0545952693, 0, 0.0728644878, 0)
	closegui.Font = Enum.Font.SourceSansBold
	closegui.FontSize = Enum.FontSize.Size24
	closegui.Text = "X"
	closegui.TextColor3 = Color3.new(1, 1, 1)
	closegui.TextSize = 20

	closegui.MouseButton1Click:connect(function()
		CMDSFRAME.Visible = false
	end)

	game:GetService('RunService').Stepped:connect(function()
		if spin then
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[spinplr.Name].Character.HumanoidRootPart.CFrame
		end
		if followed then
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[flwplr.Name].Character.HumanoidRootPart.CFrame + game:GetService("Players")[flwplr.Name].Character.HumanoidRootPart.CFrame.lookVector * -5
		end
		if traill then
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[trlplr.Name].Character.HumanoidRootPart.CFrame + game:GetService("Players")[trlplr.Name].Character.HumanoidRootPart.CFrame.lookVector * 5
		end
		if annoying then
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[annplr.Name].Character.HumanoidRootPart.CFrame
		end
		if hwalk then
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[hdwplr.Name].Character.HumanoidRootPart.CFrame + Vector3.new(0, 4, 0)
		end
		if staring then
			lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(lplayer.Character.Torso.Position, game:GetService("Players")[stareplr.Name].Character.Torso.Position)
		end
	end)
	game:GetService('RunService').Stepped:connect(function()
		if noclip then
			if lplayer.Character.Humanoid.RigType == Enum.HumanoidRigType.R6 then
				lplayer.Character.Head.CanCollide = false
				lplayer.Character.Torso.CanCollide = false
				lplayer.Character["Left Leg"].CanCollide = false
				lplayer.Character["Right Leg"].CanCollide = false
			else
				lplayer.Character.Humanoid:ChangeState(11)
			end
		end
		if changingstate then
			lplayer.Character.Humanoid:ChangeState(statechosen)
		end
	end)
	game:GetService('RunService').Stepped:connect(function()
		if droppinghats then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA("Accessory")) or (v:IsA("Hat")) then
					v.Parent = workspace
				end
			end
		end
		if droppingtools then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA("Tool")) then
					v.Parent = workspace
				end
			end
		end
		if removingmeshhats then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA("Accessory")) or (v:IsA("Hat")) then
					v.Handle.Mesh:Destroy()
				end
			end
		end
		if removingmeshtool then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA("Tool")) then
					v.Handle.Mesh:Destroy()
				end
			end
		end
	end)
	game:GetService('RunService').Stepped:connect(function()
		if banpl then
			lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[bplrr].Character.HumanoidRootPart.CFrame
		end
	end)
	game:GetService('RunService').Stepped:connect(function()
		if stopsitting then
			lplayer.Character.Humanoid.Sit = false
		end
	end)

	plr = lplayer 
	hum = plr.Character.HumanoidRootPart
	mouse = plr:GetMouse() 
	mouse.KeyDown:connect(function(key) 
		if key == "e" then 
			if mouse.Target then 
				if clickgoto then
					hum.CFrame = CFrame.new(mouse.Hit.x, mouse.Hit.y + 5, mouse.Hit.z)
				elseif clickdel then
					mouse.Target:Destroy()
				end
			end 
		end
	end)

	game:GetService("Workspace").ChildAdded:connect(function(part)
		if gettingtools then
			if part:IsA("Tool") then
				part.Handle.CFrame = lplayer.Character.HumanoidRootPart.CFrame
			end
		end
	end)

	lplayer.Chatted:Connect(function(msg)
		if string.sub(msg, 1, 6) == (prefix.."kill ") then
			if string.sub(msg, 7) == "me" then
				lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(100000,0,100000)
			else
				for i,v in pairs(GetPlayer(string.sub(msg, 7)))do
					local NOW = lplayer.Character.HumanoidRootPart.CFrame
					lplayer.Character.Humanoid.Name = 1
					local l = lplayer.Character["1"]:Clone()
					l.Parent = lplayer.Character
					l.Name = "Humanoid"
					wait(0.1)
					lplayer.Character["1"]:Destroy()
					game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
					lplayer.Character.Animate.Disabled = true
					wait(0.1)
					lplayer.Character.Animate.Disabled = false
					lplayer.Character.Humanoid.DisplayDistanceType = "None"
					for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
						lplayer.Character.Humanoid:EquipTool(v)
					end
					local function tp(player,player2)
						local char1,char2=player.Character,player2.Character
						if char1 and char2 then
							char1:MoveTo(char2.Head.Position)
						end
					end
					wait(0.1)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.2)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.5)
					lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-100000,10,-100000))
					wait(0.7)
					tp(lplayer,game:GetService("Players")[v.Name])
					wait(0.7)
					lplayer.Character.HumanoidRootPart.CFrame = NOW
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = "Tools needed!";
						Text = "You need a tool in your backpack for this command!";
					})
				end
			end
		end
		if string.sub(msg, 1, 7) == (prefix.."bring ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 8)))do
				local NOW = lplayer.Character.HumanoidRootPart.CFrame
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character["1"]:Clone()
				l.Parent = lplayer.Character
				l.Name = "Humanoid"
				wait(0.1)
				lplayer.Character["1"]:Destroy()
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = "None"
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
					lplayer.Character.Humanoid:EquipTool(v)
				end
				local function tp(player,player2)
					local char1,char2=player.Character,player2.Character
					if char1 and char2 then
						char1.HumanoidRootPart.CFrame = char2.HumanoidRootPart.CFrame
					end
				end
				local function getout(player,player2)
					local char1,char2=player.Character,player2.Character
					if char1 and char2 then
						char1:MoveTo(char2.Head.Position)
					end
				end
				tp(game:GetService("Players")[v.Name], lplayer)
				wait(0.2)
				tp(game:GetService("Players")[v.Name], lplayer)
				wait(0.5)
				lplayer.Character.HumanoidRootPart.CFrame = NOW
				wait(0.5)
				getout(lplayer, game:GetService("Players")[v.Name])
				wait(0.3)
				lplayer.Character.HumanoidRootPart.CFrame = NOW
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Tools needed!";
					Text = "You need a tool in your backpack for this command!";
				})
			end
		end
		if string.sub(msg, 1, 6) == (prefix.."spin ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character["1"]:Clone()
				l.Parent = lplayer.Character
				l.Name = "Humanoid"
				wait(0.1)
				lplayer.Character["1"]:Destroy()
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = "None"
				lplayer.Character.Animate.Disabled = false
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
					lplayer.Character.Humanoid:EquipTool(v)
				end
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
				spinplr = v
				wait(0.5)
				spin = true
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Tools needed!";
					Text = "You need a tool in your backpack for this command!";
				})
			end
		end
		if string.sub(msg, 1, 7) == (prefix.."unspin") then
			spin = false
		end
		if string.sub(msg, 1, 8) == (prefix.."attach ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character["1"]:Clone()
				l.Parent = lplayer.Character
				l.Name = "Humanoid"
				wait(0.1)
				lplayer.Character["1"]:Destroy()
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = "None"
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
					lplayer.Character.Humanoid:EquipTool(v)
				end
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
				wait(0.3)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
				attplr = v
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Tools needed!";
					Text = "You need a tool in your backpack for this command!";
				})
			end
		end
		if string.sub(msg, 1, 10) == (prefix.."unattach ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 11))) do
				local function getout(player,player2)
					local char1,char2=player.Character,player2.Character
					if char1 and char2 then
						char1:MoveTo(char2.Head.Position)
					end
				end
				getout(lplayer, game:GetService("Players")[v.Name])
			end
		end
		if string.sub(msg, 1, 8) == (prefix.."follow ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
				followed = true
				flwplr = v
			end
		end
		if string.sub(msg, 1, 9) == (prefix.."unfollow") then
			followed = false
		end
		if string.sub(msg, 1, 10) == (prefix.."freefall ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 11))) do
				local NOW = lplayer.Character.HumanoidRootPart.CFrame
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character["1"]:Clone()
				l.Parent = lplayer.Character
				l.Name = "Humanoid"
				wait(0.1)
				lplayer.Character["1"]:Destroy()
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = "None"
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
					lplayer.Character.Humanoid:EquipTool(v)
				end
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.2)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.6)
				lplayer.Character.HumanoidRootPart.CFrame = NOW
				wait(0.6)
				lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(0,50000,0)
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Tools needed!";
					Text = "You need a tool in your backpack for this command!";
				})
			end
		end
		if string.sub(msg, 1, 7) == (prefix.."trail ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
				traill = true
				trlplr = v
			end
		end
		if string.sub(msg, 1, 8) == (prefix.."untrail") then
			traill = false
		end
		if string.sub(msg, 1, 7) == (prefix.."orbit ") then
			if string.sub(msg, 8) == "all" or string.sub(msg, 8) == "others" or string.sub(msg, 8) == "me" then
				lplayer.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame
			else
				for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
					local o = Instance.new("RocketPropulsion")
					o.Parent = lplayer.Character.HumanoidRootPart
					o.Name = "Orbit"
					o.Target = game:GetService("Players")[v.Name].Character.HumanoidRootPart
					o:Fire()
					noclip = true
				end
			end
		end
		if string.sub(msg, 1, 8) == (prefix.."unorbit") then
			lplayer.Character.HumanoidRootPart.Orbit:Destroy()
			noclip = false
		end
		if string.sub(msg, 1, 7) == (prefix.."fling ") then
			if string.sub(msg, 8) == "all" or string.sub(msg, 8) == "others" or string.sub(msg, 8) == "me" then
				lplayer.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame
			else
				for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
					local y = Instance.new("RocketPropulsion")
					y.Parent = lplayer.Character.HumanoidRootPart
					y.CartoonFactor = 1
					y.MaxThrust = 800000
					y.MaxSpeed = 1000
					y.ThrustP = 200000
					y.Name = "Fling"
					game:GetService("Workspace").CurrentCamera.CameraSubject = game:GetService("Players")[v.Name].Character.Head
					y.Target = game:GetService("Players")[v.Name].Character.HumanoidRootPart
					y:Fire()
					noclip = true
				end
			end
		end
		if string.sub(msg, 1, 8) == (prefix.."unfling") then
			noclip = false
			lplayer.Character.HumanoidRootPart.Fling:Destroy()
			game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Head
			wait(0.4)
			lplayer.Character.HumanoidRootPart.Fling:Destroy()
		end
		if string.sub(msg, 1, 8) == (prefix.."fecheck") then
			if game:GetService("Workspace").FilteringEnabled == true then
				warn("FE is Enabled (Filtering Enabled)")
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "FE is Enabled";
					Text = "Filtering Enabled. Enjoy using Reviz Admin!";
				})
			else
				warn("FE is Disabled (Filtering Disabled) Consider using a different admin script.")
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "FE is Disabled";
					Text = "Filtering Disabled. Consider using a different admin script.";
				})
			end
		end
		if string.sub(msg, 1, 6) == (prefix.."void ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character["1"]:Clone()
				l.Parent = lplayer.Character
				l.Name = "Humanoid"
				wait(0.1)
				lplayer.Character["1"]:Destroy()
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = "None"
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
					lplayer.Character.Humanoid:EquipTool(v)
				end
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.2)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.6)
				lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(999999999999999,0,999999999999999)
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Tools needed!";
					Text = "You need a tool in your backpack for this command!";
				})
			end
		end
		if string.sub(msg, 1, 7) == (prefix.."noclip") then
			noclip = true
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Noclip enabled";
				Text = "Type ;clip to disable";
			})
		end
		if string.sub(msg, 1, 5) == (prefix.."clip") then
			noclip = false
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Noclip disabled";
				Text = "Type ;noclip to enable";
			})
		end
		if string.sub(msg, 1, 7) == (prefix.."speed ") then
			lplayer.Character.Humanoid.WalkSpeed = (string.sub(msg, 8))
		end
		if string.sub(msg, 1, 4) == (prefix.."ws ") then
			lplayer.Character.Humanoid.WalkSpeed = (string.sub(msg, 5))
		end
		if string.sub(msg, 1, 11) == (prefix.."hipheight ") then
			lplayer.Character.Humanoid.HipHeight = (string.sub(msg, 12))
		end
		if string.sub(msg, 1, 4) == (prefix.."hh ") then
			lplayer.Character.Humanoid.HipHeight = (string.sub(msg, 5))
		end
		if string.sub(msg, 1, 11) == (prefix.."jumppower ") then
			lplayer.Character.Humanoid.JumpPower = (string.sub(msg, 12))
		end
		if string.sub(msg, 1, 4) == (prefix.."jp ") then
			lplayer.Character.Humanoid.JumpPower = (string.sub(msg, 5))
		end
		if string.sub(msg, 1, 8) == (prefix.."default") then
			lplayer.Character.Humanoid.JumpPower = 50
			lplayer.Character.Humanoid.WalkSpeed = 16
			lplayer.Character.Humanoid.HipHeight = 0
		end
		if string.sub(msg, 1, 7) == (prefix.."annoy ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
				annoying = true
				annplr = v
			end
		end
		if string.sub(msg, 1, 8) == (prefix.."unannoy") then
			annoying = false
		end
		if string.sub(msg, 1, 10) == (prefix.."headwalk ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 11))) do
				hwalk = true
				hdwplr = v
			end
		end
		if string.sub(msg, 1, 11) == (prefix.."unheadwalk") then
			hwalk = false
		end
		if string.sub(msg, 1, 8) == (prefix.."nolimbs") then
			lplayer.Character["Left Leg"]:Destroy()
			lplayer.Character["Left Arm"]:Destroy()
			lplayer.Character["Right Leg"]:Destroy()
			lplayer.Character["Right Arm"]:Destroy()
		end
		if string.sub(msg, 1, 4) == (prefix.."god") then
			lplayer.Character.Humanoid.Name = 1
			local l = lplayer.Character["1"]:Clone()
			l.Parent = lplayer.Character
			l.Name = "Humanoid"
			wait(0.1)
			lplayer.Character["1"]:Destroy()
			game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
			lplayer.Character.Animate.Disabled = true
			wait(0.1)
			lplayer.Character.Animate.Disabled = false
			lplayer.Character.Humanoid.DisplayDistanceType = "None"
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "FE Godmode enabled";
				Text = "Use ;grespawn or ;respawn to remove";
			})
		end
		if string.sub(msg, 1, 9) == (prefix.."drophats") then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA("Accessory")) or (v:IsA("Hat")) then
					v.Parent = workspace
				end
			end
		end
		if string.sub(msg, 1, 9) == (prefix.."droptool") then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA("Tool")) then
					v.Parent = workspace
				end
			end
		end
		if string.sub(msg, 1, 10) == (prefix.."loopdhats") then
			droppinghats = true
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Loop Drop Enabled";
				Text = "Type ;unloopdhats to disable";
			})
		end
		if string.sub(msg, 1, 12) == (prefix.."unloopdhats") then
			droppinghats = false
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Loop Drop Disabled";
				Text = "Type ;loopdhats to enable.";
			})
		end
		if string.sub(msg, 1, 10) == (prefix.."loopdtool") then
			droppingtools = true
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Loop Drop Enabled";
				Text = "Type ;unloopdtool to disable";
			})
		end
		if string.sub(msg, 1, 12) == (prefix.."unloopdtool") then
			droppingtools = false
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Loop Drop Disabled";
				Text = "Type ;loopdtool to enable.";
			})
		end
		if string.sub(msg, 1, 10) == (prefix.."invisible") then -- Credit to Timeless
			Local = game:GetService('Players').LocalPlayer
			Char  = Local.Character
			touched,tpdback = false, false
			box = Instance.new('Part',workspace)
			box.Anchored = true
			box.CanCollide = true
			box.Size = Vector3.new(10,1,10)
			box.Position = Vector3.new(0,10000,0)
			box.Touched:connect(function(part)
				if (part.Parent.Name == Local.Name) then
					if touched == false then
						touched = true
						function apply()
							if script.Disabled ~= true then
								no = Char.HumanoidRootPart:Clone()
								wait(.25)
								Char.HumanoidRootPart:Destroy()
								no.Parent = Char
								Char:MoveTo(loc)
								touched = false
							end end
						if Char then
							apply()
						end
					end
				end
			end)
			repeat wait() until Char
			loc = Char.HumanoidRootPart.Position
			Char:MoveTo(box.Position + Vector3.new(0,.5,0))
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Invisibility enabled!";
				Text = "Reset or use ;respawn to remove.";
			})
		end
		if string.sub(msg, 1, 6) == (prefix.."view ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
				if game:GetService("Players")[v.Name].Character.Humanoid then
					game:GetService("Workspace").CurrentCamera.CameraSubject = game:GetService("Players")[v.Name].Character.Humanoid
				else
					game:GetService("Workspace").CurrentCamera.CameraSubject = game:GetService("Players")[v.Name].Character.Head
				end
			end
		end
		if string.sub(msg, 1, 7) == (prefix.."unview") then
			if lplayer.Character.Humanoid then
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Humanoid
			else
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Head
			end
		end
		if string.sub(msg, 1, 6) == (prefix.."goto ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
			end
		end
		if string.sub(msg, 1, 4) == (prefix.."fly") then
			repeat wait() until lplayer and lplayer.Character and lplayer.Character:FindFirstChild('HumanoidRootPart') and lplayer.Character:FindFirstChild('Humanoid')
			repeat wait() until Mouse

			local T = lplayer.Character.HumanoidRootPart
			local CONTROL = {F = 0, B = 0, L = 0, R = 0}
			local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
			local SPEED = speedget

			local function fly()
				flying = true
				local BG = Instance.new('BodyGyro', T)
				local BV = Instance.new('BodyVelocity', T)
				BG.P = 9e4
				BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
				BG.cframe = T.CFrame
				BV.velocity = Vector3.new(0, 0.1, 0)
				BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
				spawn(function()
					repeat wait()
						lplayer.Character.Humanoid.PlatformStand = true
						if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
							SPEED = 50
						elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
							SPEED = 0
						end
						if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
							BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
							lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
						elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
							BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
						else
							BV.velocity = Vector3.new(0, 0.1, 0)
						end
						BG.cframe = workspace.CurrentCamera.CoordinateFrame
					until not flying
					CONTROL = {F = 0, B = 0, L = 0, R = 0}
					lCONTROL = {F = 0, B = 0, L = 0, R = 0}
					SPEED = 0
					BG:destroy()
					BV:destroy()
					lplayer.Character.Humanoid.PlatformStand = false
				end)
			end
			Mouse.KeyDown:connect(function(KEY)
				if KEY:lower() == 'w' then
					CONTROL.F = speedfly
				elseif KEY:lower() == 's' then
					CONTROL.B = -speedfly
				elseif KEY:lower() == 'a' then
					CONTROL.L = -speedfly 
				elseif KEY:lower() == 'd' then 
					CONTROL.R = speedfly
				end
			end)
			Mouse.KeyUp:connect(function(KEY)
				if KEY:lower() == 'w' then
					CONTROL.F = 0
				elseif KEY:lower() == 's' then
					CONTROL.B = 0
				elseif KEY:lower() == 'a' then
					CONTROL.L = 0
				elseif KEY:lower() == 'd' then
					CONTROL.R = 0
				end
			end)
			fly()
		end
		if string.sub(msg, 1, 6) == (prefix.."unfly") then
			flying = false
			lplayer.Character.Humanoid.PlatformStand = false
		end
		if string.sub(msg, 1, 6) == (prefix.."chat ") then
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer((string.sub(msg, 7)), "All")
		end
		if string.sub(msg, 1, 6) == (prefix.."spam ") then
			spamtext = (string.sub(msg, 7))
			spamming = true
		end
		if string.sub(msg, 1, 7) == (prefix.."unspam") then
			spamming = false
		end
		if string.sub(msg, 1, 10) == (prefix.."spamwait ") then
			spamdelay = (string.sub(msg, 11))
		end
		if string.sub(msg, 1, 8) == (prefix.."pmspam ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
				pmspammed = v.Name
				spammingpm = true
			end
		end
		if string.sub(msg, 1, 9) == (prefix.."unpmspam") then
			spammingpm = false
		end
		if string.sub(msg, 1, 9) == (prefix.."cfreeze ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 10))) do
				v.Character["Left Leg"].Anchored = true
				v.Character["Left Arm"].Anchored = true
				v.Character["Right Leg"].Anchored = true
				v.Character["Right Arm"].Anchored = true
				v.Character.Torso.Anchored = true
				v.Character.Head.Anchored = true
			end
		end
		if string.sub(msg, 1, 11) == (prefix.."uncfreeze ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 12))) do
				v.Character["Left Leg"].Anchored = false
				v.Character["Left Arm"].Anchored = false
				v.Character["Right Leg"].Anchored = false
				v.Character["Right Arm"].Anchored = false
				v.Character.Torso.Anchored = false
				v.Character.Head.Anchored = false
			end
		end
		if string.sub(msg, 1, 9) == (prefix.."unlockws") then
			local a = game:GetService("Workspace"):getChildren()
			for i = 1, #a do
				if a[i].className == "Part" then
					a[i].Locked = false
				elseif a[i].className == "Model" then
					local r = a[i]:getChildren()
					for i = 1, #r do
						if r[i].className == "Part" then
							r[i].Locked = false
						end
					end
				end
			end
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Success!";
				Text = "Workspace unlocked. Use ;lockws to lock.";
			})
		end
		if string.sub(msg, 1, 7) == (prefix.."lockws") then
			local a = game:GetService("Workspace"):getChildren()
			for i = 1, #a do
				if a[i].className == "Part" then
					a[i].Locked = true
				elseif a[i].className == "Model" then
					local r = a[i]:getChildren()
					for i = 1, #r do
						if r[i].className == "Part" then
							r[i].Locked = true
						end
					end
				end
			end
		end
		if string.sub(msg, 1, 7) == (prefix.."btools") then
			local Clone_T = Instance.new("HopperBin",lplayer.Backpack)
			Clone_T.BinType = "Clone"
			local Destruct = Instance.new("HopperBin",lplayer.Backpack)
			Destruct.BinType = "Hammer"
			local Hold_T = Instance.new("HopperBin",lplayer.Backpack)
			Hold_T.BinType = "Grab"
		end
		if string.sub(msg, 1, 7) == (prefix.."pstand") then
			lplayer.Character.Humanoid.PlatformStand = true
		end
		if string.sub(msg, 1, 9) == (prefix.."unpstand") then
			lplayer.Character.Humanoid.PlatformStand = false
		end
		if string.sub(msg, 1, 10) == (prefix.."blockhead") then
			lplayer.Character.Head.Mesh:Destroy()
		end
		if string.sub(msg, 1, 4) == (prefix.."sit") then
			lplayer.Character.Humanoid.Sit = true
		end
		if string.sub(msg, 1, 10) == (prefix.."bringobj ") then
			local function bringobjw()
				for i,obj in ipairs(game:GetService("Workspace"):GetDescendants()) do
					if obj.Name == (string.sub(msg, 11)) then
						obj.CFrame = lplayer.Character.HumanoidRootPart.CFrame
						obj.CanCollide = false
						obj.Transparency = 0.7
						wait()
						obj.CFrame = lplayer.Character["Left Leg"].CFrame
						wait()
						obj.CFrame = lplayer.Character["Right Leg"].CFrame
						wait()
						obj.CFrame = lplayer.Character["Head"].CFrame
					end
				end
			end
			while wait() do
				bringobjw()
			end
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "BringObj";
				Text = "BringObj enabled.";
			})
		end
		if string.sub(msg, 1, 7) == (prefix.."wsvis ") then
			vis = (string.sub(msg, 8))
			local a = game:GetService("Workspace"):GetDescendants()
			for i = 1, #a do
				if a[i].className == "Part" then
					a[i].Transparency = vis
				elseif a[i].className == "Model" then
					local r = a[i]:getChildren()
					for i = 1, #r do
						if r[i].className == "Part" then
							r[i].Transparency = vis
						end
					end
				end
			end
		end
		if string.sub(msg, 1, 11) == (prefix.."hypertotal") then
			loadstring(game:GetObjects("rbxassetid://1255063809")[1].Source)()
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Success!";
				Text = "HyperTotal GUI Loaded!";
			})
		end
		if string.sub(msg, 1, 5) == (prefix.."cmds") then
			CMDSFRAME.Visible = true
		end
		if string.sub(msg, 1, 10) == (prefix.."rmeshhats") then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA("Accessory")) or (v:IsA("Hat")) then
					v.Handle.Mesh:Destroy()
				end
			end
		end
		if string.sub(msg, 1, 10) == (prefix.."blockhats") then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA("Accessory")) or (v:IsA("Hat")) then
					v.Handle.Mesh:Destroy()
				end
			end
		end
		if string.sub(msg, 1, 10) == (prefix.."rmeshtool") then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA("Tool")) then
					v.Handle.Mesh:Destroy()
				end
			end
		end
		if string.sub(msg, 1, 10) == (prefix.."blocktool") then
			for i,v in pairs(lplayer.Character:GetChildren()) do
				if (v:IsA("Tool")) then
					v.Handle.Mesh:Destroy()
				end
			end
		end
		if string.sub(msg, 1, 8) == (prefix.."spinner") then
			local p = Instance.new("RocketPropulsion")
			p.Parent = lplayer.Character.HumanoidRootPart
			p.Name = "Spinner"
			p.Target = lplayer.Character["Left Arm"]
			p:Fire()
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Spinner enabled";
				Text = "Type ;nospinner to disable.";
			})
		end
		if string.sub(msg, 1, 10) == (prefix.."nospinner") then
			lplayer.Character.HumanoidRootPart.Spinner:Destroy()
		end
		if string.sub(msg, 1, 7) == (prefix.."reachd") then
			for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
				if v:isA("Tool") then
					local a = Instance.new("SelectionBox",v.Handle)
					a.Adornee = v.Handle
					v.Handle.Size = Vector3.new(0.5,0.5,60)
					v.GripPos = Vector3.new(0,0,0)
					lplayer.Character.Humanoid:UnequipTools()
				end
			end
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Reach applied!";
				Text = "Applied to equipped sword. Use ;noreach to disable.";
			})
		end
		if string.sub(msg, 1, 7) == (prefix.."reach ") then
			for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
				if v:isA("Tool") then
					handleSize = v.Handle.Size
					wait()
					local a = Instance.new("SelectionBox",v.Handle)
					a.Name = "a"
					a.Adornee = v.Handle
					v.Handle.Size = Vector3.new(0.5,0.5,(string.sub(msg, 8)))
					v.GripPos = Vector3.new(0,0,0)
					lplayer.Character.Humanoid:UnequipTools()
				end
			end
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Reach applied!";
				Text = "Applied to equipped sword. Use ;noreach to disable.";
			})
		end
		if string.sub(msg, 1, 8) == (prefix.."noreach") then
			for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
				if v:isA("Tool") then
					v.Handle.a:Destroy()
					v.Handle.Size = handleSize
				end
			end
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Reach removed!";
				Text = "Removed reach from equipped sword.";
			})
		end
		if string.sub(msg, 1, 7) == (prefix.."rkill ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 8)))do
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character["1"]:Clone()
				l.Parent = lplayer.Character
				l.Name = "Humanoid"
				wait(0.1)
				lplayer.Character["1"]:Destroy()
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = "None"
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
					lplayer.Character.Humanoid:EquipTool(v)
				end
				wait(0.1)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.2)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.5)
				lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-100000,10,-100000))
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Tools needed!";
					Text = "You need a tool in your backpack for this command!";
				})
			end
		end
		if string.sub(msg, 1, 7) == (prefix.."tp me ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
			end
		end
		if string.sub(msg, 1, 8) == (prefix.."cbring ") then
			if (string.sub(msg, 9)) == "all" or (string.sub(msg, 9)) == "All" or (string.sub(msg, 9)) == "ALL" then
				cbringall = true
			else
				for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
					brplr = v.Name
				end
			end
			cbring = true
		end
		if string.sub(msg, 1, 9) == (prefix.."uncbring") then
			cbring = false
			cbringall = false
		end
		if string.sub(msg, 1, 6) == (prefix.."swap ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
				local NOWPLR = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				local NOW = lplayer.Character.HumanoidRootPart.CFrame
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character["1"]:Clone()
				l.Parent = lplayer.Character
				l.Name = "Humanoid"
				wait(0.1)
				lplayer.Character["1"]:Destroy()
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = "None"
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
					lplayer.Character.Humanoid:EquipTool(v)
				end
				local function tp(player,player2)
					local char1,char2=player.Character,player2.Character
					if char1 and char2 then
						char1:MoveTo(char2.Head.Position)
					end
				end
				wait(0.1)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.2)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				wait(0.5)
				lplayer.Character.HumanoidRootPart.CFrame = NOW
				wait(0.6)
				tp(lplayer, game:GetService("Players")[v.Name])
				wait(0.4)
				lplayer.Character.HumanoidRootPart.CFrame = NOWPLR
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Tools needed!";
					Text = "You need a tool in your backpack for this command!";
				})
			end
		end
		if string.sub(msg, 1, 8) == (prefix.."glitch ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character["1"]:Clone()
				l.Parent = lplayer.Character
				l.Name = "Humanoid"
				wait(0.1)
				lplayer.Character["1"]:Destroy()
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = "None"
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
					lplayer.Character.Humanoid:EquipTool(v)
				end
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
				wait(0.3)
				lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
				wait(0.4)
				b = Instance.new("BodyForce")
				b.Parent = lplayer.Character.HumanoidRootPart
				b.Name = "Glitch"
				b.Force = Vector3.new(100000000,5000,0)
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Tools needed!";
					Text = "You need a tool in your backpack for this command!";
				})
			end
		end
		if string.sub(msg, 1, 9) == (prefix.."unglitch") then
			lplayer.Character.HumanoidRootPart.Glitch:Destroy()
			lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(10000,0,10000)
			b = Instance.new("BodyForce")
			b.Parent = lplayer.Character.HumanoidRootPart
			b.Name = "unGlitch"
			b.Force = Vector3.new(0,-5000000,0)
			wait(2)
			lplayer.Character.HumanoidRootPart.unGlitch:Destroy()
		end
		if string.sub(msg, 1, 9) == (prefix.."grespawn") then
			lplayer.Character.Humanoid.Health = 0
			wait(1)
			lplayer.Character.Head.CFrame = CFrame.new(1000000,0,1000000)
			lplayer.Character.Torso.CFrame = CFrame.new(1000000,0,1000000)
		end
		if string.sub(msg, 1, 9) == (prefix.."explorer") then
			loadstring(game:GetObjects("rbxassetid://492005721")[1].Source)()
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Success!";
				Text = "DEX Explorer has loaded.";
			})
		end
		if string.sub(msg, 1, 6) == (prefix.."anim ") then
			local Anim = Instance.new("Animation")
			Anim.AnimationId = "rbxassetid://"..(string.sub(msg, 7))
			local track = lplayer.Character.Humanoid:LoadAnimation(Anim)
			track:Play(.1, 1, 1)
		end
		if string.sub(msg, 1, 8) == (prefix.."animgui") then
			loadstring(game:GetObjects("rbxassetid://1202558084")[1].Source)()
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Success!";
				Text = "Energize Animations GUI has loaded.";
			})
		end
		if string.sub(msg, 1, 8) == (prefix.."savepos") then
			saved = lplayer.Character.HumanoidRootPart.CFrame
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Position Saved";
				Text = "Use ;loadpos to return to saved position.";
			})
		end
		if string.sub(msg, 1, 8) == (prefix.."loadpos") then
			lplayer.Character.HumanoidRootPart.CFrame = saved
		end
		if string.sub(msg, 1, 6) == (prefix.."bang ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
				local Anim2 = Instance.new("Animation")
				Anim2.AnimationId = "rbxassetid://148840371"
				local track2 = lplayer.Character.Humanoid:LoadAnimation(Anim2)
				track2:Play(.1, 1, 1)
				bplrr = v.Name
				banpl = true
			end
		end
		if string.sub(msg, 1, 7) == (prefix.."unbang") then
			banpl = false
		end
		if string.sub(msg, 1, 10) == (prefix.."bringmod ") then
			local function bringmodw()
				for i,obj in ipairs(game:GetService("Workspace"):GetDescendants()) do
					if obj.Name == (string.sub(msg, 11)) then
						for i,ch in pairs(obj:GetDescendants()) do
							if (ch:IsA("BasePart")) then
								ch.CFrame = lplayer.Character.HumanoidRootPart.CFrame
								ch.CanCollide = false
								ch.Transparency = 0.7
								wait()
								ch.CFrame = lplayer.Character["Left Leg"].CFrame
								wait()
								ch.CFrame = lplayer.Character["Right Leg"].CFrame
								wait()
								ch.CFrame = lplayer.Character["Head"].CFrame
							end
						end
					end
				end
			end
			while wait() do
				bringmodw()
			end
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "BringMod";
				Text = "BringMod enabled.";
			})
		end
		if string.sub(msg, 1, 8) == (prefix.."respawn") then
			local mod = Instance.new('Model', workspace) mod.Name = 're '..lplayer.Name
			local hum = Instance.new('Humanoid', mod)
			local ins = Instance.new('Part', mod) ins.Name = 'Torso' ins.CanCollide = false ins.Transparency = 1
			lplayer.Character = mod
		end
		if string.sub(msg, 1, 9) == (prefix.."shutdown") then
			game:GetService'RunService'.Stepped:Connect(function()
				pcall(function()
					for i,v in pairs(game:GetService'Players':GetPlayers()) do
						if v.Character ~= nil and v.Character:FindFirstChild'Head' then
							for _,x in pairs(v.Character.Head:GetChildren()) do
								if x:IsA'Sound' then x.Playing = true x.CharacterSoundEvent:FireServer(true, true) end
							end
						end
					end
				end)
			end)
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Attempting Shutdown";
				Text = "Shutdown Attempt has begun.";
			})
		end
		if string.sub(msg, 1, 8) == (prefix.."delobj ") then
			objtodel = (string.sub(msg, 9))
			for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
				if v.Name == objtodel then
					v:Destroy()
				end
			end
		end
		if string.sub(msg, 1, 8) == (prefix.."getplrs") then
			for i,v in pairs(game:GetService("Players"):GetPlayers())do
				print(v)
			end
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Printed";
				Text = "Players have been printed to console. (F9)";
			})
		end
		if string.sub(msg, 1, 9) == (prefix.."deldecal") then
			for i,v in pairs(game:GetService("Workspace"):GetDescendants())do
				if (v:IsA("Decal")) then
					v:Destroy()
				end
			end
		end
		if string.sub(msg, 1, 11) == (prefix.."opfinality") then
			loadstring(game:GetObjects("rbxassetid://1294358929")[1].Source)()
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Success!";
				Text = "OpFinality GUI has loaded.";
			})
		end
		if string.sub(msg, 1, 8) == (prefix.."remotes") then
			remotes = true
			added = true
			game.DescendantAdded:connect(function(rmt)
				if added == true then
					if remotes == true then 
						if rmt:IsA("RemoteEvent") then
							print("A RemoteEvent was added!")
							print(" game." .. rmt:GetFullName() .. " | RemoteEvent")
							print(" game." .. rmt:GetFullName() .. " | RemoteEvent", 247, 0, 0, true)
						end end end
			end)
			game.DescendantAdded:connect(function(rmtfnctn)
				if added == true then
					if remotes == true then 
						if rmtfnctn:IsA("RemoteFunction") then
							warn("A RemoteFunction was added!")
							warn(" game." .. rmtfnctn:GetFullName() .. " | RemoteFunction")
							print(" game." .. rmtfnctn:GetFullName() .. " | RemoteFunction", 5, 102, 198, true)
						end end end
			end)

			game.DescendantAdded:connect(function(bndfnctn)
				if added == true then
					if binds == true then 
						if bndfnctn:IsA("BindableFunction") then
							print("A BindableFunction was added!")
							print(" game." .. bndfnctn:GetFullName() .. " | BindableFunction")
							print(" game." .. bndfnctn:GetFullName() .. " | BindableFunction", 239, 247, 4, true)
						end end end
			end)

			game.DescendantAdded:connect(function(bnd)
				if added == true then
					if binds == true then 
						if bnd:IsA("BindableEvent") then
							warn("A BindableEvent was added!")
							warn(" game." .. bnd:GetFullName() .. " | BindableEvent")
							print(" game." .. bnd:GetFullName() .. " | BindableEvent", 13, 193, 22, true)
						end end end
			end)


			if binds == true then
				for i,v in pairs(game:GetDescendants()) do
					if v:IsA("BindableFunction") then
						print(" game." .. v:GetFullName() .. " | BindableFunction")
						print(" game." .. v:GetFullName() .. " | BindableFunction", 239, 247, 4, true)
					end end
				for i,v in pairs(game:GetDescendants()) do
					if v:IsA("BindableEvent") then
						warn(" game." .. v:GetFullName() .. " | BindableEvent")
						print(" game." .. v:GetFullName() .. " | BindableEvent", 13, 193, 22, true)
					end end
			else
				print("Off")
			end
			if remotes == true then
				for i,v in pairs(game:GetDescendants()) do
					if v:IsA("RemoteFunction") then
						warn(" game." .. v:GetFullName() .. " | RemoteFunction")
						print(" game." .. v:GetFullName() .. " | RemoteFunction", 5, 102, 198, true)
					end end
				wait()
				for i,v in pairs(game:GetDescendants()) do
					if v:IsA("RemoteEvent") then
						print(" game." .. v:GetFullName() .. " | RemoteEvent")
						print(" game." .. v:GetFullName() .. " | RemoteEvent", 247, 0, 0, true)
					end end
			else
				print("Off")
			end
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Printing Remotes";
				Text = "Type ;noremotes to disable.";
			})
		end
		if string.sub(msg, 1, 10) == (prefix.."noremotes") then
			remotes = false
			added = false
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Printing Remotes Disabled";
				Text = "Type ;remotes to enable.";
			})
		end
		if string.sub(msg, 1, 10) == (prefix.."tpdefault") then
			spin = false
			followed = false
			traill = false
			noclip = false
			annoying = false
			hwalk = false
			cbringing = false
		end
		if string.sub(msg, 1, 8) == (prefix.."stopsit") then
			stopsitting = true
		end
		if string.sub(msg, 1, 6) == (prefix.."gosit") then
			stopsitting = false
		end
		if string.sub(msg, 1, 8) == (prefix.."version") then
			print(adminversion)
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Version";
				Text = adminversion;
			})
		end
		if string.sub(msg, 1, 8) == (prefix.."clicktp") then
			clickgoto = true
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Click TP";
				Text = "Press E to teleport to mouse position, ;noclicktp to stop";
			})
		end
		if string.sub(msg, 1, 9) == (prefix.."clickdel") then
			clickdel = true
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Click Delete";
				Text = "Press E to delete part at mouse, ;noclickdel to stop";
			})
		end
		if string.sub(msg, 1, 11) == (prefix.."noclickdel") then
			clickdel = false
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Click Delete";
				Text = "Click delete has been disabled.";
			})
		end
		if string.sub(msg, 1, 10) == (prefix.."noclicktp") then
			clickgoto = false
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Click TP";
				Text = "Click TP has been disabled.";
			})
		end
		if string.sub(msg, 1, 8) == (prefix.."toolson") then
			gettingtools = true
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Tools Enabled";
				Text = "Automatically colleting tools dropped.";
			})
		end
		if string.sub(msg, 1, 9) == (prefix.."toolsoff") then
			gettingtools = false
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Tools Disabled";
				Text = "Click TP has been disabled.";
			})
		end
		if string.sub(msg, 1, 10) == (prefix.."delcmdbar") then
			ScreenGui:Destroy()
		end
		if string.sub(msg, 1, 6) == (prefix.."reset") then
			lplayer.Character.Head:Destroy()
		end
		if string.sub(msg, 1, 7) == (prefix.."state ") then
			statechosen = string.sub(msg, 8)
			changingstate = true
		end
		if string.sub(msg, 1, 9) == (prefix.."gravity ") then
			game:GetService("Workspace").Gravity = string.sub(msg, 10)
		end
		if string.sub(msg, 1, 10) == (prefix.."looprhats") then
			removingmeshhats = true
		end
		if string.sub(msg, 1, 12) == (prefix.."unlooprhats") then
			removingmeshhats = false
		end
		if string.sub(msg, 1, 10) == (prefix.."looprtool") then
			removingmeshtool = true
		end
		if string.sub(msg, 1, 12) == (prefix.."unlooprtool") then
			removingmeshtool = false
		end
		if string.sub(msg, 1, 10) == (prefix.."givetool ") then
			for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
				if v:IsA("Tool") then
					for i,player in pairs(GetPlayer(string.sub(msg, 11))) do
						v.Parent = player.Character
					end
				end
			end
		end
		if string.sub(msg, 1, 14) == (prefix.."givealltools ") then
			for i,v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetDescendants()) do
				if v:IsA("Tool") then
					v.Parent = lplayer.Character
					wait()
					for i,player in pairs(GetPlayer(string.sub(msg, 15))) do
						v.Parent = player.Character
					end
				end
			end
		end
		if string.sub(msg, 1, 5) == (prefix.."age ") then
			for i,player in pairs(GetPlayer(string.sub(msg, 6))) do
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(player.Name.." Account Age: "..player.AccountAge.." days!", "All")
			end
		end
		if string.sub(msg, 1, 4) == (prefix.."id ") then
			for i,player in pairs(GetPlayer(string.sub(msg, 5))) do
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(player.Name.." Account ID: "..player.UserId, "All")
			end
		end
		if string.sub(msg, 1, 6) == (prefix..".age ") then
			for i,player in pairs(GetPlayer(string.sub(msg, 7))) do
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = player.AccountAge.." Days";
					Text = "Account age of "..player.Name;
				})
			end
		end
		if string.sub(msg, 1, 5) == (prefix..".id ") then
			for i,player in pairs(GetPlayer(string.sub(msg, 6))) do
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = player.UserId.." ID";
					Text = "Account ID of "..player.Name;
				})
			end
		end
		if string.sub(msg, 1, 7) == (prefix.."gameid") then
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Game ID";
				Text = "Game ID: ".. game.GameId;
			})
		end
		if string.sub(msg, 1, 4) == (prefix.."pgs") then
			local pgscheck = game:GetService("Workspace"):PGSIsEnabled()
			if pgscheck == true then
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "PGSPhysicsSolverEnabled";
					Text = "PGS is Enabled!";
				})
			else
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "PGSPhysicsSolverEnabled";
					Text = "PGS is Disabled!";
				})
			end
		end
		if string.sub(msg, 1, 12) == (prefix.."removeinvis") then
			for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
				if v:IsA("Part") then
					if v.Transparency == 1 then
						if v.Name ~= "HumanoidRootPart" then
							v:Destroy()
						end
					end
				end
			end
		end
		if string.sub(msg, 1, 10) == (prefix.."removefog") then
			game:GetService("Lighting").FogStart = 0
			game:GetService("Lighting").FogEnd = 9999999999999
		end
		if string.sub(msg, 1, 8) == (prefix.."disable") then
			lplayer.Character.Humanoid.Parent = lplayer
		end
		if string.sub(msg, 1, 7) == (prefix.."enable") then
			lplayer.Humanoid.Parent = lplayer.Character
		end
		if string.sub(msg, 1, 8) == (prefix.."prefix ") then
			prefix = (string.sub(msg, 9, 9))
			wait(0.1)
			change()
			wait(0.1)
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Prefix changed!";
				Text = "Prefix is now "..prefix..". Use ;resetprefix to reset to ;";
			})
		end
		if string.sub(msg, 1, 12) == (";resetprefix") then
			prefix = ";"
			wait(0.1)
			change()
			wait(0.1)
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Prefix changed!";
				Text = "Prefix is now "..prefix..". Make sure it's one key!";
			})
		end
		if string.sub(msg, 1, 10) == (prefix.."flyspeed ") then
			speedfly = string.sub(msg, 11)
			wait()
			change()
		end
		if string.sub(msg, 1, 8) == (prefix.."carpet ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
				local Anim3 = Instance.new("Animation")
				Anim3.AnimationId = "rbxassetid://282574440"
				local track3 = lplayer.Character.Humanoid:LoadAnimation(Anim3)
				track3:Play(.1, 1, 1)
				bplrr = v.Name
				banpl = true
			end
		end
		if string.sub(msg, 1, 9) == (prefix.."uncarpet") then
			banpl = false
		end
		if string.sub(msg, 1, 7) == (prefix.."stare ") then
			for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
				staring = true
				stareplr = v
			end
		end
		if string.sub(msg, 1, 8) == (prefix.."unstare") then
			staring = false
		end
		if string.sub(msg, 1, 8) == (prefix.."logchat") then
			chatlogs = true
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "LogChat enabled";
				Text = "Now logging all player chat.";
			})
		end
		if string.sub(msg, 1, 10) == (prefix.."unlogchat") then
			chatlogs = false
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "LogChat disabled";
				Text = "Stopped logging all player chat.";
			})
		end
		if string.sub(msg, 1, 7) == (prefix.."fixcam") then
			game:GetService("Workspace").CurrentCamera:Destroy()
			wait(0.1)
			game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Humanoid
			game:GetService("Workspace").CurrentCamera.CameraType = "Custom"
			lplayer.CameraMinZoomDistance = 0.5
			lplayer.CameraMaxZoomDistance = 400
			lplayer.CameraMode = "Classic"
		end
		if string.sub(msg, 1, 8) == (prefix.."unstate") then
			changingstate = false
		end
	end)

	local function tp()
		for i, player in ipairs(game:GetService("Players"):GetPlayers()) do
			if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
				if player.Name == brplr then
					player.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame + lplayer.Character.HumanoidRootPart.CFrame.lookVector * 2
				end
			end
		end
	end
	local function tpall()
		for i, player in ipairs(game:GetService("Players"):GetPlayers()) do
			if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
				player.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame + lplayer.Character.HumanoidRootPart.CFrame.lookVector * 3
			end
		end
	end
	spawn(function()
		while wait(spamdelay) do
			if spamming == true then
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(spamtext, "All")
			end
		end
	end)
	spawn(function()
		while wait(spamdelay) do
			if spammingpm == true then
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w "..pmspammed.." @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@", "All")
			end
		end
	end)
	spawn(function()
		while wait() do
			if cbring == true then
				tp()
			end
		end
	end)
	spawn(function()
		while wait() do
			if cbringall == true then
				tpall()
			end
		end
	end)

	Mouse.KeyDown:connect(function(Key)
		if Key == prefix then
			CMDBAR:CaptureFocus()
		end
	end)

	CMDBAR.FocusLost:connect(function(enterPressed)
		if enterPressed then
			if string.sub(CMDBAR.Text, 1, 5) == ("kill ") then
				if string.sub(CMDBAR.Text, 6) == "me" then
					lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(100000,0,100000)
				else
					for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6)))do
						local NOW = lplayer.Character.HumanoidRootPart.CFrame
						lplayer.Character.Humanoid.Name = 1
						local l = lplayer.Character["1"]:Clone()
						l.Parent = lplayer.Character
						l.Name = "Humanoid"
						wait(0.1)
						lplayer.Character["1"]:Destroy()
						game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
						lplayer.Character.Animate.Disabled = true
						wait(0.1)
						lplayer.Character.Animate.Disabled = false
						lplayer.Character.Humanoid.DisplayDistanceType = "None"
						for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
							lplayer.Character.Humanoid:EquipTool(v)
						end
						local function tp(player,player2)
							local char1,char2=player.Character,player2.Character
							if char1 and char2 then
								char1:MoveTo(char2.Head.Position)
							end
						end
						wait(0.1)
						lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
						wait(0.2)
						lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
						wait(0.5)
						lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-100000,10,-100000))
						wait(0.7)
						tp(lplayer,game:GetService("Players")[v.Name])
						wait(0.7)
						lplayer.Character.HumanoidRootPart.CFrame = NOW
						game:GetService("StarterGui"):SetCore("SendNotification", {
							Title = "Tools needed!";
							Text = "You need a tool in your backpack for this command!";
						})
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("bring ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7)))do
					local NOW = lplayer.Character.HumanoidRootPart.CFrame
					lplayer.Character.Humanoid.Name = 1
					local l = lplayer.Character["1"]:Clone()
					l.Parent = lplayer.Character
					l.Name = "Humanoid"
					wait(0.1)
					lplayer.Character["1"]:Destroy()
					game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
					lplayer.Character.Animate.Disabled = true
					wait(0.1)
					lplayer.Character.Animate.Disabled = false
					lplayer.Character.Humanoid.DisplayDistanceType = "None"
					for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
						lplayer.Character.Humanoid:EquipTool(v)
					end
					local function tp(player,player2)
						local char1,char2=player.Character,player2.Character
						if char1 and char2 then
							char1.HumanoidRootPart.CFrame = char2.HumanoidRootPart.CFrame
						end
					end
					local function getout(player,player2)
						local char1,char2=player.Character,player2.Character
						if char1 and char2 then
							char1:MoveTo(char2.Head.Position)
						end
					end
					tp(game:GetService("Players")[v.Name], lplayer)
					wait(0.2)
					tp(game:GetService("Players")[v.Name], lplayer)
					wait(0.5)
					lplayer.Character.HumanoidRootPart.CFrame = NOW
					wait(0.5)
					getout(lplayer, game:GetService("Players")[v.Name])
					wait(0.3)
					lplayer.Character.HumanoidRootPart.CFrame = NOW
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = "Tools needed!";
						Text = "You need a tool in your backpack for this command!";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 5) == ("spin ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
					lplayer.Character.Humanoid.Name = 1
					local l = lplayer.Character["1"]:Clone()
					l.Parent = lplayer.Character
					l.Name = "Humanoid"
					wait(0.1)
					lplayer.Character["1"]:Destroy()
					game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
					lplayer.Character.Animate.Disabled = true
					wait(0.1)
					lplayer.Character.Animate.Disabled = false
					lplayer.Character.Humanoid.DisplayDistanceType = "None"
					for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
						lplayer.Character.Humanoid:EquipTool(v)
					end
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
					spinplr = v
					wait(0.5)
					spin = true
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = "Tools needed!";
						Text = "You need a tool in your backpack for this command!";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("unspin") then
				spin = false
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("attach ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
					lplayer.Character.Humanoid.Name = 1
					local l = lplayer.Character["1"]:Clone()
					l.Parent = lplayer.Character
					l.Name = "Humanoid"
					wait(0.1)
					lplayer.Character["1"]:Destroy()
					game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
					lplayer.Character.Animate.Disabled = true
					wait(0.1)
					lplayer.Character.Animate.Disabled = false
					lplayer.Character.Humanoid.DisplayDistanceType = "None"
					for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
						lplayer.Character.Humanoid:EquipTool(v)
					end
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
					wait(0.3)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
					attplr = v
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = "Tools needed!";
						Text = "You need a tool in your backpack for this command!";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("unattach ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 10))) do
					local function getout(player,player2)
						local char1,char2=player.Character,player2.Character
						if char1 and char2 then
							char1:MoveTo(char2.Head.Position)
						end
					end
					getout(lplayer, game:GetService("Players")[v.Name])
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("follow ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
					followed = true
					flwplr = v
				end
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("unfollow") then
				followed = false
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("freefall ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 10))) do
					local NOW = lplayer.Character.HumanoidRootPart.CFrame
					lplayer.Character.Humanoid.Name = 1
					local l = lplayer.Character["1"]:Clone()
					l.Parent = lplayer.Character
					l.Name = "Humanoid"
					wait(0.1)
					lplayer.Character["1"]:Destroy()
					game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
					lplayer.Character.Animate.Disabled = true
					wait(0.1)
					lplayer.Character.Animate.Disabled = false
					lplayer.Character.Humanoid.DisplayDistanceType = "None"
					for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
						lplayer.Character.Humanoid:EquipTool(v)
					end
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.2)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.6)
					lplayer.Character.HumanoidRootPart.CFrame = NOW
					wait(0.6)
					lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(0,50000,0)
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = "Tools needed!";
						Text = "You need a tool in your backpack for this command!";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("trail ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
					traill = true
					trlplr = v
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("untrail") then
				traill = false
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("orbit ") then
				if string.sub(CMDBAR.Text, 7) == "all" or string.sub(CMDBAR.Text, 7) == "others" or string.sub(CMDBAR.Text, 7) == "me" then
					lplayer.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame
				else
					for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
						local o = Instance.new("RocketPropulsion")
						o.Parent = lplayer.Character.HumanoidRootPart
						o.Name = "Orbit"
						o.Target = game:GetService("Players")[v.Name].Character.HumanoidRootPart
						o:Fire()
						noclip = true
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("unorbit") then
				lplayer.Character.HumanoidRootPart.Orbit:Destroy()
				noclip = false
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("fling ") then
				if string.sub(CMDBAR.Text, 7) == "all" or string.sub(CMDBAR.Text, 7) == "others" or string.sub(CMDBAR.Text, 7) == "me" then
					lplayer.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame
				else
					for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
						local y = Instance.new("RocketPropulsion")
						y.Parent = lplayer.Character.HumanoidRootPart
						y.CartoonFactor = 1
						y.MaxThrust = 800000
						y.MaxSpeed = 1000
						y.ThrustP = 200000
						y.Name = "Fling"
						game:GetService("Workspace").CurrentCamera.CameraSubject = game:GetService("Players")[v.Name].Character.Head
						y.Target = game:GetService("Players")[v.Name].Character.HumanoidRootPart
						y:Fire()
						noclip = true
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("unfling") then
				noclip = false
				lplayer.Character.HumanoidRootPart.Fling:Destroy()
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Head
				wait(0.4)
				lplayer.Character.HumanoidRootPart.Fling:Destroy()
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("fecheck") then
				if game:GetService("Workspace").FilteringEnabled == true then
					warn("FE is Enabled (Filtering Enabled)")
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = "FE is Enabled";
						Text = "Filtering Enabled. Enjoy using Reviz Admin!";
					})
				else
					warn("FE is Disabled (Filtering Disabled) Consider using a different admin script.")
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = "FE is Disabled";
						Text = "Filtering Disabled. Consider using a different admin script.";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 5) == ("void ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
					lplayer.Character.Humanoid.Name = 1
					local l = lplayer.Character["1"]:Clone()
					l.Parent = lplayer.Character
					l.Name = "Humanoid"
					wait(0.1)
					lplayer.Character["1"]:Destroy()
					game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
					lplayer.Character.Animate.Disabled = true
					wait(0.1)
					lplayer.Character.Animate.Disabled = false
					lplayer.Character.Humanoid.DisplayDistanceType = "None"
					for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
						lplayer.Character.Humanoid:EquipTool(v)
					end
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.2)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.6)
					lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(999999999999999,0,999999999999999)
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = "Tools needed!";
						Text = "You need a tool in your backpack for this command!";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("noclip") then
				noclip = true
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Noclip enabled";
					Text = "Type ;clip to disable";
				})
			end
			if string.sub(CMDBAR.Text, 1, 4) == ("clip") then
				noclip = false
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Noclip disabled";
					Text = "Type ;noclip to enable";
				})
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("speed ") then
				lplayer.Character.Humanoid.WalkSpeed = (string.sub(CMDBAR.Text, 7))
			end
			if string.sub(CMDBAR.Text, 1, 3) == ("ws ") then
				lplayer.Character.Humanoid.WalkSpeed = (string.sub(CMDBAR.Text, 4))
			end
			if string.sub(CMDBAR.Text, 1, 10) == ("hipheight ") then
				lplayer.Character.Humanoid.HipHeight = (string.sub(CMDBAR.Text, 11))
			end
			if string.sub(CMDBAR.Text, 1, 3) == ("hh ") then
				lplayer.Character.Humanoid.HipHeight = (string.sub(CMDBAR.Text, 4))
			end
			if string.sub(CMDBAR.Text, 1, 10) == ("jumppower ") then
				lplayer.Character.Humanoid.JumpPower = (string.sub(CMDBAR.Text, 11))
			end
			if string.sub(CMDBAR.Text, 1, 3) == ("jp ") then
				lplayer.Character.Humanoid.JumpPower = (string.sub(CMDBAR.Text, 4))
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("default") then
				lplayer.Character.Humanoid.JumpPower = 50
				lplayer.Character.Humanoid.WalkSpeed = 16
				lplayer.Character.Humanoid.HipHeight = 0
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("annoy ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
					annoying = true
					annplr = v
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("unannoy") then
				annoying = false
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("headwalk ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 10))) do
					hwalk = true
					hdwplr = v
				end
			end
			if string.sub(CMDBAR.Text, 1, 10) == ("unheadwalk") then
				hwalk = false
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("nolimbs") then
				lplayer.Character["Left Leg"]:Destroy()
				lplayer.Character["Left Arm"]:Destroy()
				lplayer.Character["Right Leg"]:Destroy()
				lplayer.Character["Right Arm"]:Destroy()
			end
			if string.sub(CMDBAR.Text, 1, 3) == ("god") then
				lplayer.Character.Humanoid.Name = 1
				local l = lplayer.Character["1"]:Clone()
				l.Parent = lplayer.Character
				l.Name = "Humanoid"
				wait(0.1)
				lplayer.Character["1"]:Destroy()
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
				lplayer.Character.Animate.Disabled = true
				wait(0.1)
				lplayer.Character.Animate.Disabled = false
				lplayer.Character.Humanoid.DisplayDistanceType = "None"
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "FE Godmode enabled";
					Text = "Use ;grespawn or ;respawn to remove.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("drophats") then
				for i,v in pairs(lplayer.Character:GetChildren()) do
					if (v:IsA("Accessory")) or (v:IsA("Hat")) then
						v.Parent = workspace
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("droptool") then
				for i,v in pairs(lplayer.Character:GetChildren()) do
					if (v:IsA("Tool")) then
						v.Parent = workspace
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("loopdhats") then
				droppinghats = true
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Loop Drop Enabled";
					Text = "Type ;unloopdhats to disable";
				})
			end
			if string.sub(CMDBAR.Text, 1, 11) == ("unloopdhats") then
				droppinghats = false
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Loop Drop Disabled";
					Text = "Type ;loopdhats to enable.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("loopdtool") then
				droppingtools = true
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Loop Drop Enabled";
					Text = "Type ;unloopdtool to disable";
				})
			end
			if string.sub(CMDBAR.Text, 1, 11) == ("unloopdtool") then
				droppingtools = false
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Loop Drop Disabled";
					Text = "Type ;loopdtool to enable.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("invisible") then -- Credit to Timeless
				Local = game:GetService('Players').LocalPlayer
				Char  = Local.Character
				touched,tpdback = false, false
				box = Instance.new('Part',workspace)
				box.Anchored = true
				box.CanCollide = true
				box.Size = Vector3.new(10,1,10)
				box.Position = Vector3.new(0,10000,0)
				box.Touched:connect(function(part)
					if (part.Parent.Name == Local.Name) then
						if touched == false then
							touched = true
							function apply()
								if script.Disabled ~= true then
									no = Char.HumanoidRootPart:Clone()
									wait(.25)
									Char.HumanoidRootPart:Destroy()
									no.Parent = Char
									Char:MoveTo(loc)
									touched = false
								end end
							if Char then
								apply()
							end
						end
					end
				end)
				repeat wait() until Char
				loc = Char.HumanoidRootPart.Position
				Char:MoveTo(box.Position + Vector3.new(0,.5,0))
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Invisibility enabled!";
					Text = "Reset or use ;respawn to remove.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 5) == ("view ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
					if game:GetService("Players")[v.Name].Character.Humanoid then
						game:GetService("Workspace").CurrentCamera.CameraSubject = game:GetService("Players")[v.Name].Character.Humanoid
					else
						game:GetService("Workspace").CurrentCamera.CameraSubject = game:GetService("Players")[v.Name].Character.Head
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("unview") then
				if lplayer.Character.Humanoid then
					game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Humanoid
				else
					game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Head
				end
			end
			if string.sub(CMDBAR.Text, 1, 5) == ("goto ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				end
			end
			if string.sub(CMDBAR.Text, 1, 3) == ("fly") then
				repeat wait() until lplayer and lplayer.Character and lplayer.Character:FindFirstChild('HumanoidRootPart') and lplayer.Character:FindFirstChild('Humanoid')
				repeat wait() until Mouse

				local T = lplayer.Character.HumanoidRootPart
				local CONTROL = {F = 0, B = 0, L = 0, R = 0}
				local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
				local SPEED = speedget

				local function fly()
					flying = true
					local BG = Instance.new('BodyGyro', T)
					local BV = Instance.new('BodyVelocity', T)
					BG.P = 9e4
					BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
					BG.cframe = T.CFrame
					BV.velocity = Vector3.new(0, 0.1, 0)
					BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
					spawn(function()
						repeat wait()
							lplayer.Character.Humanoid.PlatformStand = true
							if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
								SPEED = 50
							elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
								SPEED = 0
							end
							if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
								BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
								lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
							elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
								BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
							else
								BV.velocity = Vector3.new(0, 0.1, 0)
							end
							BG.cframe = workspace.CurrentCamera.CoordinateFrame
						until not flying
						CONTROL = {F = 0, B = 0, L = 0, R = 0}
						lCONTROL = {F = 0, B = 0, L = 0, R = 0}
						SPEED = 0
						BG:destroy()
						BV:destroy()
						lplayer.Character.Humanoid.PlatformStand = false
					end)
				end
				Mouse.KeyDown:connect(function(KEY)
					if KEY:lower() == 'w' then
						CONTROL.F = speedfly
					elseif KEY:lower() == 's' then
						CONTROL.B = -speedfly
					elseif KEY:lower() == 'a' then
						CONTROL.L = -speedfly 
					elseif KEY:lower() == 'd' then 
						CONTROL.R = speedfly
					end
				end)
				Mouse.KeyUp:connect(function(KEY)
					if KEY:lower() == 'w' then
						CONTROL.F = 0
					elseif KEY:lower() == 's' then
						CONTROL.B = 0
					elseif KEY:lower() == 'a' then
						CONTROL.L = 0
					elseif KEY:lower() == 'd' then
						CONTROL.R = 0
					end
				end)
				fly()
			end
			if string.sub(CMDBAR.Text, 1, 5) == ("unfly") then
				flying = false
				lplayer.Character.Humanoid.PlatformStand = false
			end
			if string.sub(CMDBAR.Text, 1, 5) == ("chat ") then
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer((string.sub(CMDBAR.Text, 6)), "All")
			end
			if string.sub(CMDBAR.Text, 1, 5) == ("spam ") then
				spamtext = (string.sub(CMDBAR.Text, 6))
				spamming = true
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("unspam") then
				spamming = false
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("spamwait ") then
				spamdelay = (string.sub(CMDBAR.Text, 10))
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("pmspam ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
					pmspammed = v.Name
					spammingpm = true
				end
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("unpmspam") then
				spammingpm = false
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("cfreeze ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 9))) do
					v.Character["Left Leg"].Anchored = true
					v.Character["Left Arm"].Anchored = true
					v.Character["Right Leg"].Anchored = true
					v.Character["Right Arm"].Anchored = true
					v.Character.Torso.Anchored = true
					v.Character.Head.Anchored = true
				end
			end
			if string.sub(CMDBAR.Text, 1, 10) == ("uncfreeze ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 11))) do
					v.Character["Left Leg"].Anchored = false
					v.Character["Left Arm"].Anchored = false
					v.Character["Right Leg"].Anchored = false
					v.Character["Right Arm"].Anchored = false
					v.Character.Torso.Anchored = false
					v.Character.Head.Anchored = false
				end
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("unlockws") then
				local a = game:GetService("Workspace"):getChildren()
				for i = 1, #a do
					if a[i].className == "Part" then
						a[i].Locked = false
					elseif a[i].className == "Model" then
						local r = a[i]:getChildren()
						for i = 1, #r do
							if r[i].className == "Part" then
								r[i].Locked = false
							end
						end
					end
				end
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Success!";
					Text = "Workspace unlocked. Use ;lockws to lock.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("lockws") then
				local a = game:GetService("Workspace"):getChildren()
				for i = 1, #a do
					if a[i].className == "Part" then
						a[i].Locked = true
					elseif a[i].className == "Model" then
						local r = a[i]:getChildren()
						for i = 1, #r do
							if r[i].className == "Part" then
								r[i].Locked = true
							end
						end
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("btools") then
				local Clone_T = Instance.new("HopperBin",lplayer.Backpack)
				Clone_T.BinType = "Clone"
				local Destruct = Instance.new("HopperBin",lplayer.Backpack)
				Destruct.BinType = "Hammer"
				local Hold_T = Instance.new("HopperBin",lplayer.Backpack)
				Hold_T.BinType = "Grab"
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("pstand") then
				lplayer.Character.Humanoid.PlatformStand = true
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("unpstand") then
				lplayer.Character.Humanoid.PlatformStand = false
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("blockhead") then
				lplayer.Character.Head.Mesh:Destroy()
			end
			if string.sub(CMDBAR.Text, 1, 3) == ("sit") then
				lplayer.Character.Humanoid.Sit = true
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("bringobj ") then
				local function bringobjw()
					for i,obj in ipairs(game:GetService("Workspace"):GetDescendants()) do
						if obj.Name == (string.sub(CMDBAR.Text, 10)) then
							obj.CFrame = lplayer.Character.HumanoidRootPart.CFrame
							obj.CanCollide = false
							obj.Transparency = 0.7
							wait()
							obj.CFrame = lplayer.Character["Left Leg"].CFrame
							wait()
							obj.CFrame = lplayer.Character["Right Leg"].CFrame
							wait()
							obj.CFrame = lplayer.Character["Head"].CFrame
						end
					end
				end
				while wait() do
					bringobjw()
				end
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "BringObj";
					Text = "BringObj enabled.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("wsvis ") then
				vis = (string.sub(CMDBAR.Text, 7))
				local a = game:GetService("Workspace"):GetDescendants()
				for i = 1, #a do
					if a[i].className == "Part" then
						a[i].Transparency = vis
					elseif a[i].className == "Model" then
						local r = a[i]:getChildren()
						for i = 1, #r do
							if r[i].className == "Part" then
								r[i].Transparency = vis
							end
						end
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 10) == ("hypertotal") then
				loadstring(game:GetObjects("rbxassetid://1255063809")[1].Source)()
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Success!";
					Text = "HyperTotal GUI Loaded!";
				})
			end
			if string.sub(CMDBAR.Text, 1, 4) == ("cmds") then
				CMDSFRAME.Visible = true
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("rmeshhats") then
				for i,v in pairs(lplayer.Character:GetChildren()) do
					if (v:IsA("Accessory")) or (v:IsA("Hat")) then
						v.Handle.Mesh:Destroy()
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("blockhats") then
				for i,v in pairs(lplayer.Character:GetChildren()) do
					if (v:IsA("Accessory")) or (v:IsA("Hat")) then
						v.Handle.Mesh:Destroy()
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("rmeshtool") then
				for i,v in pairs(lplayer.Character:GetChildren()) do
					if (v:IsA("Tool")) then
						v.Handle.Mesh:Destroy()
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("blocktool") then
				for i,v in pairs(lplayer.Character:GetChildren()) do
					if (v:IsA("Tool")) then
						v.Handle.Mesh:Destroy()
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("spinner") then
				local p = Instance.new("RocketPropulsion")
				p.Parent = lplayer.Character.HumanoidRootPart
				p.Name = "Spinner"
				p.Target = lplayer.Character["Left Arm"]
				p:Fire()
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Spinner enabled";
					Text = "Type ;nospinner to disable.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("nospinner") then
				lplayer.Character.HumanoidRootPart.Spinner:Destroy()
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("reachd") then
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
					if v:isA("Tool") then
						local a = Instance.new("SelectionBox",v.Handle)
						a.Adornee = v.Handle
						v.Handle.Size = Vector3.new(0.5,0.5,60)
						v.GripPos = Vector3.new(0,0,0)
						lplayer.Character.Humanoid:UnequipTools()
					end
				end
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Reach applied!";
					Text = "Applied to equipped sword. Use ;noreach to disable.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("reach ") then
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
					if v:isA("Tool") then
						local a = Instance.new("SelectionBox",v.Handle)
						a.Name = "Reach"
						a.Adornee = v.Handle
						v.Handle.Size = Vector3.new(0.5,0.5,(string.sub(CMDBAR.Text, 7)))
						v.GripPos = Vector3.new(0,0,0)
						lplayer.Character.Humanoid:UnequipTools()
					end
				end
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Reach applied!";
					Text = "Applied to equipped sword. Use ;noreach to disable.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("noreach") then
				for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
					if v:isA("Tool") then
						v.Handle.Reach:Destroy()
					end
				end
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Reach removed!";
					Text = "Removed reach from equipped sword.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("rkill ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7)))do
					lplayer.Character.Humanoid.Name = 1
					local l = lplayer.Character["1"]:Clone()
					l.Parent = lplayer.Character
					l.Name = "Humanoid"
					wait(0.1)
					lplayer.Character["1"]:Destroy()
					game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
					lplayer.Character.Animate.Disabled = true
					wait(0.1)
					lplayer.Character.Animate.Disabled = false
					lplayer.Character.Humanoid.DisplayDistanceType = "None"
					for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
						lplayer.Character.Humanoid:EquipTool(v)
					end
					wait(0.1)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.2)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.5)
					lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-100000,10,-100000))
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = "Tools needed!";
						Text = "You need a tool in your backpack for this command!";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("tp me ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("cbring ") then
				if (string.sub(CMDBAR.Text, 8)) == "all" or (string.sub(CMDBAR.Text, 8)) == "All" or (string.sub(CMDBAR.Text, 8)) == "ALL" then
					cbringall = true
				else
					for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
						brplr = v.Name
					end
				end
				cbring = true
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("uncbring") then
				cbring = false
				cbringall = false
			end
			if string.sub(CMDBAR.Text, 1, 5) == ("swap ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
					local NOWPLR = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
					local NOW = lplayer.Character.HumanoidRootPart.CFrame
					lplayer.Character.Humanoid.Name = 1
					local l = lplayer.Character["1"]:Clone()
					l.Parent = lplayer.Character
					l.Name = "Humanoid"
					wait(0.1)
					lplayer.Character["1"]:Destroy()
					game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
					lplayer.Character.Animate.Disabled = true
					wait(0.1)
					lplayer.Character.Animate.Disabled = false
					lplayer.Character.Humanoid.DisplayDistanceType = "None"
					for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
						lplayer.Character.Humanoid:EquipTool(v)
					end
					local function tp(player,player2)
						local char1,char2=player.Character,player2.Character
						if char1 and char2 then
							char1:MoveTo(char2.Head.Position)
						end
					end
					wait(0.1)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.2)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
					wait(0.5)
					lplayer.Character.HumanoidRootPart.CFrame = NOW
					wait(0.6)
					tp(lplayer, game:GetService("Players")[v.Name])
					wait(0.4)
					lplayer.Character.HumanoidRootPart.CFrame = NOWPLR
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = "Tools needed!";
						Text = "You need a tool in your backpack for this command!";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("glitch ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
					lplayer.Character.Humanoid.Name = 1
					local l = lplayer.Character["1"]:Clone()
					l.Parent = lplayer.Character
					l.Name = "Humanoid"
					wait(0.1)
					lplayer.Character["1"]:Destroy()
					game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
					lplayer.Character.Animate.Disabled = true
					wait(0.1)
					lplayer.Character.Animate.Disabled = false
					lplayer.Character.Humanoid.DisplayDistanceType = "None"
					for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
						lplayer.Character.Humanoid:EquipTool(v)
					end
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
					wait(0.3)
					lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
					wait(0.4)
					b = Instance.new("BodyForce")
					b.Parent = lplayer.Character.HumanoidRootPart
					b.Name = "Glitch"
					b.Force = Vector3.new(100000000,5000,0)
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = "Tools needed!";
						Text = "You need a tool in your backpack for this command!";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("unglitch") then
				lplayer.Character.HumanoidRootPart.Glitch:Destroy()
				lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(10000,0,10000)
				b = Instance.new("BodyForce")
				b.Parent = lplayer.Character.HumanoidRootPart
				b.Name = "unGlitch"
				b.Force = Vector3.new(0,-5000000,0)
				wait(2)
				lplayer.Character.HumanoidRootPart.unGlitch:Destroy()
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("grespawn") then
				lplayer.Character.Humanoid.Health = 0
				wait(1)
				lplayer.Character.Head.CFrame = CFrame.new(1000000,0,1000000)
				lplayer.Character.Torso.CFrame = CFrame.new(1000000,0,1000000)
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("explorer") then
				loadstring(game:GetObjects("rbxassetid://492005721")[1].Source)()
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Success!";
					Text = "DEX Explorer has loaded.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 5) == ("anim ") then
				local Anim = Instance.new("Animation")
				Anim.AnimationId = "rbxassetid://"..(string.sub(CMDBAR.Text, 6))
				local track = lplayer.Character.Humanoid:LoadAnimation(Anim)
				track:Play(.1, 1, 1)
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("animgui") then
				loadstring(game:GetObjects("rbxassetid://1202558084")[1].Source)()
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Success!";
					Text = "Energize Animations GUI has loaded.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("savepos") then
				saved = lplayer.Character.HumanoidRootPart.CFrame
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Position Saved";
					Text = "Use ;loadpos to return to saved position.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("loadpos") then
				lplayer.Character.HumanoidRootPart.CFrame = saved
			end
			if string.sub(CMDBAR.Text, 1, 5) == ("bang ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
					local Anim2 = Instance.new("Animation")
					Anim2.AnimationId = "rbxassetid://148840371"
					local track2 = lplayer.Character.Humanoid:LoadAnimation(Anim2)
					track2:Play(.1, 1, 1)
					bplrr = v.Name
					banpl = true
				end
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("unbang") then
				banpl = false
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("bringmod ") then
				local function bringmodw()
					for i,obj in ipairs(game:GetService("Workspace"):GetDescendants()) do
						if obj.Name == (string.sub(CMDBAR.Text, 10)) then
							for i,ch in pairs(obj:GetDescendants()) do
								if (ch:IsA("BasePart")) then
									ch.CFrame = lplayer.Character.HumanoidRootPart.CFrame
									ch.CanCollide = false
									ch.Transparency = 0.7
									wait()
									ch.CFrame = lplayer.Character["Left Leg"].CFrame
									wait()
									ch.CFrame = lplayer.Character["Right Leg"].CFrame
									wait()
									ch.CFrame = lplayer.Character["Head"].CFrame
								end
							end
						end
					end
				end
				while wait() do
					bringmodw()
				end
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "BringMod";
					Text = "BringMod enabled.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("respawn") then
				local mod = Instance.new('Model', workspace) mod.Name = 're '..lplayer.Name
				local hum = Instance.new('Humanoid', mod)
				local ins = Instance.new('Part', mod) ins.Name = 'Torso' ins.CanCollide = false ins.Transparency = 1
				lplayer.Character = mod
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("shutdown") then
				game:GetService'RunService'.Stepped:Connect(function()
					pcall(function()
						for i,v in pairs(game:GetService'Players':GetPlayers()) do
							if v.Character ~= nil and v.Character:FindFirstChild'Head' then
								for _,x in pairs(v.Character.Head:GetChildren()) do
									if x:IsA'Sound' then x.Playing = true x.CharacterSoundEvent:FireServer(true, true) end
								end
							end
						end
					end)
				end)
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Attempting Shutdown";
					Text = "Shutdown Attempt has begun.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("delobj ") then
				objtodel = (string.sub(CMDBAR.Text, 8))
				for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
					if v.Name == objtodel then
						v:Destroy()
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("getplrs") then
				for i,v in pairs(game:GetService("Players"):GetPlayers())do
					print(v)
				end
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Printed";
					Text = "Players have been printed to console. (F9)";
				})
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("deldecal") then
				for i,v in pairs(game:GetService("Workspace"):GetDescendants())do
					if (v:IsA("Decal")) then
						v:Destroy()
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 10) == ("opfinality") then
				loadstring(game:GetObjects("rbxassetid://1294358929")[1].Source)()
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Success!";
					Text = "OpFinality GUI has loaded.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("remotes") then
				remotes = true
				added = true
				game.DescendantAdded:connect(function(rmt)
					if added == true then
						if remotes == true then 
							if rmt:IsA("RemoteEvent") then
								print("A RemoteEvent was added!")
								print(" game." .. rmt:GetFullName() .. " | RemoteEvent")
								print(" game." .. rmt:GetFullName() .. " | RemoteEvent", 247, 0, 0, true)
							end end end
				end)
				game.DescendantAdded:connect(function(rmtfnctn)
					if added == true then
						if remotes == true then 
							if rmtfnctn:IsA("RemoteFunction") then
								warn("A RemoteFunction was added!")
								warn(" game." .. rmtfnctn:GetFullName() .. " | RemoteFunction")
								print(" game." .. rmtfnctn:GetFullName() .. " | RemoteFunction", 5, 102, 198, true)
							end end end
				end)

				game.DescendantAdded:connect(function(bndfnctn)
					if added == true then
						if binds == true then 
							if bndfnctn:IsA("BindableFunction") then
								print("A BindableFunction was added!")
								print(" game." .. bndfnctn:GetFullName() .. " | BindableFunction")
								print(" game." .. bndfnctn:GetFullName() .. " | BindableFunction", 239, 247, 4, true)
							end end end
				end)

				game.DescendantAdded:connect(function(bnd)
					if added == true then
						if binds == true then 
							if bnd:IsA("BindableEvent") then
								warn("A BindableEvent was added!")
								warn(" game." .. bnd:GetFullName() .. " | BindableEvent")
								print(" game." .. bnd:GetFullName() .. " | BindableEvent", 13, 193, 22, true)
							end end end
				end)


				if binds == true then
					for i,v in pairs(game:GetDescendants()) do
						if v:IsA("BindableFunction") then
							print(" game." .. v:GetFullName() .. " | BindableFunction")
							print(" game." .. v:GetFullName() .. " | BindableFunction", 239, 247, 4, true)
						end end
					for i,v in pairs(game:GetDescendants()) do
						if v:IsA("BindableEvent") then
							warn(" game." .. v:GetFullName() .. " | BindableEvent")
							print(" game." .. v:GetFullName() .. " | BindableEvent", 13, 193, 22, true)
						end end
				else
					print("Off")
				end
				if remotes == true then
					for i,v in pairs(game:GetDescendants()) do
						if v:IsA("RemoteFunction") then
							warn(" game." .. v:GetFullName() .. " | RemoteFunction")
							print(" game." .. v:GetFullName() .. " | RemoteFunction", 5, 102, 198, true)
						end end
					wait()
					for i,v in pairs(game:GetDescendants()) do
						if v:IsA("RemoteEvent") then
							print(" game." .. v:GetFullName() .. " | RemoteEvent")
							print(" game." .. v:GetFullName() .. " | RemoteEvent", 247, 0, 0, true)
						end end
				else
					print("Off")
				end
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Printing Remotes";
					Text = "Type ;noremotes to disable.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("noremotes") then
				remotes = false
				added = false
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Printing Remotes Disabled";
					Text = "Type ;remotes to enable.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("tpdefault") then
				spin = false
				followed = false
				traill = false
				noclip = false
				annoying = false
				hwalk = false
				cbringing = false
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("stopsit") then
				stopsitting = true
			end
			if string.sub(CMDBAR.Text, 1, 5) == ("gosit") then
				stopsitting = false
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("version") then
				print(adminversion)
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Version";
					Text = adminversion;
				})
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("clicktp") then
				clickgoto = true
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Click TP";
					Text = "Press E to teleport to mouse position";
				})
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("noclicktp") then
				clickgoto = false
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Click TP";
					Text = "Click TP has been disabled.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("toolson") then
				gettingtools = true
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Tools Enabled";
					Text = "Automatically colleting tools dropped.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("toolsoff") then
				gettingtools = false
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Tools Disabled";
					Text = "Click TP has been disabled.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("delcmdbar") then
				ScreenGui:Destroy()
			end
			if string.sub(CMDBAR.Text, 1, 5) == ("reset") then
				lplayer.Character.Head:Destroy()
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("state ") then
				statechosen = string.sub(CMDBAR.Text, 7)
				changingstate = true
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("gravity ") then
				game:GetService("Workspace").Gravity = string.sub(CMDBAR.Text, 9)
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("looprhats") then
				removingmeshhats = true
			end
			if string.sub(CMDBAR.Text, 1, 11) == ("unlooprhats") then
				removingmeshhats = false
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("looprtool") then
				removingmeshtool = true
			end
			if string.sub(CMDBAR.Text, 1, 11) == ("unlooprtool") then
				removingmeshtool = false
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("givetool ") then
				for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
					if v:IsA("Tool") then
						for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 10))) do
							v.Parent = player.Character
						end
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 4) == ("age ") then
				for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 5))) do
					game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(player.Name.." Account Age: "..player.AccountAge.." days!", "All")
				end
			end
			if string.sub(CMDBAR.Text, 1, 3) == ("id ") then
				for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 4))) do
					game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(player.Name.." Account ID: "..player.UserId, "All")
				end
			end
			if string.sub(CMDBAR.Text, 1, 5) == (".age ") then
				for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = player.AccountAge.." Days";
						Text = "Account age of "..player.Name;
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 4) == (".id ") then
				for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 5))) do
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = player.UserId.." ID";
						Text = "Account ID of "..player.Name;
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("gameid") then
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "Game ID";
					Text = "Game ID: ".. game.GameId;
				})
			end
			if string.sub(CMDBAR.Text, 1, 3) == ("pgs") then
				local pgscheck = game:GetService("Workspace"):PGSIsEnabled()
				if pgscheck == true then
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = "PGSPhysicsSolverEnabled";
						Text = "PGS is Enabled!";
					})
				else
					game:GetService("StarterGui"):SetCore("SendNotification", {
						Title = "PGSPhysicsSolverEnabled";
						Text = "PGS is Disabled!";
					})
				end
			end
			if string.sub(CMDBAR.Text, 1, 11) == ("removeinvis") then
				for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
					if v:IsA("Part") then
						if v.Transparency == 1 then
							if v.Name ~= "HumanoidRootPart" then
								v:Destroy()
							end
						end
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("removefog") then
				game:GetService("Lighting").FogStart = 0
				game:GetService("Lighting").FogEnd = 9999999999999
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("disable") then
				lplayer.Character.Humanoid.Parent = lplayer
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("enable") then
				lplayer.Humanoid.Parent = lplayer.Character
			end
			if string.sub(CMDBAR.Text, 1, 13) == ("givealltools ") then
				for i,v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetDescendants()) do
					if v:IsA("Tool") then
						v.Parent = lplayer.Character
						wait()
						for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 14))) do
							v.Parent = player.Character
						end
					end
				end
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("flyspeed ") then
				speedfly = string.sub(CMDBAR.Text, 10)
				wait()
				change()
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("carpet ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
					local Anim3 = Instance.new("Animation")
					Anim3.AnimationId = "rbxassetid://282574440"
					local track3 = lplayer.Character.Humanoid:LoadAnimation(Anim3)
					track3:Play(.1, 1, 1)
					bplrr = v.Name
					banpl = true
				end
			end
			if string.sub(CMDBAR.Text, 1, 8) == ("uncarpet") then
				banpl = false
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("stare ") then
				for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
					staring = true
					stareplr = v
				end
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("unstare") then
				staring = false
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("logchat") then
				chatlogs = true
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "LogChat enabled";
					Text = "Now logging all player chat.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 9) == ("unlogchat") then
				chatlogs = false
				game:GetService("StarterGui"):SetCore("SendNotification", {
					Title = "LogChat disabled";
					Text = "Stopped logging all player chat.";
				})
			end
			if string.sub(CMDBAR.Text, 1, 6) == ("fixcam") then
				game:GetService("Workspace").CurrentCamera:Destroy()
				wait(0.1)
				game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Humanoid
				game:GetService("Workspace").CurrentCamera.CameraType = "Custom"
				lplayer.CameraMinZoomDistance = 0.5
				lplayer.CameraMaxZoomDistance = 400
				lplayer.CameraMode = "Classic"
			end
			if string.sub(CMDBAR.Text, 1, 7) == ("unstate") then
				changingstate = false
			end
			CMDBAR.Text = ""
		end
	end)

	wait(0.3)
	game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = "Loaded successfully!";
		Text = "Reviz Admin V2 by illremember";
	})
	wait(0.1)
	print("Reviz Admin V2 loaded!")
	if game:GetService("Workspace").FilteringEnabled == true then
		warn("FE is Enabled (Filtering Enabled)")
		game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "FE is Enabled";
			Text = "Filtering Enabled. Enjoy using Reviz Admin!";
		})
	else
		warn("FE is Disabled (Filtering Disabled) Consider using a different admin script.")
		game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = "FE is Disabled";
			Text = "Filtering Disabled. Consider using a different admin script.";
		})
	end

	local intro = Instance.new("ScreenGui")
	local Frame = Instance.new("Frame")
	local ImageLabel = Instance.new("ImageLabel")
	intro.Parent = game:GetService("CoreGui")
	Frame.Parent = intro
	Frame.BackgroundColor3 = Color3.new(1, 1, 1)
	Frame.BackgroundTransparency = 1
	Frame.Size = UDim2.new(1, 0, 0, 300)
	Frame.Position = UDim2.new(0, 0, -0.4, 0)
	ImageLabel.Parent = Frame
	ImageLabel.BackgroundColor3 = Color3.new(1, 1, 1)
	ImageLabel.BackgroundTransparency = 1
	ImageLabel.Position = UDim2.new(0, 0, 0, 0)
	ImageLabel.Size = UDim2.new(1, 0, 1, 0)
	ImageLabel.Image = "http://www.roblox.com/asset/?id=1542162618"
	Frame:TweenPosition(UDim2.new(0, 0, 0.2, 0), "Out", "Elastic", 3)
	wait(3.01)
	Frame:TweenPosition(UDim2.new(0, 0, 1.5, 0), "Out", "Elastic", 5)
	wait(5.01)
	intro:Destroy()


end)

InfYield.MouseButton1Click:Connect(function()
	if IY_LOADED and not _G.IY_DEBUG == true then
		error("Infinite Yield is already running!",0)
		return
	end

	pcall(function() getgenv().IY_LOADED  = true end)

	if not game:IsLoaded() then
		local notLoaded = Instance.new("Message",workspace)
		notLoaded.Text = 'Infinite Yield is waiting for the game to load'
		game.Loaded:Wait()
		notLoaded:Destroy()
	end

	ver = '5.2'

	Players = game:GetService("Players")

	Holder = Instance.new("Frame")
	Title = Instance.new("TextLabel")
	Dark = Instance.new("Frame")
	Cmdbar = Instance.new("TextBox")
	CMDsF = Instance.new("ScrollingFrame")
	cmdListLayout = Instance.new("UIListLayout")
	SettingsButton = Instance.new("ImageButton")
	ColorsButton = Instance.new("ImageButton")
	Settings = Instance.new("Frame")
	Prefix = Instance.new("TextLabel")
	PrefixBox = Instance.new("TextBox")
	Keybinds = Instance.new("TextLabel")
	StayOpen = Instance.new("TextLabel")
	Button = Instance.new("Frame")
	On = Instance.new("TextButton")
	Positions = Instance.new("TextLabel")
	EventBind = Instance.new("TextLabel")
	Plugins = Instance.new("TextLabel")
	Example = Instance.new("TextButton")
	Notification = Instance.new("Frame")
	Title_2 = Instance.new("TextLabel")
	Text_2 = Instance.new("TextLabel")
	CloseButton = Instance.new("TextButton")
	CloseImage = Instance.new("ImageLabel")
	PinButton = Instance.new("TextButton")
	PinImage = Instance.new("ImageLabel")
	Tooltip = Instance.new("Frame")
	Title_3 = Instance.new("TextLabel")
	Description = Instance.new("TextLabel")
	IntroBackground = Instance.new("Frame")
	Logo = Instance.new("ImageLabel")
	Credits = Instance.new("TextBox")
	KeybindsFrame = Instance.new("Frame")
	Close = Instance.new("TextButton")
	Add = Instance.new("TextButton")
	Delete = Instance.new("TextButton")
	Holder_2 = Instance.new("ScrollingFrame")
	Example_2 = Instance.new("Frame")
	Text_3 = Instance.new("TextLabel")
	Delete_2 = Instance.new("TextButton")
	KeybindEditor = Instance.new("Frame")
	background_2 = Instance.new("Frame")
	Dark_4 = Instance.new("Frame")
	Directions = Instance.new("TextLabel")
	BindTo = Instance.new("TextButton")
	Add_2 = Instance.new("TextButton")
	Cmdbar_2 = Instance.new("TextBox")
	Toggles = Instance.new("ScrollingFrame")
	Fly = Instance.new("TextLabel")
	Select_3 = Instance.new("TextButton")
	Noclip = Instance.new("TextLabel")
	Select_4 = Instance.new("TextButton")
	Float = Instance.new("TextLabel")
	Select_5 = Instance.new("TextButton")
	ClickTP = Instance.new("TextLabel")
	Select_6 = Instance.new("TextButton")
	ClickDelete = Instance.new("TextLabel")
	Select_13 = Instance.new("TextButton") 
	Xray = Instance.new("TextLabel")
	Select_10 = Instance.new("TextButton")
	Swim = Instance.new("TextLabel")
	Select_11 = Instance.new("TextButton")
	Fling = Instance.new("TextLabel")
	Select_12 = Instance.new("TextButton")
	Invisible = Instance.new("TextLabel")
	Select_14 = Instance.new("TextButton")
	Vehiclefly = Instance.new("TextLabel")
	Select_15 = Instance.new("TextButton")
	VehicleNoclip = Instance.new("TextLabel")
	Select_16 = Instance.new("TextButton")
	shadow_2 = Instance.new("Frame")
	PopupText_2 = Instance.new("TextLabel")
	Exit_2 = Instance.new("TextButton")
	ExitImage_2 = Instance.new("ImageLabel")
	PositionsFrame = Instance.new("Frame")
	Close_3 = Instance.new("TextButton")
	Delete_5 = Instance.new("TextButton")
	Part = Instance.new("TextButton")
	Holder_4 = Instance.new("ScrollingFrame")
	Example_4 = Instance.new("Frame")
	Text_5 = Instance.new("TextLabel")
	Delete_6 = Instance.new("TextButton")
	TP = Instance.new("TextButton")
	AliasesFrame = Instance.new("Frame")
	Close_2 = Instance.new("TextButton")
	Delete_3 = Instance.new("TextButton")
	Holder_3 = Instance.new("ScrollingFrame")
	Example_3 = Instance.new("Frame")
	Text_4 = Instance.new("TextLabel")
	Delete_4 = Instance.new("TextButton")
	Aliases = Instance.new("TextLabel")
	PluginsFrame = Instance.new("Frame")
	Close_4 = Instance.new("TextButton")
	Add_3 = Instance.new("TextButton")
	Holder_5 = Instance.new("ScrollingFrame")
	Example_5 = Instance.new("Frame")
	Text_6 = Instance.new("TextLabel")
	Delete_7 = Instance.new("TextButton")
	PluginEditor = Instance.new("Frame")
	background_3 = Instance.new("Frame")
	Dark_9 = Instance.new("Frame")
	Img = Instance.new("ImageButton")
	AddPlugin = Instance.new("TextButton")
	FileName = Instance.new("TextBox")
	About = Instance.new("TextLabel")
	Directions_2 = Instance.new("TextLabel")
	shadow_3 = Instance.new("Frame")
	PopupText_3 = Instance.new("TextLabel")
	Exit_3 = Instance.new("TextButton")
	ExitImage_3 = Instance.new("ImageLabel")
	AliasHint = Instance.new("TextLabel")
	PluginsHint = Instance.new("TextLabel")
	PositionsHint = Instance.new("TextLabel")
	ToPartFrame = Instance.new("Frame")
	background_5 = Instance.new("Frame")
	ChoosePart = Instance.new("TextButton")
	CopyPath = Instance.new("TextButton")
	Directions_4 = Instance.new("TextLabel")
	Path = Instance.new("TextLabel")
	shadow_4 = Instance.new("Frame")
	PopupText_5 = Instance.new("TextLabel")
	Exit_4 = Instance.new("TextButton")
	ExitImage_5 = Instance.new("ImageLabel")
	logs = Instance.new("Frame")
	shadow = Instance.new("Frame")
	Hide = Instance.new("TextButton")
	ImageLabel = Instance.new("ImageLabel")
	PopupText = Instance.new("TextLabel")
	Exit = Instance.new("TextButton")
	ImageLabel_2 = Instance.new("ImageLabel")
	background = Instance.new("Frame")
	chat = Instance.new("Frame")
	Clear = Instance.new("TextButton")
	SaveChatlogs = Instance.new("TextButton")
	Toggle = Instance.new("TextButton")
	scroll_2 = Instance.new("ScrollingFrame")
	join = Instance.new("Frame")
	Toggle_2 = Instance.new("TextButton")
	Clear_2 = Instance.new("TextButton")
	scroll_3 = Instance.new("ScrollingFrame")
	listlayout = Instance.new("UIListLayout",scroll_3)
	selectChat = Instance.new("TextButton")
	selectJoin = Instance.new("TextButton")

	function randomString()
		local length = math.random(10,20)
		local array = {}
		for i = 1, length do
			array[i] = string.char(math.random(32, 126))
		end
		return table.concat(array)
	end

	COREGUI = game:GetService("CoreGui")
	PARENT = nil
	if (not is_sirhurt_closure) and (syn and syn.protect_gui) then --sirhurt is retarded
		local Main = Instance.new("ScreenGui")
		Main.Name = randomString()
		syn.protect_gui(Main)
		Main.Parent = COREGUI
		PARENT = Main
	elseif get_hidden_gui or gethui then
		local hiddenUI = get_hidden_gui or gethui
		local Main = Instance.new("ScreenGui")
		Main.Name = randomString()
		Main.Parent = hiddenUI()
		PARENT = Main
	elseif COREGUI:FindFirstChild('RobloxGui') then
		PARENT = COREGUI.RobloxGui
	else
		local Main = Instance.new("ScreenGui")
		Main.Name = randomString()
		Main.Parent = COREGUI
		PARENT = Main
	end

	shade1 = {}
	shade2 = {}
	shade3 = {}
	text1 = {}
	text2 = {}
	scroll = {}

	Holder.Name = randomString()
	Holder.Parent = PARENT
	Holder.Active = true
	Holder.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Holder.BorderSizePixel = 0
	Holder.Position = UDim2.new(1, -250, 1, -220)
	Holder.Size = UDim2.new(0, 250, 0, 220)
	Holder.ZIndex = 10
	table.insert(shade2,Holder)

	Title.Name = "Title"
	Title.Parent = Holder
	Title.Active = true
	Title.BackgroundColor3 = Color3.fromRGB(36,36,37)
	Title.BorderSizePixel = 0
	Title.Size = UDim2.new(0, 250, 0, 20)
	Title.Font = Enum.Font.SourceSans
	Title.TextSize = 18
	Title.Text = "Infinite Yield FE v"..ver
	Title.TextColor3 = Color3.new(1, 1, 1)
	Title.ZIndex = 10
	table.insert(shade1,Title)
	table.insert(text1,Title)

	Dark.Name = "Dark"
	Dark.Parent = Holder
	Dark.Active = true
	Dark.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	Dark.BorderSizePixel = 0
	Dark.Position = UDim2.new(0, 0, 0, 45)
	Dark.Size = UDim2.new(0, 250, 0, 175)
	Dark.ZIndex = 10
	table.insert(shade1,Dark)

	Cmdbar.Name = "Cmdbar"
	Cmdbar.Parent = Holder
	Cmdbar.BackgroundTransparency = 1
	Cmdbar.BorderSizePixel = 0
	Cmdbar.Position = UDim2.new(0, 5, 0, 20)
	Cmdbar.Size = UDim2.new(0, 240, 0, 25)
	Cmdbar.Font = Enum.Font.SourceSans
	Cmdbar.TextSize = 18
	Cmdbar.TextXAlignment = Enum.TextXAlignment.Left
	Cmdbar.TextColor3 = Color3.new(1, 1, 1)
	Cmdbar.Text = ""
	Cmdbar.ZIndex = 10
	Cmdbar.PlaceholderText = "Command Bar"

	CMDsF.Name = "CMDs"
	CMDsF.Parent = Holder
	CMDsF.BackgroundTransparency = 1
	CMDsF.BorderSizePixel = 0
	CMDsF.Position = UDim2.new(0, 5, 0, 45)
	CMDsF.Size = UDim2.new(0, 245, 0, 175)
	CMDsF.ScrollBarImageColor3 = Color3.fromRGB(78,78,79)
	CMDsF.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	CMDsF.CanvasSize = UDim2.new(0, 0, 0, 0)
	CMDsF.MidImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	CMDsF.ScrollBarThickness = 8
	CMDsF.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	CMDsF.VerticalScrollBarInset = 'Always'
	CMDsF.ZIndex = 10
	table.insert(scroll,CMDsF)

	cmdListLayout.Parent = CMDsF

	SettingsButton.Name = "SettingsButton"
	SettingsButton.Parent = Holder
	SettingsButton.BackgroundTransparency = 1
	SettingsButton.Position = UDim2.new(0, 230, 0, 0)
	SettingsButton.Size = UDim2.new(0, 20, 0, 20)
	SettingsButton.Image = "rbxassetid://1204397029"
	SettingsButton.ZIndex = 10

	ReferenceButton = Instance.new("ImageButton")
	ReferenceButton.Name = "ReferenceButton"
	ReferenceButton.Parent = Holder
	ReferenceButton.BackgroundTransparency = 1
	ReferenceButton.Position = UDim2.new(0, 212, 0, 2)
	ReferenceButton.Size = UDim2.new(0, 16, 0, 16)
	ReferenceButton.Image = "rbxassetid://3523243755"
	ReferenceButton.ZIndex = 10

	Settings.Name = "Settings"
	Settings.Parent = Holder
	Settings.Active = true
	Settings.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	Settings.BorderSizePixel = 0
	Settings.Position = UDim2.new(0, 0, 0, 220)
	Settings.Size = UDim2.new(0, 250, 0, 175)
	Settings.ZIndex = 10
	table.insert(shade1,Settings)

	SettingsHolder = Instance.new("ScrollingFrame")
	SettingsHolder.Name = "Holder"
	SettingsHolder.Parent = Settings
	SettingsHolder.BackgroundTransparency = 1
	SettingsHolder.BorderSizePixel = 0
	SettingsHolder.Size = UDim2.new(1,0,1,0)
	SettingsHolder.ScrollBarImageColor3 = Color3.fromRGB(78,78,79)
	SettingsHolder.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	SettingsHolder.CanvasSize = UDim2.new(0, 0, 0, 235)
	SettingsHolder.MidImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	SettingsHolder.ScrollBarThickness = 8
	SettingsHolder.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	SettingsHolder.VerticalScrollBarInset = 'Always'
	SettingsHolder.ZIndex = 10
	table.insert(scroll,SettingsHolder)

	Prefix.Name = "Prefix"
	Prefix.Parent = SettingsHolder
	Prefix.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Prefix.BorderSizePixel = 0
	Prefix.BackgroundTransparency = 1
	Prefix.Position = UDim2.new(0, 5, 0, 5)
	Prefix.Size = UDim2.new(1, -10, 0, 20)
	Prefix.Font = Enum.Font.SourceSans
	Prefix.TextSize = 14
	Prefix.Text = "Prefix"
	Prefix.TextColor3 = Color3.new(1, 1, 1)
	Prefix.TextXAlignment = Enum.TextXAlignment.Left
	Prefix.ZIndex = 10
	table.insert(shade2,Prefix)
	table.insert(text1,Prefix)

	PrefixBox.Name = "PrefixBox"
	PrefixBox.Parent = Prefix
	PrefixBox.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	PrefixBox.BorderSizePixel = 0
	PrefixBox.Position = UDim2.new(1, -20, 0, 0)
	PrefixBox.Size = UDim2.new(0, 20, 0, 20)
	PrefixBox.Font = Enum.Font.SourceSansBold
	PrefixBox.TextSize = 14
	PrefixBox.Text = ''
	PrefixBox.TextColor3 = Color3.new(0, 0, 0)
	PrefixBox.ZIndex = 10
	table.insert(shade3,PrefixBox)
	table.insert(text2,PrefixBox)

	function makeSettingsButton(name,iconID,off)
		local button = Instance.new("TextButton")
		button.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
		button.BorderSizePixel = 0
		button.Position = UDim2.new(0,0,0,0)
		button.Size = UDim2.new(1,0,0,25)
		button.Text = ""
		button.ZIndex = 10
		local icon = Instance.new("ImageLabel")
		icon.Name = "Icon"
		icon.Parent = button
		icon.Position = UDim2.new(0,5,0,5)
		icon.Size = UDim2.new(0,16,0,16)
		icon.BackgroundTransparency = 1
		icon.Image = iconID
		icon.ZIndex = 10
		if off then
			icon.ScaleType = Enum.ScaleType.Crop
			icon.ImageRectSize = Vector2.new(16,16)
			icon.ImageRectOffset = Vector2.new(off,0)
		end
		local label = Instance.new("TextLabel")
		label.Name = "ButtonLabel"
		label.Parent = button
		label.BackgroundTransparency = 1
		label.Text = name
		label.Position = UDim2.new(0,28,0,0)
		label.Size = UDim2.new(1,-28,1,0)
		label.Font = Enum.Font.SourceSans
		label.TextColor3 = Color3.new(1, 1, 1)
		label.TextSize = 14
		label.ZIndex = 10
		label.TextXAlignment = Enum.TextXAlignment.Left
		table.insert(shade2,button)
		table.insert(text1,label)
		return button
	end

	ColorsButton = makeSettingsButton("Edit Theme","rbxassetid://4911962991")
	ColorsButton.Position = UDim2.new(0,5,0,55)
	ColorsButton.Size = UDim2.new(1,-10,0,25)
	ColorsButton.Name = "Colors"
	ColorsButton.Parent = SettingsHolder

	Keybinds = makeSettingsButton("Edit Keybinds","rbxassetid://129697930")
	Keybinds.Position = UDim2.new(0, 5, 0, 85)
	Keybinds.Size = UDim2.new(1, -10, 0, 25)
	Keybinds.Name = "Keybinds"
	Keybinds.Parent = SettingsHolder

	Aliases = makeSettingsButton("Edit Aliases","rbxassetid://5147488658")
	Aliases.Position = UDim2.new(0, 5, 0, 115)
	Aliases.Size = UDim2.new(1, -10, 0, 25)
	Aliases.Name = "Aliases"
	Aliases.Parent = SettingsHolder

	StayOpen.Name = "StayOpen"
	StayOpen.Parent = SettingsHolder
	StayOpen.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	StayOpen.BorderSizePixel = 0
	StayOpen.BackgroundTransparency = 1
	StayOpen.Position = UDim2.new(0, 5, 0, 30)
	StayOpen.Size = UDim2.new(1, -10, 0, 20)
	StayOpen.Font = Enum.Font.SourceSans
	StayOpen.TextSize = 14
	StayOpen.Text = "Keep Menu Open"
	StayOpen.TextColor3 = Color3.new(1, 1, 1)
	StayOpen.TextXAlignment = Enum.TextXAlignment.Left
	StayOpen.ZIndex = 10
	table.insert(shade2,StayOpen)
	table.insert(text1,StayOpen)

	Button.Name = "Button"
	Button.Parent = StayOpen
	Button.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Button.BorderSizePixel = 0
	Button.Position = UDim2.new(1, -20, 0, 0)
	Button.Size = UDim2.new(0, 20, 0, 20)
	Button.ZIndex = 10
	table.insert(shade3,Button)

	On.Name = "On"
	On.Parent = Button
	On.BackgroundColor3 = Color3.fromRGB(150, 150, 151)
	On.BackgroundTransparency = 1
	On.BorderSizePixel = 0
	On.Position = UDim2.new(0, 2, 0, 2)
	On.Size = UDim2.new(0, 16, 0, 16)
	On.Font = Enum.Font.SourceSans
	On.FontSize = Enum.FontSize.Size14
	On.Text = ""
	On.TextColor3 = Color3.new(0, 0, 0)
	On.ZIndex = 10

	Positions = makeSettingsButton("Edit/Goto Waypoints","rbxassetid://5147488592")
	Positions.Position = UDim2.new(0, 5, 0, 145)
	Positions.Size = UDim2.new(1, -10, 0, 25)
	Positions.Name = "Waypoints"
	Positions.Parent = SettingsHolder

	EventBind = makeSettingsButton("Edit Event Binds","rbxassetid://5147695474",759)
	EventBind.Position = UDim2.new(0, 5, 0, 205)
	EventBind.Size = UDim2.new(1, -10, 0, 25)
	EventBind.Name = "EventBinds"
	EventBind.Parent = SettingsHolder

	Plugins = makeSettingsButton("Manage Plugins","rbxassetid://5147695474",743)
	Plugins.Position = UDim2.new(0, 5, 0, 175)
	Plugins.Size = UDim2.new(1, -10, 0, 25)
	Plugins.Name = "Plugins"
	Plugins.Parent = SettingsHolder

	Example.Name = "Example"
	Example.Parent = Holder
	Example.BackgroundTransparency = 1
	Example.BorderSizePixel = 0
	Example.Size = UDim2.new(0, 190, 0, 20)
	Example.Visible = false
	Example.Font = Enum.Font.SourceSans
	Example.TextSize = 18
	Example.Text = "Example"
	Example.TextColor3 = Color3.new(1, 1, 1)
	Example.TextXAlignment = Enum.TextXAlignment.Left
	Example.ZIndex = 10
	table.insert(text1,Example)

	Notification.Name = randomString()
	Notification.Parent = PARENT
	Notification.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	Notification.BorderSizePixel = 0
	Notification.Position = UDim2.new(1, -500, 1, 20)
	Notification.Size = UDim2.new(0, 250, 0, 100)
	Notification.ZIndex = 10
	table.insert(shade1,Notification)

	Title_2.Name = "Title"
	Title_2.Parent = Notification
	Title_2.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Title_2.BorderSizePixel = 0
	Title_2.Size = UDim2.new(0, 250, 0, 20)
	Title_2.Font = Enum.Font.SourceSans
	Title_2.TextSize = 14
	Title_2.Text = "Notification Title"
	Title_2.TextColor3 = Color3.new(1, 1, 1)
	Title_2.ZIndex = 10
	table.insert(shade2,Title_2)
	table.insert(text1,Title_2)

	Text_2.Name = "Text"
	Text_2.Parent = Notification
	Text_2.BackgroundTransparency = 1
	Text_2.BorderSizePixel = 0
	Text_2.Position = UDim2.new(0, 5, 0, 25)
	Text_2.Size = UDim2.new(0, 240, 0, 75)
	Text_2.Font = Enum.Font.SourceSans
	Text_2.TextSize = 16
	Text_2.Text = "Notification Text"
	Text_2.TextColor3 = Color3.new(1, 1, 1)
	Text_2.TextWrapped = true
	Text_2.ZIndex = 10
	table.insert(text1,Text_2)

	CloseButton.Name = "CloseButton"
	CloseButton.Parent = Notification
	CloseButton.BackgroundTransparency = 1
	CloseButton.Position = UDim2.new(1, -20, 0, 0)
	CloseButton.Size = UDim2.new(0, 20, 0, 20)
	CloseButton.Text = ""
	CloseButton.ZIndex = 10

	CloseImage.Parent = CloseButton
	CloseImage.BackgroundColor3 = Color3.new(1, 1, 1)
	CloseImage.BackgroundTransparency = 1
	CloseImage.Position = UDim2.new(0, 5, 0, 5)
	CloseImage.Size = UDim2.new(0, 10, 0, 10)
	CloseImage.Image = "rbxassetid://5054663650"
	CloseImage.ZIndex = 10

	PinButton.Name = "PinButton"
	PinButton.Parent = Notification
	PinButton.BackgroundTransparency = 1
	PinButton.Size = UDim2.new(0, 20, 0, 20)
	PinButton.ZIndex = 10
	PinButton.Text = ""

	PinImage.Parent = PinButton
	PinImage.BackgroundColor3 = Color3.new(1, 1, 1)
	PinImage.BackgroundTransparency = 1
	PinImage.Position = UDim2.new(0, 3, 0, 3)
	PinImage.Size = UDim2.new(0, 14, 0, 14)
	PinImage.ZIndex = 10
	PinImage.Image = "rbxassetid://6234691350"

	Tooltip.Name = randomString()
	Tooltip.Parent = PARENT
	Tooltip.Active = true
	Tooltip.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	Tooltip.BackgroundTransparency = 0.1
	Tooltip.BorderSizePixel = 0
	Tooltip.Size = UDim2.new(0, 200, 0, 96)
	Tooltip.Visible = false
	Tooltip.ZIndex = 10
	table.insert(shade1,Tooltip)

	Title_3.Name = "Title"
	Title_3.Parent = Tooltip
	Title_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Title_3.BackgroundTransparency = 0.1
	Title_3.BorderSizePixel = 0
	Title_3.Size = UDim2.new(0, 200, 0, 20)
	Title_3.Font = Enum.Font.SourceSans
	Title_3.TextSize = 14
	Title_3.Text = ""
	Title_3.TextColor3 = Color3.new(1, 1, 1)
	Title_3.TextTransparency = 0.1
	Title_3.ZIndex = 10
	table.insert(shade2,Title_3)
	table.insert(text1,Title_3)

	Description.Name = "Description"
	Description.Parent = Tooltip
	Description.BackgroundTransparency = 1
	Description.BorderSizePixel = 0
	Description.Size = UDim2.new(0,180,0,72)
	Description.Position = UDim2.new(0,10,0,18)
	Description.Font = Enum.Font.SourceSans
	Description.TextSize = 16
	Description.Text = ""
	Description.TextColor3 = Color3.new(1, 1, 1)
	Description.TextTransparency = 0.1
	Description.TextWrapped = true
	Description.ZIndex = 10
	table.insert(text1,Description)

	IntroBackground.Name = "IntroBackground"
	IntroBackground.Parent = Holder
	IntroBackground.Active = true
	IntroBackground.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	IntroBackground.BorderSizePixel = 0
	IntroBackground.Position = UDim2.new(0, 0, 0, 45)
	IntroBackground.Size = UDim2.new(0, 250, 0, 175)
	IntroBackground.ZIndex = 10

	Logo.Name = "Logo"
	Logo.Parent = Holder
	Logo.BackgroundTransparency = 1
	Logo.BorderSizePixel = 0
	Logo.Position = UDim2.new(0, 125, 0, 127)
	Logo.Size = UDim2.new(0, 10, 0, 10)
	Logo.Image = "rbxassetid://1352543873"
	Logo.ImageTransparency = 0
	Logo.ZIndex = 10

	Credits.Name = "Credits"
	Credits.Parent = Holder
	Credits.BackgroundTransparency = 1
	Credits.BorderSizePixel = 0
	Credits.Position = UDim2.new(0, 0, 0.9, 30)
	Credits.Size = UDim2.new(0, 250, 0, 20)
	Credits.Font = Enum.Font.SourceSansLight
	Credits.FontSize = Enum.FontSize.Size18
	Credits.Text = "Edge // Zwolf // Moon // Hunter"
	Credits.TextColor3 = Color3.new(1, 1, 1)
	Credits.ZIndex = 10

	KeybindsFrame.Name = "KeybindsFrame"
	KeybindsFrame.Parent = Settings
	KeybindsFrame.Active = true
	KeybindsFrame.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	KeybindsFrame.BorderSizePixel = 0
	KeybindsFrame.Position = UDim2.new(0, 0, 0, 175)
	KeybindsFrame.Size = UDim2.new(0, 250, 0, 175)
	KeybindsFrame.ZIndex = 10
	table.insert(shade1,KeybindsFrame)

	Close.Name = "Close"
	Close.Parent = KeybindsFrame
	Close.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Close.BorderSizePixel = 0
	Close.Position = UDim2.new(0, 205, 0, 150)
	Close.Size = UDim2.new(0, 40, 0, 20)
	Close.Font = Enum.Font.SourceSans
	Close.TextSize = 14
	Close.Text = "Close"
	Close.TextColor3 = Color3.new(1, 1, 1)
	Close.ZIndex = 10
	table.insert(shade2,Close)
	table.insert(text1,Close)

	Add.Name = "Add"
	Add.Parent = KeybindsFrame
	Add.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Add.BorderSizePixel = 0
	Add.Position = UDim2.new(0, 5, 0, 150)
	Add.Size = UDim2.new(0, 40, 0, 20)
	Add.Font = Enum.Font.SourceSans
	Add.TextSize = 14
	Add.Text = "Add"
	Add.TextColor3 = Color3.new(1, 1, 1)
	Add.ZIndex = 10
	table.insert(shade2,Add)
	table.insert(text1,Add)

	Delete.Name = "Delete"
	Delete.Parent = KeybindsFrame
	Delete.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Delete.BorderSizePixel = 0
	Delete.Position = UDim2.new(0, 50, 0, 150)
	Delete.Size = UDim2.new(0, 40, 0, 20)
	Delete.Font = Enum.Font.SourceSans
	Delete.TextSize = 14
	Delete.Text = "Clear"
	Delete.TextColor3 = Color3.new(1, 1, 1)
	Delete.ZIndex = 10
	table.insert(shade2,Delete)
	table.insert(text1,Delete)

	Holder_2.Name = "Holder"
	Holder_2.Parent = KeybindsFrame
	Holder_2.BackgroundTransparency = 1
	Holder_2.BorderSizePixel = 0
	Holder_2.Position = UDim2.new(0, 0, 0, 0)
	Holder_2.Size = UDim2.new(0, 250, 0, 145)
	Holder_2.ScrollBarImageColor3 = Color3.fromRGB(78,78,79)
	Holder_2.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_2.CanvasSize = UDim2.new(0, 0, 0, 0)
	Holder_2.MidImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_2.ScrollBarThickness = 0
	Holder_2.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_2.VerticalScrollBarInset = 'Always'
	Holder_2.ZIndex = 10

	Example_2.Name = "Example"
	Example_2.Parent = KeybindsFrame
	Example_2.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Example_2.BorderSizePixel = 0
	Example_2.Size = UDim2.new(0, 10, 0, 20)
	Example_2.Visible = false
	Example_2.ZIndex = 10
	table.insert(shade2,Example_2)

	Text_3.Name = "Text"
	Text_3.Parent = Example_2
	Text_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Text_3.BorderSizePixel = 0
	Text_3.Position = UDim2.new(0, 10, 0, 0)
	Text_3.Size = UDim2.new(0, 240, 0, 20)
	Text_3.Font = Enum.Font.SourceSans
	Text_3.TextSize = 14
	Text_3.Text = "nom"
	Text_3.TextColor3 = Color3.new(1, 1, 1)
	Text_3.TextXAlignment = Enum.TextXAlignment.Left
	Text_3.ZIndex = 10
	table.insert(shade2,Text_3)
	table.insert(text1,Text_3)

	Delete_2.Name = "Delete"
	Delete_2.Parent = Text_3
	Delete_2.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Delete_2.BorderSizePixel = 0
	Delete_2.Position = UDim2.new(0, 200, 0, 0)
	Delete_2.Size = UDim2.new(0, 40, 0, 20)
	Delete_2.Font = Enum.Font.SourceSans
	Delete_2.TextSize = 14
	Delete_2.Text = "Delete"
	Delete_2.TextColor3 = Color3.new(0, 0, 0)
	Delete_2.ZIndex = 10
	table.insert(shade3,Delete_2)
	table.insert(text2,Delete_2)

	KeybindEditor.Name = randomString()
	KeybindEditor.Parent = PARENT
	KeybindEditor.Active = true
	KeybindEditor.BackgroundTransparency = 1
	KeybindEditor.Position = UDim2.new(0.5, -180, 0, -500)
	KeybindEditor.Size = UDim2.new(0, 360, 0, 20)
	KeybindEditor.ZIndex = 10

	background_2.Name = "background"
	background_2.Parent = KeybindEditor
	background_2.Active = true
	background_2.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	background_2.BorderSizePixel = 0
	background_2.Position = UDim2.new(0, 0, 0, 20)
	background_2.Size = UDim2.new(0, 360, 0, 185)
	background_2.ZIndex = 10
	table.insert(shade1,background_2)

	Dark_4.Name = "Dark"
	Dark_4.Parent = background_2
	Dark_4.Active = true
	Dark_4.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Dark_4.BorderSizePixel = 0
	Dark_4.Position = UDim2.new(0, 135, 0, 0)
	Dark_4.Size = UDim2.new(0, 2, 0, 185)
	Dark_4.ZIndex = 10
	table.insert(shade2,Dark_4)

	Directions.Name = "Directions"
	Directions.Parent = background_2
	Directions.BackgroundTransparency = 1
	Directions.BorderSizePixel = 0
	Directions.Position = UDim2.new(0, 10, 0, 15)
	Directions.Size = UDim2.new(0, 115, 0, 90)
	Directions.Font = Enum.Font.SourceSans
	Directions.TextSize = 14
	Directions.Text = "Click the button below and press a key/mouse button. Then select what you want to bind it to."
	Directions.TextColor3 = Color3.new(1, 1, 1)
	Directions.TextWrapped = true
	Directions.TextYAlignment = Enum.TextYAlignment.Top
	Directions.ZIndex = 10
	table.insert(text1,Directions)

	BindTo.Name = "BindTo"
	BindTo.Parent = background_2
	BindTo.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	BindTo.BorderSizePixel = 0
	BindTo.Position = UDim2.new(0, 10, 0, 95)
	BindTo.Size = UDim2.new(0, 115, 0, 50)
	BindTo.Font = Enum.Font.SourceSans
	BindTo.TextSize = 16
	BindTo.Text = "Click to bind"
	BindTo.TextColor3 = Color3.new(1, 1, 1)
	BindTo.ZIndex = 10
	table.insert(shade2,BindTo)
	table.insert(text1,BindTo)

	BindTrigger = Instance.new("TextLabel")
	BindTrigger.Name = "TriggerLabel"
	BindTrigger.BackgroundTransparency = 1
	BindTrigger.Position = UDim2.new(0, 10, 0, 155)
	BindTrigger.Size = UDim2.new(0, 45, 0, 20)
	BindTrigger.Font = Enum.Font.SourceSans
	BindTrigger.TextSize = 14
	BindTrigger.Text = "Trigger:"
	BindTrigger.TextColor3 = Color3.new(1, 1, 1)
	BindTrigger.ZIndex = 10
	BindTrigger.TextXAlignment = Enum.TextXAlignment.Left
	BindTrigger.Parent = background_2
	table.insert(text1,BindTrigger)

	BindTriggerSelect = Instance.new("TextButton")
	BindTriggerSelect.Name = "BindTo"
	BindTriggerSelect.Parent = background_2
	BindTriggerSelect.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	BindTriggerSelect.BorderSizePixel = 0
	BindTriggerSelect.Position = UDim2.new(0, 60, 0, 155)
	BindTriggerSelect.Size = UDim2.new(0, 65, 0, 20)
	BindTriggerSelect.Font = Enum.Font.SourceSans
	BindTriggerSelect.TextSize = 16
	BindTriggerSelect.Text = "KeyDown"
	BindTriggerSelect.TextColor3 = Color3.new(1, 1, 1)
	BindTriggerSelect.ZIndex = 10
	table.insert(shade2,BindTriggerSelect)
	table.insert(text1,BindTriggerSelect)

	Add_2.Name = "Add"
	Add_2.Parent = background_2
	Add_2.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Add_2.BorderSizePixel = 0
	Add_2.Position = UDim2.new(0, 310, 0, 20)
	Add_2.Size = UDim2.new(0, 40, 0, 20)
	Add_2.Font = Enum.Font.SourceSans
	Add_2.TextSize = 14
	Add_2.Text = "Add"
	Add_2.TextColor3 = Color3.new(1, 1, 1)
	Add_2.ZIndex = 10
	table.insert(shade2,Add_2)
	table.insert(text1,Add_2)

	Cmdbar_2.Name = "Cmdbar"
	Cmdbar_2.Parent = background_2
	Cmdbar_2.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Cmdbar_2.BorderSizePixel = 0
	Cmdbar_2.Position = UDim2.new(0, 150, 0, 20)
	Cmdbar_2.Size = UDim2.new(0, 150, 0, 20)
	Cmdbar_2.Font = Enum.Font.SourceSans
	Cmdbar_2.TextSize = 14
	Cmdbar_2.TextXAlignment = Enum.TextXAlignment.Left
	Cmdbar_2.TextColor3 = Color3.new(1, 1, 1)
	Cmdbar_2.Text = ""
	Cmdbar_2.ZIndex = 10
	Cmdbar_2.PlaceholderText = "Command"

	Toggles.Name = "Toggles"
	Toggles.Parent = background_2
	Toggles.BackgroundTransparency = 1
	Toggles.BorderSizePixel = 0
	Toggles.Position = UDim2.new(0, 150, 0, 50)
	Toggles.Size = UDim2.new(0, 200, 0, 125)
	Toggles.ScrollBarImageColor3 = Color3.fromRGB(78,78,79)
	Toggles.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Toggles.CanvasSize = UDim2.new(0, 0, 0, 270)
	Toggles.MidImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Toggles.ScrollBarThickness = 8
	Toggles.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Toggles.VerticalScrollBarInset = 'Always'
	Toggles.ZIndex = 10
	table.insert(scroll,Toggles)

	Fly.Name = "Fly"
	Fly.Parent = Toggles
	Fly.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Fly.BorderSizePixel = 0
	Fly.Size = UDim2.new(0, 192, 0, 20)
	Fly.Font = Enum.Font.SourceSans
	Fly.TextSize = 14
	Fly.Text = "    Toggle Fly"
	Fly.TextColor3 = Color3.new(1, 1, 1)
	Fly.TextXAlignment = Enum.TextXAlignment.Left
	Fly.ZIndex = 10
	table.insert(shade2,Fly)
	table.insert(text1,Fly)

	Select_3.Name = "Select"
	Select_3.Parent = Fly
	Select_3.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Select_3.BorderSizePixel = 0
	Select_3.Position = UDim2.new(0, 152, 0, 0)
	Select_3.Size = UDim2.new(0, 40, 0, 20)
	Select_3.Font = Enum.Font.SourceSans
	Select_3.TextSize = 14
	Select_3.Text = "Add"
	Select_3.TextColor3 = Color3.new(0, 0, 0)
	Select_3.ZIndex = 10
	table.insert(shade3,Select_3)
	table.insert(text2,Select_3)

	Noclip.Name = "Noclip"
	Noclip.Parent = Toggles
	Noclip.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Noclip.BorderSizePixel = 0
	Noclip.Position = UDim2.new(0, 0, 0, 25)
	Noclip.Size = UDim2.new(0, 192, 0, 20)
	Noclip.Font = Enum.Font.SourceSans
	Noclip.TextSize = 14
	Noclip.Text = "    Toggle Noclip"
	Noclip.TextColor3 = Color3.new(1, 1, 1)
	Noclip.TextXAlignment = Enum.TextXAlignment.Left
	Noclip.ZIndex = 10
	table.insert(shade2,Noclip)
	table.insert(text1,Noclip)

	Select_4.Name = "Select"
	Select_4.Parent = Noclip
	Select_4.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Select_4.BorderSizePixel = 0
	Select_4.Position = UDim2.new(0, 152, 0, 0)
	Select_4.Size = UDim2.new(0, 40, 0, 20)
	Select_4.Font = Enum.Font.SourceSans
	Select_4.TextSize = 14
	Select_4.Text = "Add"
	Select_4.TextColor3 = Color3.new(0, 0, 0)
	Select_4.ZIndex = 10
	table.insert(shade3,Select_4)
	table.insert(text2,Select_4)

	Float.Name = "Float"
	Float.Parent = Toggles
	Float.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Float.BorderSizePixel = 0
	Float.Position = UDim2.new(0, 0, 0, 50)
	Float.Size = UDim2.new(0, 192, 0, 20)
	Float.Font = Enum.Font.SourceSans
	Float.TextSize = 14
	Float.Text = "    Toggle Float"
	Float.TextColor3 = Color3.new(1, 1, 1)
	Float.TextXAlignment = Enum.TextXAlignment.Left
	Float.ZIndex = 10
	table.insert(shade2,Float)
	table.insert(text1,Float)

	Select_5.Name = "Select"
	Select_5.Parent = Float
	Select_5.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Select_5.BorderSizePixel = 0
	Select_5.Position = UDim2.new(0, 152, 0, 0)
	Select_5.Size = UDim2.new(0, 40, 0, 20)
	Select_5.Font = Enum.Font.SourceSans
	Select_5.TextSize = 14
	Select_5.Text = "Add"
	Select_5.TextColor3 = Color3.new(0, 0, 0)
	Select_5.ZIndex = 10
	table.insert(shade3,Select_5)
	table.insert(text2,Select_5)

	ClickTP.Name = "Click TP"
	ClickTP.Parent = Toggles
	ClickTP.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	ClickTP.BorderSizePixel = 0
	ClickTP.Position = UDim2.new(0, 0, 0, 75)
	ClickTP.Size = UDim2.new(0, 192, 0, 20)
	ClickTP.Font = Enum.Font.SourceSans
	ClickTP.TextSize = 14
	ClickTP.Text = "    Click TP (Hold Key & Click)"
	ClickTP.TextColor3 = Color3.new(1, 1, 1)
	ClickTP.TextXAlignment = Enum.TextXAlignment.Left
	ClickTP.ZIndex = 10
	table.insert(shade2,ClickTP)
	table.insert(text1,ClickTP)

	Select_6.Name = "Select"
	Select_6.Parent = ClickTP
	Select_6.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Select_6.BorderSizePixel = 0
	Select_6.Position = UDim2.new(0, 152, 0, 0)
	Select_6.Size = UDim2.new(0, 40, 0, 20)
	Select_6.Font = Enum.Font.SourceSans
	Select_6.TextSize = 14
	Select_6.Text = "Add"
	Select_6.TextColor3 = Color3.new(0, 0, 0)
	Select_6.ZIndex = 10
	table.insert(shade3,Select_6)
	table.insert(text2,Select_6)

	ClickDelete.Name = "Click Delete"
	ClickDelete.Parent = Toggles
	ClickDelete.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	ClickDelete.BorderSizePixel = 0
	ClickDelete.Position = UDim2.new(0, 0, 0, 100)
	ClickDelete.Size = UDim2.new(0, 192, 0, 20)
	ClickDelete.Font = Enum.Font.SourceSans
	ClickDelete.TextSize = 14
	ClickDelete.Text = "    Click Delete (Hold Key & Click)"
	ClickDelete.TextColor3 = Color3.new(1, 1, 1)
	ClickDelete.TextXAlignment = Enum.TextXAlignment.Left
	ClickDelete.ZIndex = 10
	table.insert(shade2,ClickDelete)
	table.insert(text1,ClickDelete)

	Select_13.Name = "Select"
	Select_13.Parent = ClickDelete
	Select_13.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Select_13.BorderSizePixel = 0
	Select_13.Position = UDim2.new(0, 152, 0, 0)
	Select_13.Size = UDim2.new(0, 40, 0, 20)
	Select_13.Font = Enum.Font.SourceSans
	Select_13.TextSize = 14
	Select_13.Text = "Add"
	Select_13.TextColor3 = Color3.new(0, 0, 0)
	Select_13.ZIndex = 10
	table.insert(shade3,Select_13)
	table.insert(text2,Select_13) 

	Xray.Name = "Xray"
	Xray.Parent = Toggles
	Xray.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Xray.BorderSizePixel = 0
	Xray.Position = UDim2.new(0, 0, 0, 125)
	Xray.Size = UDim2.new(0, 192, 0, 20)
	Xray.Font = Enum.Font.SourceSans
	Xray.TextSize = 14
	Xray.Text = "    Toggle Xray"
	Xray.TextColor3 = Color3.new(1, 1, 1)
	Xray.TextXAlignment = Enum.TextXAlignment.Left
	Xray.ZIndex = 10
	table.insert(shade2,Xray)
	table.insert(text1,Xray)

	Select_10.Name = "Select"
	Select_10.Parent = Xray
	Select_10.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Select_10.BorderSizePixel = 0
	Select_10.Position = UDim2.new(0, 152, 0, 0)
	Select_10.Size = UDim2.new(0, 40, 0, 20)
	Select_10.Font = Enum.Font.SourceSans
	Select_10.TextSize = 14
	Select_10.Text = "Add"
	Select_10.TextColor3 = Color3.new(0, 0, 0)
	Select_10.ZIndex = 10
	table.insert(shade3,Select_10)
	table.insert(text2,Select_10)

	Swim.Name = "Swim"
	Swim.Parent = Toggles
	Swim.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Swim.BorderSizePixel = 0
	Swim.Position = UDim2.new(0, 0, 0, 150)
	Swim.Size = UDim2.new(0, 192, 0, 20)
	Swim.Font = Enum.Font.SourceSans
	Swim.TextSize = 14
	Swim.Text = "    Toggle Swim"
	Swim.TextColor3 = Color3.new(1, 1, 1)
	Swim.TextXAlignment = Enum.TextXAlignment.Left
	Swim.ZIndex = 10
	table.insert(shade2,Swim)
	table.insert(text1,Swim)

	Select_11.Name = "Select"
	Select_11.Parent = Swim
	Select_11.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Select_11.BorderSizePixel = 0
	Select_11.Position = UDim2.new(0, 152, 0, 0)
	Select_11.Size = UDim2.new(0, 40, 0, 20)
	Select_11.Font = Enum.Font.SourceSans
	Select_11.TextSize = 14
	Select_11.Text = "Add"
	Select_11.TextColor3 = Color3.new(0, 0, 0)
	Select_11.ZIndex = 10
	table.insert(shade3,Select_11)
	table.insert(text2,Select_11)

	Fling.Name = "Fling"
	Fling.Parent = Toggles
	Fling.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Fling.BorderSizePixel = 0
	Fling.Position = UDim2.new(0, 0, 0, 175)
	Fling.Size = UDim2.new(0, 192, 0, 20)
	Fling.Font = Enum.Font.SourceSans
	Fling.TextSize = 14
	Fling.Text = "    Toggle Fling"
	Fling.TextColor3 = Color3.new(1, 1, 1)
	Fling.TextXAlignment = Enum.TextXAlignment.Left
	Fling.ZIndex = 10
	table.insert(shade2,Fling)
	table.insert(text1,Fling)

	Select_12.Name = "Select"
	Select_12.Parent = Fling
	Select_12.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Select_12.BorderSizePixel = 0
	Select_12.Position = UDim2.new(0, 152, 0, 0)
	Select_12.Size = UDim2.new(0, 40, 0, 20)
	Select_12.Font = Enum.Font.SourceSans
	Select_12.TextSize = 14
	Select_12.Text = "Add"
	Select_12.TextColor3 = Color3.new(0, 0, 0)
	Select_12.ZIndex = 10
	table.insert(shade3,Select_12)
	table.insert(text2,Select_12)

	Invisible.Name = "Invisible"
	Invisible.Parent = Toggles
	Invisible.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Invisible.BorderSizePixel = 0
	Invisible.Position = UDim2.new(0, 0, 0, 200)
	Invisible.Size = UDim2.new(0, 192, 0, 20)
	Invisible.Font = Enum.Font.SourceSans
	Invisible.TextSize = 14
	Invisible.Text = "    Toggle Invisible"
	Invisible.TextColor3 = Color3.new(1, 1, 1)
	Invisible.TextXAlignment = Enum.TextXAlignment.Left
	Invisible.ZIndex = 10
	table.insert(shade2,Invisible)
	table.insert(text1,Invisible)

	Select_14.Name = "Select"
	Select_14.Parent = Invisible
	Select_14.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Select_14.BorderSizePixel = 0
	Select_14.Position = UDim2.new(0, 152, 0, 0)
	Select_14.Size = UDim2.new(0, 40, 0, 20)
	Select_14.Font = Enum.Font.SourceSans
	Select_14.TextSize = 14
	Select_14.Text = "Add"
	Select_14.TextColor3 = Color3.new(0, 0, 0)
	Select_14.ZIndex = 10
	table.insert(shade3,Select_14)
	table.insert(text2,Select_14)

	Vehiclefly.Name = "VehicleFly"
	Vehiclefly.Parent = Toggles
	Vehiclefly.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Vehiclefly.BorderSizePixel = 0
	Vehiclefly.Position = UDim2.new(0, 0, 0, 225)
	Vehiclefly.Size = UDim2.new(0, 192, 0, 20)
	Vehiclefly.Font = Enum.Font.SourceSans
	Vehiclefly.TextSize = 14
	Vehiclefly.Text = "    Toggle VehicleFly"
	Vehiclefly.TextColor3 = Color3.new(1, 1, 1)
	Vehiclefly.TextXAlignment = Enum.TextXAlignment.Left
	Vehiclefly.ZIndex = 10
	table.insert(shade2,Vehiclefly)
	table.insert(text1,Vehiclefly)

	Select_15.Name = "Select"
	Select_15.Parent = Vehiclefly
	Select_15.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Select_15.BorderSizePixel = 0
	Select_15.Position = UDim2.new(0, 152, 0, 0)
	Select_15.Size = UDim2.new(0, 40, 0, 20)
	Select_15.Font = Enum.Font.SourceSans
	Select_15.TextSize = 14
	Select_15.Text = "Add"
	Select_15.TextColor3 = Color3.new(0, 0, 0)
	Select_15.ZIndex = 10
	table.insert(shade3,Select_15)
	table.insert(text2,Select_15)

	VehicleNoclip.Name = "VehicleNoclip"
	VehicleNoclip.Parent = Toggles
	VehicleNoclip.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	VehicleNoclip.BorderSizePixel = 0
	VehicleNoclip.Position = UDim2.new(0, 0, 0, 250)
	VehicleNoclip.Size = UDim2.new(0, 192, 0, 20)
	VehicleNoclip.Font = Enum.Font.SourceSans
	VehicleNoclip.TextSize = 14
	VehicleNoclip.Text = "    Toggle VehicleNoclip"
	VehicleNoclip.TextColor3 = Color3.new(1, 1, 1)
	VehicleNoclip.TextXAlignment = Enum.TextXAlignment.Left
	VehicleNoclip.ZIndex = 10
	table.insert(shade2,VehicleNoclip)
	table.insert(text1,VehicleNoclip)

	Select_16.Name = "Select"
	Select_16.Parent = VehicleNoclip
	Select_16.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Select_16.BorderSizePixel = 0
	Select_16.Position = UDim2.new(0, 152, 0, 0)
	Select_16.Size = UDim2.new(0, 40, 0, 20)
	Select_16.Font = Enum.Font.SourceSans
	Select_16.TextSize = 14
	Select_16.Text = "Add"
	Select_16.TextColor3 = Color3.new(0, 0, 0)
	Select_16.ZIndex = 10
	table.insert(shade3,Select_16)
	table.insert(text2,Select_16)

	shadow_2.Name = "shadow"
	shadow_2.Parent = KeybindEditor
	shadow_2.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	shadow_2.BorderSizePixel = 0
	shadow_2.Size = UDim2.new(0, 360, 0, 20)
	shadow_2.ZIndex = 10
	table.insert(shade2,shadow_2)

	PopupText_2.Name = "PopupText"
	PopupText_2.Parent = shadow_2
	PopupText_2.BackgroundTransparency = 1
	PopupText_2.Size = UDim2.new(1, 0, 0.95, 0)
	PopupText_2.ZIndex = 10
	PopupText_2.Font = Enum.Font.SourceSans
	PopupText_2.TextSize = 14
	PopupText_2.Text = "Set Keybinds"
	PopupText_2.TextColor3 = Color3.new(1, 1, 1)
	PopupText_2.TextWrapped = true
	table.insert(text1,PopupText_2)

	Exit_2.Name = "Exit"
	Exit_2.Parent = shadow_2
	Exit_2.BackgroundTransparency = 1
	Exit_2.Position = UDim2.new(1, -20, 0, 0)
	Exit_2.Size = UDim2.new(0, 20, 0, 20)
	Exit_2.Text = ""
	Exit_2.ZIndex = 10

	ExitImage_2.Parent = Exit_2
	ExitImage_2.BackgroundColor3 = Color3.new(1, 1, 1)
	ExitImage_2.BackgroundTransparency = 1
	ExitImage_2.Position = UDim2.new(0, 5, 0, 5)
	ExitImage_2.Size = UDim2.new(0, 10, 0, 10)
	ExitImage_2.Image = "rbxassetid://5054663650"
	ExitImage_2.ZIndex = 10

	PositionsFrame.Name = "PositionsFrame"
	PositionsFrame.Parent = Settings
	PositionsFrame.Active = true
	PositionsFrame.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	PositionsFrame.BorderSizePixel = 0
	PositionsFrame.Size = UDim2.new(0, 250, 0, 175)
	PositionsFrame.Position = UDim2.new(0, 0, 0, 175)
	PositionsFrame.ZIndex = 10
	table.insert(shade1,PositionsFrame)

	Close_3.Name = "Close"
	Close_3.Parent = PositionsFrame
	Close_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Close_3.BorderSizePixel = 0
	Close_3.Position = UDim2.new(0, 205, 0, 150)
	Close_3.Size = UDim2.new(0, 40, 0, 20)
	Close_3.Font = Enum.Font.SourceSans
	Close_3.TextSize = 14
	Close_3.Text = "Close"
	Close_3.TextColor3 = Color3.new(1, 1, 1)
	Close_3.ZIndex = 10
	table.insert(shade2,Close_3)
	table.insert(text1,Close_3)

	Delete_5.Name = "Delete"
	Delete_5.Parent = PositionsFrame
	Delete_5.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Delete_5.BorderSizePixel = 0
	Delete_5.Position = UDim2.new(0, 50, 0, 150)
	Delete_5.Size = UDim2.new(0, 40, 0, 20)
	Delete_5.Font = Enum.Font.SourceSans
	Delete_5.TextSize = 14
	Delete_5.Text = "Clear"
	Delete_5.TextColor3 = Color3.new(1, 1, 1)
	Delete_5.ZIndex = 10
	table.insert(shade2,Delete_5)
	table.insert(text1,Delete_5)

	Part.Name = "PartGoto"
	Part.Parent = PositionsFrame
	Part.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Part.BorderSizePixel = 0
	Part.Position = UDim2.new(0, 5, 0, 150)
	Part.Size = UDim2.new(0, 40, 0, 20)
	Part.Font = Enum.Font.SourceSans
	Part.TextSize = 14
	Part.Text = "Part"
	Part.TextColor3 = Color3.new(1, 1, 1)
	Part.ZIndex = 10
	table.insert(shade2,Part)
	table.insert(text1,Part)

	Holder_4.Name = "Holder"
	Holder_4.Parent = PositionsFrame
	Holder_4.BackgroundTransparency = 1
	Holder_4.BorderSizePixel = 0
	Holder_4.Position = UDim2.new(0, 0, 0, 0)
	Holder_4.Selectable = false
	Holder_4.Size = UDim2.new(0, 250, 0, 145)
	Holder_4.ScrollBarImageColor3 = Color3.fromRGB(78,78,79)
	Holder_4.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_4.CanvasSize = UDim2.new(0, 0, 0, 0)
	Holder_4.MidImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_4.ScrollBarThickness = 0
	Holder_4.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_4.VerticalScrollBarInset = 'Always'
	Holder_4.ZIndex = 10

	Example_4.Name = "Example"
	Example_4.Parent = PositionsFrame
	Example_4.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Example_4.BorderSizePixel = 0
	Example_4.Size = UDim2.new(0, 10, 0, 20)
	Example_4.Visible = false
	Example_4.Position = UDim2.new(0, 0, 0, -5)
	Example_4.ZIndex = 10
	table.insert(shade2,Example_4)

	Text_5.Name = "Text"
	Text_5.Parent = Example_4
	Text_5.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Text_5.BorderSizePixel = 0
	Text_5.Position = UDim2.new(0, 10, 0, 0)
	Text_5.Size = UDim2.new(0, 240, 0, 20)
	Text_5.Font = Enum.Font.SourceSans
	Text_5.TextSize = 14
	Text_5.Text = "Position"
	Text_5.TextColor3 = Color3.new(1, 1, 1)
	Text_5.TextXAlignment = Enum.TextXAlignment.Left
	Text_5.ZIndex = 10
	table.insert(shade2,Text_5)
	table.insert(text1,Text_5)

	Delete_6.Name = "Delete"
	Delete_6.Parent = Text_5
	Delete_6.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Delete_6.BorderSizePixel = 0
	Delete_6.Position = UDim2.new(0, 200, 0, 0)
	Delete_6.Size = UDim2.new(0, 40, 0, 20)
	Delete_6.Font = Enum.Font.SourceSans
	Delete_6.TextSize = 14
	Delete_6.Text = "Delete"
	Delete_6.TextColor3 = Color3.new(0, 0, 0)
	Delete_6.ZIndex = 10
	table.insert(shade3,Delete_6)
	table.insert(text2,Delete_6)

	TP.Name = "TP"
	TP.Parent = Text_5
	TP.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	TP.BorderSizePixel = 0
	TP.Position = UDim2.new(0, 155, 0, 0)
	TP.Size = UDim2.new(0, 40, 0, 20)
	TP.Font = Enum.Font.SourceSans
	TP.TextSize = 14
	TP.Text = "Goto"
	TP.TextColor3 = Color3.new(0, 0, 0)
	TP.ZIndex = 10
	table.insert(shade3,TP)
	table.insert(text2,TP)

	AliasesFrame.Name = "AliasesFrame"
	AliasesFrame.Parent = Settings
	AliasesFrame.Active = true
	AliasesFrame.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	AliasesFrame.BorderSizePixel = 0
	AliasesFrame.Position = UDim2.new(0, 0, 0, 175)
	AliasesFrame.Size = UDim2.new(0, 250, 0, 175)
	AliasesFrame.ZIndex = 10
	table.insert(shade1,AliasesFrame)

	Close_2.Name = "Close"
	Close_2.Parent = AliasesFrame
	Close_2.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Close_2.BorderSizePixel = 0
	Close_2.Position = UDim2.new(0, 205, 0, 150)
	Close_2.Size = UDim2.new(0, 40, 0, 20)
	Close_2.Font = Enum.Font.SourceSans
	Close_2.TextSize = 14
	Close_2.Text = "Close"
	Close_2.TextColor3 = Color3.new(1, 1, 1)
	Close_2.ZIndex = 10
	table.insert(shade2,Close_2)
	table.insert(text1,Close_2)

	Delete_3.Name = "Delete"
	Delete_3.Parent = AliasesFrame
	Delete_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Delete_3.BorderSizePixel = 0
	Delete_3.Position = UDim2.new(0, 5, 0, 150)
	Delete_3.Size = UDim2.new(0, 40, 0, 20)
	Delete_3.Font = Enum.Font.SourceSans
	Delete_3.TextSize = 14
	Delete_3.Text = "Clear"
	Delete_3.TextColor3 = Color3.new(1, 1, 1)
	Delete_3.ZIndex = 10
	table.insert(shade2,Delete_3)
	table.insert(text1,Delete_3)

	Holder_3.Name = "Holder"
	Holder_3.Parent = AliasesFrame
	Holder_3.BackgroundTransparency = 1
	Holder_3.BorderSizePixel = 0
	Holder_3.Position = UDim2.new(0, 0, 0, 0)
	Holder_3.Size = UDim2.new(0, 250, 0, 145)
	Holder_3.ScrollBarImageColor3 = Color3.fromRGB(78,78,79)
	Holder_3.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_3.CanvasSize = UDim2.new(0, 0, 0, 0)
	Holder_3.MidImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_3.ScrollBarThickness = 0
	Holder_3.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_3.VerticalScrollBarInset = 'Always'
	Holder_3.ZIndex = 10

	Example_3.Name = "Example"
	Example_3.Parent = AliasesFrame
	Example_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Example_3.BorderSizePixel = 0
	Example_3.Size = UDim2.new(0, 10, 0, 20)
	Example_3.Visible = false
	Example_3.ZIndex = 10
	table.insert(shade2,Example_3)

	Text_4.Name = "Text"
	Text_4.Parent = Example_3
	Text_4.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Text_4.BorderSizePixel = 0
	Text_4.Position = UDim2.new(0, 10, 0, 0)
	Text_4.Size = UDim2.new(0, 240, 0, 20)
	Text_4.Font = Enum.Font.SourceSans
	Text_4.TextSize = 14
	Text_4.Text = "honk"
	Text_4.TextColor3 = Color3.new(1, 1, 1)
	Text_4.TextXAlignment = Enum.TextXAlignment.Left
	Text_4.ZIndex = 10
	table.insert(shade2,Text_4)
	table.insert(text1,Text_4)

	Delete_4.Name = "Delete"
	Delete_4.Parent = Text_4
	Delete_4.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Delete_4.BorderSizePixel = 0
	Delete_4.Position = UDim2.new(0, 200, 0, 0)
	Delete_4.Size = UDim2.new(0, 40, 0, 20)
	Delete_4.Font = Enum.Font.SourceSans
	Delete_4.TextSize = 14
	Delete_4.Text = "Delete"
	Delete_4.TextColor3 = Color3.new(0, 0, 0)
	Delete_4.ZIndex = 10
	table.insert(shade3,Delete_4)
	table.insert(text2,Delete_4)

	PluginsFrame.Name = "PluginsFrame"
	PluginsFrame.Parent = Settings
	PluginsFrame.Active = true
	PluginsFrame.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	PluginsFrame.BorderSizePixel = 0
	PluginsFrame.Position = UDim2.new(0, 0, 0, 175)
	PluginsFrame.Size = UDim2.new(0, 250, 0, 175)
	PluginsFrame.ZIndex = 10
	table.insert(shade1,PluginsFrame)

	Close_4.Name = "Close"
	Close_4.Parent = PluginsFrame
	Close_4.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Close_4.BorderSizePixel = 0
	Close_4.Position = UDim2.new(0, 205, 0, 150)
	Close_4.Size = UDim2.new(0, 40, 0, 20)
	Close_4.Font = Enum.Font.SourceSans
	Close_4.TextSize = 14
	Close_4.Text = "Close"
	Close_4.TextColor3 = Color3.new(1, 1, 1)
	Close_4.ZIndex = 10
	table.insert(shade2,Close_4)
	table.insert(text1,Close_4)

	Add_3.Name = "Add"
	Add_3.Parent = PluginsFrame
	Add_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Add_3.BorderSizePixel = 0
	Add_3.Position = UDim2.new(0, 5, 0, 150)
	Add_3.Size = UDim2.new(0, 40, 0, 20)
	Add_3.Font = Enum.Font.SourceSans
	Add_3.TextSize = 14
	Add_3.Text = "Add"
	Add_3.TextColor3 = Color3.new(1, 1, 1)
	Add_3.ZIndex = 10
	table.insert(shade2,Add_3)
	table.insert(text1,Add_3)

	Holder_5.Name = "Holder"
	Holder_5.Parent = PluginsFrame
	Holder_5.BackgroundTransparency = 1
	Holder_5.BorderSizePixel = 0
	Holder_5.Position = UDim2.new(0, 0, 0, 0)
	Holder_5.Selectable = false
	Holder_5.Size = UDim2.new(0, 250, 0, 145)
	Holder_5.ScrollBarImageColor3 = Color3.fromRGB(78,78,79)
	Holder_5.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_5.CanvasSize = UDim2.new(0, 0, 0, 0)
	Holder_5.MidImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_5.ScrollBarThickness = 0
	Holder_5.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Holder_5.VerticalScrollBarInset = 'Always'
	Holder_5.ZIndex = 10

	Example_5.Name = "Example"
	Example_5.Parent = PluginsFrame
	Example_5.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Example_5.BorderSizePixel = 0
	Example_5.Size = UDim2.new(0, 10, 0, 20)
	Example_5.Visible = false
	Example_5.ZIndex = 10
	table.insert(shade2,Example_5)

	Text_6.Name = "Text"
	Text_6.Parent = Example_5
	Text_6.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Text_6.BorderSizePixel = 0
	Text_6.Position = UDim2.new(0, 10, 0, 0)
	Text_6.Size = UDim2.new(0, 240, 0, 20)
	Text_6.Font = Enum.Font.SourceSans
	Text_6.TextSize = 14
	Text_6.Text = "F4 > Toggle Fly"
	Text_6.TextColor3 = Color3.new(1, 1, 1)
	Text_6.TextXAlignment = Enum.TextXAlignment.Left
	Text_6.ZIndex = 10
	table.insert(shade2,Text_6)
	table.insert(text1,Text_6)

	Delete_7.Name = "Delete"
	Delete_7.Parent = Text_6
	Delete_7.BackgroundColor3 = Color3.fromRGB(78, 78, 79)
	Delete_7.BorderSizePixel = 0
	Delete_7.Position = UDim2.new(0, 200, 0, 0)
	Delete_7.Size = UDim2.new(0, 40, 0, 20)
	Delete_7.Font = Enum.Font.SourceSans
	Delete_7.TextSize = 14
	Delete_7.Text = "Delete"
	Delete_7.TextColor3 = Color3.new(0, 0, 0)
	Delete_7.ZIndex = 10
	table.insert(shade3,Delete_7)
	table.insert(text2,Delete_7)

	PluginEditor.Name = randomString()
	PluginEditor.Parent = PARENT
	PluginEditor.BorderSizePixel = 0
	PluginEditor.Active = true
	PluginEditor.BackgroundTransparency = 1
	PluginEditor.Position = UDim2.new(0.5, -180, 0, -500)
	PluginEditor.Size = UDim2.new(0, 360, 0, 20)
	PluginEditor.ZIndex = 10

	background_3.Name = "background"
	background_3.Parent = PluginEditor
	background_3.Active = true
	background_3.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	background_3.BorderSizePixel = 0
	background_3.Position = UDim2.new(0, 0, 0, 20)
	background_3.Size = UDim2.new(0, 360, 0, 160)
	background_3.ZIndex = 10
	table.insert(shade1,background_3)

	Dark_9.Name = "Dark"
	Dark_9.Parent = background_3
	Dark_9.Active = true
	Dark_9.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	Dark_9.BorderSizePixel = 0
	Dark_9.Position = UDim2.new(0, 222, 0, 0)
	Dark_9.Size = UDim2.new(0, 2, 0, 160)
	Dark_9.ZIndex = 10
	table.insert(shade2,Dark_9)

	Img.Name = "Img"
	Img.Parent = background_3
	Img.BackgroundTransparency = 1
	Img.Position = UDim2.new(0, 242, 0, 3)
	Img.Size = UDim2.new(0, 100, 0, 95)
	Img.Image = "rbxassetid://4113050383"
	Img.ZIndex = 10

	AddPlugin.Name = "AddPlugin"
	AddPlugin.Parent = background_3
	AddPlugin.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	AddPlugin.BorderSizePixel = 0
	AddPlugin.Position = UDim2.new(0, 235, 0, 100)
	AddPlugin.Size = UDim2.new(0, 115, 0, 50)
	AddPlugin.Font = Enum.Font.SourceSans
	AddPlugin.TextSize = 14
	AddPlugin.Text = "Add Plugin"
	AddPlugin.TextColor3 = Color3.new(1, 1, 1)
	AddPlugin.ZIndex = 10
	table.insert(shade2,AddPlugin)
	table.insert(text1,AddPlugin)

	FileName.Name = "FileName"
	FileName.Parent = background_3
	FileName.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	FileName.BorderSizePixel = 0
	FileName.Position = UDim2.new(0.028, 0, 0.625, 0)
	FileName.Size = UDim2.new(0, 200, 0, 50)
	FileName.Font = Enum.Font.SourceSans
	FileName.TextSize = 14
	FileName.Text = "Plugin File Name"
	FileName.TextColor3 = Color3.new(1, 1, 1)
	FileName.ZIndex = 10
	table.insert(shade2,FileName)
	table.insert(text1,FileName)

	About.Name = "About"
	About.Parent = background_3
	About.BackgroundTransparency = 1
	About.BorderSizePixel = 0
	About.Position = UDim2.new(0, 17, 0, 10)
	About.Size = UDim2.new(0, 187, 0, 49)
	About.Font = Enum.Font.SourceSans
	About.TextSize = 14
	About.Text = "Plugins are .iy files and should be located in the 'workspace' folder of your exploit."
	About.TextColor3 = Color3.fromRGB(255, 255, 255)
	About.TextWrapped = true
	About.TextYAlignment = Enum.TextYAlignment.Top
	About.ZIndex = 10
	table.insert(text1,About)

	Directions_2.Name = "Directions"
	Directions_2.Parent = background_3
	Directions_2.BackgroundTransparency = 1
	Directions_2.BorderSizePixel = 0
	Directions_2.Position = UDim2.new(0, 17, 0, 60)
	Directions_2.Size = UDim2.new(0, 187, 0, 49)
	Directions_2.Font = Enum.Font.SourceSans
	Directions_2.TextSize = 14
	Directions_2.Text = "Type the name of the plugin file you want to add below."
	Directions_2.TextColor3 = Color3.fromRGB(255, 255, 255)
	Directions_2.TextWrapped = true
	Directions_2.TextYAlignment = Enum.TextYAlignment.Top
	Directions_2.ZIndex = 10
	table.insert(text1,Directions_2)

	shadow_3.Name = "shadow"
	shadow_3.Parent = PluginEditor
	shadow_3.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	shadow_3.BorderSizePixel = 0
	shadow_3.Size = UDim2.new(0, 360, 0, 20)
	shadow_3.ZIndex = 10
	table.insert(shade2,shadow_3)

	PopupText_3.Name = "PopupText"
	PopupText_3.Parent = shadow_3
	PopupText_3.BackgroundTransparency = 1
	PopupText_3.Size = UDim2.new(1, 0, 0.95, 0)
	PopupText_3.ZIndex = 10
	PopupText_3.Font = Enum.Font.SourceSans
	PopupText_3.TextSize = 14
	PopupText_3.Text = "Add Plugins"
	PopupText_3.TextColor3 = Color3.new(1, 1, 1)
	PopupText_3.TextWrapped = true
	table.insert(text1,PopupText_3)

	Exit_3.Name = "Exit"
	Exit_3.Parent = shadow_3
	Exit_3.BackgroundTransparency = 1
	Exit_3.Position = UDim2.new(1, -20, 0, 0)
	Exit_3.Size = UDim2.new(0, 20, 0, 20)
	Exit_3.Text = ""
	Exit_3.ZIndex = 10

	ExitImage_3.Parent = Exit_3
	ExitImage_3.BackgroundColor3 = Color3.new(1, 1, 1)
	ExitImage_3.BackgroundTransparency = 1
	ExitImage_3.Position = UDim2.new(0, 5, 0, 5)
	ExitImage_3.Size = UDim2.new(0, 10, 0, 10)
	ExitImage_3.Image = "rbxassetid://5054663650"
	ExitImage_3.ZIndex = 10

	AliasHint.Name = "AliasHint"
	AliasHint.Parent = AliasesFrame
	AliasHint.BackgroundTransparency = 1
	AliasHint.BorderSizePixel = 0
	AliasHint.Position = UDim2.new(0, 25, 0, 40)
	AliasHint.Size = UDim2.new(0, 200, 0, 50)
	AliasHint.Font = Enum.Font.SourceSansItalic
	AliasHint.TextSize = 16
	AliasHint.Text = "Add aliases by using the 'addalias' command"
	AliasHint.TextColor3 = Color3.new(1, 1, 1)
	AliasHint.TextStrokeColor3 = Color3.new(1, 1, 1)
	AliasHint.TextWrapped = true
	AliasHint.ZIndex = 10
	table.insert(text1,AliasHint)

	PluginsHint.Name = "PluginsHint"
	PluginsHint.Parent = PluginsFrame
	PluginsHint.BackgroundTransparency = 1
	PluginsHint.BorderSizePixel = 0
	PluginsHint.Position = UDim2.new(0, 25, 0, 40)
	PluginsHint.Size = UDim2.new(0, 200, 0, 50)
	PluginsHint.Font = Enum.Font.SourceSansItalic
	PluginsHint.TextSize = 16
	PluginsHint.Text = "Download plugins from the IY Discord (discord.io/infiniteyield)"
	PluginsHint.TextColor3 = Color3.new(1, 1, 1)
	PluginsHint.TextStrokeColor3 = Color3.new(1, 1, 1)
	PluginsHint.TextWrapped = true
	PluginsHint.ZIndex = 10
	table.insert(text1,PluginsHint)

	PositionsHint.Name = "PositionsHint"
	PositionsHint.Parent = PositionsFrame
	PositionsHint.BackgroundTransparency = 1
	PositionsHint.BorderSizePixel = 0
	PositionsHint.Position = UDim2.new(0, 25, 0, 40)
	PositionsHint.Size = UDim2.new(0, 200, 0, 70)
	PositionsHint.Font = Enum.Font.SourceSansItalic
	PositionsHint.TextSize = 16
	PositionsHint.Text = "Use the 'swp' or 'setwaypoint' command to add a position using your character (NOTE: Part teleports will not save)"
	PositionsHint.TextColor3 = Color3.new(1, 1, 1)
	PositionsHint.TextStrokeColor3 = Color3.new(1, 1, 1)
	PositionsHint.TextWrapped = true
	PositionsHint.ZIndex = 10
	table.insert(text1,PositionsHint)

	ToPartFrame.Name = randomString()
	ToPartFrame.Parent = PARENT
	ToPartFrame.Active = true
	ToPartFrame.BackgroundTransparency = 1
	ToPartFrame.Position = UDim2.new(0.5, -180, 0, -500)
	ToPartFrame.Size = UDim2.new(0, 360, 0, 20)
	ToPartFrame.ZIndex = 10

	background_5.Name = "background"
	background_5.Parent = ToPartFrame
	background_5.Active = true
	background_5.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
	background_5.BorderSizePixel = 0
	background_5.Position = UDim2.new(0, 0, 0, 20)
	background_5.Size = UDim2.new(0, 360, 0, 117)
	background_5.ZIndex = 10
	table.insert(shade1,background_5)

	ChoosePart.Name = "ChoosePart"
	ChoosePart.Parent = background_5
	ChoosePart.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	ChoosePart.BorderSizePixel = 0
	ChoosePart.Position = UDim2.new(0, 100, 0, 55)
	ChoosePart.Size = UDim2.new(0, 75, 0, 30)
	ChoosePart.Font = Enum.Font.SourceSans
	ChoosePart.TextSize = 14
	ChoosePart.Text = "Select Part"
	ChoosePart.TextColor3 = Color3.new(1, 1, 1)
	ChoosePart.ZIndex = 10
	table.insert(shade2,ChoosePart)
	table.insert(text1,ChoosePart)

	CopyPath.Name = "CopyPath"
	CopyPath.Parent = background_5
	CopyPath.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	CopyPath.BorderSizePixel = 0
	CopyPath.Position = UDim2.new(0, 185, 0, 55)
	CopyPath.Size = UDim2.new(0, 75, 0, 30)
	CopyPath.Font = Enum.Font.SourceSans
	CopyPath.TextSize = 14
	CopyPath.Text = "Copy Path"
	CopyPath.TextColor3 = Color3.new(1, 1, 1)
	CopyPath.ZIndex = 10
	table.insert(shade2,CopyPath)
	table.insert(text1,CopyPath)

	Directions_4.Name = "Directions"
	Directions_4.Parent = background_5
	Directions_4.BackgroundTransparency = 1
	Directions_4.BorderSizePixel = 0
	Directions_4.Position = UDim2.new(0, 51, 0, 17)
	Directions_4.Size = UDim2.new(0, 257, 0, 32)
	Directions_4.Font = Enum.Font.SourceSans
	Directions_4.TextSize = 14
	Directions_4.Text = 'Click on a part and then click the "Select Part" button below to set it as a teleport location'
	Directions_4.TextColor3 = Color3.new(1, 1, 1)
	Directions_4.TextWrapped = true
	Directions_4.TextYAlignment = Enum.TextYAlignment.Top
	Directions_4.ZIndex = 10
	table.insert(text1,Directions_4)

	Path.Name = "Path"
	Path.Parent = background_5
	Path.BackgroundTransparency = 1
	Path.BorderSizePixel = 0
	Path.Position = UDim2.new(0, 0, 0, 94)
	Path.Size = UDim2.new(0, 360, 0, 16)
	Path.Font = Enum.Font.SourceSansItalic
	Path.TextSize = 14
	Path.Text = ""
	Path.TextColor3 = Color3.new(1, 1, 1)
	Path.TextScaled = true
	Path.TextWrapped = true
	Path.TextYAlignment = Enum.TextYAlignment.Top
	Path.ZIndex = 10
	table.insert(text1,Path)

	shadow_4.Name = "shadow"
	shadow_4.Parent = ToPartFrame
	shadow_4.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
	shadow_4.BorderSizePixel = 0
	shadow_4.Size = UDim2.new(0, 360, 0, 20)
	shadow_4.ZIndex = 10
	table.insert(shade2,shadow_4)

	PopupText_5.Name = "PopupText"
	PopupText_5.Parent = shadow_4
	PopupText_5.BackgroundTransparency = 1
	PopupText_5.Size = UDim2.new(1, 0, 0.95, 0)
	PopupText_5.ZIndex = 10
	PopupText_5.Font = Enum.Font.SourceSans
	PopupText_5.TextSize = 14
	PopupText_5.Text = "Teleport to Part"
	PopupText_5.TextColor3 = Color3.new(1, 1, 1)
	PopupText_5.TextWrapped = true
	table.insert(text1,PopupText_5)

	Exit_4.Name = "Exit"
	Exit_4.Parent = shadow_4
	Exit_4.BackgroundTransparency = 1
	Exit_4.Position = UDim2.new(1, -20, 0, 0)
	Exit_4.Size = UDim2.new(0, 20, 0, 20)
	Exit_4.Text = ""
	Exit_4.ZIndex = 10

	ExitImage_5.Parent = Exit_4
	ExitImage_5.BackgroundColor3 = Color3.new(1, 1, 1)
	ExitImage_5.BackgroundTransparency = 1
	ExitImage_5.Position = UDim2.new(0, 5, 0, 5)
	ExitImage_5.Size = UDim2.new(0, 10, 0, 10)
	ExitImage_5.Image = "rbxassetid://5054663650"
	ExitImage_5.ZIndex = 10

	logs.Name = randomString()
	logs.Parent = PARENT
	logs.Active = true
	logs.BackgroundTransparency = 1
	logs.Position = UDim2.new(0, 0, 1, 10)
	logs.Size = UDim2.new(0, 338, 0, 20)
	logs.ZIndex = 10

	shadow.Name = "shadow"
	shadow.Parent = logs
	shadow.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
	shadow.BorderSizePixel = 0
	shadow.Position = UDim2.new(0, 0, 0.00999999978, 0)
	shadow.Size = UDim2.new(0, 338, 0, 20)
	shadow.ZIndex = 10
	table.insert(shade2,shadow)

	Hide.Name = "Hide"
	Hide.Parent = shadow
	Hide.BackgroundTransparency = 1
	Hide.Position = UDim2.new(1, -40, 0, 0)
	Hide.Size = UDim2.new(0, 20, 0, 20)
	Hide.ZIndex = 10
	Hide.Text = ""

	ImageLabel.Parent = Hide
	ImageLabel.BackgroundColor3 = Color3.new(1, 1, 1)
	ImageLabel.BackgroundTransparency = 1
	ImageLabel.Position = UDim2.new(0, 3, 0, 3)
	ImageLabel.Size = UDim2.new(0, 14, 0, 14)
	ImageLabel.Image = "rbxassetid://2406617031"
	ImageLabel.ZIndex = 10

	PopupText.Name = "PopupText"
	PopupText.Parent = shadow
	PopupText.BackgroundTransparency = 1
	PopupText.Size = UDim2.new(1, 0, 0.949999988, 0)
	PopupText.ZIndex = 10
	PopupText.Font = Enum.Font.SourceSans
	PopupText.FontSize = Enum.FontSize.Size14
	PopupText.Text = "Logs"
	PopupText.TextColor3 = Color3.new(1, 1, 1)
	PopupText.TextWrapped = true
	table.insert(text1,PopupText)

	Exit.Name = "Exit"
	Exit.Parent = shadow
	Exit.BackgroundTransparency = 1
	Exit.Position = UDim2.new(1, -20, 0, 0)
	Exit.Size = UDim2.new(0, 20, 0, 20)
	Exit.ZIndex = 10
	Exit.Text = ""

	ImageLabel_2.Parent = Exit
	ImageLabel_2.BackgroundColor3 = Color3.new(1, 1, 1)
	ImageLabel_2.BackgroundTransparency = 1
	ImageLabel_2.Position = UDim2.new(0, 5, 0, 5)
	ImageLabel_2.Size = UDim2.new(0, 10, 0, 10)
	ImageLabel_2.Image = "rbxassetid://5054663650"
	ImageLabel_2.ZIndex = 10

	background.Name = "background"
	background.Parent = logs
	background.Active = true
	background.BackgroundColor3 = Color3.new(0.141176, 0.141176, 0.145098)
	background.BorderSizePixel = 0
	background.ClipsDescendants = true
	background.Position = UDim2.new(0, 0, 1, 0)
	background.Size = UDim2.new(0, 338, 0, 245)
	background.ZIndex = 10

	chat.Name = "chat"
	chat.Parent = background
	chat.Active = true
	chat.BackgroundColor3 = Color3.new(0.141176, 0.141176, 0.145098)
	chat.BorderSizePixel = 0
	chat.ClipsDescendants = true
	chat.Size = UDim2.new(0, 338, 0, 245)
	chat.ZIndex = 10
	table.insert(shade1,chat)

	Clear.Name = "Clear"
	Clear.Parent = chat
	Clear.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
	Clear.BorderSizePixel = 0
	Clear.Position = UDim2.new(0, 5, 0, 220)
	Clear.Size = UDim2.new(0, 50, 0, 20)
	Clear.ZIndex = 10
	Clear.Font = Enum.Font.SourceSans
	Clear.FontSize = Enum.FontSize.Size14
	Clear.Text = "Clear"
	Clear.TextColor3 = Color3.new(1, 1, 1)
	table.insert(shade2,Clear)
	table.insert(text1,Clear)

	SaveChatlogs.Name = "SaveChatlogs"
	SaveChatlogs.Parent = chat
	SaveChatlogs.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
	SaveChatlogs.BorderSizePixel = 0
	SaveChatlogs.Position = UDim2.new(0, 258, 0, 220)
	SaveChatlogs.Size = UDim2.new(0, 75, 0, 20)
	SaveChatlogs.ZIndex = 10
	SaveChatlogs.Font = Enum.Font.SourceSans
	SaveChatlogs.FontSize = Enum.FontSize.Size14
	SaveChatlogs.Text = "Save To .txt"
	SaveChatlogs.TextColor3 = Color3.new(1, 1, 1)
	table.insert(shade2,SaveChatlogs)
	table.insert(text1,SaveChatlogs)

	Toggle.Name = "Toggle"
	Toggle.Parent = chat
	Toggle.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
	Toggle.BorderSizePixel = 0
	Toggle.Position = UDim2.new(0, 60, 0, 220)
	Toggle.Size = UDim2.new(0, 66, 0, 20)
	Toggle.ZIndex = 10
	Toggle.Font = Enum.Font.SourceSans
	Toggle.FontSize = Enum.FontSize.Size14
	Toggle.Text = "Disabled"
	Toggle.TextColor3 = Color3.new(1, 1, 1)
	table.insert(shade2,Toggle)
	table.insert(text1,Toggle)

	scroll_2.Name = "scroll"
	scroll_2.Parent = chat
	scroll_2.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
	scroll_2.BorderSizePixel = 0
	scroll_2.Position = UDim2.new(0, 5, 0, 25)
	scroll_2.Size = UDim2.new(0, 328, 0, 190)
	scroll_2.ZIndex = 10
	scroll_2.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	scroll_2.CanvasSize = UDim2.new(0, 0, 0, 10)
	scroll_2.ScrollBarThickness = 8
	scroll_2.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	table.insert(scroll,scroll_2)
	table.insert(shade2,scroll_2)

	join.Name = "join"
	join.Parent = background
	join.Active = true
	join.BackgroundColor3 = Color3.new(0.141176, 0.141176, 0.145098)
	join.BorderSizePixel = 0
	join.ClipsDescendants = true
	join.Size = UDim2.new(0, 338, 0, 245)
	join.Visible = false
	join.ZIndex = 10
	table.insert(shade1,join)

	Toggle_2.Name = "Toggle"
	Toggle_2.Parent = join
	Toggle_2.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
	Toggle_2.BorderSizePixel = 0
	Toggle_2.Position = UDim2.new(0, 60, 0, 220)
	Toggle_2.Size = UDim2.new(0, 66, 0, 20)
	Toggle_2.ZIndex = 10
	Toggle_2.Font = Enum.Font.SourceSans
	Toggle_2.FontSize = Enum.FontSize.Size14
	Toggle_2.Text = "Disabled"
	Toggle_2.TextColor3 = Color3.new(1, 1, 1)
	table.insert(shade2,Toggle_2)
	table.insert(text1,Toggle_2)

	Clear_2.Name = "Clear"
	Clear_2.Parent = join
	Clear_2.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
	Clear_2.BorderSizePixel = 0
	Clear_2.Position = UDim2.new(0, 5, 0, 220)
	Clear_2.Size = UDim2.new(0, 50, 0, 20)
	Clear_2.ZIndex = 10
	Clear_2.Font = Enum.Font.SourceSans
	Clear_2.FontSize = Enum.FontSize.Size14
	Clear_2.Text = "Clear"
	Clear_2.TextColor3 = Color3.new(1, 1, 1)
	table.insert(shade2,Clear_2)
	table.insert(text1,Clear_2)

	scroll_3.Name = "scroll"
	scroll_3.Parent = join
	scroll_3.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
	scroll_3.BorderSizePixel = 0
	scroll_3.Position = UDim2.new(0, 5, 0, 25)
	scroll_3.Size = UDim2.new(0, 328, 0, 190)
	scroll_3.ZIndex = 10
	scroll_3.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	scroll_3.CanvasSize = UDim2.new(0, 0, 0, 10)
	scroll_3.ScrollBarThickness = 8
	scroll_3.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	table.insert(scroll,scroll_3)
	table.insert(shade2,scroll_3)

	selectChat.Name = "selectChat"
	selectChat.Parent = background
	selectChat.BackgroundColor3 = Color3.new(0.180392, 0.180392, 0.184314)
	selectChat.BorderSizePixel = 0
	selectChat.Position = UDim2.new(0, 5, 0, 5)
	selectChat.Size = UDim2.new(0, 164, 0, 20)
	selectChat.ZIndex = 10
	selectChat.Font = Enum.Font.SourceSans
	selectChat.FontSize = Enum.FontSize.Size14
	selectChat.Text = "Chat Logs"
	selectChat.TextColor3 = Color3.new(1, 1, 1)
	table.insert(shade2,selectChat)
	table.insert(text1,selectChat)

	selectJoin.Name = "selectJoin"
	selectJoin.Parent = background
	selectJoin.BackgroundColor3 = Color3.new(0.305882, 0.305882, 0.309804)
	selectJoin.BorderSizePixel = 0
	selectJoin.Position = UDim2.new(0, 169, 0, 5)
	selectJoin.Size = UDim2.new(0, 164, 0, 20)
	selectJoin.ZIndex = 10
	selectJoin.Font = Enum.Font.SourceSans
	selectJoin.FontSize = Enum.FontSize.Size14
	selectJoin.Text = "Join Logs"
	selectJoin.TextColor3 = Color3.new(1, 1, 1)
	table.insert(shade3,selectJoin)
	table.insert(text1,selectJoin)

	function create(data)
		local insts = {}
		for i,v in pairs(data) do insts[v[1]] = Instance.new(v[2]) end

		for _,v in pairs(data) do
			for prop,val in pairs(v[3]) do
				if type(val) == "table" then
					insts[v[1]][prop] = insts[val[1]]
				else
					insts[v[1]][prop] = val
				end
			end
		end

		return insts[1]
	end

	ViewportTextBox = (function()
		local textService = game:GetService("TextService")

		local funcs = {}
		funcs.Update = function(self)
			local cursorPos = self.TextBox.CursorPosition
			local text = self.TextBox.Text
			if text == "" then self.TextBox.Position = UDim2.new(0,2,0,0) return end
			if cursorPos == -1 then return end

			local cursorText = text:sub(1,cursorPos-1)
			local pos = nil
			local leftEnd = -self.TextBox.Position.X.Offset
			local rightEnd = leftEnd + self.View.AbsoluteSize.X

			local totalTextSize = textService:GetTextSize(text,self.TextBox.TextSize,self.TextBox.Font,Vector2.new(999999999,100)).X
			local cursorTextSize = textService:GetTextSize(cursorText,self.TextBox.TextSize,self.TextBox.Font,Vector2.new(999999999,100)).X

			if cursorTextSize > rightEnd then
				pos = math.max(-2,cursorTextSize - self.View.AbsoluteSize.X + 2)
			elseif cursorTextSize < leftEnd then
				pos = math.max(-2,cursorTextSize-2)
			elseif totalTextSize < rightEnd then
				pos = math.max(-2,totalTextSize - self.View.AbsoluteSize.X + 2)
			end

			if pos then
				self.TextBox.Position = UDim2.new(0,-pos,0,0)
				self.TextBox.Size = UDim2.new(1,pos,1,0)
			end
		end

		local mt = {}
		mt.__index = funcs

		local function convert(textbox)
			local obj = setmetatable({OffsetX = 0, TextBox = textbox},mt)

			local view = Instance.new("Frame")
			view.BackgroundTransparency = textbox.BackgroundTransparency
			view.BackgroundColor3 = textbox.BackgroundColor3
			view.BorderSizePixel = textbox.BorderSizePixel
			view.BorderColor3 = textbox.BorderColor3
			view.Position = textbox.Position
			view.Size = textbox.Size
			view.ClipsDescendants = true
			view.Name = textbox.Name
			view.ZIndex = 10
			textbox.BackgroundTransparency = 1
			textbox.Position = UDim2.new(0,4,0,0)
			textbox.Size = UDim2.new(1,-8,1,0)
			textbox.TextXAlignment = Enum.TextXAlignment.Left
			textbox.Name = "Input"
			table.insert(text1,textbox)
			table.insert(shade2,view)

			obj.View = view

			textbox.Changed:Connect(function(prop)
				if prop == "Text" or prop == "CursorPosition" or prop == "AbsoluteSize" then
					obj:Update()
				end
			end)

			obj:Update()

			view.Parent = textbox.Parent
			textbox.Parent = view

			return obj
		end

		return {convert = convert}
	end)()

	ViewportTextBox.convert(Cmdbar).View.ZIndex = 10
	ViewportTextBox.convert(Cmdbar_2).View.ZIndex = 10

	IYMouse = Players.LocalPlayer:GetMouse()
	UserInputService = game:GetService("UserInputService")

	local sethidden = sethiddenproperty or set_hidden_property or set_hidden_prop
	local gethidden = gethiddenproperty or get_hidden_property or get_hidden_prop
	local setsimulation = setsimulationradius or set_simulation_radius

	function writefileExploit()
		if writefile then
			return true
		end
	end

	function isNumber(str)
		if tonumber(str) ~= nil or str == 'inf' then
			return true
		end
	end

	function getRoot(char)
		local rootPart = char:FindFirstChild('HumanoidRootPart') or char:FindFirstChild('Torso') or char:FindFirstChild('UpperTorso')
		return rootPart
	end

	function tools(plr)
		if plr:FindFirstChildOfClass("Backpack"):FindFirstChildOfClass('Tool') or plr.Character:FindFirstChildOfClass('Tool') then
			return true
		end
	end

	function r15(plr)
		if plr.Character:FindFirstChildOfClass('Humanoid').RigType == Enum.HumanoidRigType.R15 then
			return true
		end
	end

	function toClipboard(String)
		local clipBoard = setclipboard or toclipboard or set_clipboard or (Clipboard and Clipboard.set)
		if clipBoard then
			clipBoard(String)
			notify('Clipboard','Copied to clipboard')
		else
			notify('Clipboard',"Your exploit doesn't have the ability to use the clipboard")
		end
	end

	function getHierarchy(obj)
		local fullname
		local period

		if string.find(obj.Name,' ') then
			fullname = '["'..obj.Name..'"]'
			period = false
		else
			fullname = obj.Name
			period = true
		end

		local getS = obj
		local parent = obj
		local service = ''

		if getS.Parent ~= game then
			repeat
				getS = getS.Parent
				service = getS.ClassName
			until getS.Parent == game
		end

		if parent.Parent ~= getS then
			repeat
				parent = parent.Parent
				if string.find(tostring(parent),' ') then
					if period then
						fullname = '["'..parent.Name..'"].'..fullname
					else
						fullname = '["'..parent.Name..'"]'..fullname
					end
					period = false
				else
					if period then
						fullname = parent.Name..'.'..fullname
					else
						fullname = parent.Name..''..fullname
					end
					period = true
				end
			until parent.Parent == getS
		elseif string.find(tostring(parent),' ') then
			fullname = '["'..parent.Name..'"]'
			period = false
		end

		if period then
			return 'game:GetService("'..service..'").'..fullname
		else
			return 'game:GetService("'..service..'")'..fullname
		end
	end

	AllWaypoints = {}

	local cooldown = false
	function writefileCooldown(name,data)
		spawn(function()
			if not cooldown then
				cooldown = true
				writefile(name, data)
			else
				repeat wait() until cooldown == false
				writefileCooldown(name,data)
			end
			wait(3)
			cooldown = false
		end)
	end

	function dragGUI(gui)
		spawn(function()
			local dragging
			local dragInput
			local dragStart = Vector3.new(0,0,0)
			local startPos
			local function update(input)
				local delta = input.Position - dragStart
				local Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
				game:GetService("TweenService"):Create(gui, TweenInfo.new(.20), {Position = Position}):Play()
			end
			gui.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
					dragging = true
					dragStart = input.Position
					startPos = gui.Position

					input.Changed:Connect(function()
						if input.UserInputState == Enum.UserInputState.End then
							dragging = false
						end
					end)
				end
			end)
			gui.InputChanged:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
					dragInput = input
				end
			end)
			UserInputService.InputChanged:Connect(function(input)
				if input == dragInput and dragging then
					update(input)
				end
			end)
		end)
	end

	dragGUI(logs)
	dragGUI(KeybindEditor)
	dragGUI(PluginEditor)
	dragGUI(ToPartFrame)

	eventEditor = (function()
		local events = {}

		local function registerEvent(name,sets)
			events[name] = {
				commands = {},
				sets = sets or {}
			}
		end

		local onEdited = nil

		local function fireEvent(name,...)
			local args = {...}
			local event = events[name]
			if event then
				for i,cmd in pairs(event.commands) do
					local metCondition = true
					for idx,set in pairs(event.sets) do
						local argVal = args[idx]
						local cmdSet = cmd[2][idx]
						local condType = set.Type
						if condType == "Player" then
							if cmdSet == 0 then
								metCondition = metCondition and (tostring(Players.LocalPlayer) == argVal)
							elseif cmdSet ~= 1 then
								metCondition = metCondition and table.find(getPlayer(cmdSet,Players.LocalPlayer),argVal)
							end
						elseif condType == "String" then
							if cmdSet ~= 0 then
								metCondition = metCondition and string.find(argVal:lower(),cmdSet:lower())
							end
						elseif condType == "Number" then
							if cmdSet ~= 0 then
								metCondition = metCondition and tonumber(argVal)<=tonumber(cmdSet)
							end
						end
						if not metCondition then break end
					end

					if metCondition then
						pcall(coroutine.wrap(function()
							local cmdStr = cmd[1]
							for count,arg in pairs(args) do
								cmdStr = cmdStr:gsub("%$"..count,arg)
							end
							wait(cmd[3] or 0)
							execCmd(cmdStr)
						end))
					end
				end
			end
		end

		local main = create({
			{1,"Frame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BackgroundTransparency=1,BorderSizePixel=0,Name="EventEditor",Position=UDim2.new(0.5,-175,0,-500),Size=UDim2.new(0,350,0,20),ZIndex=10,}},
			{2,"Frame",{BackgroundColor3=currentShade2,BorderSizePixel=0,Name="TopBar",Parent={1},Size=UDim2.new(1,0,0,20),ZIndex=10,}},
			{3,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Title",Parent={2},Position=UDim2.new(0,0,0,0),Size=UDim2.new(1,0,0.95,0),Text="Event Editor",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=Enum.TextXAlignment.Center,ZIndex=10,}},
			{4,"TextButton",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Close",Parent={2},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),Text="",TextColor3=Color3.new(1,1,1),TextSize=14,ZIndex=10,}},
			{5,"ImageLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Image="rbxassetid://5054663650",Parent={4},Position=UDim2.new(0,5,0,5),Size=UDim2.new(0,10,0,10),ZIndex=10,}},
			{6,"Frame",{BackgroundColor3=currentShade1,BorderSizePixel=0,Name="Content",Parent={1},Position=UDim2.new(0,0,0,20),Size=UDim2.new(1,0,0,202),ZIndex=10,}},
			{7,"ScrollingFrame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,BottomImage="rbxasset://textures/ui/Scroll/scroll-middle.png",CanvasSize=UDim2.new(0,0,0,100),Name="List",Parent={6},Position=UDim2.new(0,5,0,5),ScrollBarImageColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),ScrollBarThickness=8,Size=UDim2.new(1,-10,1,-10),TopImage="rbxasset://textures/ui/Scroll/scroll-middle.png",ZIndex=10,}},
			{8,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Holder",Parent={7},Size=UDim2.new(1,0,1,0),ZIndex=10,}},
			{9,"UIListLayout",{Parent={8},SortOrder=2,}},
			{10,"Frame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BackgroundTransparency=1,BorderColor3=Color3.new(0.3137255012989,0.3137255012989,0.3137255012989),BorderSizePixel=0,ClipsDescendants=true,Name="Settings",Parent={6},Position=UDim2.new(1,0,0,0),Size=UDim2.new(0,150,1,0),ZIndex=10,}},
			{11,"Frame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),Name="Slider",Parent={10},Position=UDim2.new(0,-150,0,0),Size=UDim2.new(1,0,1,0),ZIndex=10,}},
			{12,"Frame",{BackgroundColor3=Color3.new(0.23529413342476,0.23529413342476,0.23529413342476),BorderColor3=Color3.new(0.3137255012989,0.3137255012989,0.3137255012989),BorderSizePixel=0,Name="Line",Parent={11},Size=UDim2.new(0,1,1,0),ZIndex=10,}},
			{13,"ScrollingFrame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,BottomImage="rbxasset://textures/ui/Scroll/scroll-middle.png",CanvasSize=UDim2.new(0,0,0,100),Name="List",Parent={11},Position=UDim2.new(0,0,0,25),ScrollBarImageColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),ScrollBarThickness=8,Size=UDim2.new(1,0,1,-25),TopImage="rbxasset://textures/ui/Scroll/scroll-middle.png",ZIndex=10,}},
			{14,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Holder",Parent={13},Size=UDim2.new(1,0,1,0),ZIndex=10,}},
			{15,"UIListLayout",{Parent={14},SortOrder=2,}},
			{16,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Title",Parent={11},Size=UDim2.new(1,0,0,20),Text="Event Settings",TextColor3=Color3.new(1,1,1),TextSize=14,ZIndex=10,}},
			{17,"TextButton",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),Font=3,Name="Close",BorderSizePixel=0,Parent={11},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),Text="<",TextColor3=Color3.new(1,1,1),TextSize=18,ZIndex=10,}},
			{18,"Folder",{Name="Templates",Parent={10},}},
			{19,"Frame",{BackgroundColor3=Color3.new(0.19607844948769,0.19607844948769,0.19607844948769),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),Name="Players",Parent={18},Position=UDim2.new(0,0,0,25),Size=UDim2.new(1,0,0,86),Visible=false,ZIndex=10,}},
			{20,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Title",Parent={19},Size=UDim2.new(1,0,0,20),Text="Choose Players",TextColor3=Color3.new(1,1,1),TextSize=14,ZIndex=10,}},
			{21,"TextLabel",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="Any",Parent={19},Position=UDim2.new(0,5,0,42),Size=UDim2.new(1,-10,0,20),Text="Any Player",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{22,"Frame",{BackgroundColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),BorderSizePixel=0,Name="Button",Parent={21},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),ZIndex=10,}},
			{23,"TextButton",{BackgroundColor3=Color3.new(0.58823531866074,0.58823531866074,0.59215688705444),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="On",Parent={22},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),Text="",TextColor3=Color3.new(0,0,0),TextSize=14,ZIndex=10,}},
			{24,"TextLabel",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="Me",Parent={19},Position=UDim2.new(0,5,0,20),Size=UDim2.new(1,-10,0,20),Text="Me Only",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{25,"Frame",{BackgroundColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),BorderSizePixel=0,Name="Button",Parent={24},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),ZIndex=10,}},
			{26,"TextButton",{BackgroundColor3=Color3.new(0.58823531866074,0.58823531866074,0.59215688705444),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="On",Parent={25},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),Text="",TextColor3=Color3.new(0,0,0),TextSize=14,ZIndex=10,}},
			{27,"TextBox",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,ClearTextOnFocus=false,Font=3,Name="Custom",Parent={19},PlaceholderColor3=Color3.new(0.47058826684952,0.47058826684952,0.47058826684952),PlaceholderText="Custom Player Set",Position=UDim2.new(0,5,0,64),Size=UDim2.new(1,-35,0,20),Text="",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{28,"Frame",{BackgroundColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),BorderSizePixel=0,Name="CustomButton",Parent={19},Position=UDim2.new(1,-25,0,64),Size=UDim2.new(0,20,0,20),ZIndex=10,}},
			{29,"TextButton",{BackgroundColor3=Color3.new(0.58823531866074,0.58823531866074,0.59215688705444),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="On",Parent={28},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),Text="",TextColor3=Color3.new(0,0,0),TextSize=14,ZIndex=10,}},
			{30,"Frame",{BackgroundColor3=Color3.new(0.19607844948769,0.19607844948769,0.19607844948769),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),Name="Strings",Parent={18},Position=UDim2.new(0,0,0,25),Size=UDim2.new(1,0,0,64),Visible=false,ZIndex=10,}},
			{31,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Title",Parent={30},Size=UDim2.new(1,0,0,20),Text="Choose String",TextColor3=Color3.new(1,1,1),TextSize=14,ZIndex=10,}},
			{32,"TextLabel",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="Any",Parent={30},Position=UDim2.new(0,5,0,20),Size=UDim2.new(1,-10,0,20),Text="Any String",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{33,"Frame",{BackgroundColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),BorderSizePixel=0,Name="Button",Parent={32},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),ZIndex=10,}},
			{34,"TextButton",{BackgroundColor3=Color3.new(0.58823531866074,0.58823531866074,0.59215688705444),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="On",Parent={33},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),Text="",TextColor3=Color3.new(0,0,0),TextSize=14,ZIndex=10,}},
			{54,"Frame",{BackgroundColor3=Color3.new(0.19607844948769,0.19607844948769,0.19607844948769),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),Name="Numbers",Parent={18},Position=UDim2.new(0,0,0,25),Size=UDim2.new(1,0,0,64),Visible=false,ZIndex=10,}},
			{55,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Title",Parent={54},Size=UDim2.new(1,0,0,20),Text="Choose String",TextColor3=Color3.new(1,1,1),TextSize=14,ZIndex=10,}},
			{56,"TextLabel",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="Any",Parent={54},Position=UDim2.new(0,5,0,20),Size=UDim2.new(1,-10,0,20),Text="Any Number",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{57,"Frame",{BackgroundColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),BorderSizePixel=0,Name="Button",Parent={56},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),ZIndex=10,}},
			{58,"TextButton",{BackgroundColor3=Color3.new(0.58823531866074,0.58823531866074,0.59215688705444),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="On",Parent={57},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),Text="",TextColor3=Color3.new(0,0,0),TextSize=14,ZIndex=10,}},
			{59,"TextBox",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,ClearTextOnFocus=false,Font=3,Name="Custom",Parent={54},PlaceholderColor3=Color3.new(0.47058826684952,0.47058826684952,0.47058826684952),PlaceholderText="Number",Position=UDim2.new(0,5,0,42),Size=UDim2.new(1,-35,0,20),Text="",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{60,"Frame",{BackgroundColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),BorderSizePixel=0,Name="CustomButton",Parent={54},Position=UDim2.new(1,-25,0,42),Size=UDim2.new(0,20,0,20),ZIndex=10,}},
			{61,"TextButton",{BackgroundColor3=Color3.new(0.58823531866074,0.58823531866074,0.59215688705444),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="On",Parent={60},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),Text="",TextColor3=Color3.new(0,0,0),TextSize=14,ZIndex=10,}},
			{35,"TextBox",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,ClearTextOnFocus=false,Font=3,Name="Custom",Parent={30},PlaceholderColor3=Color3.new(0.47058826684952,0.47058826684952,0.47058826684952),PlaceholderText="Match String",Position=UDim2.new(0,5,0,42),Size=UDim2.new(1,-35,0,20),Text="",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{36,"Frame",{BackgroundColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),BorderSizePixel=0,Name="CustomButton",Parent={30},Position=UDim2.new(1,-25,0,42),Size=UDim2.new(0,20,0,20),ZIndex=10,}},
			{37,"TextButton",{BackgroundColor3=Color3.new(0.58823531866074,0.58823531866074,0.59215688705444),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="On",Parent={36},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),Text="",TextColor3=Color3.new(0,0,0),TextSize=14,ZIndex=10,}},
			{38,"Frame",{BackgroundColor3=Color3.new(0.19607844948769,0.19607844948769,0.19607844948769),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),Name="DelayEditor",Parent={18},Position=UDim2.new(0,0,0,25),Size=UDim2.new(1,0,0,24),Visible=false,ZIndex=10,}},
			{39,"TextBox",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,Font=3,Name="Secs",Parent={38},PlaceholderColor3=Color3.new(0.47058826684952,0.47058826684952,0.47058826684952),Position=UDim2.new(0,60,0,2),Size=UDim2.new(1,-65,0,20),Text="",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{40,"TextLabel",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Font=3,Name="Label",Parent={39},Position=UDim2.new(0,-55,0,0),Size=UDim2.new(1,0,1,0),Text="Delay (s):",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{41,"Frame",{BackgroundColor3=currentShade1,BorderSizePixel=0,ClipsDescendants=true,Name="EventTemplate",Parent={6},Size=UDim2.new(1,0,0,20),Visible=false,ZIndex=10,}},
			{42,"TextButton",{BackgroundColor3=currentText1,BackgroundTransparency=1,Font=3,Name="Expand",Parent={41},Size=UDim2.new(0,20,0,20),Text=">",TextColor3=Color3.new(1,1,1),TextSize=18,ZIndex=10,}},
			{43,"TextLabel",{BackgroundColor3=currentText1,BackgroundTransparency=1,Font=3,Name="EventName",Parent={41},Position=UDim2.new(0,25,0,0),Size=UDim2.new(1,-25,0,20),Text="OnSpawn",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{44,"Frame",{BackgroundColor3=Color3.new(0.19607844948769,0.19607844948769,0.19607844948769),BorderSizePixel=0,BackgroundTransparency=1,ClipsDescendants=true,Name="Cmds",Parent={41},Position=UDim2.new(0,0,0,20),Size=UDim2.new(1,0,1,-20),ZIndex=10,}},
			{45,"Frame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BorderColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),Name="Add",Parent={44},Position=UDim2.new(0,0,1,-20),Size=UDim2.new(1,0,0,20),ZIndex=10,}},
			{46,"TextBox",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,ClearTextOnFocus=false,Font=3,Parent={45},PlaceholderColor3=Color3.new(0.7843137383461,0.7843137383461,0.7843137383461),PlaceholderText="Add new command",Position=UDim2.new(0,5,0,0),Size=UDim2.new(1,-10,1,0),Text="",TextColor3=Color3.new(1,1,1),TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{47,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Holder",Parent={44},Size=UDim2.new(1,0,1,-20),ZIndex=10,}},
			{48,"UIListLayout",{Parent={47},SortOrder=2,}},
			{49,"Frame",{currentShade1,BorderSizePixel=0,ClipsDescendants=true,Name="CmdTemplate",Parent={6},Size=UDim2.new(1,0,0,20),Visible=false,ZIndex=10,}},
			{50,"TextBox",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,ClearTextOnFocus=false,Font=3,Parent={49},PlaceholderColor3=Color3.new(1,1,1),Position=UDim2.new(0,5,0,0),Size=UDim2.new(1,-45,0,20),Text="a\\b\\c\\d",TextColor3=currentText1,TextSize=14,TextXAlignment=0,ZIndex=10,}},
			{51,"TextButton",{BackgroundColor3=currentShade1,BorderSizePixel=0,Font=3,Name="Delete",Parent={49},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),Text="X",TextColor3=Color3.new(1,1,1),TextSize=18,ZIndex=10,}},
			{52,"TextButton",{BackgroundColor3=currentShade1,BorderSizePixel=0,Font=3,Name="Settings",Parent={49},Position=UDim2.new(1,-40,0,0),Size=UDim2.new(0,20,0,20),Text="",TextColor3=Color3.new(1,1,1),TextSize=18,ZIndex=10,}},
			{53,"ImageLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Image="rbxassetid://1204397029",Parent={52},Position=UDim2.new(0,2,0,2),Size=UDim2.new(0,16,0,16),ZIndex=10,}},
		})
		main.Name = randomString()
		local mainFrame = main:WaitForChild("Content")
		local eventList = mainFrame:WaitForChild("List")
		local eventListHolder = eventList:WaitForChild("Holder")
		local cmdTemplate = mainFrame:WaitForChild("CmdTemplate")
		local eventTemplate = mainFrame:WaitForChild("EventTemplate")
		local settingsFrame = mainFrame:WaitForChild("Settings"):WaitForChild("Slider")
		local settingsTemplates = mainFrame.Settings:WaitForChild("Templates")
		local settingsList = settingsFrame:WaitForChild("List"):WaitForChild("Holder")
		table.insert(shade2,main.TopBar) table.insert(shade1,mainFrame) table.insert(shade2,eventTemplate)
		table.insert(text1,eventTemplate.EventName) table.insert(shade1,eventTemplate.Cmds.Add) table.insert(shade1,cmdTemplate)
		table.insert(text1,cmdTemplate.TextBox) table.insert(shade2,cmdTemplate.Delete) table.insert(shade2,cmdTemplate.Settings)
		table.insert(scroll,mainFrame.List) table.insert(shade1,settingsFrame) table.insert(shade2,settingsFrame.Line)
		table.insert(shade2,settingsFrame.Close) table.insert(scroll,settingsFrame.List) table.insert(shade2,settingsTemplates.DelayEditor.Secs)
		table.insert(text1,settingsTemplates.DelayEditor.Secs) table.insert(text1,settingsTemplates.DelayEditor.Secs.Label) table.insert(text1,settingsTemplates.Players.Title)
		table.insert(shade3,settingsTemplates.Players.CustomButton) table.insert(shade2,settingsTemplates.Players.Custom) table.insert(text1,settingsTemplates.Players.Custom)
		table.insert(shade3,settingsTemplates.Players.Any.Button) table.insert(shade3,settingsTemplates.Players.Me.Button) table.insert(text1,settingsTemplates.Players.Any)
		table.insert(text1,settingsTemplates.Players.Me) table.insert(text1,settingsTemplates.Strings.Title) table.insert(text1,settingsTemplates.Strings.Any)
		table.insert(shade3,settingsTemplates.Strings.Any.Button) table.insert(shade3,settingsTemplates.Strings.CustomButton) table.insert(text1,settingsTemplates.Strings.Custom)
		table.insert(shade2,settingsTemplates.Strings.Custom)
		table.insert(text1,settingsTemplates.Players.Me) table.insert(text1,settingsTemplates.Numbers.Title) table.insert(text1,settingsTemplates.Numbers.Any)
		table.insert(shade3,settingsTemplates.Numbers.Any.Button) table.insert(shade3,settingsTemplates.Numbers.CustomButton) table.insert(text1,settingsTemplates.Numbers.Custom)
		table.insert(shade2,settingsTemplates.Numbers.Custom)

		local tween = game:GetService("TweenService")
		local tweenInf = TweenInfo.new(0.25,Enum.EasingStyle.Quart,Enum.EasingDirection.Out)

		local currentlyEditingCmd = nil

		settingsFrame:WaitForChild("Close").MouseButton1Click:Connect(function()
			settingsFrame:TweenPosition(UDim2.new(0,-150,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
		end)

		local function resizeList()
			local size = 0

			for i,v in pairs(eventListHolder:GetChildren()) do
				if v.Name == "EventTemplate" then
					size = size + 20
					if v.Expand.Text == "V" then
						size = size + 20*(1+(#events[v.EventName.Text].commands or 0))
					end
				end
			end

			tween:Create(eventList,tweenInf,{CanvasSize = UDim2.new(0,0,0,size)}):Play()

			if size > eventList.AbsoluteSize.Y then
				eventListHolder.Size = UDim2.new(1,-8,1,0)
			else
				eventListHolder.Size = UDim2.new(1,0,1,0)
			end
		end

		local function resizeSettingsList()
			local size = 0

			for i,v in pairs(settingsList:GetChildren()) do
				if v:IsA("Frame") then
					size = size + v.AbsoluteSize.Y
				end
			end

			settingsList.Parent.CanvasSize = UDim2.new(0,0,0,size)

			if size > settingsList.Parent.AbsoluteSize.Y then
				settingsList.Size = UDim2.new(1,-8,1,0)
			else
				settingsList.Size = UDim2.new(1,0,1,0)
			end
		end

		local function setupCheckbox(button,callback)
			local enabled = button.On.BackgroundTransparency == 0

			local function update()
				button.On.BackgroundTransparency = (enabled and 0 or 1)
			end

			button.On.MouseButton1Click:Connect(function()
				enabled = not enabled
				update()
				if callback then callback(enabled) end
			end)

			return {
				Toggle = function(nocall) enabled = not enabled update() if not nocall and callback then callback(enabled) end end,
				Enable = function(nocall) if enabled then return end enabled = true update()if not nocall and callback then callback(enabled) end end,
				Disable = function(nocall) if not enabled then return end enabled = false update()if not nocall and callback then callback(enabled) end end,
				IsEnabled = function() return enabled end
			}
		end

		local function openSettingsEditor(event,cmd)
			currentlyEditingCmd = cmd

			for i,v in pairs(settingsList:GetChildren()) do if v:IsA("Frame") then v:Destroy() end end

			local delayEditor = settingsTemplates.DelayEditor:Clone()
			delayEditor.Secs.FocusLost:Connect(function()
				cmd[3] = tonumber(delayEditor.Secs.Text) or 0
				delayEditor.Secs.Text = cmd[3]
				if onEdited then onEdited() end
			end)
			delayEditor.Secs.Text = cmd[3]
			delayEditor.Visible = true
			table.insert(shade2,delayEditor.Secs)
			table.insert(text1,delayEditor.Secs)
			table.insert(text1,delayEditor.Secs.Label)
			delayEditor.Parent = settingsList

			for i,v in pairs(event.sets) do
				if v.Type == "Player" then
					local template = settingsTemplates.Players:Clone()
					template.Title.Text = v.Name or "Player"

					local me,any,custom

					me = setupCheckbox(template.Me.Button,function(on)
						if not on then return end
						any.Disable()
						custom.Disable()
						cmd[2][i] = 0
						if onEdited then onEdited() end
					end)

					any = setupCheckbox(template.Any.Button,function(on)
						if not on then return end
						me.Disable()
						custom.Disable()
						cmd[2][i] = 1
						if onEdited then onEdited() end
					end)

					local customTextBox = template.Custom
					custom = setupCheckbox(template.CustomButton,function(on)
						if not on then return end
						me.Disable()
						any.Disable()
						cmd[2][i] = customTextBox.Text
						if onEdited then onEdited() end
					end)

					ViewportTextBox.convert(customTextBox)
					customTextBox.FocusLost:Connect(function()
						if custom:IsEnabled() then
							cmd[2][i] = customTextBox.Text
							if onEdited then onEdited() end
						end
					end)

					local cVal = cmd[2][i]
					if cVal == 0 then
						me:Enable()
					elseif cVal == 1 then
						any:Enable()
					else
						custom:Enable()
						customTextBox.Text = cVal
					end

					template.Visible = true
					table.insert(text1,template.Title)
					table.insert(shade3,template.CustomButton)
					table.insert(shade3,template.Any.Button)
					table.insert(shade3,template.Me.Button)
					table.insert(text1,template.Any)
					table.insert(text1,template.Me)
					template.Parent = settingsList
				elseif v.Type == "String" then
					local template = settingsTemplates.Strings:Clone()
					template.Title.Text = v.Name or "String"

					local any,custom

					any = setupCheckbox(template.Any.Button,function(on)
						if not on then return end
						custom.Disable()
						cmd[2][i] = 0
						if onEdited then onEdited() end
					end)

					local customTextBox = template.Custom
					custom = setupCheckbox(template.CustomButton,function(on)
						if not on then return end
						any.Disable()
						cmd[2][i] = customTextBox.Text
						if onEdited then onEdited() end
					end)

					ViewportTextBox.convert(customTextBox)
					customTextBox.FocusLost:Connect(function()
						if custom:IsEnabled() then
							cmd[2][i] = customTextBox.Text
							if onEdited then onEdited() end
						end
					end)

					local cVal = cmd[2][i]
					if cVal == 0 then
						any:Enable()
					else
						custom:Enable()
						customTextBox.Text = cVal
					end

					template.Visible = true
					table.insert(text1,template.Title)
					table.insert(text1,template.Any)
					table.insert(shade3,template.Any.Button)
					table.insert(shade3,template.CustomButton)
					template.Parent = settingsList
				elseif v.Type == "Number" then
					local template = settingsTemplates.Numbers:Clone()
					template.Title.Text = v.Name or "Number"

					local any,custom

					any = setupCheckbox(template.Any.Button,function(on)
						if not on then return end
						custom.Disable()
						cmd[2][i] = 0
						if onEdited then onEdited() end
					end)

					local customTextBox = template.Custom
					custom = setupCheckbox(template.CustomButton,function(on)
						if not on then return end
						any.Disable()
						cmd[2][i] = customTextBox.Text
						if onEdited then onEdited() end
					end)

					ViewportTextBox.convert(customTextBox)
					customTextBox.FocusLost:Connect(function()
						cmd[2][i] = tonumber(customTextBox.Text) or 0
						customTextBox.Text = cmd[2][i]
						if custom:IsEnabled() then
							if onEdited then onEdited() end
						end
					end)

					local cVal = cmd[2][i]
					if cVal == 0 then
						any:Enable()
					else
						custom:Enable()
						customTextBox.Text = cVal
					end

					template.Visible = true
					table.insert(text1,template.Title)
					table.insert(text1,template.Any)
					table.insert(shade3,template.Any.Button)
					table.insert(shade3,template.CustomButton)
					template.Parent = settingsList
				end
			end
			resizeSettingsList()
			settingsFrame:TweenPosition(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
		end

		local function defaultSettings(ev)
			local res = {}

			for i,v in pairs(ev.sets) do
				if v.Type == "Player" then
					res[#res+1] = v.Default or 0
				elseif v.Type == "String" then
					res[#res+1] = v.Default or 0
				elseif v.Type == "Number" then
					res[#res+1] = v.Default or 0
				end
			end

			return res
		end

		local function refreshList()
			for i,v in pairs(eventListHolder:GetChildren()) do if v:IsA("Frame") then v:Destroy() end end

			for name,event in pairs(events) do
				local eventF = eventTemplate:Clone()
				eventF.EventName.Text = name
				eventF.Visible = true
				table.insert(shade2,eventF)
				table.insert(text1,eventF.EventName)
				table.insert(shade1,eventF.Cmds.Add)

				local expanded = false
				eventF.Expand.MouseButton1Down:Connect(function()
					expanded = not expanded
					eventF:TweenSize(UDim2.new(1,0,0,20 + (expanded and 20*#eventF.Cmds.Holder:GetChildren() or 0)),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					eventF.Expand.Text = expanded and "V" or ">"
					resizeList()
				end)

				local function refreshCommands()
					for i,v in pairs(eventF.Cmds.Holder:GetChildren()) do
						if v.Name == "CmdTemplate" then
							v:Destroy()
						end
					end

					for i,cmd in pairs(event.commands) do
						local cmdF = cmdTemplate:Clone()
						local cmdTextBox = cmdF.TextBox
						ViewportTextBox.convert(cmdTextBox)
						cmdTextBox.Text = cmd[1]
						cmdF.Visible = true
						table.insert(shade1,cmdF)
						table.insert(shade2,cmdF.Delete)
						table.insert(shade2,cmdF.Settings)

						cmdTextBox.FocusLost:Connect(function()
							event.commands[i] = {cmdTextBox.Text,cmd[2],cmd[3]}
							if onEdited then onEdited() end
						end)

						cmdF.Settings.MouseButton1Click:Connect(function()
							openSettingsEditor(event,cmd)
						end)

						cmdF.Delete.MouseButton1Click:Connect(function()
							table.remove(event.commands,i)
							refreshCommands()
							resizeList()

							if currentlyEditingCmd == cmd then
								settingsFrame:TweenPosition(UDim2.new(0,-150,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
							end
							if onEdited then onEdited() end
						end)

						cmdF.Parent = eventF.Cmds.Holder
					end

					eventF:TweenSize(UDim2.new(1,0,0,20 + (expanded and 20*#eventF.Cmds.Holder:GetChildren() or 0)),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
				end

				local newBox = eventF.Cmds.Add.TextBox
				ViewportTextBox.convert(newBox)
				newBox.FocusLost:Connect(function(enter)
					if enter then
						event.commands[#event.commands+1] = {newBox.Text,defaultSettings(event),0}
						newBox.Text = ""

						refreshCommands()
						resizeList()
						if onEdited then onEdited() end
					end
				end)

				--eventF:GetPropertyChangedSignal("AbsoluteSize"):Connect(resizeList)

				eventF.Parent = eventListHolder

				refreshCommands()
			end

			resizeList()
		end

		local function saveData()
			local result = {}
			for i,v in pairs(events) do
				result[i] = v.commands
			end
			return game:GetService("HttpService"):JSONEncode(result)
		end

		local function loadData(str)
			local data = game:GetService("HttpService"):JSONDecode(str)
			for i,v in pairs(data) do
				if events[i] then
					events[i].commands = v
				end
			end
		end

		local function addCmd(event,data)
			table.insert(events[event].commands,data)
		end

		local function setOnEdited(f)
			if type(f) == "function" then
				onEdited = f
			end
		end

		main.TopBar.Close.MouseButton1Click:Connect(function()
			main:TweenPosition(UDim2.new(0.5,-175,0,-500), "InOut", "Quart", 0.5, true, nil)
		end)
		dragGUI(main)
		main.Parent = PARENT

		return {
			RegisterEvent = registerEvent,
			FireEvent = fireEvent,
			Refresh = refreshList,
			SaveData = saveData,
			LoadData = loadData,
			AddCmd = addCmd,
			Frame = main,
			SetOnEdited = setOnEdited
		}
	end)()

	reference = (function()
		local main = create({
			{1,"Frame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,Name="Main",Position=UDim2.new(0.5,-250,0,-500),Size=UDim2.new(0,500,0,20),ZIndex=10,}},
			{2,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="TopBar",Parent={1},Size=UDim2.new(1,0,0,20),ZIndex=10,}},
			{3,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Title",Parent={2},Size=UDim2.new(1,0,0.94999998807907,0),Text="Reference",TextColor3=Color3.new(1,1,1),TextSize=14,ZIndex=10,}},
			{4,"TextButton",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Close",Parent={2},Position=UDim2.new(1,-20,0,0),Size=UDim2.new(0,20,0,20),Text="",TextColor3=Color3.new(1,1,1),TextSize=14,ZIndex=10,}},
			{5,"ImageLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Image="rbxassetid://5054663650",Parent={4},Position=UDim2.new(0,5,0,5),Size=UDim2.new(0,10,0,10),ZIndex=10,}},
			{6,"Frame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BorderSizePixel=0,Name="Content",Parent={1},Position=UDim2.new(0,0,0,20),Size=UDim2.new(1,0,0,300),ZIndex=10,}},
			{7,"ScrollingFrame",{BackgroundColor3=Color3.new(0.14117647707462,0.14117647707462,0.14509804546833),BackgroundTransparency=1,BorderColor3=Color3.new(0.15686275064945,0.15686275064945,0.15686275064945),BorderSizePixel=0,BottomImage="rbxasset://textures/ui/Scroll/scroll-middle.png",CanvasSize=UDim2.new(0,0,0,1295),Name="List",Parent={6},ScrollBarImageColor3=Color3.new(0.30588236451149,0.30588236451149,0.3098039329052),ScrollBarThickness=8,Size=UDim2.new(1,0,1,0),TopImage="rbxasset://textures/ui/Scroll/scroll-middle.png",VerticalScrollBarInset=2,ZIndex=10,}},
			{8,"UIListLayout",{Parent={7},SortOrder=2,}},
			{9,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,411),ZIndex=10,}},
			{10,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={9},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Special Player Cases",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
			{11,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={9},Position=UDim2.new(0,8,0,25),Size=UDim2.new(1,-8,0,20),Text="These keywords can be used to quickly select groups of players in commands:",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{12,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={9},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),ZIndex=10,}},
			{13,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Cases",Parent={9},Position=UDim2.new(0,8,0,55),Size=UDim2.new(1,-16,0,342),ZIndex=10,}},
			{14,"UIListLayout",{Parent={13},SortOrder=2,}},
			{15,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{16,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={15},Size=UDim2.new(1,0,1,0),Text="all",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{17,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={15},Position=UDim2.new(0,15,0,0),Size=UDim2.new(1,0,1,0),Text="- includes everyone",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{18,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{19,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={18},Size=UDim2.new(1,0,1,0),Text="others",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{20,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={18},Position=UDim2.new(0,37,0,0),Size=UDim2.new(1,0,1,0),Text="- includes everyone except you",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{21,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{22,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={21},Size=UDim2.new(1,0,1,0),Text="me",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{23,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={21},Position=UDim2.new(0,19,0,0),Size=UDim2.new(1,0,1,0),Text="- includes your player only",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{24,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{25,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={24},Size=UDim2.new(1,0,1,0),Text="#[number]",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{26,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={24},Position=UDim2.new(0,59,0,0),Size=UDim2.new(1,0,1,0),Text="- gets a specified amount of random players",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{27,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{28,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={27},Size=UDim2.new(1,0,1,0),Text="random",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{29,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={27},Position=UDim2.new(0,44,0,0),Size=UDim2.new(1,0,1,0),Text="- affects a random player",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{30,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{31,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={30},Size=UDim2.new(1,0,1,0),Text="%[team name]",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{32,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={30},Position=UDim2.new(0,78,0,0),Size=UDim2.new(1,0,1,0),Text="- includes everyone on a given team",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{33,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{34,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={33},Size=UDim2.new(1,0,1,0),Text="allies / team",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{35,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={33},Position=UDim2.new(0,63,0,0),Size=UDim2.new(1,0,1,0),Text="- players who are on your team",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{36,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{37,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={36},Size=UDim2.new(1,0,1,0),Text="enemies / nonteam",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{38,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={36},Position=UDim2.new(0,101,0,0),Size=UDim2.new(1,0,1,0),Text="- players who are not on your team",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{39,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{40,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={39},Size=UDim2.new(1,0,1,0),Text="friends",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{41,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={39},Position=UDim2.new(0,40,0,0),Size=UDim2.new(1,0,1,0),Text="- anyone who is friends with you",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{42,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{43,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={42},Size=UDim2.new(1,0,1,0),Text="nonfriends",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{44,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={42},Position=UDim2.new(0,61,0,0),Size=UDim2.new(1,0,1,0),Text="- anyone who is not friends with you",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{45,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{46,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={45},Size=UDim2.new(1,0,1,0),Text="guests",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{47,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={45},Position=UDim2.new(0,36,0,0),Size=UDim2.new(1,0,1,0),Text="- guest players (obsolete)",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{48,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{49,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={48},Size=UDim2.new(1,0,1,0),Text="bacons",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{50,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={48},Position=UDim2.new(0,40,0,0),Size=UDim2.new(1,0,1,0),Text="- anyone with the \"bacon\" or pal hair",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{51,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{52,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={51},Size=UDim2.new(1,0,1,0),Text="age[number]",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{53,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={51},Position=UDim2.new(0,71,0,0),Size=UDim2.new(1,0,1,0),Text="- includes anyone below or at the given age",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{54,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{55,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={54},Size=UDim2.new(1,0,1,0),Text="rad[number]",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{56,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={54},Position=UDim2.new(0,70,0,0),Size=UDim2.new(1,0,1,0),Text="- includes anyone within the given radius",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{57,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{58,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={57},Size=UDim2.new(1,0,1,0),Text="nearest",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{59,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={57},Position=UDim2.new(0,43,0,0),Size=UDim2.new(1,0,1,0),Text="- gets the closest player to you",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{60,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{61,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={60},Size=UDim2.new(1,0,1,0),Text="farthest",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{62,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={60},Position=UDim2.new(0,46,0,0),Size=UDim2.new(1,0,1,0),Text="- gets the farthest player from you",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{63,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{64,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={63},Size=UDim2.new(1,0,1,0),Text="group[ID]",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{65,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={63},Position=UDim2.new(0,55,0,0),Size=UDim2.new(1,0,1,0),Text="- gets players who are in a certain group",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{66,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{67,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={66},Size=UDim2.new(1,0,1,0),Text="alive",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{68,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={66},Position=UDim2.new(0,27,0,0),Size=UDim2.new(1,0,1,0),Text="- gets players who are alive",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{69,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BackgroundTransparency=1,BorderSizePixel=0,Name="Case",Parent={13},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,0,0,18),ZIndex=10,}},
			{70,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="CaseName",Parent={69},Size=UDim2.new(1,0,1,0),Text="dead",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{71,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="CaseDesc",Parent={69},Position=UDim2.new(0,29,0,0),Size=UDim2.new(1,0,1,0),Text="- gets players who are dead",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{72,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,180),ZIndex=10,}},
			{73,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={72},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Various Operators",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
			{74,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={72},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),ZIndex=10,}},
			{75,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={72},Position=UDim2.new(0,8,0,30),Size=UDim2.new(1,-8,0,16),Text="Use commas to separate multiple expressions:",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{76,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={72},Position=UDim2.new(0,8,0,75),Size=UDim2.new(1,-8,0,16),Text="Use - to exclude, and + to include players in your expression:",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{77,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={72},Position=UDim2.new(0,8,0,91),Size=UDim2.new(1,-8,0,16),Text=";locate %blue-friends (gets players in blue team who aren't your friends)",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{78,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={72},Position=UDim2.new(0,8,0,46),Size=UDim2.new(1,-8,0,16),Text=";locate noob,noob2,bob",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{79,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={72},Position=UDim2.new(0,8,0,120),Size=UDim2.new(1,-8,0,16),Text="Put ! before a command to run it with the last arguments it was ran with:",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{80,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={72},Position=UDim2.new(0,8,0,136),Size=UDim2.new(1,-8,0,32),Text="After running ;offset 0 100 0,  you can run !offset anytime to repeat that command with the same arguments that were used to run it last time",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{81,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,154),ZIndex=10,}},
			{82,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={81},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Command Looping",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
			{83,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={81},Position=UDim2.new(0,8,0,30),Size=UDim2.new(1,-8,0,20),Text="Form: [How many times it loops]^[delay (optional)]^[command]",TextColor3=Color3.new(1,1,1),TextSize=15,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{84,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={81},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),ZIndex=10,}},
			{85,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={81},Position=UDim2.new(0,8,0,50),Size=UDim2.new(1,-8,0,20),Text="Use the 'breakloops' command to stop all running loops.",TextColor3=Color3.new(1,1,1),TextSize=15,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{86,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={81},Position=UDim2.new(0,8,0,80),Size=UDim2.new(1,-8,0,16),Text="Examples:",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{87,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={81},Position=UDim2.new(0,8,0,98),Size=UDim2.new(1,-8,0,42),Text=";5^btools - gives you 5 sets of btools\n;10^3^drophats - drops your hats every 3 seconds 10 times\n;inf^0.1^animspeed 100 - infinitely loops your animation speed to 100",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{88,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,120),ZIndex=10,}},
			{89,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={88},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Execute Multiple Commands at Once",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
			{90,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={88},Position=UDim2.new(0,8,0,30),Size=UDim2.new(1,-8,0,20),Text="You can execute multiple commands at once using \"\\\"",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{91,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={88},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),ZIndex=10,}},
			{92,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={88},Position=UDim2.new(0,8,0,60),Size=UDim2.new(1,-8,0,16),Text="Examples:",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{93,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={88},Position=UDim2.new(0,8,0,78),Size=UDim2.new(1,-8,0,32),Text=";drophats\\respawn - drops your hats and respawns you\n;enable inventory\\enable playerlist\\refresh - enables those coregui items and refreshes you",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{94,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,75),ZIndex=10,}},
			{95,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={94},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Browse Command History",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
			{96,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={94},Position=UDim2.new(0,8,0,30),Size=UDim2.new(1,-8,0,32),Text="While focused on the command bar, you can use the up and down arrow keys to browse recently used commands",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{97,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={94},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),ZIndex=10,}},
			{98,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,75),ZIndex=10,}},
			{99,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={98},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Autocomplete in the Command Bar",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
			{100,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={98},Position=UDim2.new(0,8,0,30),Size=UDim2.new(1,-8,0,32),Text="While focused on the command bar, you can use the tab key to insert the top suggested command into the command bar.",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{101,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={98},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),ZIndex=10,}},
			{102,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,175),ZIndex=10,}},
			{103,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={102},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Using Event Binds",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
			{104,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={102},Position=UDim2.new(0,8,0,30),Size=UDim2.new(1,-8,0,32),Text="Use event binds to set up commands that get executed when certain events happen. You can edit the conditions for an event command to run (such as which player triggers it).",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{105,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={102},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),ZIndex=10,}},
			{106,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={102},Position=UDim2.new(0,8,0,70),Size=UDim2.new(1,-8,0,48),Text="Some events may send arguments; you can use them in your event command by using $ followed by the argument number ($1, $2, etc). You can find out the order and types of these arguments by looking at the settings of the event command.",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{107,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Text",Parent={102},Position=UDim2.new(0,8,0,130),Size=UDim2.new(1,-8,0,16),Text="Example:",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{108,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={102},Position=UDim2.new(0,8,0,148),Size=UDim2.new(1,-8,0,16),Text="Setting up 'goto $1' on the OnChatted event will teleport you to any player that chats.",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,TextYAlignment=0,ZIndex=10,}},
			{109,"Frame",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Name="Section",Parent={7},Size=UDim2.new(1,0,0,105),ZIndex=10,}},
			{110,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=4,Name="Header",Parent={109},Position=UDim2.new(0,8,0,5),Size=UDim2.new(1,-8,0,20),Text="Get Further Help",TextColor3=Color3.new(1,1,1),TextSize=20,TextXAlignment=0,ZIndex=10,}},
			{111,"TextLabel",{BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,Font=3,Name="Text",Parent={109},Position=UDim2.new(0,8,0,30),Size=UDim2.new(1,-8,0,32),Text="You can join the Discord server to get support with IY,  and read up on more documentation such as the Plugin API.",TextColor3=Color3.new(1,1,1),TextSize=14,TextWrapped=true,TextXAlignment=0,ZIndex=10,}},
			{112,"Frame",{BackgroundColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),BorderSizePixel=0,Name="Line",Parent={109},Position=UDim2.new(0,10,1,-1),Size=UDim2.new(1,-20,0,1),Visible=false,ZIndex=10,}},
			{113,"TextButton",{BackgroundColor3=Color3.new(0.48627451062202,0.61960786581039,0.85098040103912),BorderColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),Font=4,Name="InviteButton",Parent={109},Position=UDim2.new(0,5,0,75),Size=UDim2.new(1,-10,0,25),Text="Copy Discord Invite Link (https://discord.io/infiniteyield)",TextColor3=Color3.new(0.1803921610117,0.1803921610117,0.1843137294054),TextSize=16,ZIndex=10,}},
		})
		for i,v in pairs(main.Content.List:GetDescendants()) do
			if v:IsA("TextLabel") then
				table.insert(text1,v)
			end
		end
		table.insert(scroll,main.Content.List)
		table.insert(shade1,main.Content)
		table.insert(shade2,main.TopBar)
		main.Name = randomString()
		main.TopBar.Close.MouseButton1Click:Connect(function()
			main:TweenPosition(UDim2.new(0.5,-250,0,-500), "InOut", "Quart", 0.5, true, nil)
		end)
		local inviteButton = main:FindFirstChild("InviteButton",true)
		local lastPress = nil
		inviteButton.MouseButton1Click:Connect(function()
			local func = setclipboard or toclipboard or set_clipboard or (Clipboard and Clipboard.set)
			if func then
				func("https://discord.io/infiniteyield")
				inviteButton.Text = "Copied"
			else
				inviteButton.Text = "No Clipboard Function, type out the link"
			end
			local pressTime = tick()
			lastPress = pressTime
			wait(2)
			if lastPress ~= pressTime then return end
			inviteButton.Text = "Copy Discord Invite Link (https://discord.io/infiniteyield)"
		end)
		dragGUI(main)
		main.Parent = PARENT

		ReferenceButton.MouseButton1Click:Connect(function()
			main:TweenPosition(UDim2.new(0.5,-250,0.5,-150), "InOut", "Quart", 0.5, true, nil)
		end)
	end)()

	currentShade1 = Color3.fromRGB(36, 36, 37)
	currentShade2 = Color3.fromRGB(46, 46, 47)
	currentShade3 = Color3.fromRGB(78, 78, 79)
	currentText1 = Color3.new(1, 1, 1)
	currentText2 = Color3.new(0, 0, 0)
	currentScroll = Color3.fromRGB(78,78,79)

	defaultsettings = {
		prefix = ';';
		StayOpen = false;
		logsEnabled = false;
		jLogsEnabled = false;
		aliases = {};
		binds = {};
		WayPoints = {};
		PluginsTable = {};
		currentShade1 = {currentShade1.R,currentShade1.G,currentShade1.B};
		currentShade2 = {currentShade2.R,currentShade2.G,currentShade2.B};
		currentShade3 = {currentShade3.R,currentShade3.G,currentShade3.B};
		currentText1 = {currentText1.R,currentText1.G,currentText1.B};
		currentText2 = {currentText2.R,currentText2.G,currentText2.B};
		currentScroll = {currentScroll.R,currentScroll.G,currentScroll.B};
		eventBinds = eventEditor.SaveData()
	}

	defaults = game:GetService("HttpService"):JSONEncode(defaultsettings)

	nosaves = false

	local loadedEventData = nil
	function saves()
		if writefileExploit() then
			if pcall(function() readfile("IY_FE.iy") end) then
				if readfile("IY_FE.iy") ~= nil then
					local success, response = pcall(function()
						local json = game:GetService("HttpService"):JSONDecode(readfile("IY_FE.iy"))
						if json.prefix ~= nil then prefix = json.prefix else prefix = ';' end
						if json.StayOpen ~= nil then StayOpen = json.StayOpen else StayOpen = false end
						if json.logsEnabled ~= nil then logsEnabled = json.logsEnabled else logsEnabled = false end
						if json.jLogsEnabled ~= nil then jLogsEnabled = json.jLogsEnabled else jLogsEnabled = false end
						if json.aliases ~= nil then aliases = json.aliases else aliases = {} end
						if json.binds ~= nil then binds = json.binds else binds = {} end
						if json.spawnCmds ~= nil then spawnCmds = json.spawnCmds end
						if json.WayPoints ~= nil then AllWaypoints = json.WayPoints else WayPoints = {} AllWaypoints = {} end
						if json.PluginsTable ~= nil then PluginsTable = json.PluginsTable else PluginsTable = {} end
						if json.currentShade1 ~= nil then currentShade1 = Color3.new(json.currentShade1[1],json.currentShade1[2],json.currentShade1[3]) end
						if json.currentShade2 ~= nil then currentShade2 = Color3.new(json.currentShade2[1],json.currentShade2[2],json.currentShade2[3]) end
						if json.currentShade3 ~= nil then currentShade3 = Color3.new(json.currentShade3[1],json.currentShade3[2],json.currentShade3[3]) end
						if json.currentText1 ~= nil then currentText1 = Color3.new(json.currentText1[1],json.currentText1[2],json.currentText1[3]) end
						if json.currentText2 ~= nil then currentText2 = Color3.new(json.currentText2[1],json.currentText2[2],json.currentText2[3]) end
						if json.currentScroll ~= nil then currentScroll = Color3.new(json.currentScroll[1],json.currentScroll[2],json.currentScroll[3]) end
						if json.eventBinds then loadedEventData = json.eventBinds end
					end)
					if not success then
						warn("Save Json Error:", response)
						warn("Overwriting Save File")
						writefileCooldown("IY_FE.iy", defaults)
						wait()
						saves()
					end
				else
					writefileCooldown("IY_FE.iy", defaults)
					wait()
					saves()
				end
			else
				writefileCooldown("IY_FE.iy", defaults)
				wait()
				if pcall(function() readfile("IY_FE.iy") end) then
					saves()
				else
					nosaves = true
					prefix = ';'
					StayOpen = false
					logsEnabled = false
					jLogsEnabled = false
					aliases = {}
					binds = {}
					WayPoints = {}
					PluginsTable = {}

					local FileError = Instance.new("Frame")
					local background = Instance.new("Frame")
					local Directions = Instance.new("TextLabel")
					local shadow = Instance.new("Frame")
					local PopupText = Instance.new("TextLabel")
					local Exit = Instance.new("TextButton")
					local ExitImage = Instance.new("ImageLabel")

					FileError.Name = randomString()
					FileError.Parent = PARENT
					FileError.Active = true
					FileError.BackgroundTransparency = 1
					FileError.Position = UDim2.new(0.5, -180, 0, 290)
					FileError.Size = UDim2.new(0, 360, 0, 20)
					FileError.ZIndex = 10

					background.Name = "background"
					background.Parent = FileError
					background.Active = true
					background.BackgroundColor3 = Color3.fromRGB(36, 36, 37)
					background.BorderSizePixel = 0
					background.Position = UDim2.new(0, 0, 0, 20)
					background.Size = UDim2.new(0, 360, 0, 205)
					background.ZIndex = 10

					Directions.Name = "Directions"
					Directions.Parent = background
					Directions.BackgroundTransparency = 1
					Directions.BorderSizePixel = 0
					Directions.Position = UDim2.new(0, 10, 0, 10)
					Directions.Size = UDim2.new(0, 340, 0, 185)
					Directions.Font = Enum.Font.SourceSans
					Directions.TextSize = 14
					Directions.Text = "There was a problem writing a save file to your PC.\n\nPlease contact the developer/support team for your exploit and tell them writefile is not working.\n\nYour settings, keybinds, waypoints, and aliases will not save if you continue.\n\nThings to try:\n> Make sure a 'workspace' folder is located in the same folder as your exploit\n> If your exploit is inside of a zip/rar file, extract it.\n> Rejoin the game and try again or restart your PC and try again."
					Directions.TextColor3 = Color3.new(1, 1, 1)
					Directions.TextWrapped = true
					Directions.TextXAlignment = Enum.TextXAlignment.Left
					Directions.TextYAlignment = Enum.TextYAlignment.Top
					Directions.ZIndex = 10

					shadow.Name = "shadow"
					shadow.Parent = FileError
					shadow.BackgroundColor3 = Color3.fromRGB(46, 46, 47)
					shadow.BorderSizePixel = 0
					shadow.Size = UDim2.new(0, 360, 0, 20)
					shadow.ZIndex = 10

					PopupText.Name = "PopupText"
					PopupText.Parent = shadow
					PopupText.BackgroundTransparency = 1
					PopupText.Size = UDim2.new(1, 0, 0.95, 0)
					PopupText.ZIndex = 10
					PopupText.Font = Enum.Font.SourceSans
					PopupText.TextSize = 14
					PopupText.Text = "File Error"
					PopupText.TextColor3 = Color3.new(1, 1, 1)
					PopupText.TextWrapped = true

					Exit.Name = "Exit"
					Exit.Parent = shadow
					Exit.BackgroundTransparency = 1
					Exit.Position = UDim2.new(1, -20, 0, 0)
					Exit.Size = UDim2.new(0, 20, 0, 20)
					Exit.Text = ""
					Exit.ZIndex = 10

					ExitImage.Parent = Exit
					ExitImage.BackgroundColor3 = Color3.new(1, 1, 1)
					ExitImage.BackgroundTransparency = 1
					ExitImage.Position = UDim2.new(0, 5, 0, 5)
					ExitImage.Size = UDim2.new(0, 10, 0, 10)
					ExitImage.Image = "rbxassetid://5054663650"
					ExitImage.ZIndex = 10

					Exit.MouseButton1Click:Connect(function()
						FileError:Destroy()
					end)
				end
			end
		else
			prefix = ';'
			StayOpen = false
			logsEnabled = false
			jLogsEnabled = false
			aliases = {}
			binds = {}
			WayPoints = {}
			PluginsTable = {}
		end
	end

	saves()

	function updatesaves()
		if nosaves == false and writefileExploit() then
			local update = {
				prefix = prefix;
				StayOpen = StayOpen;
				logsEnabled = logsEnabled;
				jLogsEnabled = jLogsEnabled;
				aliases = aliases;
				binds = binds;
				WayPoints = AllWaypoints;
				PluginsTable = PluginsTable;
				currentShade1 = {currentShade1.R,currentShade1.G,currentShade1.B};
				currentShade2 = {currentShade2.R,currentShade2.G,currentShade2.B};
				currentShade3 = {currentShade3.R,currentShade3.G,currentShade3.B};
				currentText1 = {currentText1.R,currentText1.G,currentText1.B};
				currentText2 = {currentText2.R,currentText2.G,currentText2.B};
				currentScroll = {currentScroll.R,currentScroll.G,currentScroll.B};
				eventBinds = eventEditor.SaveData()
			}
			writefileCooldown("IY_FE.iy", game:GetService("HttpService"):JSONEncode(update))
		end
	end

	eventEditor.SetOnEdited(updatesaves)

	pWayPoints = {}
	WayPoints = {}

	if #AllWaypoints > 0 then
		for i = 1, #AllWaypoints do
			if not AllWaypoints[i].GAME or AllWaypoints[i].GAME == game.PlaceId then
				WayPoints[#WayPoints + 1] = {NAME = AllWaypoints[i].NAME, COORD = {AllWaypoints[i].COORD[1], AllWaypoints[i].COORD[2], AllWaypoints[i].COORD[3]}, GAME = AllWaypoints[i].GAME}
			end
		end
	end

	function Time()
		local HOUR = math.floor((tick() % 86400) / 3600)
		local MINUTE = math.floor((tick() % 3600) / 60)
		local SECOND = math.floor(tick() % 60)
		local AP = HOUR > 11 and 'PM' or 'AM'
		HOUR = (HOUR % 12 == 0 and 12 or HOUR % 12)
		HOUR = HOUR < 10 and '0' .. HOUR or HOUR
		MINUTE = MINUTE < 10 and '0' .. MINUTE or MINUTE
		SECOND = SECOND < 10 and '0' .. SECOND or SECOND
		return HOUR .. ':' .. MINUTE .. ':' .. SECOND .. ' ' .. AP
	end

	PrefixBox.Text = prefix
	local SettingsOpen = false

	if StayOpen == false then
		On.BackgroundTransparency = 1
	else
		On.BackgroundTransparency = 0
	end

	if logsEnabled then
		Toggle.Text = 'Enabled'
	else
		Toggle.Text = 'Disabled'
	end

	if jLogsEnabled then
		Toggle_2.Text = 'Enabled'
	else
		Toggle_2.Text = 'Disabled'
	end

	function maximizeHolder()
		if StayOpen == false then
			Holder:TweenPosition(UDim2.new(1, Holder.Position.X.Offset, 1, -220), "InOut", "Quart", 0.2, true, nil)
		end
	end

	local minimizeNum = -20
	function minimizeHolder()
		if StayOpen == false then
			Holder:TweenPosition(UDim2.new(1, Holder.Position.X.Offset, 1, minimizeNum), "InOut", "Quart", 0.5, true, nil)
		end
	end

	function cmdbarHolder()
		if StayOpen == false then
			Holder:TweenPosition(UDim2.new(1, Holder.Position.X.Offset, 1, -45), "InOut", "Quart", 0.5, true, nil)
		end
	end

	pinNotification = nil
	local notifyCount = 0
	function notify(text,text2,length)
		spawn(function()
			local LnotifyCount = notifyCount+1
			local notificationPinned = false
			notifyCount = notifyCount+1
			if pinNotification then pinNotification:Disconnect() end
			pinNotification = PinButton.MouseButton1Click:Connect(function()
				spawn(function()
					pinNotification:Disconnect()
					notificationPinned = true
					Title_2.BackgroundTransparency = 1
					wait(0.5)
					Title_2.BackgroundTransparency = 0
				end)
			end)
			Notification:TweenPosition(UDim2.new(1, Notification.Position.X.Offset, 1, 0), "InOut", "Quart", 0.5, true, nil)
			wait(0.6)
			local closepressed = false
			if text2 then
				Title_2.Text = text
				Text_2.Text = text2
			else
				Title_2.Text = 'Notification'
				Text_2.Text = text
			end
			Notification:TweenPosition(UDim2.new(1, Notification.Position.X.Offset, 1, -100), "InOut", "Quart", 0.5, true, nil)
			CloseButton.MouseButton1Click:Connect(function()
				Notification:TweenPosition(UDim2.new(1, Notification.Position.X.Offset, 1, 0), "InOut", "Quart", 0.5, true, nil)
				closepressed = true
				pinNotification:Disconnect()
			end)
			if length and isNumber(length) then
				wait(length)
			else
				wait(10)
			end
			if LnotifyCount == notifyCount then
				if closepressed == false and notificationPinned == false then
					pinNotification:Disconnect()
					Notification:TweenPosition(UDim2.new(1, Notification.Position.X.Offset, 1, 0), "InOut", "Quart", 0.5, true, nil)
				end
				notifyCount = 0
			end
		end)
	end

	local lastMessage = nil
	local lastLabel = nil
	local dupeCount = 1
	function CreateLabel(Name, Text)
		if lastMessage == Name..Text then
			dupeCount = dupeCount+1
			lastLabel.Text = Time()..' - ['..Name..']: '..Text..' (x'..dupeCount..')'
		else
			if dupeCount > 1 then dupeCount = 1 end
			if #scroll_2:GetChildren() >= 2546 then
				scroll_2:ClearAllChildren()
			end
			local alls = 0
			for i,v in pairs(scroll_2:GetChildren()) do
				if v then
					alls = v.Size.Y.Offset + alls
				end
				if not v then
					alls = 0
				end
			end
			local tl = Instance.new('TextLabel')
			lastMessage = Name..Text
			lastLabel = tl
			tl.Name = Name
			tl.Parent = scroll_2
			tl.ZIndex = 10
			tl.Text = Time().." - ["..Name.."]: "..Text
			tl.Size = UDim2.new(0,322,0,84)
			tl.BackgroundTransparency = 1
			tl.BorderSizePixel = 0
			tl.Font = "SourceSans"
			tl.Position = UDim2.new(-1,0,0,alls)
			tl.TextTransparency = 1
			tl.TextScaled = false
			tl.TextSize = 14
			tl.TextWrapped = true
			tl.TextXAlignment = "Left"
			tl.TextYAlignment = "Top"
			tl.TextColor3 = currentText1
			tl.Size = UDim2.new(0,322,0,tl.TextBounds.Y)
			table.insert(text1,tl)
			scroll_2.CanvasSize = UDim2.new(0,0,0,alls+tl.TextBounds.Y)
			scroll_2.CanvasPosition = Vector2.new(0,scroll_2.CanvasPosition.Y+tl.TextBounds.Y)
			tl:TweenPosition(UDim2.new(0,3,0,alls), 'In', 'Quint', 0.5)
			for i = 0,50 do wait(0.05)
				tl.TextTransparency = tl.TextTransparency - 0.05
			end
			tl.TextTransparency = 0
		end
	end

	function CreateJoinLabel(plr,ID)
		if #scroll_3:GetChildren() >= 2546 then
			scroll_3:ClearAllChildren()
		end
		local infoFrame = Instance.new("Frame")
		local info1 = Instance.new("TextLabel")
		local info2 = Instance.new("TextLabel")
		local ImageLabel_3 = Instance.new("ImageLabel")
		infoFrame.Name = randomString()
		infoFrame.Parent = scroll_3
		infoFrame.BackgroundColor3 = Color3.new(1, 1, 1)
		infoFrame.BackgroundTransparency = 1
		infoFrame.BorderColor3 = Color3.new(0.105882, 0.164706, 0.207843)
		infoFrame.Size = UDim2.new(1, 0, 0, 50)
		info1.Name = randomString()
		info1.Parent = infoFrame
		info1.BackgroundTransparency = 1
		info1.BorderSizePixel = 0
		info1.Position = UDim2.new(0, 45, 0, 0)
		info1.Size = UDim2.new(0, 135, 1, 0)
		info1.ZIndex = 10
		info1.Font = Enum.Font.SourceSans
		info1.FontSize = Enum.FontSize.Size14
		info1.Text = "Username: "..plr.Name.."\nJoined Server: "..Time()
		info1.TextColor3 = Color3.new(1, 1, 1)
		info1.TextWrapped = true
		info1.TextXAlignment = Enum.TextXAlignment.Left
		info2.Name = randomString()
		info2.Parent = infoFrame
		info2.BackgroundTransparency = 1
		info2.BorderSizePixel = 0
		info2.Position = UDim2.new(0, 185, 0, 0)
		info2.Size = UDim2.new(0, 140, 1, -5)
		info2.ZIndex = 10
		info2.Font = Enum.Font.SourceSans
		info2.FontSize = Enum.FontSize.Size14
		info2.Text = "User ID: "..ID.."\nAccount Age: "..plr.AccountAge.."\nJoined Roblox: Loading..."
		info2.TextColor3 = Color3.new(1, 1, 1)
		info2.TextWrapped = true
		info2.TextXAlignment = Enum.TextXAlignment.Left
		info2.TextYAlignment = Enum.TextYAlignment.Center
		ImageLabel_3.Parent = infoFrame
		ImageLabel_3.BackgroundTransparency = 1
		ImageLabel_3.BorderSizePixel = 0
		ImageLabel_3.Size = UDim2.new(0, 45, 1, 0)
		ImageLabel_3.Image = game.Players:GetUserThumbnailAsync(ID, Enum.ThumbnailType.AvatarThumbnail, Enum.ThumbnailSize.Size420x420)
		scroll_3.CanvasSize = UDim2.new(0, 0, 0, listlayout.AbsoluteContentSize.Y)
		scroll_3.CanvasPosition = Vector2.new(0,scroll_2.CanvasPosition.Y+infoFrame.AbsoluteSize.Y)
		wait()
		local user = game:HttpGet("https://users.roblox.com/v1/users/"..ID)
		local json = game:GetService("HttpService"):JSONDecode(user)
		local date = json["created"]:sub(1,10)
		local splitDates = string.split(date,"-")
		info2.Text = string.gsub(info2.Text, "Loading...",splitDates[2].."/"..splitDates[3].."/"..splitDates[1])
	end

	IYMouse.KeyDown:Connect(function(Key)
		if (Key==prefix) then
			Cmdbar:CaptureFocus()
			spawn(function()
				repeat Cmdbar.Text = '' until Cmdbar.Text == ''
			end)
			maximizeHolder()
		elseif infJump == true and Key == " " then
			Players.LocalPlayer.Character.Humanoid:ChangeState(3)
		end
	end)

	local lastMinimizeReq = 0
	Holder.MouseEnter:Connect(function()
		lastMinimizeReq = 0
		maximizeHolder()
	end)

	Holder.MouseLeave:Connect(function()
		if not Cmdbar:IsFocused() then
			local reqTime = tick()
			lastMinimizeReq = reqTime
			wait(1)
			if lastMinimizeReq ~= reqTime then return end
			if not Cmdbar:IsFocused() then
				minimizeHolder()
			end
		end
	end)

	function updateColors(color,ctype)
		if ctype == shade1 then
			for i,v in pairs(shade1) do
				v.BackgroundColor3 = color
			end
			currentShade1 = color
		elseif ctype == shade2 then
			for i,v in pairs(shade2) do
				v.BackgroundColor3 = color
			end
			currentShade2 = color
		elseif ctype == shade3 then
			for i,v in pairs(shade3) do
				v.BackgroundColor3 = color
			end
			currentShade3 = color
		elseif ctype == text1 then
			for i,v in pairs(text1) do
				v.TextColor3 = color
				if v:IsA("TextBox") then
					v.PlaceholderColor3 = color	
				end
			end
			currentText1 = color
		elseif ctype == text2 then
			for i,v in pairs(text2) do
				v.TextColor3 = color
			end
			currentText2 = color
		elseif ctype == scroll then
			for i,v in pairs(scroll) do
				v.ScrollBarImageColor3 = color
			end
			currentScroll = color
		end
	end

	local colorpickerOpen = false
	ColorsButton.MouseButton1Click:Connect(function()
		cache_currentShade1 = currentShade1
		cache_currentShade2 = currentShade2
		cache_currentShade3 = currentShade3
		cache_currentText1 = currentText1
		cache_currentText2 = currentText2
		cache_currentScroll = currentScroll
		if not colorpickerOpen then
			colorpickerOpen = true
			picker = game:GetObjects("rbxassetid://4908465318")[1]
			picker.Name = randomString()
			picker.Parent = PARENT

			local ColorPicker do
				ColorPicker = {}

				ColorPicker.new = function()
					local newMt = setmetatable({},{})

					local pickerGui = picker.ColorPicker
					local pickerTopBar = pickerGui.TopBar
					local pickerExit = pickerTopBar.Exit
					local pickerFrame = pickerGui.Content
					local colorSpace = pickerFrame.ColorSpaceFrame.ColorSpace
					local colorStrip = pickerFrame.ColorStrip
					local previewFrame = pickerFrame.Preview
					local basicColorsFrame = pickerFrame.BasicColors
					local customColorsFrame = pickerFrame.CustomColors
					local defaultButton = pickerFrame.Default
					local cancelButton = pickerFrame.Cancel
					local shade1Button = pickerFrame.Shade1
					local shade2Button = pickerFrame.Shade2
					local shade3Button = pickerFrame.Shade3
					local text1Button = pickerFrame.Text1
					local text2Button = pickerFrame.Text2
					local scrollButton = pickerFrame.Scroll

					local colorScope = colorSpace.Scope
					local colorArrow = pickerFrame.ArrowFrame.Arrow

					local hueInput = pickerFrame.Hue.Input
					local satInput = pickerFrame.Sat.Input
					local valInput = pickerFrame.Val.Input

					local redInput = pickerFrame.Red.Input
					local greenInput = pickerFrame.Green.Input
					local blueInput = pickerFrame.Blue.Input

					local mouse = IYMouse

					local hue,sat,val = 0,0,1
					local red,green,blue = 1,1,1
					local chosenColor = Color3.new(0,0,0)

					local basicColors = {Color3.new(0,0,0),Color3.new(0.66666668653488,0,0),Color3.new(0,0.33333334326744,0),Color3.new(0.66666668653488,0.33333334326744,0),Color3.new(0,0.66666668653488,0),Color3.new(0.66666668653488,0.66666668653488,0),Color3.new(0,1,0),Color3.new(0.66666668653488,1,0),Color3.new(0,0,0.49803924560547),Color3.new(0.66666668653488,0,0.49803924560547),Color3.new(0,0.33333334326744,0.49803924560547),Color3.new(0.66666668653488,0.33333334326744,0.49803924560547),Color3.new(0,0.66666668653488,0.49803924560547),Color3.new(0.66666668653488,0.66666668653488,0.49803924560547),Color3.new(0,1,0.49803924560547),Color3.new(0.66666668653488,1,0.49803924560547),Color3.new(0,0,1),Color3.new(0.66666668653488,0,1),Color3.new(0,0.33333334326744,1),Color3.new(0.66666668653488,0.33333334326744,1),Color3.new(0,0.66666668653488,1),Color3.new(0.66666668653488,0.66666668653488,1),Color3.new(0,1,1),Color3.new(0.66666668653488,1,1),Color3.new(0.33333334326744,0,0),Color3.new(1,0,0),Color3.new(0.33333334326744,0.33333334326744,0),Color3.new(1,0.33333334326744,0),Color3.new(0.33333334326744,0.66666668653488,0),Color3.new(1,0.66666668653488,0),Color3.new(0.33333334326744,1,0),Color3.new(1,1,0),Color3.new(0.33333334326744,0,0.49803924560547),Color3.new(1,0,0.49803924560547),Color3.new(0.33333334326744,0.33333334326744,0.49803924560547),Color3.new(1,0.33333334326744,0.49803924560547),Color3.new(0.33333334326744,0.66666668653488,0.49803924560547),Color3.new(1,0.66666668653488,0.49803924560547),Color3.new(0.33333334326744,1,0.49803924560547),Color3.new(1,1,0.49803924560547),Color3.new(0.33333334326744,0,1),Color3.new(1,0,1),Color3.new(0.33333334326744,0.33333334326744,1),Color3.new(1,0.33333334326744,1),Color3.new(0.33333334326744,0.66666668653488,1),Color3.new(1,0.66666668653488,1),Color3.new(0.33333334326744,1,1),Color3.new(1,1,1)}
					local customColors = {}

					dragGUI(picker)

					local function updateColor(noupdate)
						local relativeX,relativeY,relativeStripY = 219 - hue*219, 199 - sat*199, 199 - val*199
						local hsvColor = Color3.fromHSV(hue,sat,val)

						if noupdate == 2 or not noupdate then
							hueInput.Text = tostring(math.ceil(359*hue))
							satInput.Text = tostring(math.ceil(255*sat))
							valInput.Text = tostring(math.floor(255*val))
						end
						if noupdate == 1 or not noupdate then
							redInput.Text = tostring(math.floor(255*red))
							greenInput.Text = tostring(math.floor(255*green))
							blueInput.Text = tostring(math.floor(255*blue))
						end

						chosenColor = Color3.new(red,green,blue)

						colorScope.Position = UDim2.new(0,relativeX-9,0,relativeY-9)
						colorStrip.ImageColor3 = Color3.fromHSV(hue,sat,1)
						colorArrow.Position = UDim2.new(0,-2,0,relativeStripY-4)
						previewFrame.BackgroundColor3 = chosenColor

						newMt.Color = chosenColor
						if newMt.Changed then newMt:Changed(chosenColor) end
					end

					local function colorSpaceInput()
						local relativeX = mouse.X - colorSpace.AbsolutePosition.X
						local relativeY = mouse.Y - colorSpace.AbsolutePosition.Y

						if relativeX < 0 then relativeX = 0 elseif relativeX > 219 then relativeX = 219 end
						if relativeY < 0 then relativeY = 0 elseif relativeY > 199 then relativeY = 199 end

						hue = (219 - relativeX)/219
						sat = (199 - relativeY)/199

						local hsvColor = Color3.fromHSV(hue,sat,val)
						red,green,blue = hsvColor.r,hsvColor.g,hsvColor.b

						updateColor()
					end

					local function colorStripInput()
						local relativeY = mouse.Y - colorStrip.AbsolutePosition.Y

						if relativeY < 0 then relativeY = 0 elseif relativeY > 199 then relativeY = 199 end	

						val = (199 - relativeY)/199

						local hsvColor = Color3.fromHSV(hue,sat,val)
						red,green,blue = hsvColor.r,hsvColor.g,hsvColor.b

						updateColor()
					end

					local function hookButtons(frame,func)
						frame.ArrowFrame.Up.InputBegan:Connect(function(input)
							if input.UserInputType == Enum.UserInputType.MouseMovement then
								frame.ArrowFrame.Up.BackgroundTransparency = 0.5
							elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
								local releaseEvent,runEvent

								local startTime = tick()
								local pressing = true
								local startNum = tonumber(frame.Text)

								if not startNum then return end

								releaseEvent = UserInputService.InputEnded:Connect(function(input)
									if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
									releaseEvent:Disconnect()
									pressing = false
								end)

								startNum = startNum + 1
								func(startNum)
								while pressing do
									if tick()-startTime > 0.3 then
										startNum = startNum + 1
										func(startNum)
									end
									wait(0.1)
								end
							end
						end)

						frame.ArrowFrame.Up.InputEnded:Connect(function(input)
							if input.UserInputType == Enum.UserInputType.MouseMovement then
								frame.ArrowFrame.Up.BackgroundTransparency = 1
							end
						end)

						frame.ArrowFrame.Down.InputBegan:Connect(function(input)
							if input.UserInputType == Enum.UserInputType.MouseMovement then
								frame.ArrowFrame.Down.BackgroundTransparency = 0.5
							elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
								local releaseEvent,runEvent

								local startTime = tick()
								local pressing = true
								local startNum = tonumber(frame.Text)

								if not startNum then return end

								releaseEvent = UserInputService.InputEnded:Connect(function(input)
									if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
									releaseEvent:Disconnect()
									pressing = false
								end)

								startNum = startNum - 1
								func(startNum)
								while pressing do
									if tick()-startTime > 0.3 then
										startNum = startNum - 1
										func(startNum)
									end
									wait(0.1)
								end
							end
						end)

						frame.ArrowFrame.Down.InputEnded:Connect(function(input)
							if input.UserInputType == Enum.UserInputType.MouseMovement then
								frame.ArrowFrame.Down.BackgroundTransparency = 1
							end
						end)
					end

					colorSpace.InputBegan:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							local releaseEvent,mouseEvent

							releaseEvent = UserInputService.InputEnded:Connect(function(input)
								if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
								releaseEvent:Disconnect()
								mouseEvent:Disconnect()
							end)

							mouseEvent = UserInputService.InputChanged:Connect(function(input)
								if input.UserInputType == Enum.UserInputType.MouseMovement then
									colorSpaceInput()
								end
							end)

							colorSpaceInput()
						end
					end)

					colorStrip.InputBegan:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							local releaseEvent,mouseEvent

							releaseEvent = UserInputService.InputEnded:Connect(function(input)
								if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
								releaseEvent:Disconnect()
								mouseEvent:Disconnect()
							end)

							mouseEvent = UserInputService.InputChanged:Connect(function(input)
								if input.UserInputType == Enum.UserInputType.MouseMovement then
									colorStripInput()
								end
							end)

							colorStripInput()
						end
					end)

					local function updateHue(str)
						local num = tonumber(str)
						if num then
							hue = math.clamp(math.floor(num),0,359)/359
							local hsvColor = Color3.fromHSV(hue,sat,val)
							red,green,blue = hsvColor.r,hsvColor.g,hsvColor.b
							hueInput.Text = tostring(hue*359)
							updateColor(1)
						end
					end
					hueInput.FocusLost:Connect(function() updateHue(hueInput.Text) end) hookButtons(hueInput,updateHue)

					local function updateSat(str)
						local num = tonumber(str)
						if num then
							sat = math.clamp(math.floor(num),0,255)/255
							local hsvColor = Color3.fromHSV(hue,sat,val)
							red,green,blue = hsvColor.r,hsvColor.g,hsvColor.b
							satInput.Text = tostring(sat*255)
							updateColor(1)
						end
					end
					satInput.FocusLost:Connect(function() updateSat(satInput.Text) end) hookButtons(satInput,updateSat)

					local function updateVal(str)
						local num = tonumber(str)
						if num then
							val = math.clamp(math.floor(num),0,255)/255
							local hsvColor = Color3.fromHSV(hue,sat,val)
							red,green,blue = hsvColor.r,hsvColor.g,hsvColor.b
							valInput.Text = tostring(val*255)
							updateColor(1)
						end
					end
					valInput.FocusLost:Connect(function() updateVal(valInput.Text) end) hookButtons(valInput,updateVal)

					local function updateRed(str)
						local num = tonumber(str)
						if num then
							red = math.clamp(math.floor(num),0,255)/255
							local newColor = Color3.new(red,green,blue)
							hue,sat,val = Color3.toHSV(newColor)
							redInput.Text = tostring(red*255)
							updateColor(2)
						end
					end
					redInput.FocusLost:Connect(function() updateRed(redInput.Text) end) hookButtons(redInput,updateRed)

					local function updateGreen(str)
						local num = tonumber(str)
						if num then
							green = math.clamp(math.floor(num),0,255)/255
							local newColor = Color3.new(red,green,blue)
							hue,sat,val = Color3.toHSV(newColor)
							greenInput.Text = tostring(green*255)
							updateColor(2)
						end
					end
					greenInput.FocusLost:Connect(function() updateGreen(greenInput.Text) end) hookButtons(greenInput,updateGreen)

					local function updateBlue(str)
						local num = tonumber(str)
						if num then
							blue = math.clamp(math.floor(num),0,255)/255
							local newColor = Color3.new(red,green,blue)
							hue,sat,val = Color3.toHSV(newColor)
							blueInput.Text = tostring(blue*255)
							updateColor(2)
						end
					end
					blueInput.FocusLost:Connect(function() updateBlue(blueInput.Text) end) hookButtons(blueInput,updateBlue)

					local colorChoice = Instance.new("TextButton")
					colorChoice.Name = "Choice"
					colorChoice.Size = UDim2.new(0,25,0,18)
					colorChoice.BorderColor3 = Color3.new(96/255,96/255,96/255)
					colorChoice.Text = ""
					colorChoice.AutoButtonColor = false
					colorChoice.ZIndex = 10

					local row = 0
					local column = 0
					for i,v in pairs(basicColors) do
						local newColor = colorChoice:Clone()
						newColor.BackgroundColor3 = v
						newColor.Position = UDim2.new(0,1 + 30*column,0,21 + 23*row)

						newColor.MouseButton1Click:Connect(function()
							red,green,blue = v.r,v.g,v.b
							local newColor = Color3.new(red,green,blue)
							hue,sat,val = Color3.toHSV(newColor)
							updateColor()
						end)	

						newColor.Parent = basicColorsFrame
						column = column + 1
						if column == 6 then row = row + 1 column = 0 end
					end

					row = 0
					column = 0
					for i = 1,12 do
						local color = customColors[i] or Color3.new(0,0,0)
						local newColor = colorChoice:Clone()
						newColor.BackgroundColor3 = color
						newColor.Position = UDim2.new(0,1 + 30*column,0,20 + 23*row)

						newColor.MouseButton1Click:Connect(function()
							local curColor = customColors[i] or Color3.new(0,0,0)
							red,green,blue = curColor.r,curColor.g,curColor.b
							hue,sat,val = Color3.toHSV(curColor)
							updateColor()
						end)

						newColor.MouseButton2Click:Connect(function()
							customColors[i] = chosenColor
							newColor.BackgroundColor3 = chosenColor
						end)

						newColor.Parent = customColorsFrame
						column = column + 1
						if column == 6 then row = row + 1 column = 0 end
					end

					shade1Button.MouseButton1Click:Connect(function() if newMt.Confirm then newMt:Confirm(chosenColor,shade1) end end)
					shade1Button.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then shade1Button.BackgroundTransparency = 0.4 end end)
					shade1Button.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then shade1Button.BackgroundTransparency = 0 end end)

					shade2Button.MouseButton1Click:Connect(function() if newMt.Confirm then newMt:Confirm(chosenColor,shade2) end end)
					shade2Button.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then shade2Button.BackgroundTransparency = 0.4 end end)
					shade2Button.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then shade2Button.BackgroundTransparency = 0 end end)

					shade3Button.MouseButton1Click:Connect(function() if newMt.Confirm then newMt:Confirm(chosenColor,shade3) end end)
					shade3Button.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then shade3Button.BackgroundTransparency = 0.4 end end)
					shade3Button.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then shade3Button.BackgroundTransparency = 0 end end)

					text1Button.MouseButton1Click:Connect(function() if newMt.Confirm then newMt:Confirm(chosenColor,text1) end end)
					text1Button.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then text1Button.BackgroundTransparency = 0.4 end end)
					text1Button.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then text1Button.BackgroundTransparency = 0 end end)

					text2Button.MouseButton1Click:Connect(function() if newMt.Confirm then newMt:Confirm(chosenColor,text2) end end)
					text2Button.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then text2Button.BackgroundTransparency = 0.4 end end)
					text2Button.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then text2Button.BackgroundTransparency = 0 end end)

					scrollButton.MouseButton1Click:Connect(function() if newMt.Confirm then newMt:Confirm(chosenColor,scroll) end end)
					scrollButton.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then scrollButton.BackgroundTransparency = 0.4 end end)
					scrollButton.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then scrollButton.BackgroundTransparency = 0 end end)

					cancelButton.MouseButton1Click:Connect(function() if newMt.Cancel then newMt:Cancel() end end)
					cancelButton.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then cancelButton.BackgroundTransparency = 0.4 end end)
					cancelButton.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then cancelButton.BackgroundTransparency = 0 end end)

					defaultButton.MouseButton1Click:Connect(function() if newMt.Default then newMt:Default() end end)
					defaultButton.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then defaultButton.BackgroundTransparency = 0.4 end end)
					defaultButton.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then defaultButton.BackgroundTransparency = 0 end end)

					pickerExit.MouseButton1Click:Connect(function()
						picker:TweenPosition(UDim2.new(0.5, -219, 0, -500), "InOut", "Quart", 0.5, true, nil)
					end)

					updateColor()

					newMt.SetColor = function(self,color)
						red,green,blue = color.r,color.g,color.b
						hue,sat,val = Color3.toHSV(color)
						updateColor()
					end

					return newMt
				end
			end

			picker:TweenPosition(UDim2.new(0.5, -219, 0, 100), "InOut", "Quart", 0.5, true, nil)

			local Npicker = ColorPicker.new()
			Npicker.Confirm = function(self,color,ctype) updateColors(color,ctype) wait() updatesaves() end
			Npicker.Cancel = function(self)
				updateColors(cache_currentShade1,shade1)
				updateColors(cache_currentShade2,shade2)
				updateColors(cache_currentShade3,shade3)
				updateColors(cache_currentText1,text1)
				updateColors(cache_currentText2,text2)
				updateColors(cache_currentScroll,scroll)
				wait()
				updatesaves()
			end
			Npicker.Default = function(self)
				updateColors(Color3.fromRGB(36, 36, 37),shade1)
				updateColors(Color3.fromRGB(46, 46, 47),shade2)
				updateColors(Color3.fromRGB(78, 78, 79),shade3)
				updateColors(Color3.new(1, 1, 1),text1)
				updateColors(Color3.new(0, 0, 0),text2)
				updateColors(Color3.fromRGB(78,78,79),scroll)
				wait()
				updatesaves()
			end
		else
			picker:TweenPosition(UDim2.new(0.5, -219, 0, 100), "InOut", "Quart", 0.5, true, nil)
		end
	end)


	SettingsButton.MouseButton1Click:Connect(function()
		if SettingsOpen == false then SettingsOpen = true
			Settings:TweenPosition(UDim2.new(0, 0, 0, 45), "InOut", "Quart", 0.5, true, nil)
			CMDsF.Visible = false
		else SettingsOpen = false
			CMDsF.Visible = true
			Settings:TweenPosition(UDim2.new(0, 0, 0, 220), "InOut", "Quart", 0.5, true, nil)
		end
	end)

	On.MouseButton1Click:Connect(function()
		if StayOpen == false then StayOpen = true
			On.BackgroundTransparency = 0
		else StayOpen = false
			On.BackgroundTransparency = 1
		end
		updatesaves()
	end)

	Clear.MouseButton1Down:Connect(function()
		for _, child in pairs(scroll_2:GetChildren()) do
			child:Destroy()
		end
		scroll_2.CanvasSize = UDim2.new(0, 0, 0, 10)
	end)

	Toggle.MouseButton1Down:Connect(function()
		if logsEnabled then
			logsEnabled = false
			Toggle.Text = 'Disabled'
			updatesaves()
		else
			logsEnabled = true
			Toggle.Text = 'Enabled'
			updatesaves()
		end
	end)

	Toggle_2.MouseButton1Down:Connect(function()
		if jLogsEnabled then
			jLogsEnabled = false
			Toggle_2.Text = 'Disabled'
			updatesaves()
		else
			jLogsEnabled = true
			Toggle_2.Text = 'Enabled'
			updatesaves()
		end
	end)

	selectChat.MouseButton1Down:Connect(function()
		join.Visible = false
		chat.Visible = true
		table.remove(shade3,table.find(shade3,selectChat))
		table.remove(shade2,table.find(shade2,selectJoin))
		table.insert(shade2,selectChat)
		table.insert(shade3,selectJoin)
		selectJoin.BackgroundColor3 = currentShade3
		selectChat.BackgroundColor3 = currentShade2
	end)

	selectJoin.MouseButton1Down:Connect(function()
		chat.Visible = false
		join.Visible = true	
		table.remove(shade3,table.find(shade3,selectJoin))
		table.remove(shade2,table.find(shade2,selectChat))
		table.insert(shade2,selectJoin)
		table.insert(shade3,selectChat)
		selectChat.BackgroundColor3 = currentShade3
		selectJoin.BackgroundColor3 = currentShade2
	end)

	if not writefileExploit() then
		notify('Saves','Your exploit does not support read/write file. Your settings will not save.')
	end

	ChatLog = function(plr)
		plr.Chatted:Connect(function(Message)
			if logsEnabled == true then
				CreateLabel(plr.Name,Message)
			end
		end)
	end

	JoinLog = function(plr)
		if jLogsEnabled == true then
			CreateJoinLabel(plr,plr.UserId)
		end
	end

	SaveChatlogs.MouseButton1Down:Connect(function()
		if writefileExploit() then
			if #scroll_2:GetChildren() > 0 then
				notify("Loading",'Hold on a sec')
				local placeName = game:GetService('MarketplaceService'):GetProductInfo(game.PlaceId).Name
				local writelogs = '-- Infinite Yield Chat logs for "'..placeName..'"\n'
				for _, child in pairs(scroll_2:GetChildren()) do
					writelogs = writelogs..'\n'..child.Text
				end
				local writelogsFile = tostring(writelogs)
				local fileext = 0
				local function nameFile()
					local file
					pcall(function() file = readfile(placeName..' Chat Logs ('..fileext..').txt') end)
					if file then
						fileext = fileext+1
						nameFile()
					else
						writefileCooldown(placeName..' Chat Logs ('..fileext..').txt', writelogsFile)
					end
				end
				nameFile()
				notify('Chat Logs','Saved chat logs to the workspace folder within your exploit folder.')
			end
		else
			notify('Chat Logs','Your exploit does not support write file. You cannot save chat logs.')
		end
	end)

	for _, plr in pairs(Players:GetChildren()) do
		if plr.ClassName == "Player" then
			ChatLog(plr)
		end
	end

	Players.PlayerRemoving:Connect(function(player)
		if ESPenabled or CHMSenabled or COREGUI:FindFirstChild(player.Name..'_LC') then
			for i,v in pairs(COREGUI:GetChildren()) do
				if v.Name == player.Name..'_ESP' or v.Name == player.Name..'_LC' or v.Name == player.Name..'_CHMS' then
					v:Destroy()
				end
			end
		end
		if viewing ~= nil and player == viewing then
			workspace.CurrentCamera.CameraSubject = Players.LocalPlayer.Character
			viewing = nil
			if viewDied then
				viewDied:Disconnect()
				viewChanged:Disconnect()
			end
			notify('Spectate','View turned off (player left)')
		end
	end)

	Exit.MouseButton1Down:Connect(function()
		logs:TweenPosition(UDim2.new(0, 0, 1, 10), "InOut", "Quart", 0.3, true, nil)
	end)

	Hide.MouseButton1Down:Connect(function()
		if logs.Position ~= UDim2.new(0, 0, 1, -20) then
			logs:TweenPosition(UDim2.new(0, 0, 1, -20), "InOut", "Quart", 0.3, true, nil)
		else
			logs:TweenPosition(UDim2.new(0, 0, 1, -265), "InOut", "Quart", 0.3, true, nil)
		end
	end)

	EventBind.MouseButton1Click:Connect(function()
		eventEditor.Frame:TweenPosition(UDim2.new(0.5,-175,0.5,-101), "InOut", "Quart", 0.5, true, nil)
	end)

	Keybinds.MouseButton1Click:Connect(function()
		KeybindsFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
		wait(0.5)
		SettingsHolder.Visible = false
	end)

	Close.MouseButton1Click:Connect(function()
		SettingsHolder.Visible = true
		KeybindsFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
	end)

	Keybinds.MouseButton1Click:Connect(function()
		KeybindsFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
		wait(0.5)
		SettingsHolder.Visible = false
	end)

	Add.MouseButton1Click:Connect(function()
		KeybindEditor:TweenPosition(UDim2.new(0.5, -180, 0, 260), "InOut", "Quart", 0.5, true, nil)
	end)

	Delete.MouseButton1Click:Connect(function()
		binds = {}
		refreshbinds()
		updatesaves()
		notify('Keybinds Updated','Removed all keybinds')
	end)

	Close_2.MouseButton1Click:Connect(function()
		SettingsHolder.Visible = true
		AliasesFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
	end)

	Aliases.MouseButton1Click:Connect(function()
		AliasesFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
		wait(0.5)
		SettingsHolder.Visible = false
	end)

	Close_3.MouseButton1Click:Connect(function()
		SettingsHolder.Visible = true
		PositionsFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
	end)

	Positions.MouseButton1Click:Connect(function()
		PositionsFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
		wait(0.5)
		SettingsHolder.Visible = false
	end)

	local selectionBox = Instance.new("SelectionBox")
	selectionBox.Name = randomString()
	selectionBox.Color3 = Color3.new(255,255,255)
	selectionBox.Adornee = nil
	selectionBox.Parent = PARENT

	local selected = Instance.new("SelectionBox")
	selected.Name = randomString()
	selected.Color3 = Color3.new(0,166,0)
	selected.Adornee = nil
	selected.Parent = PARENT

	local ActivateHighlight = nil
	local ClickSelect = nil
	function selectPart()
		ToPartFrame:TweenPosition(UDim2.new(0.5, -180, 0, 335), "InOut", "Quart", 0.5, true, nil)
		local function HighlightPart()
			if selected.Adornee ~= IYMouse.Target then
				selectionBox.Adornee = IYMouse.Target
			else
				selectionBox.Adornee = nil
			end
		end
		ActivateHighlight = IYMouse.Move:Connect(HighlightPart)
		local function SelectPart()
			if IYMouse.Target ~= nil then
				selected.Adornee = IYMouse.Target
				Path.Text = getHierarchy(IYMouse.Target)
			end
		end
		ClickSelect = IYMouse.Button1Down:Connect(SelectPart)
	end

	Part.MouseButton1Click:Connect(function()
		selectPart()
	end)

	Exit_4.MouseButton1Click:Connect(function()
		ToPartFrame:TweenPosition(UDim2.new(0.5, -180, 0, -500), "InOut", "Quart", 0.5, true, nil)
		if ActivateHighlight then
			ActivateHighlight:Disconnect()
		end
		if ClickSelect then
			ClickSelect:Disconnect()
		end
		selectionBox.Adornee = nil
		selected.Adornee = nil
		Path.Text = ""
	end)

	CopyPath.MouseButton1Click:Connect(function()
		if Path.Text ~= "" then
			toClipboard(Path.Text)
		else
			notify('Copy Path','Select a part to copy its path')
		end
	end)

	ChoosePart.MouseButton1Click:Connect(function()
		if Path.Text ~= "" then
			local tpNameExt = ''
			local function handleWpNames()
				local FoundDupe = false
				for i,v in pairs(pWayPoints) do
					if v.NAME:lower() == selected.Adornee.Name:lower()..tpNameExt then
						FoundDupe = true
					end
				end
				if not FoundDupe then
					notify('Modified Waypoints',"Created waypoint: "..selected.Adornee.Name..tpNameExt)
					pWayPoints[#pWayPoints + 1] = {NAME = selected.Adornee.Name..tpNameExt, COORD = {selected.Adornee}}
				else
					if isNumber(tpNameExt) then
						tpNameExt = tpNameExt+1
					else
						tpNameExt = 1
					end
					handleWpNames()
				end
			end
			handleWpNames()
			refreshwaypoints()
		else
			notify('Part Selection','Select a part first')
		end
	end)

	cmds={}
	customAlias = {}
	Delete_3.MouseButton1Click:Connect(function()
		customAlias = {}
		aliases = {}
		notify('Aliases Modified','Removed all aliases')
		updatesaves()
		refreshaliases()
	end)

	PrefixBox:GetPropertyChangedSignal("Text"):Connect(function()
		prefix = PrefixBox.Text
		Cmdbar.PlaceholderText = "Command Bar ("..prefix..")"
		updatesaves()
	end)

	function CamViewport()
		if workspace.CurrentCamera then
			return workspace.CurrentCamera.ViewportSize.X
		end
	end

	function UpdateToViewport()
		if Holder.Position.X.Offset < -CamViewport() then
			Holder:TweenPosition(UDim2.new(1, -CamViewport(), Holder.Position.Y.Scale, Holder.Position.Y.Offset), "InOut", "Quart", 0.04, true, nil)
			Notification:TweenPosition(UDim2.new(1, -CamViewport() + 250, Notification.Position.Y.Scale, Notification.Position.Y.Offset), "InOut", "Quart", 0.04, true, nil)
		end
	end
	CameraChanged = workspace.CurrentCamera:GetPropertyChangedSignal("ViewportSize"):Connect(UpdateToViewport)

	function updateCamera(child, parent)
		if parent ~= workspace then
			CamMoved:Disconnect()
			CameraChanged:Disconnect()
			repeat wait() until workspace.CurrentCamera
			CameraChanged = workspace.CurrentCamera:GetPropertyChangedSignal("ViewportSize"):Connect(UpdateToViewport)
			CamMoved = workspace.CurrentCamera.AncestryChanged:Connect(updateCamera)
		end
	end
	CamMoved = workspace.CurrentCamera.AncestryChanged:Connect(updateCamera)

	function dragMain(dragpoint,gui)
		spawn(function()
			local dragging
			local dragInput
			local dragStart = Vector3.new(0,0,0)
			local startPos
			local function update(input)
				local pos = -250
				local delta = input.Position - dragStart
				if startPos.X.Offset + delta.X <= -500 then
					local Position = UDim2.new(1, -250, Notification.Position.Y.Scale, Notification.Position.Y.Offset)
					game:GetService("TweenService"):Create(Notification, TweenInfo.new(.20), {Position = Position}):Play()
					pos = 250
				else
					local Position = UDim2.new(1, -500, Notification.Position.Y.Scale, Notification.Position.Y.Offset)
					game:GetService("TweenService"):Create(Notification, TweenInfo.new(.20), {Position = Position}):Play()
					pos = -250
				end
				if startPos.X.Offset + delta.X <= -250 and -CamViewport() <= startPos.X.Offset + delta.X then
					local Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, gui.Position.Y.Scale, gui.Position.Y.Offset)
					game:GetService("TweenService"):Create(gui, TweenInfo.new(.20), {Position = Position}):Play()
					local Position2 = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X + pos, Notification.Position.Y.Scale, Notification.Position.Y.Offset)
					game:GetService("TweenService"):Create(Notification, TweenInfo.new(.20), {Position = Position2}):Play()
				elseif startPos.X.Offset + delta.X > -500 then
					local Position = UDim2.new(1, -250, gui.Position.Y.Scale, gui.Position.Y.Offset)
					game:GetService("TweenService"):Create(gui, TweenInfo.new(.20), {Position = Position}):Play()
				elseif -CamViewport() > startPos.X.Offset + delta.X then
					gui:TweenPosition(UDim2.new(1, -CamViewport(), gui.Position.Y.Scale, gui.Position.Y.Offset), "InOut", "Quart", 0.04, true, nil)
					local Position = UDim2.new(1, -CamViewport(), gui.Position.Y.Scale, gui.Position.Y.Offset)
					game:GetService("TweenService"):Create(gui, TweenInfo.new(.20), {Position = Position}):Play()
					local Position2 = UDim2.new(1, -CamViewport() + 250, Notification.Position.Y.Scale, Notification.Position.Y.Offset)
					game:GetService("TweenService"):Create(Notification, TweenInfo.new(.20), {Position = Position2}):Play()
				end
			end
			dragpoint.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
					dragging = true
					dragStart = input.Position
					startPos = gui.Position

					input.Changed:Connect(function()
						if input.UserInputState == Enum.UserInputState.End then
							dragging = false
						end
					end)
				end
			end)
			dragpoint.InputChanged:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
					dragInput = input
				end
			end)
			UserInputService.InputChanged:Connect(function(input)
				if input == dragInput and dragging then
					update(input)
				end
			end)
		end)
	end

	dragMain(Title,Holder)

	Match = function(name,str)
		str = str:gsub("%W", "%%%1")
		return name:lower():find(str:lower()) and true
	end

	local canvasPos = Vector2.new(0,0)
	local topCommand = nil
	IndexContents = function(str,bool,cmdbar,Ianim)
		local SizeY = 0
		local indexnum = 0
		local frame = CMDsF
		topCommand = nil
		local chunks = {}
		if str:sub(#str,#str) == "\\" then str = "" end
		for w in string.gmatch(str,"[^\\]+") do
			table.insert(chunks,w)
		end
		if #chunks > 0 then str = chunks[#chunks] end
		if str:sub(1,1) == "!" then str = str:sub(2) end
		for i,v in next, frame:GetChildren() do
			if v:IsA("TextButton") then
				if bool then
					if Match(v.Text,str) then
						indexnum = indexnum + 1
						v.Visible = true
						if topCommand == nil then
							topCommand = v.Text
						end
					else
						v.Visible = false
					end
				else
					v.Visible = true
					if topCommand == nil then
						topCommand = v.Text
					end
				end
			end
		end
		frame.CanvasSize = UDim2.new(0,0,0,cmdListLayout.AbsoluteContentSize.Y)
		if not Ianim then
			if indexnum == 0 or string.find(str, " ") then
				if not cmdbar then
					minimizeHolder()
				elseif cmdbar then
					cmdbarHolder()
				end
			else
				maximizeHolder()
			end
		else
			minimizeHolder()
		end
	end

	PlayerGui = Players.LocalPlayer:FindFirstChildOfClass("PlayerGui")
	local chatbox
	spawn(function()
		if pcall(function() chatbox = PlayerGui:WaitForChild("Chat").Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar end) then	
			local function chatboxFocused()
				canvasPos = CMDsF.CanvasPosition
			end
			local chatboxFocusedC = chatbox.Focused:Connect(chatboxFocused)

			local function Index()
				if chatbox.Text:lower():sub(1,1) == prefix then
					if SettingsOpen == true then
						wait(0.2)
						CMDsF.Visible = true
						Settings:TweenPosition(UDim2.new(0, 0, 0, 220), "InOut", "Quart", 0.2, true, nil)
					end
					IndexContents(PlayerGui.Chat.Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar.Text:lower():sub(2),true)
				else
					minimizeHolder()
					if SettingsOpen == true then
						wait(0.2)
						Settings:TweenPosition(UDim2.new(0, 0, 0, 45), "InOut", "Quart", 0.2, true, nil)
						CMDsF.Visible = false
					end
				end
			end
			local chatboxFunc = chatbox:GetPropertyChangedSignal("Text"):Connect(Index)

			function chatboxFocusLost(enterpressed)
				if not enterpressed or chatbox.Text:lower():sub(1,1) ~= prefix then
					IndexContents('',true)
				end
				CMDsF.CanvasPosition = canvasPos
				minimizeHolder()
			end
			local chatboxFocusLostC = chatbox.FocusLost:Connect(chatboxFocusLost)

			PlayerGui:WaitForChild("Chat").Frame.ChatBarParentFrame.ChildAdded:Connect(function(newbar)
				wait()
				if newbar:FindFirstChild('BoxFrame') then
					chatbox = PlayerGui:WaitForChild("Chat").Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar
					if chatboxFocusedC then chatboxFocusedC:Disconnect() end
					chatboxFocusedC = chatbox.Focused:Connect(chatboxFocused)
					if chatboxFunc then chatboxFunc:Disconnect() end
					chatboxFunc = chatbox:GetPropertyChangedSignal("Text"):Connect(Index)
					if chatboxFocusLostC then chatboxFocusLostC:Disconnect() end
					chatboxFocusLostC = chatbox.FocusLost:Connect(chatboxFocusLost)
				end
			end)
			--else
			--print('Custom chat detected. Will not provide suggestions for commands typed in the chat.')
		end
	end)

	function autoComplete(str,curText)
		local endingChar = {"[", "/", "(", " "}
		local stop = 0
		for i=1,#str do
			local c = str:sub(i,i)
			if table.find(endingChar, c) then
				stop = i
				break
			end
		end
		curText = curText or Cmdbar.Text
		local subPos = 0
		local pos = 1
		local findRes = string.find(curText,"\\",pos)
		while findRes do
			subPos = findRes
			pos = findRes+1
			findRes = string.find(curText,"\\",pos)
		end
		if curText:sub(subPos+1,subPos+1) == "!" then subPos = subPos + 1 end
		Cmdbar.Text = curText:sub(1,subPos) .. str:sub(1, stop - 1)..' '
		wait()
		Cmdbar.Text = Cmdbar.Text:gsub( '\t', '' )
		Cmdbar.CursorPosition = #Cmdbar.Text+1--1020
	end

	CMDs = {}
	CMDs[#CMDs + 1] = {NAME = 'console', DESC = 'Loads old Roblox console'}
	CMDs[#CMDs + 1] = {NAME = 'explorer / dex', DESC = 'Opens DEX explorer'}
	CMDs[#CMDs + 1] = {NAME = 'remotespy / rspy', DESC = 'Opens FrostHook Spy'}
	CMDs[#CMDs + 1] = {NAME = 'audiologger / alogger', DESC = 'Opens Edges audio logger'}
	CMDs[#CMDs + 1] = {NAME = 'serverinfo / info', DESC = 'Gives you info about the server'}
	CMDs[#CMDs + 1] = {NAME = 'jobid', DESC = 'Copies the games JobId to your clipboard'}
	CMDs[#CMDs + 1] = {NAME = 'notifyjobid', DESC = 'Notifies you the games JobId'}
	CMDs[#CMDs + 1] = {NAME = 'rejoin / rj', DESC = 'Makes you rejoin the game'}
	CMDs[#CMDs + 1] = {NAME = 'autorejoin / autorj', DESC = 'Automatically rejoins the server if you get kicked/disconnected'}
	CMDs[#CMDs + 1] = {NAME = 'serverhop / shop', DESC = 'Teleports you to a different server'}
	CMDs[#CMDs + 1] = {NAME = 'joinplayer [username / ID] [place ID]', DESC = 'Joins a specific players server'}
	CMDs[#CMDs + 1] = {NAME = 'gameteleport / gametp [place ID]', DESC = 'Joins a game by ID'}
	CMDs[#CMDs + 1] = {NAME = 'antiidle / antiafk', DESC = 'Prevents the game from kicking you for being idle/afk'}
	CMDs[#CMDs + 1] = {NAME = 'datalimit [num]', DESC = 'Set outgoing KBPS limit'}
	CMDs[#CMDs + 1] = {NAME = 'replicationlag / backtrack [num]', DESC = 'Set IncomingReplicationLag'}
	CMDs[#CMDs + 1] = {NAME = 'creatorid / creator', DESC = 'Notifies you the creators ID'}
	CMDs[#CMDs + 1] = {NAME = 'copycreatorid / copycreator', DESC = 'Copies the creators ID to your clipboard'}
	CMDs[#CMDs + 1] = {NAME = 'setcreatorid / setcreator', DESC = 'Sets your userid to the creators ID'}
	CMDs[#CMDs + 1] = {NAME = 'noprompts', DESC = 'Prevents the game from showing you purchase/premium prompts'}
	CMDs[#CMDs + 1] = {NAME = 'showprompts', DESC = 'Allows the game to show purchase/premium prompts again'}
	CMDs[#CMDs + 1] = {NAME = 'enable [inventory/playerlist/chat/all]', DESC = 'Toggles visibility of coregui items'}
	CMDs[#CMDs + 1] = {NAME = 'disable [inventory/playerlist/chat/all]', DESC = 'Toggles visibility of coregui items'}
	CMDs[#CMDs + 1] = {NAME = 'showguis', DESC = 'Shows any invisible GUIs'}
	CMDs[#CMDs + 1] = {NAME = 'unshowguis', DESC = 'Undoes showguis'}
	CMDs[#CMDs + 1] = {NAME = 'hideguis', DESC = 'Hides any GUIs in PlayerGui'}
	CMDs[#CMDs + 1] = {NAME = 'unhideguis', DESC = 'Undoes hideguis'}
	CMDs[#CMDs + 1] = {NAME = 'guidelete', DESC = 'Enables backspace to delete GUI'}
	CMDs[#CMDs + 1] = {NAME = 'unguidelete / noguidelete', DESC = 'Disables guidelete'}
	CMDs[#CMDs + 1] = {NAME = 'hideiy', DESC = 'Hides the main IY GUI'}
	CMDs[#CMDs + 1] = {NAME = 'showiy', DESC = 'Shows IY again'}
	CMDs[#CMDs + 1] = {NAME = 'savegame / saveplace', DESC = 'Uses saveinstance to save the game'}
	CMDs[#CMDs + 1] = {NAME = 'clearerror', DESC = 'Clears the annoying box and blur when a game kicks you'}
	CMDs[#CMDs + 1] = {NAME = 'clientantikick / antikick (CLIENT)', DESC = 'Prevents localscripts from kicking you'}
	CMDs[#CMDs + 1] = {NAME = 'clientantiteleport / antiteleport (CLIENT)', DESC = 'Prevents localscripts from teleporting you'}
	CMDs[#CMDs + 1] = {NAME = 'allowrejoin / allowrj [true/false] (CLIENT)', DESC = 'Changes if antiteleport allows you to rejoin or not'}
	CMDs[#CMDs + 1] = {NAME = 'cancelteleport / canceltp', DESC = 'Cancels teleports in progress'}
	CMDs[#CMDs + 1] = {NAME = 'volume / vol [0-10]', DESC = 'Adjusts your game volume on a scale of 0 to 10'}
	CMDs[#CMDs + 1] = {NAME = 'antilag / boostfps / lowgraphics', DESC = 'Lowers game quality to boost FPS'}
	CMDs[#CMDs + 1] = {NAME = 'record / rec', DESC = 'Starts roblox recorder'}
	CMDs[#CMDs + 1] = {NAME = 'screenshot / scrnshot', DESC = 'Takes a screenshot'}
	CMDs[#CMDs + 1] = {NAME = 'togglefullscreen / togglefs', DESC = 'Toggles fullscreen'}
	CMDs[#CMDs + 1] = {NAME = 'notify [text]', DESC = 'Sends you a notification with the provided text'}
	CMDs[#CMDs + 1] = {NAME = 'lastcommand / lastcmd', DESC = 'Executes the previous command used'}
	CMDs[#CMDs + 1] = {NAME = 'exit', DESC = 'Kills roblox process'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'noclip', DESC = 'Go through objects'}
	CMDs[#CMDs + 1] = {NAME = 'unnoclip / clip', DESC = 'Disables noclip'}
	CMDs[#CMDs + 1] = {NAME = 'fly [speed]', DESC = 'Makes you fly'}
	CMDs[#CMDs + 1] = {NAME = 'unfly', DESC = 'Disables fly'}
	CMDs[#CMDs + 1] = {NAME = 'flyspeed [num]', DESC = 'Set fly speed (default is 20)'}
	CMDs[#CMDs + 1] = {NAME = 'vehiclefly / vfly [speed]', DESC = 'Makes you fly in a vehicle'}
	CMDs[#CMDs + 1] = {NAME = 'unvehiclefly / unvfly', DESC = 'Disables vehicle fly'}
	CMDs[#CMDs + 1] = {NAME = 'vehicleflyspeed  / vflyspeed [num]', DESC = 'Set vehicle fly speed'}
	CMDs[#CMDs + 1] = {NAME = 'cframefly / cfly [speed]', DESC = 'Makes you fly, bypassing some anti cheats'}
	CMDs[#CMDs + 1] = {NAME = 'uncframefly / uncfly', DESC = 'Disables cfly'}
	CMDs[#CMDs + 1] = {NAME = 'cframeflyspeed  / cflyspeed [num]', DESC = 'Sets cfly speed'}
	CMDs[#CMDs + 1] = {NAME = 'qefly [true / false]', DESC = 'enables or disables the Q and E hotkeys for fly'}
	CMDs[#CMDs + 1] = {NAME = 'vehiclenoclip / vnoclip', DESC = 'Turns off vehicle collision'}
	CMDs[#CMDs + 1] = {NAME = 'vehicleclip / vclip / unvnoclip', DESC = 'Enables vehicle collision'}
	CMDs[#CMDs + 1] = {NAME = 'float /  platform', DESC = 'Spawns a platform beneath you causing you to float'}
	CMDs[#CMDs + 1] = {NAME = 'unfloat / noplatform', DESC = 'Removes the platform'}
	CMDs[#CMDs + 1] = {NAME = 'swim', DESC = 'Allows you to swim in the air'}
	CMDs[#CMDs + 1] = {NAME = 'unswim / noswim', DESC = 'Stops you from swimming everywhere'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'setwaypoint / swp [name]', DESC = 'Sets a waypoint at your position'}
	CMDs[#CMDs + 1] = {NAME = 'waypointpos / wpp [name] [X Y Z]', DESC = 'Sets a waypoint with specified coordinates'}
	CMDs[#CMDs + 1] = {NAME = 'showwaypoints / showwp', DESC = 'Shows all currently set waypoints'}
	CMDs[#CMDs + 1] = {NAME = 'hidewaypoints / hidewp', DESC = 'Hides shown waypoints'}
	CMDs[#CMDs + 1] = {NAME = 'waypoint / wp [name]', DESC = 'Teleports player to a waypoint'}
	CMDs[#CMDs + 1] = {NAME = 'tweenwaypoint / twp [name]', DESC = 'Tweens player to a waypoint'}
	CMDs[#CMDs + 1] = {NAME = 'walktowaypoint / wtwp [name]', DESC = 'Walks player to a waypoint'}
	CMDs[#CMDs + 1] = {NAME = 'deletewaypoint / dwp [name]', DESC = 'Deletes a waypoint'}
	CMDs[#CMDs + 1] = {NAME = 'clearwaypoints / cwp', DESC = 'Clears all waypoints'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'goto [plr]', DESC = 'Go to a player'}
	CMDs[#CMDs + 1] = {NAME = 'tweengoto / tgoto [plr]', DESC = 'Tween to a player (bypasses some anti cheats)'}
	CMDs[#CMDs + 1] = {NAME = 'tweenspeed / tspeed [num]', DESC = 'Sets how fast all tween commands go (default is 1)'}
	CMDs[#CMDs + 1] = {NAME = 'vehiclegoto / vgoto [plr]', DESC = 'Go to a player while in a vehicle'}
	CMDs[#CMDs + 1] = {NAME = 'loopgoto [plr] [distance] [delay]', DESC = 'Loop teleport to a player'}
	CMDs[#CMDs + 1] = {NAME = 'unloopgoto', DESC = 'Stops teleporting you to a player'}
	CMDs[#CMDs + 1] = {NAME = 'clientbring / cbring [plr] (CLIENT)', DESC = 'Bring a player'}
	CMDs[#CMDs + 1] = {NAME = 'loopbring [plr] [distance] [delay] (CLIENT)', DESC = 'Loop brings a player to you (useful for killing)'}
	CMDs[#CMDs + 1] = {NAME = 'unloopbring [plr]', DESC = 'Undoes loopbring'}
	CMDs[#CMDs + 1] = {NAME = 'freeze / fr [plr] (CLIENT)', DESC = 'Freezes a player'}
	CMDs[#CMDs + 1] = {NAME = 'thaw / unfr [plr] (CLIENT)', DESC = 'Unfreezes a player'}
	CMDs[#CMDs + 1] = {NAME = 'tpposition / tppos [X Y Z]', DESC = 'Teleports you to certain coordinates'}
	CMDs[#CMDs + 1] = {NAME = 'tweentpposition / ttppos [X Y Z]', DESC = 'Tween to coordinates (bypasses some anti cheats)'}
	CMDs[#CMDs + 1] = {NAME = 'offset [X Y Z]', DESC = 'Offsets you by certain coordinates'}
	CMDs[#CMDs + 1] = {NAME = 'tweenoffset / toffset [X Y Z]', DESC = 'Tween offset (bypasses some anti cheats)'}
	CMDs[#CMDs + 1] = {NAME = 'notifyposition / notifypos [plr]', DESC = 'Notifies you the coordinates of a character'}
	CMDs[#CMDs + 1] = {NAME = 'copyposition / copypos [plr]', DESC = 'Copies the coordinates of a character to your clipboard'}
	CMDs[#CMDs + 1] = {NAME = 'walktoposition / walktopos [X Y Z]', DESC = 'Makes you walk to a coordinate'}
	CMDs[#CMDs + 1] = {NAME = 'spawnpoint / spawn [delay]', DESC = 'Sets a position where you will spawn'}
	CMDs[#CMDs + 1] = {NAME = 'nospawnpoint / nospawn', DESC = 'Removes your custom spawn point'}
	CMDs[#CMDs + 1] = {NAME = 'flashback / diedtp', DESC = 'Teleports you to where you last died'}
	CMDs[#CMDs + 1] = {NAME = 'walltp', DESC = 'Teleports you above/over any wall you run into'}
	CMDs[#CMDs + 1] = {NAME = 'nowalltp / unwalltp', DESC = 'Disables walltp'}
	CMDs[#CMDs + 1] = {NAME = 'teleporttool / tptool', DESC = 'Gives you a teleport tool'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'logs', DESC = 'Opens the logs GUI'}
	CMDs[#CMDs + 1] = {NAME = 'chatlogs / clogs', DESC = 'Log what people say or whisper'}
	CMDs[#CMDs + 1] = {NAME = 'joinlogs / jlogs', DESC = 'Log when people join'}
	CMDs[#CMDs + 1] = {NAME = 'chat / say [text]', DESC = 'Makes you chat a string (possible mute bypass)'}
	CMDs[#CMDs + 1] = {NAME = 'spam [text]', DESC = 'Makes you spam the chat'}
	CMDs[#CMDs + 1] = {NAME = 'unspam', DESC = 'Turns off spam'}
	CMDs[#CMDs + 1] = {NAME = 'whisper / pm [plr] [text]', DESC = 'Makes you whisper a string to someone (possible mute bypass)'}
	CMDs[#CMDs + 1] = {NAME = 'pmspam [plr] [text]', DESC = 'Makes you spam a players whispers'}
	CMDs[#CMDs + 1] = {NAME = 'unpmspam [plr]', DESC = 'Turns off pm spam'}
	CMDs[#CMDs + 1] = {NAME = 'spamspeed [num]', DESC = 'How quickly you spam (default is 1)'}
	CMDs[#CMDs + 1] = {NAME = 'bubblechat (CLIENT)', DESC = 'Enables bubble chat for your client'}
	CMDs[#CMDs + 1] = {NAME = 'unbubblechat / nobubblechat', DESC = 'Disables the bubblechat command'}
	CMDs[#CMDs + 1] = {NAME = 'safechat', DESC = 'Enables safe chat'}
	CMDs[#CMDs + 1] = {NAME = 'nosafechat / disablesafechat', DESC = 'Disables safechat'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'esp', DESC = 'View all players and their status'}
	CMDs[#CMDs + 1] = {NAME = 'noesp / unesp', DESC = 'Removes esp'}
	CMDs[#CMDs + 1] = {NAME = 'partesp [part name]', DESC = 'Highlights a part'}
	CMDs[#CMDs + 1] = {NAME = 'unpartesp / nopartesp [part name]', DESC = 'removes partesp'}
	CMDs[#CMDs + 1] = {NAME = 'chams', DESC = 'ESP but without text in the way'}
	CMDs[#CMDs + 1] = {NAME = 'nochams / unchams', DESC = 'Removes chams'}
	CMDs[#CMDs + 1] = {NAME = 'locate [plr]', DESC = 'View a single player and their status'}
	CMDs[#CMDs + 1] = {NAME = 'unlocate / nolocate [plr]', DESC = 'Removes locate'}
	CMDs[#CMDs + 1] = {NAME = 'xray', DESC = 'Makes all parts in workspace transparent'}
	CMDs[#CMDs + 1] = {NAME = 'unxray / noxray', DESC = 'Restores transparency'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'spectate / view [plr]', DESC = 'View a player'}
	CMDs[#CMDs + 1] = {NAME = 'viewpart / viewp [part name]', DESC = 'View a part'}
	CMDs[#CMDs + 1] = {NAME = 'unspectate / unview', DESC = 'Stops viewing player'}
	CMDs[#CMDs + 1] = {NAME = 'freecam / fc', DESC = 'Allows you to freely move camera around the game'}
	CMDs[#CMDs + 1] = {NAME = 'freecampos / fcpos [X Y Z]', DESC = 'Moves / opens freecam in a certain position'}
	CMDs[#CMDs + 1] = {NAME = 'freecamwaypoint / fcwp [name]', DESC = 'Moves / opens freecam to a waypoint'}
	CMDs[#CMDs + 1] = {NAME = 'freecamgoto / fcgoto / fctp [plr]', DESC = 'Moves / opens freecam to a player'}
	CMDs[#CMDs + 1] = {NAME = 'unfreecam / unfc', DESC = 'Disables freecam'}
	CMDs[#CMDs + 1] = {NAME = 'freecamspeed / fcspeed [num]', DESC = 'Adjusts freecam speed (default is 1)'}
	CMDs[#CMDs + 1] = {NAME = 'gotocamera / gotocam', DESC = 'Teleports you to the location of your camera'}
	CMDs[#CMDs + 1] = {NAME = 'tweengotocam / tgotocam', DESC = 'Tweens you to the location of your camera'}
	CMDs[#CMDs + 1] = {NAME = 'firstp', DESC = 'Forces camera to go into first person'}
	CMDs[#CMDs + 1] = {NAME = 'thirdp', DESC = 'Allows camera to go into third person'}
	CMDs[#CMDs + 1] = {NAME = 'noclipcam / nccam', DESC = 'Allows camera to go through objects like walls'}
	CMDs[#CMDs + 1] = {NAME = 'maxzoom [num]', DESC = 'Maximum camera zoom'}
	CMDs[#CMDs + 1] = {NAME = 'minzoom [num]', DESC = 'Minimum camera zoom'}
	CMDs[#CMDs + 1] = {NAME = 'fov [num]', DESC = 'Adjusts field of view (default is 70)'}
	CMDs[#CMDs + 1] = {NAME = 'fixcam / restorecam', DESC = 'Fixes camera'}
	CMDs[#CMDs + 1] = {NAME = 'enableshiftlock / enablesl', DESC = 'Enables the shift lock option'}
	CMDs[#CMDs + 1] = {NAME = 'lookat [plr]', DESC = 'Moves your camera view to a player'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'btools (CLIENT)', DESC = 'Gives you building tools (DOES NOT REPLICATE)'}
	CMDs[#CMDs + 1] = {NAME = 'f3x (CLIENT)', DESC = 'Gives you F3X building tools (DOES NOT REPLICATE)'}
	CMDs[#CMDs + 1] = {NAME = 'partname / partpath', DESC = 'Allows you to click a part to see its path & name'}
	CMDs[#CMDs + 1] = {NAME = 'delete [instance name] (CLIENT)', DESC = 'Removes any part with a certain name from the workspace (DOES NOT REPLICATE)'}
	CMDs[#CMDs + 1] = {NAME = 'deleteclass / dc [class name] (CLIENT)', DESC = 'Removes any part with a certain classname from the workspace (DOES NOT REPLICATE)'}
	CMDs[#CMDs + 1] = {NAME = 'lockworkspace / lockws', DESC = 'Locks the whole workspace'}
	CMDs[#CMDs + 1] = {NAME = 'unlockworkspace / unlockws', DESC = 'Unlocks the whole workspace'}
	CMDs[#CMDs + 1] = {NAME = 'invisibleparts / invisparts (CLIENT)', DESC = 'Shows invisible parts'}
	CMDs[#CMDs + 1] = {NAME = 'uninvisibleparts / uninvisparts (CLIENT)', DESC = 'Makes parts affected by invisparts return to normal'}
	CMDs[#CMDs + 1] = {NAME = 'deleteinvisparts / dip (CLIENT)', DESC = 'Deletes invisible parts'}
	CMDs[#CMDs + 1] = {NAME = 'gotopart [part name]', DESC = 'Moves your character to a part or multiple parts'}
	CMDs[#CMDs + 1] = {NAME = 'tweengotopart / tgotopart [part name]', DESC = 'Tweens your character to a part or multiple parts'}
	CMDs[#CMDs + 1] = {NAME = 'gotopartclass / gpc [class name]', DESC = 'Moves your character to a part or multiple parts based on classname'}
	CMDs[#CMDs + 1] = {NAME = 'tweengotopartclass / tgpc [class name]', DESC = 'Tweens your character to a part or multiple parts based on classname'}
	CMDs[#CMDs + 1] = {NAME = 'gotomodel [part name]', DESC = 'Moves your character to a model or multiple models'}
	CMDs[#CMDs + 1] = {NAME = 'tweengotomodel / tgotomodel [part name]', DESC = 'Tweens your character to a model or multiple models'}
	CMDs[#CMDs + 1] = {NAME = 'gotopartdelay / gotomodeldelay [num]', DESC = 'Adjusts how quickly you teleport to each part (default is 0.1)'}
	CMDs[#CMDs + 1] = {NAME = 'bringpart [part name] (CLIENT)', DESC = 'Moves a part or multiple parts to your character'}
	CMDs[#CMDs + 1] = {NAME = 'bringpartclass / bpc [class name] (CLIENT)', DESC = 'Moves a part or multiple parts to your character based on classname'}
	CMDs[#CMDs + 1] = {NAME = 'noclickdetectorlimits / nocdlimits', DESC = 'Sets all click detectors MaxActivationDistance to math.huge'}
	CMDs[#CMDs + 1] = {NAME = 'fireclickdetectors / firecd', DESC = 'Uses all click detectors in a game'}
	CMDs[#CMDs + 1] = {NAME = 'firetouchinterests / touchinterests', DESC = 'Uses all touchinterests in a game'}
	CMDs[#CMDs + 1] = {NAME = 'simulationradius / simradius', DESC = 'Sets your SimulationRadius to math.huge'}
	CMDs[#CMDs + 1] = {NAME = 'nosimulationradius / nosimradius', DESC = 'Turns off the SimulationRadius loop and restores values to default'}
	CMDs[#CMDs + 1] = {NAME = 'tpunanchored / tpua [plr]', DESC = 'Teleports unanchored parts to a player'}
	CMDs[#CMDs + 1] = {NAME = 'freezeunanchored / freezeua', DESC = 'Freezes unanchored parts'}
	CMDs[#CMDs + 1] = {NAME = 'thawunanchored / thawua / unfreezeua', DESC = 'Thaws unanchored parts'}
	CMDs[#CMDs + 1] = {NAME = 'removeterrain / rterrain / noterrain', DESC = 'Removes all terrain'}
	CMDs[#CMDs + 1] = {NAME = 'clearnilinstances / nonilinstances / cni', DESC = 'Removes nil instances'}
	CMDs[#CMDs + 1] = {NAME = 'destroyheight / dh [num]', DESC = 'Sets FallenPartsDestroyHeight'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'fullbright / fb (CLIENT)', DESC = 'Makes the map brighter / more visible'}
	CMDs[#CMDs + 1] = {NAME = 'loopfullbright / loopfb (CLIENT)', DESC = 'Makes the map brighter / more visible but looped'}
	CMDs[#CMDs + 1] = {NAME = 'ambient [num] [num] [num] (CLIENT)', DESC = 'Changes ambient'}
	CMDs[#CMDs + 1] = {NAME = 'day (CLIENT)', DESC = 'Changes the time to day for the client'}
	CMDs[#CMDs + 1] = {NAME = 'night (CLIENT)', DESC = 'Changes the time to night for the client'}
	CMDs[#CMDs + 1] = {NAME = 'nofog (CLIENT)', DESC = 'Removes fog'}
	CMDs[#CMDs + 1] = {NAME = 'brightness [num] (CLIENT)', DESC = 'Changes the brightness lighting property'}
	CMDs[#CMDs + 1] = {NAME = 'globalshadows / gshadows (CLIENT)', DESC = 'Enables global shadows'}
	CMDs[#CMDs + 1] = {NAME = 'noglobalshadows / nogshadows (CLIENT)', DESC = 'Disables global shadows'}
	CMDs[#CMDs + 1] = {NAME = 'restorelighting / rlighting', DESC = 'Restores Lighting properties'}
	CMDs[#CMDs + 1] = {NAME = 'light [radius] [brightness] (CLIENT)', DESC = 'Gives your player dynamic light'}
	CMDs[#CMDs + 1] = {NAME = 'nolight / unlight', DESC = 'Removes dynamic light from your player'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'inspect / examine [plr]', DESC = 'Opens InspectMenu for a certain player'}
	CMDs[#CMDs + 1] = {NAME = 'age [plr]', DESC = 'Tells you the age of a player'}
	CMDs[#CMDs + 1] = {NAME = 'chatage [plr]', DESC = 'Chats the age of a player'}
	CMDs[#CMDs + 1] = {NAME = 'joindate / jd [plr]', DESC = 'Tells you the date the player joined Roblox'}
	CMDs[#CMDs + 1] = {NAME = 'chatjoindate / cjd [plr]', DESC = 'Chats the date the player joined Roblox'}
	CMDs[#CMDs + 1] = {NAME = 'copyname / copyuser [plr]', DESC = 'Copies a players full username to your clipboard'}
	CMDs[#CMDs + 1] = {NAME = 'userid / id [plr]', DESC = 'Notifies a players user ID'}
	CMDs[#CMDs + 1] = {NAME = 'copyuserid / copyid [plr]', DESC = 'Copies a players user ID to your clipboard'}
	CMDs[#CMDs + 1] = {NAME = 'appearanceid / aid [plr]', DESC = 'Notifies a players appearance ID'}
	CMDs[#CMDs + 1] = {NAME = 'copyappearanceid / caid [plr]', DESC = 'Copies a players appearance ID to your clipboard'}
	CMDs[#CMDs + 1] = {NAME = 'bang [plr] [speed]', DESC = 'owo'}
	CMDs[#CMDs + 1] = {NAME = 'unbang', DESC = 'uwu'}
	CMDs[#CMDs + 1] = {NAME = 'carpet [plr]', DESC = 'Be someones carpet'}
	CMDs[#CMDs + 1] = {NAME = 'uncarpet', DESC = 'Undoes carpet'}
	CMDs[#CMDs + 1] = {NAME = 'friend [plr]', DESC = 'Sends a friend request to certain players'}
	CMDs[#CMDs + 1] = {NAME = 'unfriend [plr]', DESC = 'Unfriends certain players'}
	CMDs[#CMDs + 1] = {NAME = 'headsit [plr]', DESC = 'Sit on a players head'}
	CMDs[#CMDs + 1] = {NAME = 'walkto / follow [plr]', DESC = 'Follow a player'}
	CMDs[#CMDs + 1] = {NAME = 'pathfindwalkto / pathfindfollow [plr]', DESC = 'Follow a player using pathfinding'}
	CMDs[#CMDs + 1] = {NAME = 'unwalkto / unfollow', DESC = 'Stops following a player'}
	CMDs[#CMDs + 1] = {NAME = 'stareat / stare [plr]', DESC = 'Stare / look at a player'}
	CMDs[#CMDs + 1] = {NAME = 'unstareat / unstare [plr]', DESC = 'Disables stareat'}
	CMDs[#CMDs + 1] = {NAME = 'attach [plr] (TOOL)', DESC = 'Attaches you to a player (YOU NEED A TOOL)'}
	CMDs[#CMDs + 1] = {NAME = 'kill [plr] (TOOL)', DESC = 'Kills a player (YOU NEED A TOOL)'}
	CMDs[#CMDs + 1] = {NAME = 'fastkill [plr] (TOOL)', DESC = 'Kills a player (less reliable) (YOU NEED A TOOL)'}
	CMDs[#CMDs + 1] = {NAME = 'handlekill / hkill [plr] (TOOL)', DESC = 'Kills a player using tool damage (YOU NEED A TOOL)'}
	CMDs[#CMDs + 1] = {NAME = 'bring [plr] (TOOL)', DESC = 'Brings a player (YOU NEED A TOOL)'}
	CMDs[#CMDs + 1] = {NAME = 'fastbring [plr] (TOOL)', DESC = 'Brings a player (less reliable) (YOU NEED A TOOL)'}
	CMDs[#CMDs + 1] = {NAME = 'teleport / tp [plr] [plr] (TOOL)', DESC = 'Teleports a player to another player (YOU NEED A TOOL)'}
	CMDs[#CMDs + 1] = {NAME = 'fastteleport / fasttp [plr] [plr] (TOOL)', DESC = 'Teleports a player to another player (less reliable) (YOU NEED A TOOL)'}
	CMDs[#CMDs + 1] = {NAME = 'fling', DESC = 'Flings anyone you touch'}
	CMDs[#CMDs + 1] = {NAME = 'unfling', DESC = 'Disables the fling command'}
	CMDs[#CMDs + 1] = {NAME = 'invisfling', DESC = 'Enables invisible fling'}
	CMDs[#CMDs + 1] = {NAME = 'loopoof', DESC = 'Loops everyones character sounds (everyone can hear)'}
	CMDs[#CMDs + 1] = {NAME = 'unloopoof', DESC = 'Stops the oof chaos'}
	CMDs[#CMDs + 1] = {NAME = 'muteboombox [plr]', DESC = 'Mutes someones boombox'}
	CMDs[#CMDs + 1] = {NAME = 'unmuteboombox [plr]', DESC = 'Unmutes someones boombox'}
	CMDs[#CMDs + 1] = {NAME = 'unloopoof', DESC = 'Stops the oof chaos'}
	CMDs[#CMDs + 1] = {NAME = 'hitbox [plr] [size]', DESC = 'Expands the hitbox for players heads (default is 1)'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'reset', DESC = 'Resets your character normally'}
	CMDs[#CMDs + 1] = {NAME = 'respawn', DESC = 'Respawns you'}
	CMDs[#CMDs + 1] = {NAME = 'refresh / re', DESC = 'Respawns and brings you back to the same position'}
	CMDs[#CMDs + 1] = {NAME = 'god', DESC = 'Makes your character difficult to kill in most games'}
	CMDs[#CMDs + 1] = {NAME = 'invisible / invis', DESC = 'Makes you invisible to other players'}
	CMDs[#CMDs + 1] = {NAME = 'visible / vis', DESC = 'Makes you visible to other players'}
	CMDs[#CMDs + 1] = {NAME = 'toolinvisible / toolinvis / tinvis', DESC = 'Makes you invisible to other players and able to use tools'}
	CMDs[#CMDs + 1] = {NAME = 'speed / ws [num]', DESC = 'Change your walkspeed'}
	CMDs[#CMDs + 1] = {NAME = 'loopspeed / loopws [num]', DESC = 'Loops your walkspeed'}
	CMDs[#CMDs + 1] = {NAME = 'unloopspeed / unloopws', DESC = 'Turns off loopspeed'}
	CMDs[#CMDs + 1] = {NAME = 'hipheight / hheight [num]', DESC = 'Adjusts hip height'}
	CMDs[#CMDs + 1] = {NAME = 'jumppower / jpower / jp [num]', DESC = 'Change a players jump height'}
	CMDs[#CMDs + 1] = {NAME = 'loopjumppower / loopjp [num]', DESC = 'Loops your jump height'}
	CMDs[#CMDs + 1] = {NAME = 'unloopjumppower / unloopjp [num]', DESC = 'Turns off loopjumppower'}
	CMDs[#CMDs + 1] = {NAME = 'maxslopeangle / msa [num]', DESC = 'Adjusts MaxSlopeAngle'}
	CMDs[#CMDs + 1] = {NAME = 'gravity / grav [num] (CLIENT)', DESC = 'Change your gravity'}
	CMDs[#CMDs + 1] = {NAME = 'sit', DESC = 'Makes your character sit'}
	CMDs[#CMDs + 1] = {NAME = 'sitwalk', DESC = 'Makes your character sit while still being able to walk'}
	CMDs[#CMDs + 1] = {NAME = 'nosit', DESC = 'Prevents your character from sitting'}
	CMDs[#CMDs + 1] = {NAME = 'unnosit', DESC = 'Disables nosit'}
	CMDs[#CMDs + 1] = {NAME = 'jump', DESC = 'Makes your character jump'}
	CMDs[#CMDs + 1] = {NAME = 'infinitejump / infjump', DESC = 'Allows you to jump before hitting the ground'}
	CMDs[#CMDs + 1] = {NAME = 'uninfinitejump / uninfjump', DESC = 'Disables infjump'}
	CMDs[#CMDs + 1] = {NAME = 'flyjump', DESC = 'Allows you to hold space to fly up'}
	CMDs[#CMDs + 1] = {NAME = 'unflyjump', DESC = 'Disables flyjump'}
	CMDs[#CMDs + 1] = {NAME = 'autojump / ajump', DESC = 'Automatically jumps when you run into an object'}
	CMDs[#CMDs + 1] = {NAME = 'unautojump / unajump', DESC = 'Disables autojump'}
	CMDs[#CMDs + 1] = {NAME = 'edgejump / ejump', DESC = 'Automatically jumps when you get to the edge of an object'}
	CMDs[#CMDs + 1] = {NAME = 'unedgejump / unejump', DESC = 'Disables edgejump'}
	CMDs[#CMDs + 1] = {NAME = 'platformstand / stun', DESC = 'Enables PlatformStand'}
	CMDs[#CMDs + 1] = {NAME = 'unplatformstand / unstun', DESC = 'Disables PlatformStand'}
	CMDs[#CMDs + 1] = {NAME = 'norotate / noautorotate', DESC = 'Disables AutoRotate'}
	CMDs[#CMDs + 1] = {NAME = 'unnorotate / autorotate', DESC = 'Enables AutoRotate'}
	CMDs[#CMDs + 1] = {NAME = 'enablestate [StateType]', DESC = 'Enables a humanoid state type'}
	CMDs[#CMDs + 1] = {NAME = 'disablestate [StateType]', DESC = 'Disables a humanoid state type'}
	CMDs[#CMDs + 1] = {NAME = 'team [team name] (CLIENT)', DESC = 'Changes your team. Sometimes fools localscripts.'}
	CMDs[#CMDs + 1] = {NAME = 'nobillboardgui / nobgui / noname', DESC = 'Removes billboard and surface guis from your players (i.e. name guis at cafes)'}
	CMDs[#CMDs + 1] = {NAME = 'loopnobgui / loopnoname', DESC = 'Loop removes billboard and surface guis from your players (i.e. name guis at cafes)'}
	CMDs[#CMDs + 1] = {NAME = 'unloopnobgui / unloopnoname', DESC = 'Disables loopnobgui'}
	CMDs[#CMDs + 1] = {NAME = 'nohead / headless', DESC = 'Removes your head (uses simulation radius)'}
	CMDs[#CMDs + 1] = {NAME = 'noarms', DESC = 'Removes your arms'}
	CMDs[#CMDs + 1] = {NAME = 'nolegs', DESC = 'Removes your legs'}
	CMDs[#CMDs + 1] = {NAME = 'nolimbs', DESC = 'Removes your limbs'}
	CMDs[#CMDs + 1] = {NAME = 'naked', DESC = 'Removes your clothing'}
	CMDs[#CMDs + 1] = {NAME = 'noface / removeface', DESC = 'Removes your face'}
	CMDs[#CMDs + 1] = {NAME = 'blockhead', DESC = 'Turns your head into a block'}
	CMDs[#CMDs + 1] = {NAME = 'blockhats', DESC = 'Turns your hats into blocks'}
	CMDs[#CMDs + 1] = {NAME = 'blocktool', DESC = 'Turns the currently selected tool into a block'}
	CMDs[#CMDs + 1] = {NAME = 'creeper', DESC = 'Makes you look like a creeper'}
	CMDs[#CMDs + 1] = {NAME = 'drophats', DESC = 'Drops your hats'}
	CMDs[#CMDs + 1] = {NAME = 'nohats / deletehats / rhats', DESC = 'Deletes your hats'}
	CMDs[#CMDs + 1] = {NAME = 'hatspin / spinhats', DESC = 'Spins your characters accessories'}
	CMDs[#CMDs + 1] = {NAME = 'unhatspin / unspinhats', DESC = 'Undoes spinhats'}
	CMDs[#CMDs + 1] = {NAME = 'clearhats / cleanhats', DESC = 'Clears hats in the workspace'}
	CMDs[#CMDs + 1] = {NAME = 'chardelete / cd [instance name]', DESC = 'Removes any part with a certain name from your character'}
	CMDs[#CMDs + 1] = {NAME = 'chardeleteclass / cdc [class name]', DESC = 'Removes any part with a certain classname from your character'}
	CMDs[#CMDs + 1] = {NAME = 'deletevelocity / dv / removeforces', DESC = 'Removes any velocity / force instances in your character'}
	CMDs[#CMDs + 1] = {NAME = 'weaken [num]', DESC = 'Makes your character less dense'}
	CMDs[#CMDs + 1] = {NAME = 'unweaken', DESC = 'Sets your characters CustomPhysicalProperties to default'}
	CMDs[#CMDs + 1] = {NAME = 'strengthen [num]', DESC = 'Makes your character more dense (CustomPhysicalProperties)'}
	CMDs[#CMDs + 1] = {NAME = 'unstrengthen', DESC = 'Sets your characters CustomPhysicalProperties to default'}
	CMDs[#CMDs + 1] = {NAME = 'breakvelocity', DESC = 'Sets your characters velocity to 0'}
	CMDs[#CMDs + 1] = {NAME = 'spin [speed]', DESC = 'Spins your character'}
	CMDs[#CMDs + 1] = {NAME = 'unspin', DESC = 'Disables spin'}
	CMDs[#CMDs + 1] = {NAME = 'split', DESC = 'Splits your character in half'}
	CMDs[#CMDs + 1] = {NAME = 'nilchar', DESC = 'Sets your characters parent to nil'}
	CMDs[#CMDs + 1] = {NAME = 'unnilchar / nonilchar', DESC = 'Sets your characters parent to workspace'}
	CMDs[#CMDs + 1] = {NAME = 'noroot / removeroot / rroot', DESC = 'Removes your characters HumanoidRootPart'}
	CMDs[#CMDs + 1] = {NAME = 'replaceroot', DESC = 'Replaces your characters HumanoidRootPart'}
	CMDs[#CMDs + 1] = {NAME = 'clearcharappearance / clearchar / clrchar', DESC = 'Removes all accessory, shirt, pants, charactermesh, and bodycolors'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'animation / anim [ID] [speed]', DESC = 'Makes your character perform an animation (must be by roblox to replicate)'}
	CMDs[#CMDs + 1] = {NAME = 'dance', DESC = 'Makes you  d a n c e'}
	CMDs[#CMDs + 1] = {NAME = 'undance', DESC = 'Stops dance animations'}
	CMDs[#CMDs + 1] = {NAME = 'spasm', DESC = 'Makes you  c r a z y'}
	CMDs[#CMDs + 1] = {NAME = 'unspasm', DESC = 'Stops spasm'}
	CMDs[#CMDs + 1] = {NAME = 'headthrow', DESC = 'Simply makes you throw your head'}
	CMDs[#CMDs + 1] = {NAME = 'noanim', DESC = 'Disables your animations'}
	CMDs[#CMDs + 1] = {NAME = 'reanim', DESC = 'Restores your animations'}
	CMDs[#CMDs + 1] = {NAME = 'animspeed [num]', DESC = 'Changes the speed of your current animation'}
	CMDs[#CMDs + 1] = {NAME = 'copyanimation / copyanim / copyemote [plr]', DESC = 'Copies someone elses animation'}
	CMDs[#CMDs + 1] = {NAME = 'loopanimation / loopanim', DESC = 'Loops your current animation'}
	CMDs[#CMDs + 1] = {NAME = 'stopanimations / stopanims', DESC = 'Stops running animations'}
	CMDs[#CMDs + 1] = {NAME = 'refreshanimations / refreshanims / reanim', DESC = 'Refreshes animations'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'autoclick [click delay] [release delay]', DESC = 'Automatically clicks your mouse with a set delay'}
	CMDs[#CMDs + 1] = {NAME = 'unautoclick / noautoclick', DESC = 'Turns off autoclick'}
	CMDs[#CMDs + 1] = {NAME = 'autokeypress [key] [down delay] [up delay]', DESC = 'Automatically presses a key with a set delay'}
	CMDs[#CMDs + 1] = {NAME = 'unautokeypress', DESC = 'Stops autokeypress'}
	CMDs[#CMDs + 1] = {NAME = 'hovername', DESC = 'Shows a players username when your mouse is hovered over them'}
	CMDs[#CMDs + 1] = {NAME = 'unhovername / nohovername', DESC = 'Turns off hovername'}
	CMDs[#CMDs + 1] = {NAME = 'mousesensitivity / ms [0-10]', DESC = 'Sets your mouse sensitivity (affects first person and right click drag) (default is 1)'}
	CMDs[#CMDs + 1] = {NAME = 'clickdelete', DESC = 'Go to settings>Keybinds>Add for clicktp'}
	CMDs[#CMDs + 1] = {NAME = 'clickteleport', DESC = 'Go to settings>Keybinds>Add for click tp'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'tools', DESC = 'Copies tools from ReplicatedStorage and Lighting'}
	CMDs[#CMDs + 1] = {NAME = 'notools / removetools / deletetools', DESC = 'Removes tools from character and backpack'}
	CMDs[#CMDs + 1] = {NAME = 'deleteselectedtool / dst', DESC = 'Removes any currently selected tools'}
	CMDs[#CMDs + 1] = {NAME = 'grabtools', DESC = 'Automatically get tools that are dropped'}
	CMDs[#CMDs + 1] = {NAME = 'ungrabtools / nograbtools', DESC = 'Disables grabtools'}
	CMDs[#CMDs + 1] = {NAME = 'copytools [plr] (CLIENT)', DESC = 'Copies a players tools'}
	CMDs[#CMDs + 1] = {NAME = 'dupetools / clonetools [num]', DESC = 'Duplicates your inventory tools a set ammount of times'}
	CMDs[#CMDs + 1] = {NAME = 'droptools', DESC = 'Drops your tools'}
	CMDs[#CMDs + 1] = {NAME = 'droppabletools', DESC = 'Makes your tools droppable'}
	CMDs[#CMDs + 1] = {NAME = 'equiptools', DESC = 'Equips every tool in your inventory at once'}
	CMDs[#CMDs + 1] = {NAME = 'reach [num]', DESC = 'Increases the hitbox of your held tool'}
	CMDs[#CMDs + 1] = {NAME = 'unreach / noreach', DESC = 'Turns off reach'}
	CMDs[#CMDs + 1] = {NAME = 'grippos [X Y Z]', DESC = 'Changes your current tools grip position'}
	CMDs[#CMDs + 1] = {NAME = 'usetools [ammount] [delay]', DESC = 'Activates all tools in your backpack at the same time'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'addalias [cmd] [alias]', DESC = 'Adds an alias to a command'}
	CMDs[#CMDs + 1] = {NAME = 'removealias [alias]', DESC = 'Removes a custom alias'}
	CMDs[#CMDs + 1] = {NAME = 'clraliases', DESC = 'Removes all custom aliases'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'addplugin / plugin [name]', DESC = 'Add a plugin via command'}
	CMDs[#CMDs + 1] = {NAME = 'removeplugin / deleteplugin [name]', DESC = 'Remove a plugin via command'}
	CMDs[#CMDs + 1] = {NAME = 'reloadplugin [name]', DESC = 'Reloads a plugin'}
	CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
	CMDs[#CMDs + 1] = {NAME = 'breakloops / break (cmd loops)', DESC = 'Stops any cmd loops (;100^1^cmd)'}
	CMDs[#CMDs + 1] = {NAME = 'removecmd / deletecmd', DESC = 'Removes a command until the admin is reloaded'}
	CMDs[#CMDs + 1] = {NAME = 'tpwalk / teleportwalk', DESC = 'Teleports you to your move direction'}
	CMDs[#CMDs + 1] = {NAME = 'untpwalk / unteleportwalk', DESC = 'Undoes tpwalk / teleportwalk'}
	wait()

	for i = 1, #CMDs do
		local newcmd = Example:Clone()
		newcmd.Parent = CMDsF
		newcmd.Visible = false
		newcmd.Text = CMDs[i].NAME
		newcmd.Name = 'CMD'
		table.insert(text1,newcmd)
		if CMDs[i].DESC ~= '' then
			local title = Instance.new("StringValue")
			title.Name = "Title"
			title.Parent = newcmd
			title.Value = CMDs[i].NAME
			local desc = Instance.new("StringValue")
			desc.Name = "Desc"
			desc.Parent = newcmd
			desc.Value = CMDs[i].DESC
			newcmd.MouseButton1Down:Connect(function()
				if newcmd.Visible and newcmd.TextTransparency == 0 then
					local currentText = Cmdbar.Text
					Cmdbar:CaptureFocus()
					autoComplete(newcmd.Text,currentText)
					maximizeHolder()
				end
			end)
		end
	end

	IndexContents('',true)

	function getText(object)
		if object ~= nil then
			if object:FindFirstChild('Desc') ~= nil then
				return {object.Desc.Value, object:FindFirstChild('Title')}
			elseif object.Parent:FindFirstChild('Desc') ~= nil then
				return {object.Parent.Desc.Value, object.Parent:FindFirstChild('Title')}
			end
		end
		return nil
	end

	function checkTT()
		local t
		local guisAtPosition = COREGUI:GetGuiObjectsAtPosition(IYMouse.X, IYMouse.Y)

		for _, gui in pairs(guisAtPosition) do
			if gui.Parent == CMDsF then
				t = gui
			end
		end

		if t ~= nil then
			local gt = getText(t)
			if gt ~= nil then
				local x = IYMouse.X
				local y = IYMouse.Y
				local xP
				local yP
				if IYMouse.X > 200 then
					xP = x - 201
				else
					xP = x + 21
				end
				if IYMouse.Y > (IYMouse.ViewSizeY-96) then
					yP = y - 97
				else
					yP = y
				end
				Tooltip.Position = UDim2.new(0, xP, 0, yP)
				Description.Text = gt[1]
				if gt[2] ~= nil then
					Title_3.Text = gt[2].Value
				else
					Title_3.Text = ''
				end
				Tooltip.Visible = true
			else
				Tooltip.Visible = false
			end
		else
			Tooltip.Visible = false
		end
	end

	function FindInTable(tbl,val)
		if tbl == nil then return false end
		for _,v in pairs(tbl) do
			if v == val then return true end
		end 
		return false
	end

	function GetInTable(Table, Name)
		for i = 1, #Table do
			if Table[i] == Name then
				return i
			end
		end
		return false
	end

	function respawn(plr)
		if invisRunning then TurnVisible() end
		local char = plr.Character
		if char:FindFirstChildOfClass("Humanoid") then char:FindFirstChildOfClass("Humanoid"):ChangeState(15) end
		char:ClearAllChildren()
		local newChar = Instance.new("Model")
		newChar.Parent = workspace
		plr.Character = newChar
		wait()
		plr.Character = char
		newChar:Destroy()
	end

	local refreshCmd = false
	function refresh(plr)
		refreshCmd = true
		local Human = plr.Character and plr.Character:FindFirstChildOfClass("Humanoid", true)
		local pos = Human and Human.RootPart and Human.RootPart.CFrame
		local pos1 = workspace.CurrentCamera.CFrame
		respawn(plr)
		spawn(function()
			plr.CharacterAdded:Wait():WaitForChild("Humanoid").RootPart.CFrame, workspace.CurrentCamera.CFrame = pos, wait() and pos1
			refreshCmd = false
		end)
	end

	local lastDeath

	function onDied()
		spawn(function()
			if pcall(function() Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') end) and Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
				Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').Died:Connect(function()
					if getRoot(Players.LocalPlayer.Character) then
						lastDeath = getRoot(Players.LocalPlayer.Character).CFrame
					end
				end)
			else
				wait(2)
				onDied()
			end
		end)
	end

	Clip = true
	spDelay = 0.1
	Players.LocalPlayer.CharacterAdded:Connect(function()
		NOFLY()
		Floating = false

		if not Clip then
			execCmd('clip nonotify')
		end

		repeat wait() until getRoot(Players.LocalPlayer.Character)

		pcall(function()
			if spawnpoint and not refreshCmd and spawnpos ~= nil then
				wait(spDelay)
				getRoot(Players.LocalPlayer.Character).CFrame = spawnpos
			end
		end)

		onDied()
	end)

	onDied()

	function getstring(begin)
		local start = begin-1
		local AA = '' for i,v in pairs(cargs) do
			if i > start then
				if AA ~= '' then
					AA = AA .. ' ' .. v
				else
					AA = AA .. v
				end
			end
		end
		return AA
	end

	findCmd=function(cmd_name)
		for i,v in pairs(cmds)do
			if v.NAME:lower()==cmd_name:lower() or FindInTable(v.ALIAS,cmd_name:lower()) then
				return v
			end
		end
		return customAlias[cmd_name:lower()]
	end

	function splitString(str,delim)
		local broken = {}
		if delim == nil then delim = "," end
		for w in string.gmatch(str,"[^"..delim.."]+") do
			table.insert(broken,w)
		end
		return broken
	end

	cmdHistory = {}
	local lastCmds = {}
	local historyCount = 0
	local split=" "
	local lastBreakTime = 0
	function execCmd(cmdStr,speaker,store)
		cmdStr = cmdStr:gsub("%s+$","")
		spawn(function()
			local rawCmdStr = cmdStr
			cmdStr = string.gsub(cmdStr,"\\\\","%%BackSlash%%")
			local commandsToRun = splitString(cmdStr,"\\")
			for i,v in pairs(commandsToRun) do
				v = string.gsub(v,"%%BackSlash%%","\\")
				local x,y,num = v:find("^(%d+)%^")
				local cmdDelay = 0
				local infTimes = false
				if num then
					v = v:sub(y+1)
					local x,y,del = v:find("^([%d%.]+)%^")
					if del then
						v = v:sub(y+1)
						cmdDelay = tonumber(del) or 0
					end
				else
					local x,y = v:find("^inf%^")
					if x then
						infTimes = true
						v = v:sub(y+1)
						local x,y,del = v:find("^([%d%.]+)%^")
						if del then
							v = v:sub(y+1)
							del = tonumber(del) or 1
							cmdDelay = (del > 0 and del or 1)
						else
							cmdDelay = 1
						end
					end
				end
				num = tonumber(num or 1)

				if v:sub(1,1) == "!" then
					local chunks = splitString(v:sub(2),split)
					if chunks[1] and lastCmds[chunks[1]] then v = lastCmds[chunks[1]] end
				end

				local args = splitString(v,split)
				local cmdName = args[1]
				local cmd = findCmd(cmdName)
				if cmd then
					table.remove(args,1)
					cargs = args
					if not speaker then speaker = Players.LocalPlayer end
					if store then
						if speaker == Players.LocalPlayer then
							if cmdHistory[1] ~= rawCmdStr and rawCmdStr:sub(1,11) ~= 'lastcommand' and rawCmdStr:sub(1,7) ~= 'lastcmd' then
								table.insert(cmdHistory,1,rawCmdStr)
							end
						end
						if #cmdHistory > 30 then table.remove(cmdHistory) end

						lastCmds[cmdName] = v
					end
					local cmdStartTime = tick()
					if infTimes then
						while lastBreakTime < cmdStartTime do
							local success,err = pcall(cmd.FUNC,args, speaker)
							if not success and _G.IY_DEBUG then
								warn("Command Error:", cmdName, err)
							end
							wait(cmdDelay)
						end
					else
						for rep = 1,num do
							if lastBreakTime > cmdStartTime then break end
							local success,err = pcall(function()
								cmd.FUNC(args, speaker)
							end)
							if not success and _G.IY_DEBUG then
								warn("Command Error:", cmdName, err)
							end
							if cmdDelay ~= 0 then wait(cmdDelay) end
						end
					end
				end
			end
		end)
	end	

	function addcmd(name,alias,func,plgn)
		cmds[#cmds+1]=
			{
				NAME=name;
				ALIAS=alias or {};
				FUNC=func;
				PLUGIN=plgn;
			}
	end

	function removecmd(cmd)
		if cmd ~= " " then
			for i = #cmds,1,-1 do
				if cmds[i].NAME == cmd or FindInTable(cmds[i].ALIAS,cmd) then
					table.remove(cmds, i)
					for a,c in pairs(CMDsF:GetChildren()) do
						if string.find(c.Text, "^"..cmd.."$") or string.find(c.Text, "^"..cmd.." ") or string.find(c.Text, " "..cmd.."$") or string.find(c.Text, " "..cmd.." ") then
							c.TextTransparency = 0.7
							c.MouseButton1Click:Connect(function()
								notify(c.Text, "Command has been disabled by you or a plugin")
							end)
						end
					end
				end
			end
		end
	end

	function addbind(cmd,key,iskeyup)
		binds[#binds+1]=
			{
				COMMAND=cmd;
				KEY=key;
				ISKEYUP=iskeyup;
			}
	end

	function addcmdtext(text,name,desc)
		local newcmd = Example:Clone()
		local tooltipText = tostring(text)
		local tooltipDesc = tostring(desc)
		newcmd.Parent = CMDsF
		newcmd.Visible = false
		newcmd.Text = text
		newcmd.Name = 'PLUGIN_'..name
		table.insert(text1,newcmd)
		if desc and desc ~= '' then
			local title = Instance.new("StringValue")
			title.Name = "Title"
			title.Parent = newcmd
			title.Value = tooltipText
			local desc = Instance.new("StringValue")
			desc.Name = "Desc"
			desc.Parent = newcmd
			desc.Value = tooltipDesc
			newcmd.MouseButton1Down:Connect(function()
				if newcmd.Visible and newcmd.TextTransparency == 0 then
					Cmdbar:CaptureFocus()
					autoComplete(newcmd.Text)
					maximizeHolder()
				end
			end)
		end
	end

	SpecialPlayerCases = {
		["all"] = function(speaker)return Players:GetPlayers() end,
		["others"] = function(speaker)
			local plrs = {}
			for i,v in pairs(Players:GetPlayers()) do
				if v ~= speaker then
					table.insert(plrs,v)
				end
			end
			return plrs
		end,
		["me"] = function(speaker)return {speaker} end,
		["#(%d+)"] = function(speaker,args,currentList)
			local returns = {}
			local randAmount = tonumber(args[1])
			local players = {unpack(currentList)}
			for i = 1,randAmount do
				if #players == 0 then break end
				local randIndex = math.random(1,#players)
				table.insert(returns,players[randIndex])
				table.remove(players,randIndex)
			end
			return returns
		end,
		["random"] = function(speaker,args,currentList)
			local players = currentList
			return {players[math.random(1,#players)]}
		end,
		["%%(.+)"] = function(speaker,args)
			local returns = {}
			local team = args[1]
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.Team and string.sub(string.lower(plr.Team.Name),1,#team) == string.lower(team) then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["allies"] = function(speaker)
			local returns = {}
			local team = speaker.Team
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.Team == team then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["enemies"] = function(speaker)
			local returns = {}
			local team = speaker.Team
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.Team ~= team then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["team"] = function(speaker)
			local returns = {}
			local team = speaker.Team
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.Team == team then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["nonteam"] = function(speaker)
			local returns = {}
			local team = speaker.Team
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.Team ~= team then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["friends"] = function(speaker,args)
			local returns = {}
			for _,plr in pairs(Players:GetPlayers()) do
				if plr:IsFriendsWith(speaker.UserId) and plr ~= speaker then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["nonfriends"] = function(speaker,args)
			local returns = {}
			for _,plr in pairs(Players:GetPlayers()) do
				if not plr:IsFriendsWith(speaker.UserId) and plr ~= speaker then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["guests"] = function(speaker,args)
			local returns = {}
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.Guest then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["bacons"] = function(speaker,args)
			local returns = {}
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.Character:FindFirstChild('Pal Hair') or plr.Character:FindFirstChild('Kate Hair') then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["age(%d+)"] = function(speaker,args)
			local returns = {}
			local age = tonumber(args[1])
			if not age == nil then return end
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.AccountAge <= age then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["nearest"] = function(speaker,args,currentList)
			local speakerChar = speaker.Character
			if not speakerChar or not getRoot(speakerChar) then return end
			local lowest = math.huge
			local NearestPlayer = nil
			for _,plr in pairs(currentList) do
				if plr ~= speaker and plr.Character then
					local distance = plr:DistanceFromCharacter(getRoot(speakerChar).Position)
					if distance < lowest then
						lowest = distance
						NearestPlayer = {plr}
					end
				end
			end
			return NearestPlayer
		end,
		["farthest"] = function(speaker,args,currentList)
			local speakerChar = speaker.Character
			if not speakerChar or not getRoot(speakerChar) then return end
			local highest = 0
			local Farthest = nil
			for _,plr in pairs(currentList) do
				if plr ~= speaker and plr.Character then
					local distance = plr:DistanceFromCharacter(getRoot(speakerChar).Position)
					if distance > highest then
						highest = distance
						Farthest = {plr}
					end
				end
			end
			return Farthest
		end,
		["group(%d+)"] = function(speaker,args)
			local returns = {}
			local groupID = tonumber(args[1])
			for _,plr in pairs(Players:GetPlayers()) do
				if plr:IsInGroup(groupID) then  
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["alive"] = function(speaker,args)
			local returns = {}
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.Character and plr.Character:FindFirstChildOfClass("Humanoid") and plr.Character:FindFirstChildOfClass("Humanoid").Health > 0 then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["dead"] = function(speaker,args)
			local returns = {}
			for _,plr in pairs(Players:GetPlayers()) do
				if (not plr.Character or not plr.Character:FindFirstChildOfClass("Humanoid")) or plr.Character:FindFirstChildOfClass("Humanoid").Health <= 0 then
					table.insert(returns,plr)
				end
			end
			return returns
		end,
		["rad(%d+)"] = function(speaker,args)
			local returns = {}
			local radius = tonumber(args[1])
			local speakerChar = speaker.Character
			if not speakerChar or not getRoot(speakerChar) then return end
			for _,plr in pairs(Players:GetPlayers()) do
				if plr.Character and getRoot(plr.Character) then
					local magnitude = (getRoot(plr.Character).Position-getRoot(speakerChar).Position).magnitude
					if magnitude <= radius then table.insert(returns,plr) end
				end
			end
			return returns
		end
	}

	function toTokens(str)
		local tokens = {}
		for op,name in string.gmatch(str,"([+-])([^+-]+)") do
			table.insert(tokens,{Operator = op,Name = name})
		end
		return tokens
	end

	function onlyIncludeInTable(tab,matches)
		local matchTable = {}
		local resultTable = {}
		for i,v in pairs(matches) do matchTable[v.Name] = true end
		for i,v in pairs(tab) do if matchTable[v.Name] then table.insert(resultTable,v) end end
		return resultTable
	end

	function removeTableMatches(tab,matches)
		local matchTable = {}
		local resultTable = {}
		for i,v in pairs(matches) do matchTable[v.Name] = true end
		for i,v in pairs(tab) do if not matchTable[v.Name] then table.insert(resultTable,v) end end
		return resultTable
	end

	function getPlayersByName(name)
		local found = {}
		for i,v in pairs(Players:GetChildren()) do
			if string.sub(string.lower(v.Name),1,#name) == string.lower(name) then
				table.insert(found,v)
			end
		end
		return found
	end

	function getPlayer(list,speaker)
		if list == nil then return {speaker.Name} end
		local nameList = splitString(list,",")

		local foundList = {}

		for _,name in pairs(nameList) do
			if string.sub(name,1,1) ~= "+" and string.sub(name,1,1) ~= "-" then name = "+"..name end
			local tokens = toTokens(name)
			local initialPlayers = Players:GetPlayers()

			for i,v in pairs(tokens) do
				if v.Operator == "+" then
					local tokenContent = v.Name
					local foundCase = false
					for regex,case in pairs(SpecialPlayerCases) do
						local matches = {string.match(tokenContent,"^"..regex.."$")}
						if #matches > 0 then
							foundCase = true
							initialPlayers = onlyIncludeInTable(initialPlayers,case(speaker,matches,initialPlayers))
						end
					end
					if not foundCase then
						initialPlayers = onlyIncludeInTable(initialPlayers,getPlayersByName(tokenContent))
					end
				else
					local tokenContent = v.Name
					local foundCase = false
					for regex,case in pairs(SpecialPlayerCases) do
						local matches = {string.match(tokenContent,"^"..regex.."$")}
						if #matches > 0 then
							foundCase = true
							initialPlayers = removeTableMatches(initialPlayers,case(speaker,matches,initialPlayers))
						end
					end
					if not foundCase then
						initialPlayers = removeTableMatches(initialPlayers,getPlayersByName(tokenContent))
					end
				end
			end

			for i,v in pairs(initialPlayers) do table.insert(foundList,v) end
		end

		local foundNames = {}
		for i,v in pairs(foundList) do table.insert(foundNames,v.Name) end

		return foundNames
	end

	getprfx=function(strn)
		if strn:sub(1,string.len(prefix))==prefix then return{'cmd',string.len(prefix)+1}
		end return
	end

	function do_exec(str, plr)
		str = str:gsub('/e ', '')
		local t = getprfx(str)
		if not t then return end
		str = str:sub(t[2])
		if t[1]=='cmd' then
			execCmd(str, plr, true)
			IndexContents('',true,false,true)
			CMDsF.CanvasPosition = canvasPos
		end
	end

	lastTextBoxString,lastTextBoxCon,lastEnteredString = nil,nil,nil

	UserInputService.TextBoxFocused:Connect(function(obj)
		if lastTextBoxCon then lastTextBoxCon:Disconnect() end
		if obj == Cmdbar then lastTextBoxString = nil return end
		lastTextBoxString = obj.Text
		lastTextBoxCon = obj:GetPropertyChangedSignal("Text"):Connect(function()
			if not (UserInputService:IsKeyDown(Enum.KeyCode.Return) or UserInputService:IsKeyDown(Enum.KeyCode.KeypadEnter)) then
				lastTextBoxString = obj.Text
			end
		end)
	end)

	UserInputService.InputBegan:Connect(function(input,gameProcessed)
		if gameProcessed then
			if Cmdbar and Cmdbar:IsFocused() then
				if input.KeyCode == Enum.KeyCode.Up then
					historyCount = historyCount + 1
					if historyCount > #cmdHistory then historyCount = #cmdHistory end
					Cmdbar.Text = cmdHistory[historyCount] or ""
					Cmdbar.CursorPosition = 1020
				elseif input.KeyCode == Enum.KeyCode.Down then
					historyCount = historyCount - 1
					if historyCount < 0 then historyCount = 0 end
					Cmdbar.Text = cmdHistory[historyCount] or ""
					Cmdbar.CursorPosition = 1020
				end
			elseif input.KeyCode == Enum.KeyCode.Return or input.KeyCode == Enum.KeyCode.KeypadEnter then
				lastEnteredString = lastTextBoxString
			end
		end
	end)

	Players.LocalPlayer.Chatted:Connect(function()
		wait()
		if lastEnteredString then
			local message = lastEnteredString
			lastEnteredString = nil
			do_exec(message, Players.LocalPlayer)
		end
	end)

	Cmdbar.PlaceholderText = "Command Bar ("..prefix..")"
	Cmdbar:GetPropertyChangedSignal("Text"):Connect(function()
		if Cmdbar:IsFocused() then
			IndexContents(Cmdbar.Text,true,true)
		end
	end)

	local tabComplete = nil
	Cmdbar.FocusLost:Connect(function(enterpressed)
		if enterpressed then
			local cmdbarText = Cmdbar.Text:gsub("^"..'%'..prefix,"")
			execCmd(cmdbarText,Players.LocalPlayer,true)
		end
		if tabComplete then tabComplete:Disconnect() end
		wait()
		if not Cmdbar:IsFocused() then
			Cmdbar.Text = ""
			IndexContents('',true,false,true)
			if SettingsOpen == true then
				wait(0.2)
				Settings:TweenPosition(UDim2.new(0, 0, 0, 45), "InOut", "Quart", 0.2, true, nil)
				CMDsF.Visible = false
			end
		end
		CMDsF.CanvasPosition = canvasPos
	end)

	Cmdbar.Focused:Connect(function()
		historyCount = 0
		canvasPos = CMDsF.CanvasPosition
		if SettingsOpen == true then
			wait(0.2)
			CMDsF.Visible = true
			Settings:TweenPosition(UDim2.new(0, 0, 0, 220), "InOut", "Quart", 0.2, true, nil)
		end
		tabComplete = UserInputService.InputBegan:Connect(function(input,gameProcessed)
			if Cmdbar:IsFocused() then
				if input.KeyCode == Enum.KeyCode.Tab and topCommand ~= nil then
					autoComplete(topCommand)
				end
			else
				tabComplete:Disconnect()
			end
		end)
	end)

	ESPenabled = false
	CHMSenabled = false

	function round(num, numDecimalPlaces)
		local mult = 10^(numDecimalPlaces or 0)
		return math.floor(num * mult + 0.5) / mult
	end

	function ESP(plr)
		spawn(function()
			for i,v in pairs(COREGUI:GetChildren()) do
				if v.Name == plr.Name..'_ESP' then
					v:Destroy()
				end
			end
			wait()
			if plr.Character and plr.Name ~= Players.LocalPlayer.Name and not COREGUI:FindFirstChild(plr.Name..'_ESP') then
				local ESPholder = Instance.new("Folder")
				ESPholder.Name = plr.Name..'_ESP'
				ESPholder.Parent = COREGUI
				repeat wait(1) until plr.Character and getRoot(plr.Character) and plr.Character:FindFirstChild('Humanoid')
				for b,n in pairs (plr.Character:GetChildren()) do
					if (n:IsA("BasePart")) then
						local a = Instance.new("BoxHandleAdornment")
						a.Name = plr.Name
						a.Parent = ESPholder
						a.Adornee = n
						a.AlwaysOnTop = true
						a.ZIndex = 10
						a.Size = n.Size
						a.Transparency = 0.3
						a.Color = plr.TeamColor
					end
				end
				if plr.Character and plr.Character:FindFirstChild('Head') then
					local BillboardGui = Instance.new("BillboardGui")
					local TextLabel = Instance.new("TextLabel")
					BillboardGui.Adornee = plr.Character.Head
					BillboardGui.Name = plr.Name
					BillboardGui.Parent = ESPholder
					BillboardGui.Size = UDim2.new(0, 100, 0, 150)
					BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
					BillboardGui.AlwaysOnTop = true
					TextLabel.Parent = BillboardGui
					TextLabel.BackgroundTransparency = 1
					TextLabel.Position = UDim2.new(0, 0, 0, -50)
					TextLabel.Size = UDim2.new(0, 100, 0, 100)
					TextLabel.Font = Enum.Font.SourceSansSemibold
					TextLabel.TextSize = 20
					TextLabel.TextColor3 = Color3.new(1, 1, 1)
					TextLabel.TextStrokeTransparency = 0
					TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
					TextLabel.Text = 'Name: '..plr.Name
					TextLabel.ZIndex = 10
					local espLoopFunc
					local teamChange
					local addedFunc
					addedFunc = plr.CharacterAdded:Connect(function()
						if ESPenabled then
							espLoopFunc:Disconnect()
							teamChange:Disconnect()
							ESPholder:Destroy()
							repeat wait(1) until getRoot(plr.Character) and plr.Character:FindFirstChild('Humanoid')
							ESP(plr)
							addedFunc:Disconnect()
						else
							teamChange:Disconnect()
							addedFunc:Disconnect()
						end
					end)
					teamChange = plr:GetPropertyChangedSignal("TeamColor"):Connect(function()
						if ESPenabled then
							espLoopFunc:Disconnect()
							addedFunc:Disconnect()
							ESPholder:Destroy()
							repeat wait(1) until getRoot(plr.Character) and plr.Character:FindFirstChild('Humanoid')
							ESP(plr)
							teamChange:Disconnect()
						else
							teamChange:Disconnect()
						end
					end)
					local function espLoop()
						if COREGUI:FindFirstChild(plr.Name..'_ESP') then
							if plr.Character and getRoot(plr.Character) and plr.Character:FindFirstChild('Humanoid') and Players.LocalPlayer.Character and getRoot(Players.LocalPlayer.Character) and Players.LocalPlayer.Character:FindFirstChild('Humanoid') then
								local pos = math.floor((getRoot(Players.LocalPlayer.Character).Position - getRoot(plr.Character).Position).magnitude)
								TextLabel.Text = 'Name: '..plr.Name..' | Health: '..round(plr.Character:FindFirstChildOfClass('Humanoid').Health, 1)..' | Studs: '..pos
							end
						else
							teamChange:Disconnect()
							addedFunc:Disconnect()
							espLoopFunc:Disconnect()
						end
					end
					espLoopFunc = game:GetService("RunService").RenderStepped:Connect(espLoop)
				end
			end
		end)
	end

	function CHMS(plr)
		spawn(function()
			for i,v in pairs(COREGUI:GetChildren()) do
				if v.Name == plr.Name..'_CHMS' then
					v:Destroy()
				end
			end
			wait()
			if plr.Character and plr.Name ~= Players.LocalPlayer.Name and not COREGUI:FindFirstChild(plr.Name..'_CHMS') then
				local ESPholder = Instance.new("Folder")
				ESPholder.Name = plr.Name..'_CHMS'
				ESPholder.Parent = COREGUI
				repeat wait(1) until plr.Character and getRoot(plr.Character) and plr.Character:FindFirstChild('Humanoid')
				for b,n in pairs (plr.Character:GetChildren()) do
					if (n:IsA("BasePart")) then
						local a = Instance.new("BoxHandleAdornment")
						a.Name = plr.Name
						a.Parent = ESPholder
						a.Adornee = n
						a.AlwaysOnTop = true
						a.ZIndex = 10
						a.Size = n.Size
						a.Transparency = 0.3
						a.Color = plr.TeamColor
					end
				end
				local addedFunc
				local teamChange
				local CHMSremoved
				addedFunc = plr.CharacterAdded:Connect(function()
					if CHMSenabled then
						ESPholder:Destroy()
						teamChange:Disconnect()
						repeat wait(1) until getRoot(plr.Character) and plr.Character:FindFirstChild('Humanoid')
						CHMS(plr)
						addedFunc:Disconnect()
					else
						teamChange:Disconnect()
						addedFunc:Disconnect()
					end
				end)
				teamChange = plr:GetPropertyChangedSignal("TeamColor"):Connect(function()
					if CHMSenabled then
						ESPholder:Destroy()
						addedFunc:Disconnect()
						repeat wait(1) until getRoot(plr.Character) and plr.Character:FindFirstChild('Humanoid')
						CHMS(plr)
						teamChange:Disconnect()
					else
						teamChange:Disconnect()
					end
				end)
				CHMSremoved = ESPholder.AncestryChanged:Connect(function()
					teamChange:Disconnect()
					addedFunc:Disconnect()
					CHMSremoved:Disconnect()
				end)
			end
		end)
	end

	function Locate(plr)
		spawn(function()
			for i,v in pairs(COREGUI:GetChildren()) do
				if v.Name == plr.Name..'_LC' then
					v:Destroy()
				end
			end
			wait()
			if plr.Character and plr.Name ~= Players.LocalPlayer.Name and not COREGUI:FindFirstChild(plr.Name..'_LC') then
				local ESPholder = Instance.new("Folder")
				ESPholder.Name = plr.Name..'_LC'
				ESPholder.Parent = COREGUI
				repeat wait(1) until plr.Character and getRoot(plr.Character) and plr.Character:FindFirstChild('Humanoid')
				for b,n in pairs (plr.Character:GetChildren()) do
					if (n:IsA("BasePart")) then
						local a = Instance.new("BoxHandleAdornment")
						a.Name = plr.Name
						a.Parent = ESPholder
						a.Adornee = n
						a.AlwaysOnTop = true
						a.ZIndex = 10
						a.Size = n.Size
						a.Transparency = 0.3
						a.Color = plr.TeamColor
					end
				end
				if plr.Character and plr.Character:FindFirstChild('Head') then
					local BillboardGui = Instance.new("BillboardGui")
					local TextLabel = Instance.new("TextLabel")
					BillboardGui.Adornee = plr.Character.Head
					BillboardGui.Name = plr.Name
					BillboardGui.Parent = ESPholder
					BillboardGui.Size = UDim2.new(0, 100, 0, 150)
					BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
					BillboardGui.AlwaysOnTop = true
					TextLabel.Parent = BillboardGui
					TextLabel.BackgroundTransparency = 1
					TextLabel.Position = UDim2.new(0, 0, 0, -50)
					TextLabel.Size = UDim2.new(0, 100, 0, 100)
					TextLabel.Font = Enum.Font.SourceSansSemibold
					TextLabel.TextSize = 20
					TextLabel.TextColor3 = Color3.new(1, 1, 1)
					TextLabel.TextStrokeTransparency = 0
					TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
					TextLabel.Text = 'Name: '..plr.Name
					TextLabel.ZIndex = 10
					local lcLoopFunc
					local addedFunc
					local teamChange
					addedFunc = plr.CharacterAdded:Connect(function()
						if ESPholder ~= nil and ESPholder.Parent ~= nil then
							lcLoopFunc:Disconnect()
							teamChange:Disconnect()
							ESPholder:Destroy()
							repeat wait(1) until getRoot(plr.Character) and plr.Character:FindFirstChild('Humanoid')
							Locate(plr)
							addedFunc:Disconnect()
						else
							teamChange:Disconnect()
							addedFunc:Disconnect()
						end
					end)
					teamChange = plr:GetPropertyChangedSignal("TeamColor"):Connect(function()
						if ESPholder ~= nil and ESPholder.Parent ~= nil then
							lcLoopFunc:Disconnect()
							addedFunc:Disconnect()
							ESPholder:Destroy()
							repeat wait(1) until getRoot(plr.Character) and plr.Character:FindFirstChild('Humanoid')
							Locate(plr)
							teamChange:Disconnect()
						else
							teamChange:Disconnect()
						end
					end)
					local function lcLoop()
						if COREGUI:FindFirstChild(plr.Name..'_LC') then
							if plr.Character and getRoot(plr.Character) and plr.Character:FindFirstChild('Humanoid') and Players.LocalPlayer.Character and getRoot(Players.LocalPlayer.Character) and Players.LocalPlayer.Character:FindFirstChild('Humanoid') then
								local pos = math.floor((getRoot(Players.LocalPlayer.Character).Position - getRoot(plr.Character).Position).magnitude)
								TextLabel.Text = 'Name: '..plr.Name..' | Health: '..round(plr.Character:FindFirstChildOfClass('Humanoid').Health, 1)..' | Studs: '..pos
							end
						else
							teamChange:Disconnect()
							addedFunc:Disconnect()
							lcLoopFunc:Disconnect()
						end
					end
					lcLoopFunc = game:GetService("RunService").RenderStepped:Connect(lcLoop)
				end
			end
		end)
	end

	local bindsGUI = KeybindEditor
	local awaitingInput = false
	local keySelected = false

	function unkeybind(cmd,key)
		for i = #binds,1,-1 do
			if binds[i].COMMAND == cmd and binds[i].KEY == key then
				table.remove(binds, i)
			end
		end
		refreshbinds()
		updatesaves()
		if key == 'RightClick' or key == 'LeftClick' then
			notify('Keybinds Updated','Unbinded '..key..' from '..cmd)
		else
			notify('Keybinds Updated','Unbinded '..key:sub(14)..' from '..cmd)
		end
	end

	function refreshbinds()
		if Holder_2 then
			Holder_2:ClearAllChildren()
			Holder_2.CanvasSize = UDim2.new(0, 0, 0, 10)
			for i = 1, #binds do
				local YSize = 25
				local Position = ((i * YSize) - YSize)
				local newbind = Example_2:Clone()
				newbind.Parent = Holder_2
				newbind.Visible = true
				newbind.Position = UDim2.new(0,0,0, Position + 5)
				table.insert(shade2,newbind)
				table.insert(shade2,newbind.Text)
				table.insert(text1,newbind.Text)
				table.insert(shade3,newbind.Text.Delete)
				table.insert(text2,newbind.Text.Delete)
				local input = tostring(binds[i].KEY)
				local key
				if input == 'RightClick' or input == 'LeftClick' then
					key = input
				else
					key = input:sub(14)
				end
				newbind.Text.Text = key.." > "..binds[i].COMMAND.."  "..(binds[i].ISKEYUP and "(keyup)" or "(keydown)")
				Holder_2.CanvasSize = UDim2.new(0,0,0, Position + 30)
				newbind.Text.Delete.MouseButton1Click:Connect(function()
					unkeybind(binds[i].COMMAND,binds[i].KEY)
				end)
			end
		end
	end

	refreshbinds()

	PositionsFrame.Delete.MouseButton1Click:Connect(function()
		execCmd('cpos')
	end)

	function refreshwaypoints()
		if #WayPoints > 0 or #pWayPoints > 0 then
			PositionsHint:Destroy()
		end
		if Holder_4 then
			Holder_4:ClearAllChildren()
			Holder_4.CanvasSize = UDim2.new(0, 0, 0, 10)
			local YSize = 25
			local num = 1
			for i = 1, #WayPoints do
				local Position = ((num * YSize) - YSize)
				local newpoint = Example_4:Clone()
				newpoint.Parent = Holder_4
				newpoint.Visible = true
				newpoint.Position = UDim2.new(0,0,0, Position + 5)
				newpoint.Text.Text = WayPoints[i].NAME
				table.insert(shade2,newpoint)
				table.insert(shade2,newpoint.Text)
				table.insert(text1,newpoint.Text)
				table.insert(shade3,newpoint.Text.Delete)
				table.insert(text2,newpoint.Text.Delete)
				table.insert(shade3,newpoint.Text.TP)
				table.insert(text2,newpoint.Text.TP)
				Holder_4.CanvasSize = UDim2.new(0,0,0, Position + 30)
				newpoint.Text.Delete.MouseButton1Click:Connect(function()
					execCmd('dpos '..WayPoints[i].NAME)
				end)
				newpoint.Text.TP.MouseButton1Click:Connect(function()
					execCmd("loadpos "..WayPoints[i].NAME)
				end)
				num = num+1
			end
			for i = 1, #pWayPoints do
				local Position = ((num * YSize) - YSize)
				local newpoint = Example_4:Clone()
				newpoint.Parent = Holder_4
				newpoint.Visible = true
				newpoint.Position = UDim2.new(0,0,0, Position + 5)
				newpoint.Text.Text = pWayPoints[i].NAME
				table.insert(shade2,newpoint)
				table.insert(shade2,newpoint.Text)
				table.insert(text1,newpoint.Text)
				table.insert(shade3,newpoint.Text.Delete)
				table.insert(text2,newpoint.Text.Delete)
				table.insert(shade3,newpoint.Text.TP)
				table.insert(text2,newpoint.Text.TP)
				Holder_4.CanvasSize = UDim2.new(0,0,0, Position + 30)
				newpoint.Text.Delete.MouseButton1Click:Connect(function()
					execCmd('dpos '..pWayPoints[i].NAME)
				end)
				newpoint.Text.TP.MouseButton1Click:Connect(function()
					execCmd("loadpos "..pWayPoints[i].NAME)
				end)
				num = num+1
			end
		end
	end

	refreshwaypoints()

	function refreshaliases()
		if #aliases > 0 then
			AliasHint:Destroy()
		end
		if Holder_3 then
			Holder_3:ClearAllChildren()
			Holder_3.CanvasSize = UDim2.new(0, 0, 0, 10)
			for i = 1, #aliases do
				local YSize = 25
				local Position = ((i * YSize) - YSize)
				local newalias = Example_3:Clone()
				newalias.Parent = Holder_3
				newalias.Visible = true
				newalias.Position = UDim2.new(0,0,0, Position + 5)
				newalias.Text.Text = aliases[i].CMD.." > "..aliases[i].ALIAS
				table.insert(shade2,newalias)
				table.insert(shade2,newalias.Text)
				table.insert(text1,newalias.Text)
				table.insert(shade3,newalias.Text.Delete)
				table.insert(text2,newalias.Text.Delete)
				Holder_3.CanvasSize = UDim2.new(0,0,0, Position + 30)
				newalias.Text.Delete.MouseButton1Click:Connect(function()
					execCmd('removealias '..aliases[i].ALIAS)
				end)
			end
		end
	end

	local bindChosenKeyUp = false

	BindTo.MouseButton1Click:Connect(function()
		awaitingInput = true
		BindTo.Text = 'Press something'
	end)

	BindTriggerSelect.MouseButton1Click:Connect(function()
		bindChosenKeyUp = not bindChosenKeyUp
		BindTriggerSelect.Text = bindChosenKeyUp and "KeyUp" or "KeyDown"
	end)

	Add_2.MouseButton1Click:Connect(function()
		if keySelected then
			if string.find(Cmdbar_2.Text, "\\\\") then
				notify('Keybind Error','Only use one backslash to keybind multiple commands into one keybind or command')
			else
				addbind(Cmdbar_2.Text,keyPressed,bindChosenKeyUp)
				refreshbinds()
				updatesaves()
				if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
					notify('Keybinds Updated','Binded '..keyPressed..' to '..Cmdbar_2.Text)
				else
					notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to '..Cmdbar_2.Text)
				end
			end
		end
	end)

	Exit_2.MouseButton1Click:Connect(function()
		Cmdbar_2.Text = 'Command'
		BindTo.Text = 'Click to bind'
		bindChosenKeyUp = false
		BindTriggerSelect.Text = "KeyDown"
		keySelected = false
		KeybindEditor:TweenPosition(UDim2.new(0.5, -180, 0, -500), "InOut", "Quart", 0.5, true, nil)
	end)

	function onInputBegan(input,gameProcessed)
		if awaitingInput then
			if input.UserInputType == Enum.UserInputType.Keyboard then
				keyPressed = tostring(input.KeyCode)
				BindTo.Text = keyPressed:sub(14)
			elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
				keyPressed = 'LeftClick'
				BindTo.Text = 'LeftClick'
			elseif input.UserInputType == Enum.UserInputType.MouseButton2 then
				keyPressed = 'RightClick'
				BindTo.Text = 'RightClick'
			end
			awaitingInput = false
			keySelected = true
		end
		if not gameProcessed and #binds > 0 then
			for i,v in pairs(binds) do
				if not v.ISKEYUP then
					if input.UserInputType == Enum.UserInputType.Keyboard and v.KEY:lower()==tostring(input.KeyCode):lower() then
						execCmd(v.COMMAND,Players.LocalPlayer)
					elseif input.UserInputType == Enum.UserInputType.MouseButton1 and v.KEY:lower()=='leftclick' then
						execCmd(v.COMMAND,Players.LocalPlayer)
					elseif input.UserInputType == Enum.UserInputType.MouseButton2 and v.KEY:lower()=='rightclick' then
						execCmd(v.COMMAND,Players.LocalPlayer)
					end
				end
			end
		end
	end

	function onInputEnded(input,gameProcessed)
		if not gameProcessed and #binds > 0 then
			for i,v in pairs(binds) do
				if v.ISKEYUP then
					if input.UserInputType == Enum.UserInputType.Keyboard and v.KEY:lower()==tostring(input.KeyCode):lower() then
						execCmd(v.COMMAND,Players.LocalPlayer)
					elseif input.UserInputType == Enum.UserInputType.MouseButton1 and v.KEY:lower()=='leftclick' then
						execCmd(v.COMMAND,Players.LocalPlayer)
					elseif input.UserInputType == Enum.UserInputType.MouseButton2 and v.KEY:lower()=='rightclick' then
						execCmd(v.COMMAND,Players.LocalPlayer)
					end
				end
			end
		end
	end

	UserInputService.InputBegan:Connect(onInputBegan)
	UserInputService.InputEnded:Connect(onInputEnded)

	Fly.Select.MouseButton1Click:Connect(function()
		if keySelected then
			addbind('togglefly',keyPressed,bindChosenKeyUp)
			refreshbinds()
			updatesaves()
			if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
				notify('Keybinds Updated','Binded '..keyPressed..' to toggle fly')
			else
				notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to toggle fly')
			end
		end
	end)

	Noclip.Select.MouseButton1Click:Connect(function()
		if keySelected then
			addbind('togglenoclip',keyPressed,bindChosenKeyUp)
			refreshbinds()
			updatesaves()
			if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
				notify('Keybinds Updated','Binded '..keyPressed..' to toggle noclip')
			else
				notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to toggle noclip')
			end
		end
	end)

	Float.Select.MouseButton1Click:Connect(function()
		if keySelected then
			addbind('togglefloat',keyPressed,bindChosenKeyUp)
			refreshbinds()
			updatesaves()
			if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
				notify('Keybinds Updated','Binded '..keyPressed..' to toggle float')
			else
				notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to toggle float')
			end
		end
	end)

	ClickTP.Select.MouseButton1Click:Connect(function()
		if keySelected then
			addbind('clicktp',keyPressed,bindChosenKeyUp)
			refreshbinds()
			updatesaves()
			if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
				notify('Keybinds Updated','Binded '..keyPressed..' to click tp')
			else
				notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to click tp')
			end
		end
	end)

	ClickDelete.Select.MouseButton1Click:Connect(function()
		if keySelected then
			addbind('clickdel',keyPressed,bindChosenKeyUp)
			refreshbinds()
			updatesaves()
			if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
				notify('Keybinds Updated','Binded '..keyPressed..' to click delete')
			else
				notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to click delete')
			end
		end
	end)

	Xray.Select.MouseButton1Click:Connect(function()
		if keySelected then
			addbind('togglexray',keyPressed,bindChosenKeyUp)
			refreshbinds()
			updatesaves()
			if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
				notify('Keybinds Updated','Binded '..keyPressed..' to toggle xray')
			else
				notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to toggle xray')
			end
		end
	end)

	Swim.Select.MouseButton1Click:Connect(function()
		if keySelected then
			addbind('toggleswim',keyPressed,bindChosenKeyUp)
			refreshbinds()
			updatesaves()
			if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
				notify('Keybinds Updated','Binded '..keyPressed..' to toggle swim')
			else
				notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to toggle swim')
			end
		end
	end)

	Fling.Select.MouseButton1Click:Connect(function()
		if keySelected then
			addbind('togglefling',keyPressed,bindChosenKeyUp)
			refreshbinds()
			updatesaves()
			if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
				notify('Keybinds Updated','Binded '..keyPressed..' to toggle fling')
			else
				notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to toggle fling')
			end
		end
	end)

	Invisible.Select.MouseButton1Click:Connect(function()
		if keySelected then
			addbind('toggleinvis',keyPressed,bindChosenKeyUp)
			refreshbinds()
			updatesaves()
			if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
				notify('Keybinds Updated','Binded '..keyPressed..' to toggle invisible')
			else
				notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to toggle invisible')
			end
		end
	end)

	Vehiclefly.Select.MouseButton1Click:Connect(function()
		if keySelected then
			addbind('togglevfly',keyPressed,bindChosenKeyUp)
			refreshbinds()
			updatesaves()
			if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
				notify('Keybinds Updated','Binded '..keyPressed..' to toggle vehiclefly')
			else
				notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to toggle vehiclefly')
			end
		end
	end)

	VehicleNoclip.Select.MouseButton1Click:Connect(function()
		if keySelected then
			addbind('togglevnoclip',keyPressed,bindChosenKeyUp)
			refreshbinds()
			updatesaves()
			if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
				notify('Keybinds Updated','Binded '..keyPressed..' to toggle vehiclenoclip')
			else
				notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to toggle vehiclenoclip')
			end
		end
	end)

	local function clicktpFunc()
		pcall(function()
			if Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') and Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').SeatPart then
				Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').Sit = false
				wait(.1)
			end
			getRoot(Players.LocalPlayer.Character).CFrame = IYMouse.Hit + Vector3.new(0,7,0)
		end)
	end

	IYMouse.Button1Down:Connect(function()
		for i,v in pairs(binds) do
			if v.COMMAND == 'clicktp' then
				local input = v.KEY
				if input == 'RightClick' and UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2) and Players.LocalPlayer.Character then
					clicktpFunc()
				elseif input == 'LeftClick' and UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) and Players.LocalPlayer.Character then
					clicktpFunc()
				elseif UserInputService:IsKeyDown(Enum.KeyCode[input:sub(14)]) and Players.LocalPlayer.Character then
					clicktpFunc()
				end
			elseif v.COMMAND == 'clickdel' then
				local input = v.KEY
				if input == 'RightClick' and UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2) then
					pcall(function() IYMouse.Target:Destroy() end)
				elseif input == 'LeftClick' and UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) then
					pcall(function() IYMouse.Target:Destroy() end)
				elseif UserInputService:IsKeyDown(Enum.KeyCode[input:sub(14)]) then
					pcall(function() IYMouse.Target:Destroy() end)
				end
			end
		end
	end)

	PluginsGUI = PluginEditor.background

	function addPlugin(name)
		if name:lower() == 'plugin file name' or name:lower() == 'iy_fe.iy' or name == 'iy_fe' then
			notify('Plugin Error','Please enter a valid plugin')
		else
			local file
			local fileName
			if name:sub(-3) == '.iy' then
				pcall(function() file = readfile(name) end)
				fileName = name
			else
				pcall(function() file = readfile(name..'.iy') end)
				fileName = name..'.iy'
			end
			if file then
				if not FindInTable(PluginsTable, fileName) then
					table.insert(PluginsTable, fileName)
					LoadPlugin(fileName)
					refreshplugins()
					pcall(eventEditor.Refresh)
				else
					notify('Plugin Error','This plugin is already added')
				end
			else
				notify('Plugin Error','Cannot locate file "'..fileName..'". Is the file in the correct folder?')
			end
		end
	end

	function deletePlugin(name)
		local pName = name..'.iy'
		if name:sub(-3) == '.iy' then
			pName = name
		end
		for i = #cmds,1,-1 do
			if cmds[i].PLUGIN == pName then
				table.remove(cmds, i)
			end
		end
		for i,v in pairs(CMDsF:GetChildren()) do
			if v.Name == 'PLUGIN_'..pName then
				v:Destroy()
			end
		end
		for i,v in pairs(PluginsTable) do
			if v == pName then
				table.remove(PluginsTable, i)
				notify('Removed Plugin',pName..' was removed')
			end
		end
		IndexContents('',true)
		refreshplugins()
	end

	function refreshplugins(dontSave)
		if #PluginsTable > 0 then
			PluginsHint:Destroy()
		end
		if Holder_5 then
			Holder_5:ClearAllChildren()
			Holder_5.CanvasSize = UDim2.new(0, 0, 0, 10)
			for i,v in pairs(PluginsTable) do
				local pName = v
				local YSize = 25
				local Position = ((i * YSize) - YSize)
				local newplugin = Example_5:Clone()
				newplugin.Parent = Holder_5
				newplugin.Visible = true
				newplugin.Position = UDim2.new(0,0,0, Position + 5)
				newplugin.Text.Text = pName
				table.insert(shade2,newplugin)
				table.insert(shade2,newplugin.Text)
				table.insert(text1,newplugin.Text)
				table.insert(shade3,newplugin.Text.Delete)
				table.insert(text2,newplugin.Text.Delete)
				Holder_5.CanvasSize = UDim2.new(0,0,0, Position + 30)
				newplugin.Text.Delete.MouseButton1Click:Connect(function()
					deletePlugin(pName)
				end)
			end
			if not dontSave then
				updatesaves()
			end
		end
	end

	local PluginCache
	function LoadPlugin(val,startup)
		local plugin

		function CatchedPluginLoad()
			plugin = loadfile(val)()
		end

		function handlePluginError(plerror)
			notify('Plugin Error','An error occurred with the plugin, "'..val..'" and it could not be loaded')
			if FindInTable(PluginsTable,val) then
				for i,v in pairs(PluginsTable) do
					if v == val then
						table.remove(PluginsTable,i)
					end
				end
			end
			updatesaves()

			print("Original Error: "..tostring(plerror))
			print("Plugin Error, stack traceback: "..tostring(debug.traceback()))

			plugin = nil

			return false
		end

		xpcall(CatchedPluginLoad, handlePluginError)

		if plugin ~= nil then
			if not startup then
				notify('Loaded Plugin',"Name: "..plugin["PluginName"].."\n".."Description: "..plugin["PluginDescription"])
			end
			addcmdtext('',val)
			addcmdtext(string.upper('--'..plugin["PluginName"]),val,plugin["PluginDescription"])
			for i,v in pairs(plugin["Commands"]) do 
				local cmdExt = ''
				local cmdName = i
				local function handleNames()
					cmdName = i
					if findCmd(cmdName..cmdExt) then
						if isNumber(cmdExt) then
							cmdExt = cmdExt+1
						else
							cmdExt = 1
						end
						handleNames()
					else
						cmdName = cmdName..cmdExt
					end
				end
				handleNames()
				addcmd(cmdName, v["Aliases"], v["Function"], val)
				if v["ListName"] then
					local newName = v.ListName
					local cmdNames = {i,unpack(v.Aliases)}
					for i,v in pairs(cmdNames) do
						newName = newName:gsub(v,v..cmdExt)
					end
					addcmdtext(newName,val,v["Description"])
				else
					addcmdtext(cmdName,val,v["Description"])
				end
			end
			IndexContents('',true)
		elseif plugin == nil then
			plugin = nil
		end
	end

	function FindPlugins()
		if PluginsTable ~= nil and type(PluginsTable) == "table" then
			for i,v in pairs(PluginsTable) do
				LoadPlugin(v,true)
			end
			refreshplugins(true)
		end
	end

	AddPlugin.MouseButton1Click:Connect(function()
		addPlugin(PluginsGUI.FileName.Text)
	end)

	Exit_3.MouseButton1Click:Connect(function()
		PluginEditor:TweenPosition(UDim2.new(0.5, -180, 0, -500), "InOut", "Quart", 0.5, true, nil)
		FileName.Text = 'Plugin File Name'
	end)

	Add_3.MouseButton1Click:Connect(function()
		PluginEditor:TweenPosition(UDim2.new(0.5, -180, 0, 310), "InOut", "Quart", 0.5, true, nil)
	end)

	Plugins.MouseButton1Click:Connect(function()
		if writefileExploit() then
			PluginsFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
			wait(0.5)
			SettingsHolder.Visible = false
		else
			notify('Incompatible Exploit','Your exploit is unable to use plugins (missing read/writefile)')
		end
	end)

	Close_4.MouseButton1Click:Connect(function()
		SettingsHolder.Visible = true
		PluginsFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
	end)

	addcmd('addalias',{},function(args, speaker)
		if #args < 2 then return end
		local cmd = string.lower(args[1])
		local alias = string.lower(args[2])
		for i,v in pairs(cmds) do
			if v.NAME:lower()==cmd or FindInTable(v.ALIAS,cmd) then
				customAlias[alias] = v
				aliases[#aliases + 1] = {CMD = cmd, ALIAS = alias}
				notify('Aliases Modified',"Added "..alias.." as an alias to "..cmd)
				updatesaves()
				refreshaliases()
				break
			end
		end
	end)

	addcmd('removealias',{},function(args, speaker)
		if #args < 1 then return end
		local alias = string.lower(args[1])
		if customAlias[alias] then
			local cmd = customAlias[alias].NAME
			customAlias[alias] = nil
			for i = #aliases,1,-1 do
				if aliases[i].ALIAS == tostring(alias) then
					table.remove(aliases, i)
				end
			end
			notify('Aliases Modified',"Removed the alias "..alias.." from "..cmd)
			updatesaves()
			refreshaliases()
		end
	end)

	addcmd('clraliases',{},function(args, speaker)
		customAlias = {}
		aliases = {}
		notify('Aliases Modified','Removed all aliases')
		updatesaves()
		refreshaliases()
	end)

	addcmd('serverinfo',{'info','sinfo'},function(args, speaker)
		spawn(function()
			local FRAME = Instance.new("Frame")
			local shadow = Instance.new("Frame")
			local PopupText = Instance.new("TextLabel")
			local Exit = Instance.new("TextButton")
			local ExitImage = Instance.new("ImageLabel")
			local background = Instance.new("Frame")
			local TextLabel = Instance.new("TextLabel")
			local TextLabel2 = Instance.new("TextLabel")
			local TextLabel3 = Instance.new("TextLabel")
			local Time = Instance.new("TextLabel")
			local appearance = Instance.new("TextLabel")
			local maxplayers = Instance.new("TextLabel")
			local name = Instance.new("TextLabel")
			local placeid = Instance.new("TextLabel")
			local playerid = Instance.new("TextLabel")
			local players = Instance.new("TextLabel")
			local CopyApp = Instance.new("TextButton")
			local CopyPlrID = Instance.new("TextButton")
			local CopyPlcID = Instance.new("TextButton")

			FRAME.Name = randomString()
			FRAME.Parent = PARENT
			FRAME.Active = true
			FRAME.BackgroundTransparency = 1
			FRAME.Position = UDim2.new(0.5, -130, 0, -500)
			FRAME.Size = UDim2.new(0, 250, 0, 20)
			FRAME.ZIndex = 10
			dragGUI(FRAME)

			shadow.Name = "shadow"
			shadow.Parent = FRAME
			shadow.BackgroundColor3 = currentShade2
			shadow.BorderSizePixel = 0
			shadow.Size = UDim2.new(0, 250, 0, 20)
			shadow.ZIndex = 10
			table.insert(shade2,shadow)

			PopupText.Name = "PopupText"
			PopupText.Parent = shadow
			PopupText.BackgroundTransparency = 1
			PopupText.Size = UDim2.new(1, 0, 0.95, 0)
			PopupText.ZIndex = 10
			PopupText.Font = Enum.Font.SourceSans
			PopupText.TextSize = 14
			PopupText.Text = "Server"
			PopupText.TextColor3 = currentText1
			PopupText.TextWrapped = true
			table.insert(text1,PopupText)

			Exit.Name = "Exit"
			Exit.Parent = shadow
			Exit.BackgroundTransparency = 1
			Exit.Position = UDim2.new(1, -20, 0, 0)
			Exit.Size = UDim2.new(0, 20, 0, 20)
			Exit.Text = ""
			Exit.ZIndex = 10

			ExitImage.Parent = Exit
			ExitImage.BackgroundColor3 = Color3.new(1, 1, 1)
			ExitImage.BackgroundTransparency = 1
			ExitImage.Position = UDim2.new(0, 5, 0, 5)
			ExitImage.Size = UDim2.new(0, 10, 0, 10)
			ExitImage.Image = "rbxassetid://5054663650"
			ExitImage.ZIndex = 10

			background.Name = "background"
			background.Parent = FRAME
			background.Active = true
			background.BackgroundColor3 = currentShade1
			background.BorderSizePixel = 0
			background.Position = UDim2.new(0, 0, 1, 0)
			background.Size = UDim2.new(0, 250, 0, 250)
			background.ZIndex = 10
			table.insert(shade1,background)

			TextLabel.Name = "Text Label"
			TextLabel.Parent = background
			TextLabel.BackgroundTransparency = 1
			TextLabel.BorderSizePixel = 0
			TextLabel.Position = UDim2.new(0, 5, 0, 80)
			TextLabel.Size = UDim2.new(0, 100, 0, 20)
			TextLabel.ZIndex = 10
			TextLabel.Font = Enum.Font.SourceSansLight
			TextLabel.TextSize = 20
			TextLabel.Text = "Run Time:"
			TextLabel.TextColor3 = currentText1
			TextLabel.TextXAlignment = Enum.TextXAlignment.Left
			table.insert(text1,TextLabel)

			TextLabel2.Name = "Text Label2"
			TextLabel2.Parent = background
			TextLabel2.BackgroundTransparency = 1
			TextLabel2.BorderSizePixel = 0
			TextLabel2.Position = UDim2.new(0, 5, 0, 130)
			TextLabel2.Size = UDim2.new(0, 100, 0, 20)
			TextLabel2.ZIndex = 10
			TextLabel2.Font = Enum.Font.SourceSansLight
			TextLabel2.TextSize = 20
			TextLabel2.Text = "Statistics:"
			TextLabel2.TextColor3 = currentText1
			TextLabel2.TextXAlignment = Enum.TextXAlignment.Left
			table.insert(text1,TextLabel2)

			TextLabel3.Name = "Text Label3"
			TextLabel3.Parent = background
			TextLabel3.BackgroundTransparency = 1
			TextLabel3.BorderSizePixel = 0
			TextLabel3.Position = UDim2.new(0, 5, 0, 10)
			TextLabel3.Size = UDim2.new(0, 100, 0, 20)
			TextLabel3.ZIndex = 10
			TextLabel3.Font = Enum.Font.SourceSansLight
			TextLabel3.TextSize = 20
			TextLabel3.Text = "Local Player:"
			TextLabel3.TextColor3 = currentText1
			TextLabel3.TextXAlignment = Enum.TextXAlignment.Left
			table.insert(text1,TextLabel3)

			Time.Name = "Time"
			Time.Parent = background
			Time.BackgroundTransparency = 1
			Time.BorderSizePixel = 0
			Time.Position = UDim2.new(0, 5, 0, 105)
			Time.Size = UDim2.new(0, 100, 0, 20)
			Time.ZIndex = 10
			Time.Font = Enum.Font.SourceSans
			Time.FontSize = Enum.FontSize.Size14
			Time.Text = "LOADING"
			Time.TextColor3 = currentText1
			Time.TextXAlignment = Enum.TextXAlignment.Left
			table.insert(text1,Time)

			appearance.Name = "appearance"
			appearance.Parent = background
			appearance.BackgroundTransparency = 1
			appearance.BorderSizePixel = 0
			appearance.Position = UDim2.new(0, 5, 0, 55)
			appearance.Size = UDim2.new(0, 100, 0, 20)
			appearance.ZIndex = 10
			appearance.Font = Enum.Font.SourceSans
			appearance.FontSize = Enum.FontSize.Size14
			appearance.Text = "Appearance: LOADING"
			appearance.TextColor3 = currentText1
			appearance.TextXAlignment = Enum.TextXAlignment.Left
			table.insert(text1,appearance)

			maxplayers.Name = "maxplayers"
			maxplayers.Parent = background
			maxplayers.BackgroundTransparency = 1
			maxplayers.BorderSizePixel = 0
			maxplayers.Position = UDim2.new(0, 5, 0, 175)
			maxplayers.Size = UDim2.new(0, 100, 0, 20)
			maxplayers.ZIndex = 10
			maxplayers.Font = Enum.Font.SourceSans
			maxplayers.FontSize = Enum.FontSize.Size14
			maxplayers.Text = "LOADING"
			maxplayers.TextColor3 = currentText1
			maxplayers.TextXAlignment = Enum.TextXAlignment.Left
			table.insert(text1,maxplayers)

			name.Name = "name"
			name.Parent = background
			name.BackgroundTransparency = 1
			name.BorderSizePixel = 0
			name.Position = UDim2.new(0, 5, 0, 215)
			name.Size = UDim2.new(0, 240, 0, 30)
			name.ZIndex = 10
			name.Font = Enum.Font.SourceSans
			name.FontSize = Enum.FontSize.Size14
			name.Text = "Place Name: LOADING"
			name.TextColor3 = currentText1
			name.TextWrapped = true
			name.TextXAlignment = Enum.TextXAlignment.Left
			name.TextYAlignment = Enum.TextYAlignment.Top
			table.insert(text1,name)

			placeid.Name = "placeid"
			placeid.Parent = background
			placeid.BackgroundTransparency = 1
			placeid.BorderSizePixel = 0
			placeid.Position = UDim2.new(0, 5, 0, 195)
			placeid.Size = UDim2.new(0, 100, 0, 20)
			placeid.ZIndex = 10
			placeid.Font = Enum.Font.SourceSans
			placeid.FontSize = Enum.FontSize.Size14
			placeid.Text = "Place ID: LOADING"
			placeid.TextColor3 = currentText1
			placeid.TextXAlignment = Enum.TextXAlignment.Left
			table.insert(text1,placeid)

			playerid.Name = "playerid"
			playerid.Parent = background
			playerid.BackgroundTransparency = 1
			playerid.BorderSizePixel = 0
			playerid.Position = UDim2.new(0, 5, 0, 35)
			playerid.Size = UDim2.new(0, 100, 0, 20)
			playerid.ZIndex = 10
			playerid.Font = Enum.Font.SourceSans
			playerid.FontSize = Enum.FontSize.Size14
			playerid.Text = "Player ID: LOADING"
			playerid.TextColor3 = currentText1
			playerid.TextXAlignment = Enum.TextXAlignment.Left
			table.insert(text1,playerid)

			players.Name = "players"
			players.Parent = background
			players.BackgroundTransparency = 1
			players.BorderSizePixel = 0
			players.Position = UDim2.new(0, 5, 0, 155)
			players.Size = UDim2.new(0, 100, 0, 20)
			players.ZIndex = 10
			players.Font = Enum.Font.SourceSans
			players.FontSize = Enum.FontSize.Size14
			players.Text = "LOADING"
			players.TextColor3 = currentText1
			players.TextXAlignment = Enum.TextXAlignment.Left
			table.insert(text1,players)

			CopyApp.Name = "CopyApp"
			CopyApp.Parent = background
			CopyApp.BackgroundColor3 = currentShade2
			CopyApp.BorderSizePixel = 0
			CopyApp.Position = UDim2.new(0, 210, 0, 55)
			CopyApp.Size = UDim2.new(0, 35, 0, 20)
			CopyApp.Font = Enum.Font.SourceSans
			CopyApp.TextSize = 14
			CopyApp.Text = "Copy"
			CopyApp.TextColor3 = currentText1
			CopyApp.ZIndex = 10
			table.insert(shade2,CopyApp)
			table.insert(text1,CopyApp)

			CopyPlrID.Name = "CopyPlrID"
			CopyPlrID.Parent = background
			CopyPlrID.BackgroundColor3 = currentShade2
			CopyPlrID.BorderSizePixel = 0
			CopyPlrID.Position = UDim2.new(0, 210, 0, 35)
			CopyPlrID.Size = UDim2.new(0, 35, 0, 20)
			CopyPlrID.Font = Enum.Font.SourceSans
			CopyPlrID.TextSize = 14
			CopyPlrID.Text = "Copy"
			CopyPlrID.TextColor3 = currentText1
			CopyPlrID.ZIndex = 10
			table.insert(shade2,CopyPlrID)
			table.insert(text1,CopyPlrID)

			CopyPlcID.Name = "CopyPlcID"
			CopyPlcID.Parent = background
			CopyPlcID.BackgroundColor3 = currentShade2
			CopyPlcID.BorderSizePixel = 0
			CopyPlcID.Position = UDim2.new(0, 210, 0, 195)
			CopyPlcID.Size = UDim2.new(0, 35, 0, 20)
			CopyPlcID.Font = Enum.Font.SourceSans
			CopyPlcID.TextSize = 14
			CopyPlcID.Text = "Copy"
			CopyPlcID.TextColor3 = currentText1
			CopyPlcID.ZIndex = 10
			table.insert(shade2,CopyPlcID)
			table.insert(text1,CopyPlcID)

			local SINFOGUI = background
			FRAME:TweenPosition(UDim2.new(0.5, -130, 0, 100), "InOut", "Quart", 0.5, true, nil) 
			wait(0.5)
			Exit.MouseButton1Click:Connect(function()
				FRAME:TweenPosition(UDim2.new(0.5, -130, 0, -500), "InOut", "Quart", 0.5, true, nil) 
				wait(0.6)
				FRAME:Destroy()
			end)
			local Asset = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId)
			SINFOGUI.name.Text = "Place Name: " .. Asset.Name
			SINFOGUI.playerid.Text = "Player ID: " ..speaker.UserId
			SINFOGUI.maxplayers.Text = Players.MaxPlayers.. " Players Max"
			SINFOGUI.placeid.Text = "Place ID: " ..game.PlaceId

			CopyApp.MouseButton1Click:Connect(function()
				toClipboard(speaker.CharacterAppearanceId)
			end)
			CopyPlrID.MouseButton1Click:Connect(function()
				toClipboard(speaker.UserId)
			end)
			CopyPlcID.MouseButton1Click:Connect(function()
				toClipboard(game.PlaceId)
			end)

			repeat
				players = Players:GetPlayers()
				SINFOGUI.players.Text = #players.. " Player(s)"
				SINFOGUI.appearance.Text = "Appearance: " ..speaker.CharacterAppearanceId
				local seconds = math.floor(workspace.DistributedGameTime)
				local minutes = math.floor(workspace.DistributedGameTime / 60)
				local hours = math.floor(workspace.DistributedGameTime / 60 / 60)
				local seconds = seconds - (minutes * 60)
				local minutes = minutes - (hours * 60)
				if hours < 1 then if minutes < 1 then
						SINFOGUI.Time.Text = seconds .. " Second(s)" else
						SINFOGUI.Time.Text = minutes .. " Minute(s), " .. seconds .. " Second(s)"
					end
				else
					SINFOGUI.Time.Text = hours .. " Hour(s), " .. minutes .. " Minute(s), " .. seconds .. " Second(s)"
				end
				wait(1)
			until SINFOGUI.Parent == nil
		end)
	end)

	addcmd('jobid',{},function(args, speaker)
		local jobId = 'Roblox.GameLauncher.joinGameInstance('..game.PlaceId..', "'..game.JobId..'")'
		toClipboard(jobId)
	end)

	addcmd('notifyjobid',{},function(args, speaker)
		notify('JobId / PlaceId',game.JobId..' / '..game.PlaceId)
	end)

	addcmd('breakloops',{'break'},function(args, speaker)
		lastBreakTime = tick()
	end)

	addcmd('gametp',{'gameteleport'},function(args, speaker)
		game:GetService('TeleportService'):Teleport(args[1])
	end)

	addcmd('rejoin',{'rj'},function(args, speaker)
		if #Players:GetPlayers() <= 1 then
			Players.LocalPlayer:Kick("\nRejoining...")
			wait()
			game:GetService('TeleportService'):Teleport(game.PlaceId, Players.LocalPlayer)
		else
			game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId, Players.LocalPlayer)
		end
	end)

	addcmd('autorejoin',{'autorj'},function(args, speaker)
		local Dir = COREGUI:FindFirstChild("RobloxPromptGui"):FindFirstChild("promptOverlay")
		Dir.DescendantAdded:Connect(function(Err)
			if Err.Name == "ErrorTitle" then
				Err:GetPropertyChangedSignal("Text"):Connect(function()
					if Err.Text:sub(0, 12) == "Disconnected" then
						if #game.Players:GetPlayers() <= 1 then
							game.Players.LocalPlayer:Kick("\nRejoining...")
							wait()
							game:GetService("TeleportService"):Teleport(game.PlaceId, game.Players.LocalPlayer)
						else
							game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, game.Players.LocalPlayer)
						end
					end
				end)
			end
		end)
		notify('Auto Rejoin','Auto rejoin enabled')
	end)

	addcmd('serverhop',{'shop'},function(args, speaker)
		local x = {}
		for _, v in ipairs(game:GetService("HttpService"):JSONDecode(game:HttpGetAsync("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100")).data) do
			if type(v) == "table" and v.maxPlayers > v.playing and v.id ~= game.JobId then
				x[#x + 1] = v.id
			end
		end
		if #x > 0 then
			game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, x[math.random(1, #x)])
		else
			return notify("Serverhop","Couldn't find a server.")
		end
	end)

	addcmd('joinplayer',{'joinp'},function(args, speaker)
		local retries = 0
		function ToServer(User,PlaceId)	
			if args[2] == nil then PlaceId = game.PlaceId end
			if not pcall(function()
					local FoundUser, UserId = pcall(function()
						if tonumber(User) then
							return tonumber(User)
						end

						return Players:GetUserIdFromNameAsync(User)
					end)
					if not FoundUser then
						notify('Join Error','Username/UserID does not exist')
					else
						notify('Join Player','Loading servers. Hold on a second.')
						local URL2 = ("https://games.roblox.com/v1/games/"..PlaceId.."/servers/Public?sortOrder=Asc&limit=100")
						local Http = game:GetService("HttpService"):JSONDecode(game:HttpGet(URL2))
						local GUID

						function tablelength(T)
							local count = 0
							for _ in pairs(T) do count = count + 1 end
							return count
						end

						for i=1,tonumber(tablelength(Http.data)) do
							for j,k in pairs(Http.data[i].playerIds) do
								if k == UserId then
									GUID = Http.data[i].id
								end
							end
						end

						if GUID ~= nil then
							notify('Join Player','Joining '..User)
							game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceId,GUID,game.Players.LocalPlayer)
						else
							notify('Join Error','Unable to join user.')
						end
					end
				end)
			then
				if retries < 3 then
					retries = retries + 1
					print('ERROR retrying '..retries..'/3')
					notify('Join Error','Error while trying to join. Retrying '..retries..'/3.')
					ToServer(User,PlaceId)
				else
					notify('Join Error','Error while trying to join.')
				end
			end
		end
		ToServer(args[1],args[2])
	end)

	addcmd('exit',{},function(args, speaker)
		game:shutdown() 
	end)

	local Noclipping = nil
	addcmd('noclip',{},function(args, speaker)
		Clip = false
		wait(0.1)
		local function NoclipLoop()
			if Clip == false and speaker.Character ~= nil then
				for _, child in pairs(speaker.Character:GetDescendants()) do
					if child:IsA("BasePart") and child.CanCollide == true and child.Name ~= floatName then
						child.CanCollide = false
					end
				end
			end
		end
		Noclipping = game:GetService('RunService').Stepped:Connect(NoclipLoop)
		if args[1] and args[1] == 'nonotify' then return end
		notify('Noclip','Noclip Enabled')
	end)

	addcmd('clip',{'unnoclip'},function(args, speaker)
		if Noclipping then
			Noclipping:Disconnect()
		end
		Clip = true
		if args[1] and args[1] == 'nonotify' then return end
		notify('Noclip','Noclip Disabled')
	end)

	addcmd('togglenoclip',{},function(args, speaker)
		if Clip then
			execCmd('noclip')
		else
			execCmd('clip')
		end
	end)

	FLYING = false
	QEfly = true
	iyflyspeed = 1
	vehicleflyspeed = 1
	function sFLY(vfly)
		repeat wait() until Players.LocalPlayer and Players.LocalPlayer.Character and getRoot(Players.LocalPlayer.Character) and Players.LocalPlayer.Character:FindFirstChild('Humanoid')
		repeat wait() until IYMouse
		if flyKeyDown or flyKeyUp then flyKeyDown:Disconnect() flyKeyUp:Disconnect() end

		local T = getRoot(Players.LocalPlayer.Character)
		local CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
		local lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
		local SPEED = 0

		local function FLY()
			FLYING = true
			local BG = Instance.new('BodyGyro')
			local BV = Instance.new('BodyVelocity')
			BG.P = 9e4
			BG.Parent = T
			BV.Parent = T
			BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
			BG.cframe = T.CFrame
			BV.velocity = Vector3.new(0, 0, 0)
			BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
			spawn(function()
				repeat wait()
					if not vfly and Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
						Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = true
					end
					if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0 then
						SPEED = 50
					elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0) and SPEED ~= 0 then
						SPEED = 0
					end
					if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 or (CONTROL.Q + CONTROL.E) ~= 0 then
						BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
						lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
					elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and (CONTROL.Q + CONTROL.E) == 0 and SPEED ~= 0 then
						BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
					else
						BV.velocity = Vector3.new(0, 0, 0)
					end
					BG.cframe = workspace.CurrentCamera.CoordinateFrame
				until not FLYING
				CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
				lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
				SPEED = 0
				BG:Destroy()
				BV:Destroy()
				if Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
					Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
				end
			end)
		end
		flyKeyDown = IYMouse.KeyDown:Connect(function(KEY)
			if KEY:lower() == 'w' then
				CONTROL.F = (vfly and vehicleflyspeed or iyflyspeed)
			elseif KEY:lower() == 's' then
				CONTROL.B = - (vfly and vehicleflyspeed or iyflyspeed)
			elseif KEY:lower() == 'a' then
				CONTROL.L = - (vfly and vehicleflyspeed or iyflyspeed)
			elseif KEY:lower() == 'd' then 
				CONTROL.R = (vfly and vehicleflyspeed or iyflyspeed)
			elseif QEfly and KEY:lower() == 'e' then
				CONTROL.Q = (vfly and vehicleflyspeed or iyflyspeed)*2
			elseif QEfly and KEY:lower() == 'q' then
				CONTROL.E = -(vfly and vehicleflyspeed or iyflyspeed)*2
			end
			pcall(function() workspace.CurrentCamera.CameraType = Enum.CameraType.Track end)
		end)
		flyKeyUp = IYMouse.KeyUp:Connect(function(KEY)
			if KEY:lower() == 'w' then
				CONTROL.F = 0
			elseif KEY:lower() == 's' then
				CONTROL.B = 0
			elseif KEY:lower() == 'a' then
				CONTROL.L = 0
			elseif KEY:lower() == 'd' then
				CONTROL.R = 0
			elseif KEY:lower() == 'e' then
				CONTROL.Q = 0
			elseif KEY:lower() == 'q' then
				CONTROL.E = 0
			end
		end)
		FLY()
	end

	function NOFLY()
		FLYING = false
		if flyKeyDown or flyKeyUp then flyKeyDown:Disconnect() flyKeyUp:Disconnect() end
		if Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
			Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
		end
		pcall(function() workspace.CurrentCamera.CameraType = Enum.CameraType.Custom end)
	end

	addcmd('fly',{},function(args, speaker)
		NOFLY()
		wait()
		sFLY()
		if args[1] and isNumber(args[1]) then
			iyflyspeed = args[1]
		end
	end)

	addcmd('flyspeed',{'flysp'},function(args, speaker)
		local speed = args[1] or 1
		if isNumber(speed) then
			iyflyspeed = speed
		end
	end)

	addcmd('unfly',{'nofly','novfly','unvehiclefly','novehiclefly','unvfly'},function(args, speaker)
		NOFLY()
	end)

	addcmd('vfly',{'vehiclefly'},function(args, speaker)
		NOFLY()
		wait()
		sFLY(true)
		if args[1] and isNumber(args[1]) then
			vehicleflyspeed = args[1]
		end
	end)

	addcmd('togglevfly',{},function(args, speaker)
		if FLYING then
			NOFLY()
		else
			sFLY(true)
		end
	end)

	addcmd('vflyspeed',{'vflysp','vehicleflyspeed','vehicleflysp'},function(args, speaker)
		local speed = args[1] or 1
		if isNumber(speed) then
			vehicleflyspeed = speed
		end
	end)

	addcmd('qefly',{'flyqe'},function(args, speaker)
		if args[1] == 'false' then
			QEfly = false
		else
			QEfly = true
		end
	end)

	addcmd('togglefly',{},function(args, speaker)
		if FLYING then
			NOFLY()
		else
			sFLY()
		end
	end)

	Con = nil
	SPI = 1 -- studs per interval
	addcmd('cframefly', {'cfly'}, function(args, ME)
		if args[1] and isNumber(args[1]) then
			SPI = args[1]
		end
		local UIS = game:GetService('UserInputService')
		local RunService = game:GetService('RunService')
		local Keys, v3, cf = Enum.KeyCode, Vector3.new(), CFrame.new()
		Con = RunService.Heartbeat:Connect(function()
			local Camera, Cache = workspace.CurrentCamera, {}
			local Human = ME.Character and ME.Character:FindFirstChildWhichIsA('Humanoid')
			local HRP = Human and Human.RootPart or ME.Character.PrimaryPart
			if not ME.Character or not Human or not HRP or not Camera then
				return 
			end
			local Cache = {}
			local Cons = {game.ItemChanged, Human.StateChanged, Human.Changed, ME.Character.Changed}
			for _, v in ipairs(ME.Character:GetChildren()) do
				if v:IsA('BasePart') then
					Cons[#Cons + 1] = v.Changed
					Cons[#Cons + 1] = v:GetPropertyChangedSignal('CFrame')
				end
			end
			for _, v in ipairs(Cons) do
				for _, v1 in ipairs(getconnections(v)) do
					if not rawget(v1, '__OBJECT_ENABLED') then
						Cache[#Cache + 1] = v1
						v1:Disable()
					end
				end
			end
			Human:ChangeState(11)
			HRP.CFrame = CFrame.new(HRP.Position, HRP.Position + Camera.CFrame.LookVector) * (UIS:GetFocusedTextBox() and cf or CFrame.new((UIS:IsKeyDown(Keys.D) and SPI) or (UIS:IsKeyDown(Keys.A) and -SPI) or 0, (UIS:IsKeyDown(Keys.E) and SPI / 2) or (UIS:IsKeyDown(Keys.Q) and -SPI / 2) or 0, (UIS:IsKeyDown(Keys.S) and SPI) or (UIS:IsKeyDown(Keys.W) and -SPI) or 0))
			for _, v in ipairs(Cache) do
				v:Enable()
			end
		end)
	end)

	addcmd('uncframefly',{'uncfly'},function(args, speaker)
		if Con then
			Con:Disconnect()
		end
	end)

	addcmd('cframeflyspeed',{'cflyspeed'},function(args, speaker)
		if isNumber(args[1]) then
			SPI = args[1]
		end
	end)

	Floating = false
	floatName = randomString()
	addcmd('float', {'platform'},function(args, speaker)
		Floating = true
		local pchar = speaker.Character
		if pchar and not pchar:FindFirstChild(floatName) then
			spawn(function()
				local Float = Instance.new('Part')
				Float.Name = floatName
				Float.Parent = pchar
				Float.Transparency = 1
				Float.Size = Vector3.new(6,1,6)
				Float.Anchored = true
				local FloatValue = -3.5
				if r15(speaker) then FloatValue = -3.65 end
				Float.CFrame = getRoot(pchar).CFrame * CFrame.new(0,FloatValue,0)
				notify('Float','Float Enabled (Q = down & E = up)')
				qUp = IYMouse.KeyUp:Connect(function(KEY)
					if KEY == 'q' then
						FloatValue = FloatValue + 0.5
					end
				end)
				eUp = IYMouse.KeyUp:Connect(function(KEY)
					if KEY == 'e' then
						FloatValue = FloatValue - 0.5
					end
				end)
				qDown = IYMouse.KeyDown:Connect(function(KEY)
					if KEY == 'q' then
						FloatValue = FloatValue - 0.5
					end
				end)
				eDown = IYMouse.KeyDown:Connect(function(KEY)
					if KEY == 'e' then
						FloatValue = FloatValue + 0.5
					end
				end)
				floatDied = speaker.Character:FindFirstChildOfClass'Humanoid'.Died:Connect(function()
					FloatingFunc:Disconnect()
					Float:Destroy()
					qUp:Disconnect()
					eUp:Disconnect()
					qDown:Disconnect()
					eDown:Disconnect()
					floatDied:Disconnect()
				end)
				local function FloatPadLoop()
					if pchar:FindFirstChild(floatName) and getRoot(pchar) then
						Float.CFrame = getRoot(pchar).CFrame * CFrame.new(0,FloatValue,0)
					else
						FloatingFunc:Disconnect()
						Float:Destroy()
						qUp:Disconnect()
						eUp:Disconnect()
						qDown:Disconnect()
						eDown:Disconnect()
						floatDied:Disconnect()
					end
				end			
				FloatingFunc = game:GetService('RunService').Heartbeat:Connect(FloatPadLoop)
			end)
		end
	end)

	addcmd('unfloat',{'nofloat','unplatform','noplatform'},function(args, speaker)
		Floating = false
		local pchar = speaker.Character
		notify('Float','Float Disabled')
		if pchar:FindFirstChild(floatName) then
			pchar:FindFirstChild(floatName):Destroy()
		end
		if floatDied then
			FloatingFunc:Disconnect()
			qUp:Disconnect()
			eUp:Disconnect()
			qDown:Disconnect()
			eDown:Disconnect()
			floatDied:Disconnect()
		end
	end)

	addcmd('togglefloat',{},function(args, speaker)
		if Floating then
			execCmd('unfloat')
		else
			execCmd('float')
		end
	end)

	swimming = false
	addcmd('swim',{},function(args, speaker)
		workspace.Gravity = 0
		local function swimDied()
			workspace.Gravity = 198.2
			swimming = false
		end
		gravReset = speaker.Character:FindFirstChildOfClass('Humanoid').Died:Connect(swimDied)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,false)
		speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
		swimming = true
	end)

	addcmd('unswim',{'noswim'},function(args, speaker)
		workspace.Gravity = 198.2
		swimming = false
		if gravReset then
			gravReset:Disconnect()
		end
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,true)
		speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.RunningNoPhysics)
	end)

	addcmd('toggleswim',{},function(args, speaker)
		if swimming then
			execCmd('unswim')
		else
			execCmd('swim')
		end
	end)

	addcmd('setwaypoint',{'swp','setwp','spos','saveposition','savepos'},function(args, speaker)
		local WPName = tostring(getstring(1))
		if getRoot(speaker.Character) then
			notify('Modified Waypoints',"Created waypoint: "..getstring(1))
			local torso = getRoot(speaker.Character)
			WayPoints[#WayPoints + 1] = {NAME = WPName, COORD = {math.floor(torso.Position.X), math.floor(torso.Position.Y), math.floor(torso.Position.Z)}, GAME = game.PlaceId}
			if AllWaypoints ~= nil then
				AllWaypoints[#AllWaypoints + 1] = {NAME = WPName, COORD = {math.floor(torso.Position.X), math.floor(torso.Position.Y), math.floor(torso.Position.Z)}, GAME = game.PlaceId}
			end
		end	
		refreshwaypoints()
		updatesaves()
	end)

	addcmd('waypointpos',{'wpp','setwaypointposition','setpos','setwaypoint','setwaypointpos'},function(args, speaker)
		local WPName = tostring(getstring(1))
		if getRoot(speaker.Character) then
			notify('Modified Waypoints',"Created waypoint: "..getstring(1))
			WayPoints[#WayPoints + 1] = {NAME = WPName, COORD = {args[2], args[3], args[4]}, GAME = game.PlaceId}
			if AllWaypoints ~= nil then
				AllWaypoints[#AllWaypoints + 1] = {NAME = WPName, COORD = {args[2], args[3], args[4]}, GAME = game.PlaceId}
			end
		end	
		refreshwaypoints()
		updatesaves()
	end)

	waypointParts = {}
	addcmd('showwaypoints',{'showwp','showwps'},function(args, speaker)
		execCmd('hidewaypoints')
		wait()
		for i,_ in pairs(WayPoints) do
			local x = WayPoints[i].COORD[1]
			local y = WayPoints[i].COORD[2]
			local z = WayPoints[i].COORD[3]
			local part = Instance.new("Part")
			part.Size = Vector3.new(5,5,5)
			part.CFrame = CFrame.new(x,y,z)
			part.Parent = workspace
			part.Anchored = true
			part.CanCollide = false
			table.insert(waypointParts,part)
			local view = Instance.new("BoxHandleAdornment")
			view.Adornee = part
			view.AlwaysOnTop = true
			view.ZIndex = 10
			view.Size = part.Size
			view.Parent = part
		end
		for i,v in pairs(pWayPoints) do
			local view = Instance.new("BoxHandleAdornment")
			view.Adornee = pWayPoints[i].COORD[1]
			view.AlwaysOnTop = true
			view.ZIndex = 10
			view.Size = pWayPoints[i].COORD[1].Size
			view.Parent = pWayPoints[i].COORD[1]
			table.insert(waypointParts,view)
		end
	end)

	addcmd('hidewaypoints',{'hidewp','hidewps'},function(args, speaker)
		for i,v in pairs(waypointParts) do
			v:Destroy()
		end
		waypointParts = {}
	end)

	addcmd('waypoint',{'wp','lpos','loadposition','loadpos'},function(args, speaker)
		local WPName = tostring(getstring(1))
		if speaker.Character then
			for i,_ in pairs(WayPoints) do
				if tostring(WayPoints[i].NAME):lower() == tostring(WPName):lower() then
					local x = WayPoints[i].COORD[1]
					local y = WayPoints[i].COORD[2]
					local z = WayPoints[i].COORD[3]
					getRoot(speaker.Character).CFrame = CFrame.new(x,y,z)
				end
			end
			for i,_ in pairs(pWayPoints) do
				if tostring(pWayPoints[i].NAME):lower() == tostring(WPName):lower() then
					getRoot(speaker.Character).CFrame = CFrame.new(pWayPoints[i].COORD[1].Position)
				end
			end
		end
	end)

	tweenSpeed = 1
	addcmd('tweenspeed',{'tspeed'},function(args, speaker)
		local newSpeed = args[1] or 1
		if tonumber(newSpeed) then
			tweenSpeed = tonumber(newSpeed)
		end
	end)

	addcmd('tweenwaypoint',{'twp'},function(args, speaker)
		local WPName = tostring(getstring(1))
		if speaker.Character then
			for i,_ in pairs(WayPoints) do
				local x = WayPoints[i].COORD[1]
				local y = WayPoints[i].COORD[2]
				local z = WayPoints[i].COORD[3]
				if tostring(WayPoints[i].NAME):lower() == tostring(WPName):lower() then
					game:GetService("TweenService"):Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = CFrame.new(x,y,z)}):Play()
				end
			end
			for i,_ in pairs(pWayPoints) do
				if tostring(pWayPoints[i].NAME):lower() == tostring(WPName):lower() then
					game:GetService("TweenService"):Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = CFrame.new(pWayPoints[i].COORD[1].Position)}):Play()
				end
			end
		end
	end)

	addcmd('walktowaypoint',{'wtwp'},function(args, speaker)
		local WPName = tostring(getstring(1))
		if speaker.Character then
			for i,_ in pairs(WayPoints) do
				local x = WayPoints[i].COORD[1]
				local y = WayPoints[i].COORD[2]
				local z = WayPoints[i].COORD[3]
				if tostring(WayPoints[i].NAME):lower() == tostring(WPName):lower() then
					if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
						speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
						wait(.1)
					end
					speaker.Character:FindFirstChildOfClass('Humanoid').WalkToPoint = Vector3.new(x,y,z)
				end
			end
			for i,_ in pairs(pWayPoints) do
				if tostring(pWayPoints[i].NAME):lower() == tostring(WPName):lower() then
					if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
						speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
						wait(.1)
					end
					speaker.Character:FindFirstChildOfClass('Humanoid').WalkToPoint = Vector3.new(pWayPoints[i].COORD[1].Position)
				end
			end
		end
	end)

	addcmd('deletewaypoint',{'dwp','dpos','deleteposition','deletepos'},function(args, speaker)
		for i,v in pairs(WayPoints) do
			if v.NAME:lower() == tostring(getstring(1)):lower() then
				notify('Modified Waypoints',"Deleted waypoint: " .. v.NAME)
				table.remove(WayPoints, i)
			end
		end
		if AllWaypoints ~= nil and #AllWaypoints > 0 then
			for i,v in pairs(AllWaypoints) do
				if v.NAME:lower() == tostring(getstring(1)):lower() then
					if not v.GAME or v.GAME == game.PlaceId then
						table.remove(AllWaypoints, i)
					end
				end
			end
		end
		for i,v in pairs(pWayPoints) do
			if v.NAME:lower() == tostring(getstring(1)):lower() then
				notify('Modified Waypoints',"Deleted waypoint: " .. v.NAME)
				table.remove(pWayPoints, i)
			end
		end
		refreshwaypoints()
		updatesaves()
	end)

	addcmd('clearwaypoints',{'cwp','clearpositions','cpos','clearpos'},function(args, speaker)
		WayPoints = {}
		pWayPoints = {}
		refreshwaypoints()
		updatesaves()
		AllWaypoints = {}
		notify('Modified Waypoints','Removed all waypoints')
	end)

	addcmd('enable',{},function(args, speaker)
		if args[1]:lower() == 'inventory' or args[1]:lower() == 'backpack' then
			game:GetService("StarterGui"):SetCoreGuiEnabled('Backpack', true)
		elseif args[1]:lower() == 'playerlist' then
			game:GetService("StarterGui"):SetCoreGuiEnabled('PlayerList', true)
		elseif args[1]:lower() == 'chat' then
			game:GetService("StarterGui"):SetCoreGuiEnabled('Chat', true)
		elseif args[1]:lower() == 'all' then
			game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.All, true)
		end
	end)

	addcmd('disable',{},function(args, speaker)
		if args[1]:lower() == 'inventory' or args[1]:lower() == 'backpack' then
			game:GetService("StarterGui"):SetCoreGuiEnabled('Backpack', false)
		elseif args[1]:lower() == 'playerlist' then
			game:GetService("StarterGui"):SetCoreGuiEnabled('PlayerList', false)
		elseif args[1]:lower() == 'chat' then
			game:GetService("StarterGui"):SetCoreGuiEnabled('Chat', false)
		elseif args[1]:lower() == 'all' then
			game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.All, false)
		end
	end)

	local invisGUIS = {}
	addcmd('showguis',{},function(args, speaker)
		for i,v in pairs(speaker:FindFirstChildWhichIsA("PlayerGui"):GetDescendants()) do
			if (v:IsA("Frame") or v:IsA("ImageLabel") or v:IsA("ScrollingFrame")) and not v.Visible then
				v.Visible = true
				if not FindInTable(invisGUIS,v) then
					table.insert(invisGUIS,v)
				end
			end
		end
	end)

	addcmd('unshowguis',{},function(args, speaker)
		for i,v in pairs(invisGUIS) do
			v.Visible = false
		end
		invisGUIS = {}
	end)

	local hiddenGUIS = {}
	addcmd('hideguis',{},function(args, speaker)
		for i,v in pairs(speaker:FindFirstChildWhichIsA("PlayerGui"):GetDescendants()) do
			if (v:IsA("Frame") or v:IsA("ImageLabel") or v:IsA("ScrollingFrame")) and v.Visible then
				v.Visible = false
				if not FindInTable(hiddenGUIS,v) then
					table.insert(hiddenGUIS,v)
				end
			end
		end
	end)

	addcmd('unhideguis',{},function(args, speaker)
		for i,v in pairs(hiddenGUIS) do
			v.Visible = true
		end
		hiddenGUIS = {}
	end)

	function deleteGuisAtPos()
		pcall(function()
			local guisAtPosition = game.Players.LocalPlayer.PlayerGui:GetGuiObjectsAtPosition(IYMouse.X, IYMouse.Y)
			for _, gui in pairs(guisAtPosition) do
				if gui.Visible == true then
					gui:Destroy()
				end
			end
		end)
	end

	local deleteGuiInput
	addcmd('guidelete',{},function(args, speaker)
		deleteGuiInput = UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
			if not gameProcessedEvent then
				if input.KeyCode == Enum.KeyCode.Backspace then
					deleteGuisAtPos()
				end
			end
		end)
		notify('GUI Delete Enabled','Hover over a GUI and press backspace to delete it')
	end)

	addcmd('unguidelete',{'noguidelete'},function(args, speaker)
		if deleteGuiInput then deleteGuiInput:Disconnect() end
		notify('GUI Delete Disabled','GUI backspace delete has been disabled')
	end)

	local wasStayOpen = StayOpen
	addcmd('hideiy',{},function(args, speaker)
		wasStayOpen = StayOpen
		if StayOpen == true then StayOpen = false
			On.BackgroundTransparency = 1
		end
		minimizeNum = 0
		minimizeHolder()
		notify('IY Hidden','You can press the prefix key to access the command bar')
	end)

	addcmd('showiy',{},function(args, speaker)
		minimizeNum = -20
		if wasStayOpen then
			maximizeHolder()
			StayOpen = true
			On.BackgroundTransparency = 0
		else
			minimizeHolder()
		end
	end)

	addcmd('rec', {'record'}, function(args, speaker)
		return game:GetService("CoreGui"):ToggleRecording()
	end)

	addcmd('screenshot', {'scrnshot'}, function(args, speaker)
		return game:GetService("CoreGui"):TakeScreenshot()
	end)

	addcmd('togglefs', {'togglefullscreen'}, function(args, speaker)
		return game:GetService("GuiService"):ToggleFullscreen()
	end)

	addcmd('inspect', {'examine'}, function(args, speaker)
		local GuiService = game:GetService("GuiService")
		for _, v in ipairs(getPlayer(args[1], speaker)) do
			GuiService:CloseInspectMenu()
			GuiService:InspectPlayerFromUserId(Players[v].UserId)
		end
	end)

	addcmd('savegame',{'saveplace'},function(args, speaker)
		if saveinstance then
			notify("Loading","Downloading game. This will take a while")
			if getsynasset then
				saveinstance()
			else
				saveinstance(game)
			end
			notify('Game Saved','Saved place to the workspace folder within your exploit folder.')
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing saveinstance)')
		end
	end)


	addcmd('clearerror',{'clearerrors'},function(args, speaker)
		game:GetService("GuiService"):ClearError()
	end)

	addcmd('clientantikick',{'antikick'},function(args, speaker)
		local mt = getrawmetatable(game)
		local old = mt.__namecall
		local protect = newcclosure or protect_function

		if not protect then
			notify("Incompatible Exploit Warning", "Your exploit does not support protection against stack trace errors, resulting to fallback function")
			protect = function(f) return f end
		end

		setreadonly(mt, false)
		mt.__namecall = protect(function(self, ...)
			local method = getnamecallmethod()
			if method == "Kick" then
				wait(9e9)
				return
			end
			return old(self, ...)
		end)
		hookfunction(Players.LocalPlayer.Kick,protect(function() wait(9e9) end))

		notify('Client Antikick','Client anti kick is now active (only effective on localscript kick)')
	end)

	allow_rj = true
	addcmd('clientantiteleport',{'antiteleport'},function(args, speaker)
		local TeleportService, tp, tptpi = game:GetService("TeleportService")
		tp = hookfunction(TeleportService.Teleport, function(id, ...)
			if allow_rj and id == game.Placeid then
				return tp(id, ...)
			end
			return wait(9e9)
		end)
		tptpi = hookfunction(TeleportService.TeleportToPlaceInstance, function(id, server, ...)
			if allow_rj and id == game.Placeid and server == game.JobId then
				return tp(id, server, ...)
			end
			return wait(9e9)
		end)

		notify('Client AntiTP','Client anti teleport is now active (only effective on localscript teleport)')
	end)

	addcmd('allowrejoin',{'allowrj'},function(args, speaker)
		if args[1] and args[1] == 'false' then
			allow_rj = false
			notify('Client AntiTP','Allow rejoin set to false')
		else
			allow_rj = true
			notify('Client AntiTP','Allow rejoin set to true')
		end
	end)

	addcmd('cancelteleport',{'canceltp'},function(args, speaker)
		game:GetService("TeleportService"):TeleportCancel()
	end)

	addcmd('volume',{'vol'},function(args, speaker)
		local level = args[1]/10
		UserSettings():GetService("UserGameSettings").MasterVolume = level
	end)

	addcmd('antilag',{'boostfps','lowgraphics'},function(args, speaker)
		workspace:FindFirstChildOfClass('Terrain').WaterWaveSize = 0
		workspace:FindFirstChildOfClass('Terrain').WaterWaveSpeed = 0
		workspace:FindFirstChildOfClass('Terrain').WaterReflectance = 0
		workspace:FindFirstChildOfClass('Terrain').WaterTransparency = 0
		game:GetService("Lighting").GlobalShadows = false
		game:GetService("Lighting").FogEnd = 9e9
		settings().Rendering.QualityLevel = 1
		for i,v in pairs(game:GetDescendants()) do
			if v:IsA("Part") or v:IsA("UnionOperation") or v:IsA("MeshPart") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
				v.Material = "Plastic"
				v.Reflectance = 0
			elseif v:IsA("Decal") then
				v.Transparency = 1
			elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
				v.Lifetime = NumberRange.new(0)
			elseif v:IsA("Explosion") then
				v.BlastPressure = 1
				v.BlastRadius = 1
			end
		end
		for i,v in pairs(game:GetService("Lighting"):GetDescendants()) do
			if v:IsA("BlurEffect") or v:IsA("SunRaysEffect") or v:IsA("ColorCorrectionEffect") or v:IsA("BloomEffect") or v:IsA("DepthOfFieldEffect") then
				v.Enabled = false
			end
		end
	end)

	addcmd('setfpscap', {'fpscap', 'maxfps'}, function(args, speaker)
		if setfpscap and type(setfpscap) == "function" then
			local num = args[1] or 1e6
			if num == 'none' then
				return setfpscap(1e6)
			elseif num > 0 then
				return setfpscap(num)
			else
				return notify('Invalid argument', "Please provide a number above 0 or 'none'.")
			end
		else
			return notify('Incompatible Exploit', 'Your exploit does not support this command (missing setfpscap)')
		end
	end)

	addcmd('notify',{},function(args, speaker)
		notify(getstring(1))
	end)

	addcmd('lastcommand',{'lastcmd'},function(args, speaker)
		if cmdHistory[1]:sub(1,11) ~= 'lastcommand' and cmdHistory[1]:sub(1,7) ~= 'lastcmd' then
			execCmd(cmdHistory[1])
		end
	end)

	addcmd('esp',{},function(args, speaker)
		if not CHMSenabled then
			ESPenabled = true
			for i,v in pairs(Players:GetChildren()) do
				if v.ClassName == "Player" and v.Name ~= speaker.Name then
					ESP(v)
				end
			end
		else
			notify('ESP','Disable chams (nochams) before using esp')
		end
	end)

	addcmd('noesp',{'unesp'},function(args, speaker)
		ESPenabled = false
		for i,c in pairs(COREGUI:GetChildren()) do
			if string.sub(c.Name, -4) == '_ESP' then
				c:Destroy()
			end
		end
	end)

	local espParts = {}
	local partEspTrigger = nil
	function partAdded(part)
		if #espParts > 0 then
			if FindInTable(espParts,part.Name:lower()) then
				local a = Instance.new("BoxHandleAdornment")
				a.Name = part.Name:lower().."_PESP"
				a.Parent = part
				a.Adornee = part
				a.AlwaysOnTop = true
				a.ZIndex = 0
				a.Size = part.Size
				a.Transparency = 0.3
				a.Color = BrickColor.new("Lime green")
			end
		else
			partEspTrigger:Disconnect()
			partEspTrigger = nil
		end
	end

	addcmd('partesp',{},function(args, speaker)
		local partEspName = getstring(1):lower()
		if not FindInTable(espParts,partEspName) then
			table.insert(espParts,partEspName)
			for i,v in pairs(workspace:GetDescendants()) do
				if v:IsA("BasePart") and v.Name:lower() == partEspName then
					local a = Instance.new("BoxHandleAdornment")
					a.Name = partEspName.."_PESP"
					a.Parent = v
					a.Adornee = v
					a.AlwaysOnTop = true
					a.ZIndex = 0
					a.Size = v.Size
					a.Transparency = 0.3
					a.Color = BrickColor.new("Lime green")
				end
			end
		end
		if partEspTrigger == nil then
			partEspTrigger = workspace.DescendantAdded:Connect(partAdded)
		end
	end)

	addcmd('unpartesp',{'nopartesp'},function(args, speaker)
		if args[1] then
			local partEspName = getstring(1):lower()
			if FindInTable(espParts,partEspName) then
				table.remove(espParts, GetInTable(espParts, partEspName))
			end
			for i,v in pairs(workspace:GetDescendants()) do
				if v:IsA("BoxHandleAdornment") and v.Name == partEspName..'_PESP' then
					v:Destroy()
				end
			end
		else
			partEspTrigger:Disconnect()
			partEspTrigger = nil
			espParts = {}
			for i,v in pairs(workspace:GetDescendants()) do
				if v:IsA("BoxHandleAdornment") and v.Name:sub(-5) == '_PESP' then
					v:Destroy()
				end
			end
		end
	end)

	addcmd('chams',{},function(args, speaker)
		if not ESPenabled then
			CHMSenabled = true
			for i,v in pairs(Players:GetChildren()) do
				if v.ClassName == "Player" and v.Name ~= speaker.Name then
					CHMS(v)
				end
			end
		else
			notify('Chams','Disable ESP (noesp) before using chams')
		end
	end)

	addcmd('nochams',{'unchams'},function(args, speaker)
		CHMSenabled = false
		for i,v in pairs(Players:GetChildren()) do
			local chmsplr = v
			for i,c in pairs(COREGUI:GetChildren()) do
				if c.Name == chmsplr.Name..'_CHMS' then
					c:Destroy()
				end
			end
		end
	end)

	addcmd('locate',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			Locate(Players[v])
		end
	end)

	addcmd('nolocate',{'unlocate'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		if args[1] then
			for i,v in pairs(players) do
				for i,c in pairs(COREGUI:GetChildren()) do
					if c.Name == Players[v].Name..'_LC' then
						c:Destroy()
					end
				end
			end
		else
			for i,c in pairs(COREGUI:GetChildren()) do
				if string.sub(c.Name, -3) == '_LC' then
					c:Destroy()
				end
			end
		end
	end)

	viewing = nil
	addcmd('view',{'spectate'},function(args, speaker)
		StopFreecam()
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			if viewDied then
				viewDied:Disconnect()
				viewChanged:Disconnect()
			end
			viewing = Players[v]
			workspace.CurrentCamera.CameraSubject = viewing.Character
			notify('Spectate','Viewing ' .. Players[v].Name)
			local function viewDiedFunc()
				repeat wait() until Players[v].Character ~= nil and getRoot(Players[v].Character)
				workspace.CurrentCamera.CameraSubject = viewing.Character
			end
			viewDied = Players[v].CharacterAdded:Connect(viewDiedFunc)
			local function viewChangedFunc()
				workspace.CurrentCamera.CameraSubject = viewing.Character
			end
			viewChanged = workspace.CurrentCamera:GetPropertyChangedSignal("CameraSubject"):Connect(viewChangedFunc)
		end
	end)

	addcmd('viewpart',{'viewp'},function(args, speaker)
		StopFreecam()
		if args[1] then
			for i,v in pairs(workspace:GetDescendants()) do
				if v.Name:lower() == getstring(1):lower() and v:IsA("BasePart") then
					wait(0.1)
					workspace.CurrentCamera.CameraSubject = v
				end
			end
		end
	end)

	addcmd('unview',{'unspectate'},function(args, speaker)
		StopFreecam()
		if viewing ~= nil then
			viewing = nil
			notify('Spectate','View turned off')
		end
		if viewDied then
			viewDied:Disconnect()
			viewChanged:Disconnect()
		end
		workspace.CurrentCamera.CameraSubject = speaker.Character
	end)


	fcRunning = false
	local Camera = workspace.CurrentCamera
	workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
		local newCamera = workspace.CurrentCamera
		if newCamera then
			Camera = newCamera
		end
	end)

	local INPUT_PRIORITY = Enum.ContextActionPriority.High.Value

	Spring = {} do
		Spring.__index = Spring

		function Spring.new(freq, pos)
			local self = setmetatable({}, Spring)
			self.f = freq
			self.p = pos
			self.v = pos*0
			return self
		end

		function Spring:Update(dt, goal)
			local f = self.f*2*math.pi
			local p0 = self.p
			local v0 = self.v

			local offset = goal - p0
			local decay = math.exp(-f*dt)

			local p1 = goal + (v0*dt - offset*(f*dt + 1))*decay
			local v1 = (f*dt*(offset*f - v0) + v0)*decay

			self.p = p1
			self.v = v1

			return p1
		end

		function Spring:Reset(pos)
			self.p = pos
			self.v = pos*0
		end
	end

	local cameraPos = Vector3.new()
	local cameraRot = Vector2.new()

	local velSpring = Spring.new(5, Vector3.new())
	local panSpring = Spring.new(5, Vector2.new())

	Input = {} do

		keyboard = {
			W = 0,
			A = 0,
			S = 0,
			D = 0,
			E = 0,
			Q = 0,
			Up = 0,
			Down = 0,
			LeftShift = 0,
		}

		mouse = {
			Delta = Vector2.new(),
		}

		NAV_KEYBOARD_SPEED = Vector3.new(1, 1, 1)
		PAN_MOUSE_SPEED = Vector2.new(1, 1)*(math.pi/64)
		NAV_ADJ_SPEED = 0.75
		NAV_SHIFT_MUL = 0.25

		navSpeed = 1

		function Input.Vel(dt)
			navSpeed = math.clamp(navSpeed + dt*(keyboard.Up - keyboard.Down)*NAV_ADJ_SPEED, 0.01, 4)

			local kKeyboard = Vector3.new(
				keyboard.D - keyboard.A,
				keyboard.E - keyboard.Q,
				keyboard.S - keyboard.W
			)*NAV_KEYBOARD_SPEED

			local shift = UserInputService:IsKeyDown(Enum.KeyCode.LeftShift)

			return (kKeyboard)*(navSpeed*(shift and NAV_SHIFT_MUL or 1))
		end

		function Input.Pan(dt)
			local kMouse = mouse.Delta*PAN_MOUSE_SPEED
			mouse.Delta = Vector2.new()
			return kMouse
		end

		do
			function Keypress(action, state, input)
				keyboard[input.KeyCode.Name] = state == Enum.UserInputState.Begin and 1 or 0
				return Enum.ContextActionResult.Sink
			end

			function MousePan(action, state, input)
				local delta = input.Delta
				mouse.Delta = Vector2.new(-delta.y, -delta.x)
				return Enum.ContextActionResult.Sink
			end

			function Zero(t)
				for k, v in pairs(t) do
					t[k] = v*0
				end
			end

			function Input.StartCapture()
				game:GetService("ContextActionService"):BindActionAtPriority("FreecamKeyboard",Keypress,false,INPUT_PRIORITY,
				Enum.KeyCode.W,
				Enum.KeyCode.A,
				Enum.KeyCode.S,
				Enum.KeyCode.D,
				Enum.KeyCode.E,
				Enum.KeyCode.Q,
				Enum.KeyCode.Up,
				Enum.KeyCode.Down
				)
				game:GetService("ContextActionService"):BindActionAtPriority("FreecamMousePan",MousePan,false,INPUT_PRIORITY,Enum.UserInputType.MouseMovement)
			end

			function Input.StopCapture()
				navSpeed = 1
				Zero(keyboard)
				Zero(mouse)
				game:GetService("ContextActionService"):UnbindAction("FreecamKeyboard")
				game:GetService("ContextActionService"):UnbindAction("FreecamMousePan")
			end
		end
	end

	function GetFocusDistance(cameraFrame)
		local znear = 0.1
		local viewport = Camera.ViewportSize
		local projy = 2*math.tan(cameraFov/2)
		local projx = viewport.x/viewport.y*projy
		local fx = cameraFrame.rightVector
		local fy = cameraFrame.upVector
		local fz = cameraFrame.lookVector

		local minVect = Vector3.new()
		local minDist = 512

		for x = 0, 1, 0.5 do
			for y = 0, 1, 0.5 do
				local cx = (x - 0.5)*projx
				local cy = (y - 0.5)*projy
				local offset = fx*cx - fy*cy + fz
				local origin = cameraFrame.p + offset*znear
				local _, hit = workspace:FindPartOnRay(Ray.new(origin, offset.unit*minDist))
				local dist = (hit - origin).magnitude
				if minDist > dist then
					minDist = dist
					minVect = offset.unit
				end
			end
		end

		return fz:Dot(minVect)*minDist
	end

	local function StepFreecam(dt)
		local vel = velSpring:Update(dt, Input.Vel(dt))
		local pan = panSpring:Update(dt, Input.Pan(dt))

		local zoomFactor = math.sqrt(math.tan(math.rad(70/2))/math.tan(math.rad(cameraFov/2)))

		cameraRot = cameraRot + pan*Vector2.new(0.75, 1)*8*(dt/zoomFactor)
		cameraRot = Vector2.new(math.clamp(cameraRot.x, -math.rad(90), math.rad(90)), cameraRot.y%(2*math.pi))

		local cameraCFrame = CFrame.new(cameraPos)*CFrame.fromOrientation(cameraRot.x, cameraRot.y, 0)*CFrame.new(vel*Vector3.new(1, 1, 1)*64*dt)
		cameraPos = cameraCFrame.p

		Camera.CFrame = cameraCFrame
		Camera.Focus = cameraCFrame*CFrame.new(0, 0, -GetFocusDistance(cameraCFrame))
		Camera.FieldOfView = cameraFov
	end

	local PlayerState = {} do
		mouseBehavior = ""
		mouseIconEnabled = ""
		cameraType = ""
		cameraFocus = ""
		cameraCFrame = ""
		cameraFieldOfView = ""

		function PlayerState.Push()
			cameraFieldOfView = Camera.FieldOfView
			Camera.FieldOfView = 70

			cameraType = Camera.CameraType
			Camera.CameraType = Enum.CameraType.Custom

			cameraCFrame = Camera.CFrame
			cameraFocus = Camera.Focus

			mouseIconEnabled = UserInputService.MouseIconEnabled
			UserInputService.MouseIconEnabled = true

			mouseBehavior = UserInputService.MouseBehavior
			UserInputService.MouseBehavior = Enum.MouseBehavior.Default
		end

		function PlayerState.Pop()
			Camera.FieldOfView = 70

			Camera.CameraType = cameraType
			cameraType = nil

			Camera.CFrame = cameraCFrame
			cameraCFrame = nil

			Camera.Focus = cameraFocus
			cameraFocus = nil

			UserInputService.MouseIconEnabled = mouseIconEnabled
			mouseIconEnabled = nil

			UserInputService.MouseBehavior = mouseBehavior
			mouseBehavior = nil
		end
	end

	function StartFreecam(pos)
		if fcRunning then
			StopFreecam()
		end
		local cameraCFrame = Camera.CFrame
		if pos then
			cameraCFrame = pos
		end
		cameraRot = Vector2.new()
		cameraPos = cameraCFrame.p
		cameraFov = Camera.FieldOfView

		velSpring:Reset(Vector3.new())
		panSpring:Reset(Vector2.new())

		PlayerState.Push()
		game:GetService("RunService"):BindToRenderStep("Freecam", Enum.RenderPriority.Camera.Value, StepFreecam)
		Input.StartCapture()
		fcRunning = true
	end

	function StopFreecam()
		if not fcRunning then return end
		Input.StopCapture()
		game:GetService("RunService"):UnbindFromRenderStep("Freecam")
		PlayerState.Pop()
		workspace.Camera.FieldOfView = 70
		fcRunning = false
	end

	addcmd('freecam',{'fc'},function(args, speaker)
		StartFreecam()
	end)

	addcmd('freecampos',{'fcpos','fcp','freecamposition','fcposition'},function(args, speaker)
		if not args[1] then return end
		local freecamPos = CFrame.new(args[1],args[2],args[3])
		StartFreecam(freecamPos)
	end)

	addcmd('freecamwaypoint',{'fcwp'},function(args, speaker)
		local WPName = tostring(getstring(1))
		if speaker.Character then
			for i,_ in pairs(WayPoints) do
				local x = WayPoints[i].COORD[1]
				local y = WayPoints[i].COORD[2]
				local z = WayPoints[i].COORD[3]
				if tostring(WayPoints[i].NAME):lower() == tostring(WPName):lower() then
					StartFreecam(CFrame.new(x,y,z))
				end
			end
			for i,_ in pairs(pWayPoints) do
				if tostring(pWayPoints[i].NAME):lower() == tostring(WPName):lower() then
					StartFreecam(CFrame.new(pWayPoints[i].COORD[1].Position))
				end
			end
		end
	end)

	addcmd('freecamgoto',{'fcgoto','freecamtp','fctp'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			StartFreecam(getRoot(Players[v].Character).CFrame)
		end
	end)

	addcmd('unfreecam',{'nofreecam','unfc','nofc'},function(args, speaker)
		StopFreecam()
	end)

	addcmd('freecamspeed',{'fcspeed'},function(args, speaker)
		local FCspeed = args[1] or 1
		if isNumber(FCspeed) then
			NAV_KEYBOARD_SPEED = Vector3.new(FCspeed, FCspeed, FCspeed)
		end
	end)

	addcmd('gotocamera',{'gotocam','tocam'},function(args, speaker)
		getRoot(speaker.Character).CFrame = workspace.Camera.CFrame
	end)

	addcmd('tweengotocamera',{'tweengotocam','tgotocam','ttocam'},function(args, speaker)
		game:GetService("TweenService"):Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = workspace.Camera.CFrame}):Play()
	end)

	addcmd('fov',{},function(args, speaker)
		local fov = args[1] or 70
		if isNumber(fov) then
			workspace.CurrentCamera.FieldOfView = fov
		end
	end)

	local preMaxZoom = Players.LocalPlayer.CameraMaxZoomDistance
	local preMinZoom = Players.LocalPlayer.CameraMinZoomDistance
	addcmd('lookat',{},function(args, speaker)
		if speaker.CameraMaxZoomDistance ~= 0.5 then
			preMaxZoom = speaker.CameraMaxZoomDistance
			preMinZoom = speaker.CameraMinZoomDistance
		end
		speaker.CameraMaxZoomDistance = 0.5
		speaker.CameraMinZoomDistance = 0.5
		wait()
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			local target = Players[v].Character
			if target and target:FindFirstChild('Head') then
				workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.p, target.Head.CFrame.p)
				wait(0.1)
			end
		end
		speaker.CameraMaxZoomDistance = preMaxZoom
		speaker.CameraMinZoomDistance = preMinZoom
	end)

	addcmd('fixcam',{'restorecam'},function(args, speaker)
		StopFreecam()
		execCmd('unview')
		workspace.CurrentCamera:remove()
		wait(.1)
		repeat wait() until speaker.Character ~= nil
		workspace.CurrentCamera.CameraSubject = speaker.Character:FindFirstChildWhichIsA('Humanoid')
		workspace.CurrentCamera.CameraType = "Custom"
		speaker.CameraMinZoomDistance = 0.5
		speaker.CameraMaxZoomDistance = 400
		speaker.CameraMode = "Classic"
		speaker.Character.Head.Anchored = false
	end)

	addcmd('enableshiftlock',{'enablesl','shiftlock'},function(args, speaker)
		speaker.DevEnableMouseLock = true
		notify('Shiftlock','Shift lock is now available')
	end)

	addcmd('firstp',{},function(args, speaker)
		speaker.CameraMode = "LockFirstPerson"
	end)

	addcmd('thirdp',{},function(args, speaker)
		speaker.CameraMode = "Classic"
	end)

	addcmd('noclipcam', {'nccam'}, function(args, speaker)
		local sc = (debug and debug.setconstant) or setconstant
		local gc = (debug and debug.getconstants) or getconstants
		if not sc or not getgc or not gc then
			return notify('Incompatible Exploit', 'Your exploit does not support this command (missing setconstant or getconstants or getgc)')
		end
		local pop = speaker.PlayerScripts.PlayerModule.CameraModule.ZoomController.Popper
		for _, v in pairs(getgc()) do
			if type(v) == 'function' and getfenv(v).script == pop then
				for i, v1 in pairs(gc(v)) do
					if tonumber(v1) == .25 then
						sc(v, i, 0)
					elseif tonumber(v1) == 0 then
						sc(v, i, .25)
					end
				end
			end
		end
	end)


	addcmd('maxzoom',{},function(args, speaker)
		speaker.CameraMaxZoomDistance = args[1]
	end)

	addcmd('minzoom',{},function(args, speaker)
		speaker.CameraMinZoomDistance = args[1]
	end)

	addcmd('unlockws',{'unlockworkspace'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") then
				v.Locked = false
			end
		end
	end)

	addcmd('lockws',{'lockworkspace'},function(args, speaker) 
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") then
				v.Locked = true
			end
		end
	end)

	addcmd('delete',{'remove'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.Name:lower() == getstring(1):lower() then
				v:Destroy()
			end
		end
		notify('Item(s) Deleted','Deleted ' ..getstring(1))
	end)

	addcmd('deleteclass',{'removeclass','deleteclassname','removeclassname','dc'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.ClassName:lower() == getstring(1):lower() then
				v:Destroy()
			end
		end
		notify('Item(s) Deleted','Deleted items with ClassName ' ..getstring(1))
	end)

	addcmd('chardelete',{'charremove','cd'},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v.Name:lower() == getstring(1):lower() then
				v:Destroy()
			end
		end
		notify('Item(s) Deleted','Deleted ' ..getstring(1))
	end)

	addcmd('chardeleteclass',{'charremoveclass','chardeleteclassname','charremoveclassname','cdc'},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v.ClassName:lower() == getstring(1):lower() then
				v:Destroy()
			end
		end
		notify('Item(s) Deleted','Deleted items with ClassName ' ..getstring(1))
	end)

	addcmd('deletevelocity',{'dv','removevelocity','removeforces'},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v:IsA("BodyVelocity") or v:IsA("BodyGyro") or v:IsA("RocketPropulsion") or v:IsA("BodyThrust") or v:IsA("BodyAngularVelocity") or v:IsA("AngularVelocity") or v:IsA("BodyForce") or v:IsA("VectorForce") or v:IsA("LineForce") then
				v:Destroy()
			end
		end
	end)

	addcmd('deleteinvisparts',{'deleteinvisibleparts','dip'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") and v.Transparency == 1 and v.CanCollide then
				v:Destroy()
			end
		end
	end)

	local shownParts = {}
	addcmd('invisibleparts',{'invisparts'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") and v.Transparency == 1 then
				if not table.find(shownParts,v) then
					table.insert(shownParts,v)
				end
				v.Transparency = 0
			end
		end
	end)

	addcmd('uninvisibleparts',{'uninvisparts'},function(args, speaker)
		for i,v in pairs(shownParts) do
			v.Transparency = 1
		end
		shownParts = {}
	end)

	addcmd('btools',{},function(args, speaker)
		Instance.new("HopperBin", speaker:FindFirstChildOfClass("Backpack")).BinType = 1
		Instance.new("HopperBin", speaker:FindFirstChildOfClass("Backpack")).BinType = 2
		Instance.new("HopperBin", speaker:FindFirstChildOfClass("Backpack")).BinType = 3
		Instance.new("HopperBin", speaker:FindFirstChildOfClass("Backpack")).BinType = 4
	end)

	addcmd('f3x',{'fex'},function(args, speaker)
		loadstring(game:GetObjects("rbxassetid://6695644299")[1].Source)()
	end)

	addcmd('partpath',{'partname'},function(args, speaker)
		selectPart()
	end)

	addcmd('antiafk',{'antiidle'},function(args, speaker)
		local GC = getconnections or get_signal_cons
		if GC then
			for i,v in pairs(GC(Players.LocalPlayer.Idled)) do
				if v["Disable"] then
					v["Disable"](v)
				elseif v["Disconnect"] then
					v["Disconnect"](v)
				end
			end
			notify('Anti Idle','Anti idle is enabled')
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing getconnections)')
		end
	end)

	addcmd('datalimit',{},function(args, speaker)
		if tonumber(args[1]) then
			game:GetService("NetworkClient"):SetOutgoingKBPSLimit(args[1])
		end
	end)

	addcmd('replicationlag',{'backtrack'},function(args, speaker)
		if tonumber(args[1]) then
			settings():GetService("NetworkSettings").IncomingReplicationLag = args[1]
		end
	end)

	addcmd('noprompts', {'nopurchaseprompts'}, function(args, speaker)
		COREGUI.PurchasePromptApp.Enabled = false
	end)

	addcmd('showprompts', {'showpurchaseprompts'}, function(args, speaker)
		COREGUI.PurchasePromptApp.Enabled = true
	end)

	addcmd('age',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		local ages = {}
		for i,v in pairs(players) do
			local p = Players[v]
			table.insert(ages, p.Name.."'s age is: "..p.AccountAge)
		end
		notify('Account Age',table.concat(ages, ',\n'))
	end)

	addcmd('chatage',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		local ages = {}
		for i,v in pairs(players) do
			local p = Players[v]
			table.insert(ages, p.Name.."'s age is: "..p.AccountAge)
		end
		local chatString = table.concat(ages, ', ')
		game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(chatString, "All")
	end)

	addcmd('joindate',{'jd'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		local dates = {}
		notify("Loading",'Hold on a sec')
		for i,v in pairs(players) do
			local user = game:HttpGet("https://users.roblox.com/v1/users/"..Players[v].UserId)
			local json = game:GetService("HttpService"):JSONDecode(user)
			local date = json["created"]:sub(1,10)
			local splitDates = string.split(date,"-")
			table.insert(dates,Players[v].Name.." joined: "..splitDates[2].."/"..splitDates[3].."/"..splitDates[1])
		end
		notify('Join Date (Month/Day/Year)',table.concat(dates, ',\n'))
	end)

	addcmd('chatjoindate',{'cjd'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		local dates = {}
		notify("Loading",'Hold on a sec')
		for i,v in pairs(players) do
			local user = game:HttpGet("https://users.roblox.com/v1/users/"..Players[v].UserId)
			local json = game:GetService("HttpService"):JSONDecode(user)
			local date = json["created"]:sub(1,10)
			local splitDates = string.split(date,"-")
			table.insert(dates,Players[v].Name.." joined: "..splitDates[2].."/"..splitDates[3].."/"..splitDates[1])
		end
		local chatString = table.concat(dates, ', ')
		game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(chatString, "All")
	end)

	addcmd('copyname',{'copyuser'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			local name = tostring(Players[v].Name)
			toClipboard(name)
		end
	end)

	addcmd('userid',{'id'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			local id = tostring(Players[v].UserId)
			notify('User ID',id)
		end
	end)

	addcmd('copyid',{'copyuserid'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			local id = tostring(Players[v].UserId)
			toClipboard(id)
		end
	end)

	addcmd('creatorid',{'creator'},function(args, speaker)
		if game.CreatorType == Enum.CreatorType.User then
			notify('Creator ID',game.CreatorId)
		elseif game.CreatorType == Enum.CreatorType.Group then
			local OwnerID = game:GetService('GroupService'):GetGroupInfoAsync(game.CreatorId).Owner.Id
			speaker.UserId = OwnerID
			notify('Creator ID',OwnerID)
		end
	end)

	addcmd('copycreatorid',{'copycreator'},function(args, speaker)
		if game.CreatorType == Enum.CreatorType.User then
			toClipboard(game.CreatorId)
			notify('Copied ID','Copied creator ID to clipboard')
		elseif game.CreatorType == Enum.CreatorType.Group then
			local OwnerID = game:GetService('GroupService'):GetGroupInfoAsync(game.CreatorId).Owner.Id
			toClipboard(OwnerID)
			notify('Copied ID','Copied creator ID to clipboard')
		end
	end)

	addcmd('setcreatorid',{'setcreator'},function(args, speaker)
		if game.CreatorType == Enum.CreatorType.User then
			speaker.UserId = game.CreatorId
			notify('Set ID','Set UserId to '..game.CreatorId)
		elseif game.CreatorType == Enum.CreatorType.Group then
			local OwnerID = game:GetService('GroupService'):GetGroupInfoAsync(game.CreatorId).Owner.Id
			speaker.UserId = OwnerID
			notify('Set ID','Set UserId to '..OwnerID)
		end
	end)

	addcmd('appearanceid',{'aid'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			local aid = tostring(Players[v].CharacterAppearanceId)
			notify('Appearance ID',aid)
		end
	end)

	addcmd('copyappearanceid',{'caid'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players) do
			local aid = tostring(Players[v].CharacterAppearanceId)
			toClipboard(aid)
		end
	end)

	addcmd('goto',{'to'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			if Players[v].Character ~= nil then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				getRoot(speaker.Character).CFrame = getRoot(Players[v].Character).CFrame + Vector3.new(3,1,0)
			end
		end
		execCmd('breakvelocity')
	end)

	addcmd('tweengoto',{'tgoto','tto','tweento'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			if Players[v].Character ~= nil then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				game:GetService("TweenService"):Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = getRoot(Players[v].Character).CFrame + Vector3.new(3,1,0)}):Play()
			end
		end
		execCmd('breakvelocity')
	end)

	addcmd('vehiclegoto',{'vgoto','vtp','vehicletp'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			if Players[v].Character ~= nil then
				local seat = speaker.Character.Humanoid.SeatPart
				local vehicleModel = seat.Parent
				repeat
					if vehicleModel.ClassName ~= "Model" then
						vehicleModel = vehicleModel.Parent
					end
				until vehicleModel.ClassName == "Model"
				wait(0.1)
				vehicleModel:MoveTo(getRoot(Players[v].Character).Position)
			end
		end
	end)

	local vnoclipParts = {}
	addcmd('vehiclenoclip',{'vnoclip'},function(args, speaker)
		vnoclipParts = {}
		local seat = speaker.Character.Humanoid.SeatPart
		local vehicleModel = seat.Parent
		repeat
			if vehicleModel.ClassName ~= "Model" then
				vehicleModel = vehicleModel.Parent
			end
		until vehicleModel.ClassName == "Model"
		wait(0.1)
		execCmd('noclip')
		for i,v in pairs(vehicleModel:GetDescendants()) do
			if v:IsA("BasePart") and v.CanCollide then
				table.insert(vnoclipParts,v)
				v.CanCollide = false
			end
		end
	end)

	addcmd('vehicleclip',{'vclip','unvnoclip','unvehiclenoclip'},function(args, speaker)
		execCmd('clip')
		for i,v in pairs(vnoclipParts) do
			v.CanCollide = true
		end
		vnoclipParts = {}
	end)

	addcmd('togglevnoclip',{},function(args, speaker)
		if Clip then
			execCmd('vnoclip')
		else
			execCmd('vclip')
		end
	end)

	addcmd('clientbring',{'cbring'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			if Players[v].Character ~= nil then
				if Players[v].Character:FindFirstChild("Humanoid") then
					Players[v].Character:FindFirstChildOfClass('Humanoid').Sit = false
				end
				wait()
				getRoot(Players[v].Character).CFrame = getRoot(speaker.Character).CFrame + Vector3.new(3,1,0)
			end
		end
	end)

	local bringT = {}
	addcmd('loopbring',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			spawn(function()
				if Players[v].Name ~= speaker.Name and not FindInTable(bringT, Players[v].Name) then
					table.insert(bringT, Players[v].Name)
					local plrName = Players[v].Name
					local pchar=Players[v].Character
					local distance = 3
					if args[2] and isNumber(args[2]) then
						distance = args[2]
					end
					local lDelay = 0
					if args[3] and isNumber(args[3]) then
						lDelay = args[3]
					end
					repeat
						for i,c in pairs(players) do
							if Players:FindFirstChild(v) then
								pchar = Players[v].Character
								if pchar~= nil and Players[v].Character ~= nil and getRoot(pchar) and speaker.Character ~= nil and getRoot(speaker.Character) then
									getRoot(pchar).CFrame = getRoot(speaker.Character).CFrame + Vector3.new(distance,1,0)
								end
								wait(lDelay)
							else 
								for a,b in pairs(bringT) do if b == plrName then table.remove(bringT, a) end end
							end
						end
					until not FindInTable(bringT, plrName)
				end
			end)
		end
	end)

	addcmd('unloopbring',{'noloopbring'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			spawn(function()
				for a,b in pairs(bringT) do if b == Players[v].Name then table.remove(bringT, a) end end
			end)
		end
	end)

	local walkto
	addcmd('walkto',{'follow'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			if Players[v].Character ~= nil then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				walkto = true
				repeat wait()
					speaker.Character.Humanoid:MoveTo(getRoot(Players[v].Character).Position)
				until Players[v].Character == nil or not getRoot(Players[v].Character) or walkto == false
			end
		end
	end)

	addcmd('pathfindwalkto',{'pathfindfollow'},function(args, speaker)
		walkto = false
		wait()
		local players = getPlayer(args[1], speaker)
		local PathService = game:GetService("PathfindingService")
		local hum = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
		local path = PathService:CreatePath()
		for i,v in pairs(players)do
			if Players[v].Character ~= nil then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				walkto = true
				repeat wait()
					local success, response = pcall(function()
						path:ComputeAsync(getRoot(speaker.Character).Position, getRoot(Players[v].Character).Position)
						local waypoints = path:GetWaypoints()
						local distance 
						for waypointIndex, waypoint in pairs(waypoints) do
							local waypointPosition = waypoint.Position
							hum:MoveTo(waypointPosition)
							repeat 
								distance = (waypointPosition - hum.Parent.PrimaryPart.Position).magnitude
								wait()
							until
							distance <= 5
						end	 
					end)
					if not success then
						speaker.Character.Humanoid:MoveTo(getRoot(Players[v].Character).Position)
					end
				until Players[v].Character == nil or not getRoot(Players[v].Character) or walkto == false
			end
		end
	end)

	addcmd('unwalkto',{'nowalkto','unfollow','nofollow'},function(args, speaker)
		walkto = false
	end)

	addcmd('freeze',{'fr'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		if players ~= nil then
			for i,v in pairs(players) do
				spawn(function()
					for i, x in next, Players[v].Character:GetDescendants() do
						if x:IsA("BasePart") and not x.Anchored then
							x.Anchored = true
						end
					end
				end)
			end
		end
	end)

	addcmd('thaw',{'unfreeze','unfr'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		if players ~= nil then
			for i,v in pairs(players) do
				spawn(function()
					for i, x in next, Players[v].Character:GetDescendants() do
						if x:IsA("BasePart") and x.Anchored then
							x.Anchored = false
						end
					end
				end)
			end
		end
	end)

	oofing = false
	addcmd('loopoof',{},function(args, speaker)
		oofing = true
		repeat wait(0.1)
			for i,v in pairs(Players:GetPlayers()) do
				if v.Character ~= nil and v.Character:FindFirstChild'Head' then
					for _,x in pairs(v.Character.Head:GetChildren()) do
						if x:IsA'Sound' then x.Playing = true end
					end
				end
			end
		until oofing == false
	end)

	addcmd('unloopoof',{},function(args, speaker)
		oofing = false
	end)

	local notifiedRespectFiltering = false
	addcmd('muteboombox',{},function(args, speaker)
		if not notifiedRespectFiltering and game:GetService("SoundService").RespectFilteringEnabled then notifiedRespectFiltering = true notify('RespectFilteringEnabled','RespectFilteringEnabled is set to true (the command will still work but may only be clientsided)') end
		local players = getPlayer(args[1], speaker)
		if players ~= nil then
			for i,v in pairs(players) do
				spawn(function()
					for i, x in next, Players[v].Character:GetDescendants() do
						if x:IsA("Sound") and x.Playing == true then
							x.Playing = false
						end
					end
					for i, x in next, Players[v]:FindFirstChildOfClass("Backpack"):GetDescendants() do
						if x:IsA("Sound") and x.Playing == true then
							x.Playing = false
						end
					end
				end)
			end
		end
	end)

	addcmd('unmuteboombox',{},function(args, speaker)
		if not notifiedRespectFiltering and game:GetService("SoundService").RespectFilteringEnabled then notifiedRespectFiltering = true notify('RespectFilteringEnabled','RespectFilteringEnabled is set to true (the command will still work but may only be clientsided)') end
		local players = getPlayer(args[1], speaker)
		if players ~= nil then
			for i,v in pairs(players) do
				spawn(function()
					for i, x in next, Players[v].Character:GetDescendants() do
						if x:IsA("Sound") and x.Playing == false then
							x.Playing = true
						end
					end
				end)
			end
		end
	end)

	addcmd('reset',{},function(args, speaker)
		speaker.Character:BreakJoints()
	end)

	addcmd('respawn',{},function(args, speaker)
		respawn(speaker)
	end)

	addcmd('refresh',{'re'},function(args, speaker)
		refresh(speaker)
	end)

	addcmd('god',{},function(args, speaker)
		local Cam = workspace.CurrentCamera
		local Pos, Char = Cam.CFrame, speaker.Character
		local Human = Char and Char.FindFirstChildWhichIsA(Char, "Humanoid")
		local nHuman = Human.Clone(Human)
		nHuman.Parent, speaker.Character = Char, nil
		nHuman.SetStateEnabled(nHuman, 15, false)
		nHuman.SetStateEnabled(nHuman, 1, false)
		nHuman.SetStateEnabled(nHuman, 0, false)
		nHuman.BreakJointsOnDeath, Human = true, Human.Destroy(Human)
		speaker.Character, Cam.CameraSubject, Cam.CFrame = Char, nHuman, wait() and Pos
		nHuman.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
		local Script = Char.FindFirstChild(Char, "Animate")
		if Script then
			Script.Disabled = true
			wait()
			Script.Disabled = false
		end
		nHuman.Health = nHuman.MaxHealth
	end)

	invisRunning = false
	addcmd('invisible',{'invis'},function(args, speaker)
		if invisRunning then return end
		invisRunning = true
		-- Full credit to AmokahFox @V3rmillion
		local Player = speaker
		repeat wait(.1) until Player.Character
		local Character = Player.Character
		Character.Archivable = true
		local IsInvis = false
		local IsRunning = true
		local InvisibleCharacter = Character:Clone()
		InvisibleCharacter.Parent = game:GetService'Lighting'
		local Void = workspace.FallenPartsDestroyHeight
		InvisibleCharacter.Name = ""
		local CF

		local invisFix = game:GetService("RunService").Stepped:Connect(function()
			pcall(function()
				local IsInteger
				if tostring(Void):find'-' then
					IsInteger = true
				else
					IsInteger = false
				end
				local Pos = Player.Character.HumanoidRootPart.Position
				local Pos_String = tostring(Pos)
				local Pos_Seperate = Pos_String:split(', ')
				local X = tonumber(Pos_Seperate[1])
				local Y = tonumber(Pos_Seperate[2])
				local Z = tonumber(Pos_Seperate[3])
				if IsInteger == true then
					if Y <= Void then
						Respawn()
					end
				elseif IsInteger == false then
					if Y >= Void then
						Respawn()
					end
				end
			end)
		end)

		for i,v in pairs(InvisibleCharacter:GetDescendants())do
			if v:IsA("BasePart") then
				if v.Name == "HumanoidRootPart" then
					v.Transparency = 1
				else
					v.Transparency = .5
				end
			end
		end

		function Respawn()
			IsRunning = false
			if IsInvis == true then
				pcall(function()
					Player.Character = Character
					wait()
					Character.Parent = workspace
					Character:FindFirstChildWhichIsA'Humanoid':Destroy()
					IsInvis = false
					InvisibleCharacter.Parent = nil
					invisRunning = false
				end)
			elseif IsInvis == false then
				pcall(function()
					Player.Character = Character
					wait()
					Character.Parent = workspace
					Character:FindFirstChildWhichIsA'Humanoid':Destroy()
					TurnVisible()
				end)
			end
		end

		local invisDied
		invisDied = InvisibleCharacter:FindFirstChildOfClass'Humanoid'.Died:Connect(function()
			Respawn()
			invisDied:Disconnect()
		end)

		if IsInvis == true then return end
		IsInvis = true
		CF = workspace.CurrentCamera.CFrame
		local CF_1 = Player.Character.HumanoidRootPart.CFrame
		Character:MoveTo(Vector3.new(0,math.pi*1000000,0))
		workspace.CurrentCamera.CameraType = Enum.CameraType.Scriptable
		wait(.2)
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
		InvisibleCharacter = InvisibleCharacter
		Character.Parent = game:GetService'Lighting'
		InvisibleCharacter.Parent = workspace
		InvisibleCharacter.HumanoidRootPart.CFrame = CF_1
		Player.Character = InvisibleCharacter
		execCmd('fixcam')
		Player.Character.Animate.Disabled = true
		Player.Character.Animate.Disabled = false

		function TurnVisible()
			if IsInvis == false then return end
			invisFix:Disconnect()
			invisDied:Disconnect()
			CF = workspace.CurrentCamera.CFrame
			Character = Character
			local CF_1 = Player.Character.HumanoidRootPart.CFrame
			Character.HumanoidRootPart.CFrame = CF_1
			InvisibleCharacter:Destroy()
			Player.Character = Character
			Character.Parent = workspace
			IsInvis = false
			Player.Character.Animate.Disabled = true
			Player.Character.Animate.Disabled = false
			invisDied = Character:FindFirstChildOfClass'Humanoid'.Died:Connect(function()
				Respawn()
				invisDied:Disconnect()
			end)
			invisRunning = false
		end
		notify('Invisible','You now appear invisible to other players')
	end)

	addcmd('visible',{'vis'},function(args, speaker)
		TurnVisible()
	end)

	addcmd('toggleinvis',{},function(args, speaker)
		if invisRunning then
			execCmd('visible')
		else
			execCmd('invisible')
		end
	end)

	addcmd('toolinvisible',{'toolinvis','tinvis'},function(args, speaker)
		local Char  = Players.LocalPlayer.Character
		local touched = false
		local tpdback = false
		local box = Instance.new('Part')
		box.Anchored = true
		box.CanCollide = true
		box.Size = Vector3.new(10,1,10)
		box.Position = Vector3.new(0,10000,0)
		box.Parent = workspace
		local boxTouched = box.Touched:connect(function(part)
			if (part.Parent.Name == Players.LocalPlayer.Name) then
				if touched == false then
					touched = true
					local function apply()
						local no = Char.HumanoidRootPart:Clone()
						wait(.25)
						Char.HumanoidRootPart:Destroy()
						no.Parent = Char
						Char:MoveTo(loc)
						touched = false
					end
					if Char then
						apply()
					end
				end
			end
		end)
		repeat wait() until Char
		local cleanUp
		cleanUp = Players.LocalPlayer.CharacterAdded:connect(function(char)
			boxTouched:Disconnect()
			box:Destroy()
			cleanUp:Disconnect()
		end)
		loc = Char.HumanoidRootPart.Position
		Char:MoveTo(box.Position + Vector3.new(0,.5,0))
	end)

	addcmd('strengthen',{},function(args, speaker)
		for _, child in pairs(speaker.Character:GetDescendants()) do
			if child.ClassName == "Part" then
				if args[1] then
					child.CustomPhysicalProperties = PhysicalProperties.new(args[1], 0.3, 0.5)
				else
					child.CustomPhysicalProperties = PhysicalProperties.new(100, 0.3, 0.5)
				end
			end
		end
	end)

	addcmd('weaken',{},function(args, speaker)
		for _, child in pairs(speaker.Character:GetDescendants()) do
			if child.ClassName == "Part" then
				if args[1] then
					child.CustomPhysicalProperties = PhysicalProperties.new(-args[1], 0.3, 0.5)
				else
					child.CustomPhysicalProperties = PhysicalProperties.new(0, 0.3, 0.5)
				end
			end
		end
	end)

	addcmd('unweaken',{'unstrengthen'},function(args, speaker)
		for _, child in pairs(speaker.Character:GetDescendants()) do
			if child.ClassName == "Part" then
				child.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0.3, 0.5)
			end
		end
	end)

	addcmd('breakvelocity', {}, function(args, speaker)
		local BeenASecond, V3 = false, Vector3.new(0, 0, 0)
		delay(1, function()
			BeenASecond = true
		end)
		while not BeenASecond do
			for _, v in ipairs(speaker.Character:GetDescendants()) do
				if v.IsA(v, "BasePart") then
					v.Velocity, v.RotVelocity = V3, V3
				end
			end
			wait()
		end
	end)

	addcmd('jpower',{'jumppower','jp'},function(args, speaker)
		local jpower = args[1] or 50
		if isNumber(jpower) then
			speaker.Character:FindFirstChildOfClass('Humanoid').JumpPower = jpower
		end
	end)

	addcmd('maxslopeangle',{'msa'},function(args, speaker)
		local sangle = args[1] or 89
		if isNumber(sangle) then
			speaker.Character:FindFirstChildOfClass('Humanoid').MaxSlopeAngle = sangle
		end
	end)

	addcmd('gravity',{'grav'},function(args, speaker)
		local grav = args[1] or 196.2
		if isNumber(grav) then
			workspace.Gravity = grav
		end
	end)

	addcmd('hipheight',{'hheight'},function(args, speaker)
		local height
		if r15(speaker) then
			height = args[1] or 2.1
		else
			height = args[1] or 0
		end
		speaker.Character:FindFirstChildOfClass('Humanoid').HipHeight = height
	end)

	addcmd('dance', {}, function(args, speaker)
		if not r15(speaker) then
			local dances = {"27789359", "30196114", "248263260", "45834924", "33796059", "28488254", "52155728"}
			local animation = Instance.new("Animation")
			animation.AnimationId = "rbxassetid://" .. dances[math.random(1, #dances)]
			animTrack = speaker.Character.Humanoid:LoadAnimation(animation)
			animTrack:Play()
		else
			notify('R6 Required', 'This command requires the r6 rig type')
		end
	end)

	addcmd('undance',{'nodance'},function(args, speaker)
		animTrack:Stop()
		animTrack:Destroy()
	end)

	addcmd('nolimbs',{'rlimbs'},function(args, speaker)
		if r15(speaker) then
			for i,v in pairs(speaker.Character:GetChildren()) do
				if v:IsA("BasePart") and
					v.Name == "RightUpperLeg" or
					v.Name == "LeftUpperLeg" or
					v.Name == "RightUpperArm" or
					v.Name == "LeftUpperArm" then
					v:Destroy()
				end
			end
		else
			for i,v in pairs(speaker.Character:GetChildren()) do
				if v:IsA("BasePart") and
					v.Name == "Right Leg" or
					v.Name == "Left Leg" or
					v.Name == "Right Arm" or
					v.Name == "Left Arm" then
					v:Destroy()
				end
			end
		end
	end)

	addcmd('nohead',{'rhead','headless'},function(args, speaker)
		if sethidden then
			-- Full credit to Thomas_Cornez#0272 @Discord
			local lplr = Players.LocalPlayer
			local char = lplr.Character
			local rig = tostring(char.Humanoid.RigType) == "Enum.HumanoidRigType.R6" and 1 or tostring(char.Humanoid.RigType) == "Enum.HumanoidRigType.R15" and 2

			local speaker = Players.LocalPlayer

			sethidden(speaker, "SimulationRadius", math.huge)

			local test = Instance.new("Model")
			local hum  = Instance.new("Humanoid")
			local animation = Instance.new("Model")
			local humanoidanimation = Instance.new("Humanoid")
			test.Parent = workspace
			hum.Parent = test
			animation.Parent = workspace
			humanoidanimation.Parent = animation

			lplr.Character = test
			wait(2)
			char.Humanoid.Animator.Parent = humanoidanimation
			char.Humanoid:Destroy()

			char.Head:Destroy()
			wait(5)
			game.Players.LocalPlayer.Character = char

			local hum2 = Instance.new("Humanoid")
			hum2.Parent = char
			char:FindFirstChildOfClass("Humanoid").Jump = true

			humanoidanimation.Animator.Parent = hum2
			char.Animate.Disabled = true
			wait()
			char.Animate.Disabled = false
			wait()

			if rig == 1 then
				hum2.HipHeight = 0
			elseif rig == 2 then
				hum2.HipHeight = 2.19
			end
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing sethiddenproperty)')
		end
	end)

	addcmd('noarms',{'rarms'},function(args, speaker)
		if r15(speaker) then
			for i,v in pairs(speaker.Character:GetChildren()) do
				if v:IsA("BasePart") and
					v.Name == "RightUpperArm" or
					v.Name == "LeftUpperArm" then
					v:Destroy()
				end
			end
		else
			for i,v in pairs(speaker.Character:GetChildren()) do
				if v:IsA("BasePart") and
					v.Name == "Right Arm" or
					v.Name == "Left Arm" then
					v:Destroy()
				end
			end
		end
	end)

	addcmd('nolegs',{'rlegs'},function(args, speaker)
		if r15(speaker) then
			for i,v in pairs(speaker.Character:GetChildren()) do
				if v:IsA("BasePart") and
					v.Name == "RightUpperLeg" or
					v.Name == "LeftUpperLeg" then
					v:Destroy()
				end
			end
		else
			for i,v in pairs(speaker.Character:GetChildren()) do
				if v:IsA("BasePart") and
					v.Name == "Right Leg" or
					v.Name == "Left Leg" then
					v:Destroy()
				end
			end
		end
	end)

	addcmd('sit',{},function(args, speaker)
		speaker.Character:FindFirstChildOfClass("Humanoid").Sit = true
	end)

	addcmd('sitwalk',{},function(args, speaker)
		local anims = speaker.Character.Animate
		local sit = anims.sit:FindFirstChildOfClass("Animation").AnimationId
		anims.idle:FindFirstChildOfClass("Animation").AnimationId = sit
		anims.walk:FindFirstChildOfClass("Animation").AnimationId = sit
		anims.run:FindFirstChildOfClass("Animation").AnimationId = sit
		anims.jump:FindFirstChildOfClass("Animation").AnimationId = sit
		if r15(speaker) then
			speaker.Character.Humanoid.HipHeight = 0.5
		else
			speaker.Character.Humanoid.HipHeight = -1.5
		end
	end)

	function noSitFunc()
		wait()
		if Players.LocalPlayer.Character.Humanoid.Sit then
			Players.LocalPlayer.Character.Humanoid.Sit = false
		end
	end
	addcmd('nosit',{},function(args, speaker)
		if noSit then noSit:Disconnect() nositDied:Disconnect() end
		noSit = Players.LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("Sit"):Connect(noSitFunc)
		local function nositDiedFunc()
			repeat wait() until speaker.Character ~= nil and speaker.Character:FindFirstChild('Humanoid')
			noSit:Disconnect()
			noSit = Players.LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("Sit"):Connect(noSitFunc)
		end
		nositDied = speaker.CharacterAdded:Connect(nositDiedFunc)
	end)

	addcmd('unnosit',{},function(args, speaker)
		if noSit then noSit:Disconnect() nositDied:Disconnect() end
	end)

	addcmd('jump',{},function(args, speaker)
		speaker.Character:FindFirstChildOfClass("Humanoid").Jump = true
	end)

	addcmd('infjump',{'infinitejump'},function(args, speaker)
		infJump = true
	end)

	addcmd('uninfjump',{'uninfinitejump','noinfjump','noinfinitejump'},function(args, speaker)
		infJump = false
	end)

	local flyjump
	addcmd('flyjump',{},function(args, speaker)
		if flyjump then flyjump:Disconnect() end
		flyjump = UserInputService.JumpRequest:Connect(function(Jump)
			game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
		end)
	end)

	addcmd('unflyjump',{'noflyjump'},function(args, speaker)
		if flyjump then flyjump:Disconnect() end
	end)

	local HumanModCons = {}
	addcmd('autojump',{'ajump'},function(args, speaker)
		local Char = speaker.Character
		local Human = Char and Char:FindFirstChildWhichIsA("Humanoid")
		local function autoJump()
			if Char and Human then
				local check1 = workspace:FindPartOnRay(Ray.new(Human.RootPart.Position-Vector3.new(0,1.5,0), Human.RootPart.CFrame.lookVector*3), Human.Parent)
				local check2 = workspace:FindPartOnRay(Ray.new(Human.RootPart.Position+Vector3.new(0,1.5,0), Human.RootPart.CFrame.lookVector*3), Human.Parent)
				if check1 or check2 then
					Human.Jump = true
				end
			end
		end
		autoJump()
		HumanModCons.ajLoop = (HumanModCons.ajLoop and HumanModCons.ajLoop:Disconnect() and false) or game:GetService("RunService").RenderStepped:Connect(autoJump)
		HumanModCons.ajCA = (HumanModCons.ajCA and HumanModCons.ajCA:Disconnect() and false) or speaker.CharacterAdded:Connect(function(nChar)
			Char, Human = nChar, nChar:WaitForChild("Humanoid")
			autoJump()
			HumanModCons.ajLoop = (HumanModCons.ajLoop and HumanModCons.ajLoop:Disconnect() and false) or game:GetService("RunService").RenderStepped:Connect(autoJump)
		end)
	end)

	addcmd('unautojump',{'noautojump', 'noajump', 'unajump'},function(args, speaker)
		HumanModCons.ajLoop = (HumanModCons.ajLoop and HumanModCons.ajLoop:Disconnect() and false) or nil
		HumanModCons.ajCA = (HumanModCons.ajCA and HumanModCons.ajCA:Disconnect() and false) or nil
	end)

	addcmd('edgejump',{'ejump'},function(args, speaker)
		local Char = speaker.Character
		local Human = Char and Char:FindFirstChildWhichIsA("Humanoid")
		-- Full credit to NoelGamer06 @V3rmillion
		local state
		local laststate
		local lastcf
		local function edgejump()
			if Char and Human then
				laststate = state
				state = Human:GetState()
				if laststate ~= state and state == Enum.HumanoidStateType.Freefall and laststate ~= Enum.HumanoidStateType.Jumping then
					Char.HumanoidRootPart.CFrame = lastcf
					Char.HumanoidRootPart.Velocity = Vector3.new(Char.HumanoidRootPart.Velocity.X, Human.JumpPower, Char.HumanoidRootPart.Velocity.Z)
				end
				lastcf = Char.HumanoidRootPart.CFrame
			end
		end
		edgejump()
		HumanModCons.ejLoop = (HumanModCons.ejLoop and HumanModCons.ejLoop:Disconnect() and false) or game:GetService("RunService").RenderStepped:Connect(edgejump)
		HumanModCons.ejCA = (HumanModCons.ejCA and HumanModCons.ejCA:Disconnect() and false) or speaker.CharacterAdded:Connect(function(nChar)
			Char, Human = nChar, nChar:WaitForChild("Humanoid")
			edgejump()
			HumanModCons.ejLoop = (HumanModCons.ejLoop and HumanModCons.ejLoop:Disconnect() and false) or game:GetService("RunService").RenderStepped:Connect(edgejump)
		end)
	end)

	addcmd('unedgejump',{'noedgejump', 'noejump', 'unejump'},function(args, speaker)
		HumanModCons.ejLoop = (HumanModCons.ejLoop and HumanModCons.ejLoop:Disconnect() and false) or nil
		HumanModCons.ejCA = (HumanModCons.ejCA and HumanModCons.ejCA:Disconnect() and false) or nil
	end)

	addcmd('team',{},function(args, speaker)
		local teamname = nil
		for a,b in pairs(game:GetService("Teams"):GetChildren()) do
			local L_name = b.Name:lower()
			local F = L_name:find(getstring(1))
			if F == 1 then
				teamname = b 
			end
		end
		speaker.Team = teamname
	end)

	addcmd('nobgui',{'unbgui','nobillboardgui','unbillboardgui','noname','rohg'},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants())do
			if v:IsA("BillboardGui") or v:IsA("SurfaceGui") then
				v:Destroy()
			end
		end
	end)

	addcmd('loopnobgui',{'loopunbgui','loopnobillboardgui','loopunbillboardgui','loopnoname','looprohg'},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants())do
			if v:IsA("BillboardGui") or v:IsA("SurfaceGui") then
				v:Destroy()
			end
		end
		local function charPartAdded(part)
			if part:IsA("BillboardGui") or part:IsA("SurfaceGui") then
				wait()
				part:Destroy()
			end
		end
		charPartTrigger = speaker.Character.DescendantAdded:Connect(charPartAdded)
	end)

	addcmd('unloopnobgui',{'unloopunbgui','unloopnobillboardgui','unloopunbillboardgui','unloopnoname','unlooprohg'},function(args, speaker)
		if charPartTrigger then
			charPartTrigger:Disconnect()
		end
	end)

	addcmd('spasm',{},function(args, speaker)
		if not r15(speaker) then
			local pchar=speaker.Character
			local AnimationId = "33796059"
			SpasmAnim = Instance.new("Animation")
			SpasmAnim.AnimationId = "rbxassetid://"..AnimationId
			Spasm = pchar.Humanoid:LoadAnimation(SpasmAnim)
			Spasm:Play()
			Spasm:AdjustSpeed(99)
		else
			notify('R6 Required','This command requires the r6 rig type')
		end
	end)

	addcmd('unspasm',{'nospasm'},function(args, speaker)
		Spasm:Stop()
		SpasmAnim:Destroy()
	end)

	addcmd('headthrow',{},function(args, speaker)
		if not r15(speaker) then
			local AnimationId = "35154961"
			local Anim = Instance.new("Animation")
			Anim.AnimationId = "rbxassetid://"..AnimationId
			local k = speaker.Character.Humanoid:LoadAnimation(Anim)
			k:Play(0)
			k:AdjustSpeed(1)
		else
			notify('R6 Required','This command requires the r6 rig type')
		end
	end)

	addcmd('animation',{'anim'},function(args, speaker)
		if not r15(speaker) then
			local pchar=speaker.Character
			local AnimationId = tostring(args[1])
			local Anim = Instance.new("Animation")
			Anim.AnimationId = "rbxassetid://"..AnimationId
			local k = pchar.Humanoid:LoadAnimation(Anim)
			k:Play()
			if args[2] then
				k:AdjustSpeed(tostring(args[2]))
			end
		else
			notify('R6 Required','This command requires the r6 rig type')
		end
	end)

	addcmd('noanim',{},function(args, speaker)
		speaker.Character.Animate.Disabled = true
	end)

	addcmd('reanim',{},function(args, speaker)
		speaker.Character.Animate.Disabled = false
	end)

	addcmd('animspeed',{},function(args, speaker)
		local Char = speaker.Character
		local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

		for i,v in next, Hum:GetPlayingAnimationTracks() do
			v:AdjustSpeed(tonumber(args[1] or 1))
		end
	end)

	addcmd('copyanimation',{'copyanim','copyemote'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for _,v in ipairs(players)do
			local char = Players[v].Character
			for _, v1 in pairs(speaker.Character.Humanoid:GetPlayingAnimationTracks()) do
				v1:Stop()
			end
			for _, v1 in pairs(Players[v].Character.Humanoid:GetPlayingAnimationTracks()) do
				if not string.find(v1.Animation.AnimationId, "507768375") then
					local ANIM = speaker.Character.Humanoid:LoadAnimation(v1.Animation)
					ANIM:Play(.1, 1, v1.Speed)
					ANIM.TimePosition = v1.TimePosition
					spawn(function()
						v1.Stopped:Wait()
						ANIM:Stop()
						ANIM:Destroy()
					end)
				end
			end
		end
	end)

	addcmd('stopanimations',{'stopanims','stopanim'},function(args, speaker)
		local Char = speaker.Character
		local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

		for i,v in next, Hum:GetPlayingAnimationTracks() do
			v:Stop()
		end
	end)

	addcmd('refreshanimations', {'refreshanimation','refreshanims','refreshanim','reanim'},function(args, speaker)
		local Char = speaker.Character
		local Human = Char and Char.FindFirstChildWhichIsA(Char, "Humanoid")
		local Animate = Char and Char.FindFirstChild(Char, "Animate")
		Animate.Disabled = true
		for _, v in ipairs(Human.GetPlayingAnimationTracks(Human)) do
			v.Stop(v, 0)
		end
		Animate.Disabled = false
	end)

	addcmd('loopanimation', {'loopanim'},function(args, speaker)
		local Char = speaker.Character
		local Human = Char and Char.FindFirstChildWhichIsA(Char, "Humanoid")
		for _, v in ipairs(Human.GetPlayingAnimationTracks(Human)) do
			v.Looped = true
		end
	end)

	addcmd('tpposition',{'tppos'},function(args, speaker)
		if #args < 3 then return end
		local tpX,tpY,tpZ = tonumber(args[1]),tonumber(args[2]),tonumber(args[3])
		local char = speaker.Character
		if char and getRoot(char) then
			getRoot(char).CFrame = CFrame.new(tpX,tpY,tpZ)
		end
	end)

	addcmd('tweentpposition',{'ttppos'},function(args, speaker)
		if #args < 3 then return end
		local tpX,tpY,tpZ = tonumber(args[1]),tonumber(args[2]),tonumber(args[3])
		local char = speaker.Character
		if char and getRoot(char) then
			game:GetService("TweenService"):Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = CFrame.new(tpX,tpY,tpZ)}):Play()
		end
	end)

	addcmd('offset',{},function(args, speaker)
		if #args < 3 then
			return 
		end
		if speaker.Character then
			speaker.Character:TranslateBy(Vector3.new(tonumber(args[1]) or 0, tonumber(args[2]) or 0, tonumber(args[3]) or 0))
		end
	end)

	addcmd('tweenoffset',{'toffset'},function(args, speaker)
		if #args < 3 then return end
		local tpX,tpY,tpZ = tonumber(args[1]),tonumber(args[2]),tonumber(args[3])
		local char = speaker.Character
		if char and getRoot(char) then
			game:GetService("TweenService"):Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = CFrame.new(tpX,tpY,tpZ)}):Play()
		end
	end)

	addcmd('clickteleport',{},function(args, speaker)
		if speaker == Players.LocalPlayer then
			notify('Click TP','Go to Settings>Keybinds>Add to set up click tp')
		end
	end)

	addcmd('tptool', {'teleporttool'}, function(args, speaker)
		local TpTool = Instance.new("Tool")
		TpTool.Name = "Teleport Tool"
		TpTool.RequiresHandle = false
		TpTool.Parent = speaker.Backpack
		TpTool.Activated:Connect(function()
			local Char = speaker.Character or workspace:FindFirstChild(speaker.Name)
			local HRP = Char and Char:FindFirstChild("HumanoidRootPart")
			if not Char or not HRP then
				return warn("Failed to find HumanoidRootPart")
			end
			HRP.CFrame = CFrame.new(IYMouse.Hit.X, IYMouse.Hit.Y + 3, IYMouse.Hit.Z, select(4, HRP.CFrame:components()))
		end)
	end)

	addcmd('clickdelete',{},function(args, speaker)
		if speaker == Players.LocalPlayer then
			notify('Click Delete','Go to Settings>Keybinds>Add to set up click delete')
		end
	end)

	addcmd('getposition',{'getpos','notifypos','notifyposition'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			local char = Players[v].Character
			local pos = char and (getRoot(char) or char:FindFirstChildWhichIsA("BasePart"))
			pos = pos and pos.Position
			if not pos then
				return notify('Getposition Error','Missing character')
			end
			local roundedPos = math.round(pos.X) .. ", " .. math.round(pos.Y) .. ", " .. math.round(pos.Z)
			notify('Current Position',roundedPos)
		end
	end)

	addcmd('copyposition',{'copypos'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			local char = Players[v].Character
			local pos = char and (getRoot(char) or char:FindFirstChildWhichIsA("BasePart"))
			pos = pos and pos.Position
			if not pos then
				return notify('Getposition Error','Missing character')
			end
			local roundedPos = math.round(pos.X) .. ", " .. math.round(pos.Y) .. ", " .. math.round(pos.Z)
			toClipboard(roundedPos)
		end
	end)

	addcmd('walktopos',{'walktoposition'},function(args, speaker)
		if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
			speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
			wait(.1)
		end
		speaker.Character:FindFirstChildOfClass('Humanoid').WalkToPoint = Vector3.new(args[1],args[2],args[3])
	end)

	addcmd('speed',{'ws','walkspeed'},function(args, speaker)
		if args[2] then
			local speed = args[2] or 16
			if isNumber(speed) then
				speaker.Character:FindFirstChildOfClass('Humanoid').WalkSpeed = speed
			end
		else
			local speed = args[1] or 16
			if isNumber(speed) then
				speaker.Character:FindFirstChildOfClass('Humanoid').WalkSpeed = speed
			end
		end
	end)

	addcmd('loopspeed',{'loopws'},function(args, speaker)
		local speed = args[1] or 16
		if args[2] then
			speed = args[2] or 16
		end
		if isNumber(speed) then
			local Char = speaker.Character or workspace:FindFirstChild(speaker.Name)
			local Human = Char and Char:FindFirstChildWhichIsA("Humanoid")
			local function WalkSpeedChange()
				if Char and Human then
					Human.WalkSpeed = speed
				end
			end
			WalkSpeedChange()
			HumanModCons.wsLoop = (HumanModCons.wsLoop and HumanModCons.wsLoop:Disconnect() and false) or Human:GetPropertyChangedSignal("WalkSpeed"):Connect(WalkSpeedChange)
			HumanModCons.wsCA = (HumanModCons.wsCA and HumanModCons.wsCA:Disconnect() and false) or speaker.CharacterAdded:Connect(function(nChar)
				Char, Human = nChar, nChar:WaitForChild("Humanoid")
				WalkSpeedChange()
				HumanModCons.wsLoop = (HumanModCons.wsLoop and HumanModCons.wsLoop:Disconnect() and false) or Human:GetPropertyChangedSignal("WalkSpeed"):Connect(WalkSpeedChange)
			end)
		end
	end)

	addcmd('unloopspeed',{'unloopws'},function(args, speaker)
		HumanModCons.wsLoop = (HumanModCons.wsLoop and HumanModCons.wsLoop:Disconnect() and false) or nil
		HumanModCons.wsCA = (HumanModCons.wsCA and HumanModCons.wsCA:Disconnect() and false) or nil
	end)

	addcmd('loopjumppower',{'loopjp','loopjpower'},function(args, speaker)
		local jpower = args[1] or 50
		if isNumber(jpower) then
			local Char = speaker.Character or workspace:FindFirstChild(speaker.Name)
			local Human = Char and Char:FindFirstChildWhichIsA("Humanoid")
			local function JumpPowerChange()
				if Char and Human then
					Human.JumpPower = jpower
				end
			end
			JumpPowerChange()
			HumanModCons.jpLoop = (HumanModCons.jpLoop and HumanModCons.jpLoop:Disconnect() and false) or Human:GetPropertyChangedSignal("JumpPower"):Connect(JumpPowerChange)
			HumanModCons.jpCA = (HumanModCons.jpCA and HumanModCons.jpCA:Disconnect() and false) or speaker.CharacterAdded:Connect(function(nChar)
				Char, Human = nChar, nChar:WaitForChild("Humanoid")
				JumpPowerChange()
				HumanModCons.jpLoop = (HumanModCons.jpLoop and HumanModCons.jpLoop:Disconnect() and false) or Human:GetPropertyChangedSignal("JumpPower"):Connect(JumpPowerChange)
			end)
		end
	end)

	addcmd('unloopjumppower',{'unloopjp','unloopjpower'},function(args, speaker)
		HumanModCons.jpLoop = (HumanModCons.jpLoop and HumanModCons.jpLoop:Disconnect() and false) or nil
		HumanModCons.jpCA = (HumanModCons.jpCA and HumanModCons.jpCA:Disconnect() and false) or nil
	end)

	addcmd('tools',{'gears'},function(args, speaker)
		local function copy(instance)
			for i,c in pairs(instance:GetChildren())do
				if c:IsA('Tool') or c:IsA('HopperBin') then
					c:Clone().Parent = speaker:FindFirstChildOfClass("Backpack")
				end
				copy(c)
			end
		end
		copy(game:GetService("Lighting"))
		local function copy(instance)
			for i,c in pairs(instance:GetChildren())do
				if c:IsA('Tool') or c:IsA('HopperBin') then
					c:Clone().Parent = speaker:FindFirstChildOfClass("Backpack")
				end
				copy(c)
			end
		end
		copy(game:GetService("ReplicatedStorage"))
		notify('Tools','Copied tools from ReplicatedStorage and Lighting')
	end)

	addcmd('notools',{'rtools','clrtools','removetools','deletetools','dtools'},function(args, speaker)
		for i,v in pairs(speaker:FindFirstChildOfClass("Backpack"):GetDescendants()) do
			if v:IsA('Tool') or v:IsA('HopperBin') then
				v:Destroy()
			end
		end
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v:IsA('Tool') or v:IsA('HopperBin') then
				v:Destroy()
			end
		end
	end)

	addcmd('deleteselectedtool',{'dst'},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v:IsA('Tool') or v:IsA('HopperBin') then
				v:Destroy()
			end
		end
	end)

	addcmd('console',{},function(args, speaker)
		-- Thanks wally!!
		notify("Loading",'Hold on a sec')
		local _, str = pcall(function()
			return game:HttpGet("https://gist.githubusercontent.com/luatsuki/a1b48e02d5710ebff8fe1ffb1fc5ea38/raw/055143d9238eb6645fbb1f5c4a9a0122ca90c8f4/Console", true)
		end)

		local s, e = loadstring(str)
		if typeof(s) ~= "function" then
			return
		end

		local success, message = pcall(s)
		if (not success) then
			if printconsole then
				printconsole(message)
			elseif printoutput then
				printoutput(message)
			end
		end
		wait(1)
		notify('Console','Press F9 to open the console')
	end)

	addcmd('explorer',{'dex'},function(args, speaker)
		notify("Loading",'Hold on a sec')
		local Dex = game:GetObjects("rbxassetid://3567096419")[1]
		Dex.Parent = PARENT

		local function Load(Obj, Url)
			local function GiveOwnGlobals(Func, Script)
				local Fenv = {}
				local RealFenv = {script = Script}
				local FenvMt = {}
				FenvMt.__index = function(a,b)
					if RealFenv[b] == nil then
						return getfenv()[b]
					else
						return RealFenv[b]
					end
				end
				FenvMt.__newindex = function(a, b, c)
					if RealFenv[b] == nil then
						getfenv()[b] = c
					else
						RealFenv[b] = c
					end
				end
				setmetatable(Fenv, FenvMt)
				setfenv(Func, Fenv)
				return Func
			end
			local function LoadScripts(Script)
				if Script.ClassName == "Script" or Script.ClassName == "LocalScript" then
					spawn(function()
						GiveOwnGlobals(loadstring(Script.Source, "=" .. Script:GetFullName()), Script)()
					end)
				end
				for i,v in pairs(Script:GetChildren()) do
					LoadScripts(v)
				end
			end
			LoadScripts(Obj)
		end

		Load(Dex)
	end)

	addcmd('remotespy',{'rspy'},function(args, speaker)
		notify("Loading",'Hold on a sec')
		-- Full credit to exx, creator of SimpleSpy
		loadstring(game:HttpGet("https://gist.githubusercontent.com/luatsuki/c75a272fb67bccc22bd1b6add92ee267/raw/56375f8536aeca0cc84b44032312efb0fa5b7fa0/Spy"))()
	end)

	addcmd('audiologger',{'alogger'},function(args, speaker)
		notify("Loading",'Hold on a sec')
		loadstring(game:HttpGet(('https://pastebin.com/raw/GmbrsEjM'),true))()
	end)

	local loopgoto = nil
	addcmd('loopgoto',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			loopgoto = nil
			if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
				speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
				wait(.1)
			end
			loopgoto = Players[v]
			local distance = 3
			if args[2] and isNumber(args[2]) then
				distance = args[2]
			end
			local lDelay = 0
			if args[3] and isNumber(args[3]) then
				lDelay = args[3]
			end
			repeat
				if Players:FindFirstChild(v) then
					if Players[v].Character ~= nil then
						getRoot(speaker.Character).CFrame = getRoot(Players[v].Character).CFrame + Vector3.new(distance,1,0)
					end
					wait(lDelay)
				else
					loopgoto = nil
				end
			until loopgoto ~= Players[v]
		end
	end)

	addcmd('unloopgoto',{'noloopgoto'},function(args, speaker)
		loopgoto = nil
	end)

	addcmd('headsit',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			speaker.Character:FindFirstChildOfClass('Humanoid').Sit = true
			headSit = game:GetService("RunService").Heartbeat:Connect(function()
				if Players[v].Character ~= nil and getRoot(Players[v].Character) and getRoot(speaker.Character) then
					if Players:FindFirstChild(Players[v].Name) and speaker.Character:FindFirstChildOfClass('Humanoid').Sit == true then
						getRoot(speaker.Character).CFrame = getRoot(Players[v].Character).CFrame * CFrame.Angles(0,math.rad(0),0)* CFrame.new(0,1.6,0.4)
					else
						headSit:Disconnect()
					end
				end
			end)
		end
	end)

	addcmd('chat',{'say'},function(args, speaker)
		local cString = getstring(1)
		game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(cString, "All")
	end)

	spamming = false
	spamspeed = 1
	addcmd('spam',{},function(args, speaker)
		spamming = true
		local spamstring = getstring(1)
		repeat wait(spamspeed)
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(spamstring, "All")
		until spamming == false
	end)

	addcmd('nospam',{'unspam'},function(args, speaker)
		spamming = false
	end)

	addcmd('whisper',{'pm'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			spawn(function()
				local plrName = Players[v].Name
				local pmstring = getstring(2)
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w "..plrName.." "..pmstring, "All")
			end)
		end
	end)

	pmspamming = {}
	addcmd('pmspam',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			spawn(function()
				local plrName = Players[v].Name
				if FindInTable(pmspamming, plrName) then return end
				table.insert(pmspamming, plrName)
				local pmspamstring = getstring(2)
				repeat
					if Players:FindFirstChild(v) then
						wait(spamspeed)
						game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w "..plrName.." "..pmspamstring, "All")
					else
						for a,b in pairs(pmspamming) do if b == plrName then table.remove(pmspamming, a) end end
					end
				until not FindInTable(pmspamming, plrName)
			end)
		end
	end)

	addcmd('nopmspam',{'unpmspam'},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			spawn(function()
				for a,b in pairs(pmspamming) do
					if b == Players[v].Name then
						table.remove(pmspamming, a)
					end
				end
			end)
		end
	end)

	addcmd('spamspeed',{},function(args, speaker)
		local speed = args[1] or 1
		if isNumber(speed) then
			spamspeed = speed
		end
	end)

	bubblechatting = false
	local getBubblechat
	addcmd('bubblechat',{},function(args, speaker)
		if bubblechatting then return end
		bubblechatting = true
		if getBubblechat then getBubblechat:Disconnect() end
		getBubblechat = Players.PlayerAdded:Connect(function(plr)
			local chatfunc
			chatfunc = plr.Chatted:Connect(function(chat)
				if bubblechatting == true then
					game:GetService("Chat"):Chat(plr.Character.Head,chat,Enum.ChatColor.White)
				else
					chatfunc:Disconnect()
				end
			end)
		end)
		for i,v in pairs(Players:GetPlayers()) do
			local chatfunc
			chatfunc = v.Chatted:Connect(function(chat)
				if bubblechatting == true then
					game:GetService("Chat"):Chat(v.Character.Head,chat,Enum.ChatColor.White)
				else
					chatfunc:Disconnect()
				end
			end)
		end
	end)

	addcmd('unbubblechat',{'nobubblechat'},function(args, speaker)
		bubblechatting = false
		if getBubblechat then getBubblechat:Disconnect() end
	end)

	addcmd('safechat',{},function(args, speaker)
		speaker.SetSuperSafeChat(true)
	end)

	addcmd('nosafechat',{'disablesafechat','unsafechat'},function(args, speaker)
		speaker.SetSuperSafeChat(false)
	end)

	addcmd('blockhead',{},function(args, speaker)
		speaker.Character.Head:FindFirstChildOfClass("SpecialMesh"):Destroy()
	end)

	addcmd('blockhats',{},function(args, speaker)
		for _,v in pairs(speaker.Character.Humanoid:GetAccessories()) do
			for i,c in pairs(v:GetDescendants()) do
				if c:IsA("SpecialMesh") then
					c:Destroy()
				end
			end
		end
	end)

	addcmd('blocktool',{},function(args, speaker)
		for _,v in pairs(speaker.Character:GetChildren()) do
			if v:IsA("Tool") or v:IsA("HopperBin") then
				for i,c in pairs(v:GetDescendants()) do
					if c:IsA("SpecialMesh") then
						c:Destroy()
					end
				end
			end
		end
	end)

	addcmd('creeper',{},function(args, speaker)
		if r15(speaker) then
			speaker.Character.Head:FindFirstChildOfClass("SpecialMesh"):Destroy()
			speaker.Character.LeftUpperArm:Destroy()
			speaker.Character.RightUpperArm:Destroy()
			speaker.Character:FindFirstChildOfClass("Humanoid"):RemoveAccessories()
		else
			speaker.Character.Head:FindFirstChildOfClass("SpecialMesh"):Destroy()
			speaker.Character["Left Arm"]:Destroy()
			speaker.Character["Right Arm"]:Destroy()
			speaker.Character:FindFirstChildOfClass("Humanoid"):RemoveAccessories()
		end
	end)

	addcmd('bang',{'rape'},function(args, speaker)
		if not r15(speaker) then
			execCmd('unbang')
			wait()
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players)do
				bangAnim = Instance.new("Animation")
				bangAnim.AnimationId = "rbxassetid://148840371"
				bang = speaker.Character.Humanoid:LoadAnimation(bangAnim)
				bang:Play(.1, 1, 1)
				if args[2] then
					bang:AdjustSpeed(args[2])
				else
					bang:AdjustSpeed(3)
				end
				local bangplr = Players[v].Name
				bangDied = speaker.Character:FindFirstChildOfClass'Humanoid'.Died:Connect(function()
					bangLoop:Disconnect()
					bang:Stop()
					bangAnim:Destroy()
					bangDied:Disconnect()
				end)
				bangLoop = game:GetService('RunService').Stepped:Connect(function()
					pcall(function()
						getRoot(Players.LocalPlayer.Character).CFrame = getRoot(Players[bangplr].Character).CFrame
					end)
				end)
			end
		else
			notify('R6 Required','This command requires the r6 rig type')
		end
	end)

	addcmd('unbang',{'unrape'},function(args, speaker)
		if bangLoop then
			bangLoop:Disconnect()
			bangDied:Disconnect()
			bang:Stop()
			bangAnim:Destroy()
		end
	end)

	addcmd('carpet',{},function(args, speaker)
		if not r15(speaker) then
			execCmd('uncarpet')
			wait()
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players)do
				carpetAnim = Instance.new("Animation")
				carpetAnim.AnimationId = "rbxassetid://282574440"
				carpet = speaker.Character.Humanoid:LoadAnimation(carpetAnim)
				carpet:Play(.1, 1, 1)
				local carpetplr = Players[v].Name
				carpetDied = speaker.Character:FindFirstChildOfClass'Humanoid'.Died:Connect(function()
					carpetLoop:Disconnect()
					carpet:Stop()
					carpetAnim:Destroy()
					carpetDied:Disconnect()
				end)
				carpetLoop = game:GetService('RunService').Heartbeat:Connect(function()
					pcall(function()
						getRoot(Players.LocalPlayer.Character).CFrame = getRoot(Players[carpetplr].Character).CFrame
					end)
				end)
			end
		else
			notify('R6 Required','This command requires the r6 rig type')
		end
	end)

	addcmd('uncarpet',{'nocarpet'},function(args, speaker)
		if carpetLoop then
			carpetLoop:Disconnect()
			carpetDied:Disconnect()
			carpet:Stop()
			carpetAnim:Destroy()
		end
	end)

	addcmd('friend',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			speaker:RequestFriendship(v)
		end
	end)

	addcmd('unfriend',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			speaker:RevokeFriendship(v)
		end
	end)

	addcmd('bringpart',{},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.Name:lower() == getstring(1):lower() and v:IsA("BasePart") then
				v.CFrame = getRoot(speaker.Character).CFrame
			end
		end
	end)

	addcmd('bringpartclass',{'bpc'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.ClassName:lower() == getstring(1):lower() and v:IsA("BasePart") then
				v.CFrame = getRoot(speaker.Character).CFrame
			end
		end
	end)

	gotopartDelay = 0.1
	addcmd('gotopart',{'topart'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.Name:lower() == getstring(1):lower() and v:IsA("BasePart") then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				wait(gotopartDelay)
				getRoot(speaker.Character).CFrame = v.CFrame
			end
		end
	end)

	addcmd('tweengotopart',{'tgotopart','ttopart'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.Name:lower() == getstring(1):lower() and v:IsA("BasePart") then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				wait(gotopartDelay)
				game:GetService("TweenService"):Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = v.CFrame}):Play()
			end
		end
	end)

	addcmd('gotopartclass',{'gpc'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.ClassName:lower() == getstring(1):lower() and v:IsA("BasePart") then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				wait(gotopartDelay)
				getRoot(speaker.Character).CFrame = v.CFrame
			end
		end
	end)

	addcmd('tweengotopartclass',{'tgpc'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.ClassName:lower() == getstring(1):lower() and v:IsA("BasePart") then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				wait(gotopartDelay)
				game:GetService("TweenService"):Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = v.CFrame}):Play()
			end
		end
	end)

	addcmd('gotomodel',{'tomodel'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.Name:lower() == getstring(1):lower() and v:IsA("Model") then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				wait(gotopartDelay)
				getRoot(speaker.Character).CFrame = v:GetModelCFrame()
			end
		end
	end)

	addcmd('tweengotomodel',{'tgotomodel','ttomodel'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v.Name:lower() == getstring(1):lower() and v:IsA("Model") then
				if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
					speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
					wait(.1)
				end
				wait(gotopartDelay)
				game:GetService("TweenService"):Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeed, Enum.EasingStyle.Linear), {CFrame = v:GetModelCFrame()}):Play()
			end
		end
	end)

	addcmd('gotopartdelay',{},function(args, speaker)
		local gtpDelay = args[1] or 0.1
		if isNumber(gtpDelay) then
			gotopartDelay = gtpDelay
		end
	end)

	addcmd('noclickdetectorlimits',{'nocdlimits','removecdlimits'},function(args, speaker)
		for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("ClickDetector") then
				v.MaxActivationDistance = math.huge
			end
		end
	end)

	addcmd('fireclickdetectors',{'firecd','firecds'},function(args, speaker)
		if fireclickdetector then
			for i,v in pairs(workspace:GetDescendants()) do
				if v:IsA("ClickDetector") then
					fireclickdetector(v)
				end
			end
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing fireclickdetector)')
		end
	end)

	simRadius = false
	addcmd('simulationradius',{'simradius'},function(args, speaker)
		if sethidden then		
			simRadLoop = game:GetService('RunService').Stepped:Connect(function()
				if setsimulation then
					setsimulation(1e308, 1/0)
				else	
					sethidden(speaker,"MaximumSimulationRadius",1/0)
					sethidden(speaker,"SimulationRadius", 1e308)
				end
			end)
			simRadius = true
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing sethiddenproperty)')
		end
	end)

	addcmd('nosimulationradius',{'nosimradius','unsimradius'},function(args, speaker)
		if sethidden then		
			if simRadLoop then simRadLoop:Disconnect() end
			wait()
			if setsimulation then
				setsimulation(139,139)
			else	
				sethidden(speaker,"MaximumSimulationRadius",139)
				sethidden(speaker,"SimulationRadius", 139)
			end
			simRadius = false
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing sethiddenproperty)')
		end
	end)

	addcmd('grabtools', {}, function(args, speaker)
		local Human = speaker.Character:FindFirstChildWhichIsA("Humanoid")
		for _, v in ipairs(workspace:GetChildren()) do
			if speaker.Character and v:IsA("BackpackItem") and v:FindFirstChild("Handle") then
				Human:EquipTool(v)
			end
		end
		if grabtoolsFunc then grabtoolsFunc:Disconnect() end
		grabtoolsFunc = workspace.ChildAdded:Connect(function(v)
			if speaker.Character and v:IsA("BackpackItem") and v:FindFirstChild("Handle") then
				speaker.Character:WaitForChild("Humanoid"):EquipTool(v)
			end
		end)
		notify('Grabtools', 'Picking up any dropped tools')
	end)

	addcmd('nograbtools',{'ungrabtools'},function(args, speaker)
		if grabtoolsFunc then grabtoolsFunc:Disconnect() end
		notify('Grabtools','Grabtools has been disabled')
	end)

	addcmd('light',{},function(args, speaker)
		local light = Instance.new("PointLight")
		light.Parent = getRoot(speaker.Character)
		light.Range = 30
		if args[1] then
			light.Brightness = args[2]
			light.Range = args[1]
		else
			light.Brightness = 5
		end
	end)

	addcmd('unlight',{'nolight'},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v.ClassName == "PointLight" then
				v:Destroy()
			end
		end
	end)

	addcmd('copytools',{},function(args, speaker)
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			spawn(function()
				for i,v in pairs(Players[v]:FindFirstChildOfClass("Backpack"):GetChildren()) do
					if v:IsA('Tool') or v:IsA('HopperBin') then
						v:Clone().Parent = speaker:FindFirstChildOfClass("Backpack")
					end
				end
			end)
		end
	end)

	addcmd('naked',{},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v:IsA("Clothing") or v:IsA("ShirtGraphic") then
				v:Destroy()
			end
		end
	end)

	addcmd('noface',{'removeface'},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v:IsA("Decal") and v.Name == 'face' then
				v:Destroy()
			end
		end
	end)

	addcmd('spawnpoint',{'spawn'},function(args, speaker)
		spawnpos = getRoot(speaker.Character).CFrame
		spawnpoint = true
		spDelay = tonumber(args[1]) or 0.1
		notify('Spawn Point','Spawn point created at '..tostring(spawnpos))
	end)

	addcmd('nospawnpoint',{'nospawn','removespawnpoint'},function(args, speaker)
		spawnpoint = false
		notify('Spawn Point','Removed spawn point')
	end)

	addcmd('flashback',{'diedtp'},function(args, speaker)
		if lastDeath ~= nil then
			if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
				speaker.Character:FindFirstChildOfClass('Humanoid').Sit = false
				wait(.1)
			end
			getRoot(speaker.Character).CFrame = lastDeath
		end
	end)

	addcmd('hatspin',{'spinhats'},function(args, speaker)
		execCmd('unhatspin')
		wait(.5)
		for _,v in pairs(speaker.Character.Humanoid:GetAccessories()) do
			local keep = Instance.new("BodyPosition") keep.Name = randomString() keep.Parent = v.Handle
			local spin = Instance.new("BodyAngularVelocity") spin.Name = randomString() spin.Parent = v.Handle
			v.Handle:FindFirstChildOfClass("Weld"):Destroy()
			if args[1] then
				spin.AngularVelocity = Vector3.new(0, args[1], 0)
				spin.MaxTorque = Vector3.new(0, args[1] * 2, 0)
			else
				spin.AngularVelocity = Vector3.new(0, 100, 0)
				spin.MaxTorque = Vector3.new(0, 200, 0)
			end
			keep.P = 30000
			keep.D = 50
			spinhats = game:GetService('RunService').Stepped:Connect(function()
				pcall(function()
					keep.Position = Players.LocalPlayer.Character.Head.Position
				end)
			end)
		end
	end)

	addcmd('unhatspin',{'unspinhats'},function(args, speaker)
		if spinhats then
			spinhats:Disconnect()
		end
		for _,v in pairs(speaker.Character.Humanoid:GetAccessories()) do
			v.Parent = workspace
			for i,c in pairs(v.Handle) do
				if c:IsA("BodyPosition") or c:IsA("BodyAngularVelocity") then
					c:Destroy()
				end
			end
			wait()
			v.Parent = speaker.Character
		end
	end)

	addcmd('clearhats',{'cleanhats'},function(args, speaker)
		if firetouchinterest then
			local Player = Players.LocalPlayer
			local Character = Player.Character
			local Old = Character:FindFirstChild("HumanoidRootPart").CFrame
			local Hats = {}
			for _,x in next, workspace:GetChildren() do
				if x:IsA("Accessory") then
					table.insert(Hats,x)
				end
			end
			for _,getacc in next, Character:FindFirstChild("Humanoid"):GetAccessories() do
				getacc:Destroy()
			end
			for i = 1,#Hats do
				repeat game:GetService("RunService").Heartbeat:wait() until Hats[i]
				firetouchinterest(Hats[i].Handle,Character:FindFirstChild("HumanoidRootPart"),0)
				repeat game:GetService("RunService").Heartbeat:wait() until Character:FindFirstChildOfClass("Accessory")
				Character:FindFirstChildOfClass("Accessory"):Destroy()
				repeat game:GetService("RunService").Heartbeat:wait() until not Character:FindFirstChildOfClass("Accessory")
			end
			Character:BreakJoints()
			Player.CharacterAdded:wait()
			for i = 1,20 do game:GetService("RunService").Heartbeat:wait()
				if Player.Character:FindFirstChild("HumanoidRootPart") then
					Player.Character:FindFirstChild("HumanoidRootPart").CFrame = Old
				end
			end
		else
			notify('Incompatible Exploit','Your exploit does not support this command (missing firetouchinterest)')
		end
	end)

	addcmd('split',{},function(args, speaker)
		if r15(speaker) then
			speaker.Character.UpperTorso.Waist:Destroy()
		else
			notify('R15 Required','This command requires the r15 rig type')
		end
	end)

	addcmd('nilchar',{},function(args, speaker)
		if speaker.Character ~= nil then
			speaker.Character.Parent = nil
		end
	end)

	addcmd('unnilchar',{'nonilchar'},function(args, speaker)
		if speaker.Character ~= nil then
			speaker.Character.Parent = workspace
		end
	end)

	addcmd('noroot',{'removeroot','rroot'},function(args, speaker)
		if speaker.Character ~= nil then
			local char = Players.LocalPlayer.Character
			char.Parent = nil
			char.HumanoidRootPart:Destroy()
			char.Parent = workspace
		end
	end)

	addcmd('replaceroot',{'replacerootpart'},function(args, speaker)
		if speaker.Character ~= nil and speaker.Character:FindFirstChild("HumanoidRootPart") then
			local Char = speaker.Character
			local OldParent = Char.Parent
			local HRP = Char and Char:FindFirstChild("HumanoidRootPart")
			local OldPos = HRP.CFrame
			Char.Parent = game
			local HRP1 = HRP:Clone()
			HRP1.Parent = Char
			HRP = HRP:Destroy()
			HRP1.CFrame = OldPos
			Char.Parent = OldParent
		end
	end)

	addcmd('clearcharappearance',{'clearchar','clrchar'},function(args, speaker)
		speaker:ClearCharacterAppearance()
	end)

	addcmd('equiptools',{},function(args, speaker)
		for i,v in pairs(speaker:FindFirstChildOfClass("Backpack"):GetChildren()) do
			if v:IsA("Tool") or v:IsA("HopperBin") then
				v.Parent = speaker.Character
			end
		end
	end)

	local function GetHandleTools(p)
		p = p or Players.LocalPlayer
		local r = {}
		for _, v in ipairs(p.Character and p.Character:GetChildren() or {}) do
			if v.IsA(v, "BackpackItem") and v.FindFirstChild(v, "Handle") then
				r[#r + 1] = v
			end
		end
		for _, v in ipairs(p.Backpack:GetChildren()) do
			if v.IsA(v, "BackpackItem") and v.FindFirstChild(v, "Handle") then
				r[#r + 1] = v
			end
		end
		return r
	end
	addcmd('dupetools', {'clonetools'}, function(args, speaker)
		local LOOP_NUM = tonumber(args[1]) or 1
		local OrigPos = speaker.Character.HumanoidRootPart.Position
		local Tools, TempPos = {}, Vector3.new(math.random(-2e5, 2e5), 2e5, math.random(-2e5, 2e5))
		for i = 1, LOOP_NUM do
			local Human = speaker.Character:WaitForChild("Humanoid")
			wait(.1, Human.Parent:MoveTo(TempPos))
			Human.RootPart.Anchored = speaker:ClearCharacterAppearance(wait(.1)) or true
			local t = GetHandleTools(speaker)
			while #t > 0 do
				for _, v in ipairs(t) do
					coroutine.wrap(function()
						for _ = 1, 25 do
							v.Parent = speaker.Character
							v.Handle.Anchored = true
						end
						for _ = 1, 5 do
							v.Parent = workspace
						end
						table.insert(Tools, v.Handle)
					end)()
				end
				t = GetHandleTools(speaker)
			end
			wait(.1)
			speaker.Character = speaker.Character:Destroy()
			speaker.CharacterAdded:Wait():WaitForChild("Humanoid").Parent:MoveTo(LOOP_NUM == i and OrigPos or TempPos, wait(.1))
			if i == LOOP_NUM or i % 5 == 0 then
				local HRP = speaker.Character.HumanoidRootPart
				if type(firetouchinterest) == "function" then
					for _, v in ipairs(Tools) do
						v.Anchored = not firetouchinterest(v, HRP, 1, firetouchinterest(v, HRP, 0)) and false or false
					end
				else
					for _, v in ipairs(Tools) do
						coroutine.wrap(function()
							local x = v.CanCollide
							v.CanCollide = false
							v.Anchored = false
							for _ = 1, 10 do
								v.CFrame = HRP.CFrame
								wait()
							end
							v.CanCollide = x
						end)()
					end
				end
				wait(.1)
				Tools = {}
			end
			TempPos = TempPos + Vector3.new(10, math.random(-5, 5), 0)
		end
	end)

	addcmd('touchinterests', {'touchinterest', 'firetouchinterests', 'firetouchinterest'}, function(args, speaker)
		local Root = getRoot(speaker.Character) or speaker.Character:FindFirstChildWhichIsA("BasePart")
		local function Touch(x)
			x = x.FindFirstAncestorWhichIsA(x, "Part")
			if x then
				if firetouchinterest then
					return spawn(function()
						firetouchinterest(x, Root, 1, wait() and firetouchinterest(x, Root, 0))
					end)
				end
				x.CFrame = Root.CFrame
			end
		end
		for _, v in ipairs(workspace:GetDescendants()) do
			if v.IsA(v, "TouchTransmitter") then
				Touch(v)
			end
		end
	end)

	addcmd('fullbright',{'fb','fullbrightness'},function(args, speaker)
		game:GetService("Lighting").Brightness = 2
		game:GetService("Lighting").ClockTime = 14
		game:GetService("Lighting").FogEnd = 100000
		game:GetService("Lighting").GlobalShadows = false
		game:GetService("Lighting").OutdoorAmbient = Color3.fromRGB(128, 128, 128)
	end)

	addcmd('loopfullbright',{'loopfb'},function(args, speaker)
		if brightLoop then
			brightLoop:Disconnect()
		end
		local function brightFunc()
			game:GetService("Lighting").Brightness = 2
			game:GetService("Lighting").ClockTime = 14
			game:GetService("Lighting").FogEnd = 100000
			game:GetService("Lighting").GlobalShadows = false
			game:GetService("Lighting").OutdoorAmbient = Color3.fromRGB(128, 128, 128)
		end

		brightLoop = game:GetService("RunService").RenderStepped:Connect(brightFunc)
	end)

	addcmd('unloopfullbright',{'unloopfb'},function(args, speaker)
		if brightLoop then
			brightLoop:Disconnect()
		end
	end)

	addcmd('ambient',{},function(args, speaker)
		game:GetService("Lighting").Ambient = Color3.new(args[1],args[2],args[3])
		game:GetService("Lighting").OutdoorAmbient = Color3.new(args[1],args[2],args[3])
	end)

	addcmd('day',{},function(args, speaker)
		game:GetService("Lighting").ClockTime = 14
	end)

	addcmd('night',{},function(args, speaker)
		game:GetService("Lighting").ClockTime = 0
	end)

	addcmd('nofog',{},function(args, speaker)
		game:GetService("Lighting").FogEnd = 100000
	end)

	addcmd('brightness',{},function(args, speaker)
		game:GetService("Lighting").Brightness = args[1]
	end)

	addcmd('globalshadows',{'gshadows'},function(args, speaker)
		game:GetService("Lighting").GlobalShadows = true
	end)

	addcmd('unglobalshadows',{'nogshadows','ungshadows','noglobalshadows'},function(args, speaker)
		game:GetService("Lighting").GlobalShadows = false
	end)

	origsettings = {abt = game:GetService("Lighting").Ambient, oabt = game:GetService("Lighting").OutdoorAmbient, brt = game:GetService("Lighting").Brightness, time = game:GetService("Lighting").ClockTime, fe = game:GetService("Lighting").FogEnd, fs = game:GetService("Lighting").FogStart, gs = game:GetService("Lighting").GlobalShadows}

	addcmd('restorelighting',{'rlighting'},function(args, speaker)
		game:GetService("Lighting").Ambient = origsettings.abt
		game:GetService("Lighting").OutdoorAmbient = origsettings.oabt
		game:GetService("Lighting").Brightness = origsettings.brt
		game:GetService("Lighting").ClockTime = origsettings.time
		game:GetService("Lighting").FogEnd = origsettings.fe
		game:GetService("Lighting").FogStart = origsettings.fs
		game:GetService("Lighting").GlobalShadows = origsettings.gs
	end)

	addcmd('stun',{'platformstand'},function(args, speaker)
		speaker.Character:FindFirstChildOfClass('Humanoid').PlatformStand = true
	end)

	addcmd('unstun',{'nostun','unplatformstand','noplatformstand'},function(args, speaker)
		speaker.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
	end)

	addcmd('norotate',{'noautorotate'},function(args, speaker)
		speaker.Character:FindFirstChildOfClass('Humanoid').AutoRotate  = false
	end)

	addcmd('unnorotate',{'autorotate'},function(args, speaker)
		speaker.Character:FindFirstChildOfClass('Humanoid').AutoRotate  = true
	end)

	addcmd('enablestate',{},function(args, speaker)
		local x = args[1]
		if not tonumber(x) then
			local x = Enum.HumanoidStateType[args[1]]
		end
		speaker.Character:FindFirstChildOfClass("Humanoid"):SetStateEnabled(x, true)
	end)

	addcmd('disablestate',{},function(args, speaker)
		local x = args[1]
		if not tonumber(x) then
			local x = Enum.HumanoidStateType[args[1]]
		end
		speaker.Character:FindFirstChildOfClass("Humanoid"):SetStateEnabled(x, false)
	end)

	addcmd('drophats',{'drophat'},function(args, speaker)
		if speaker.Character then
			for _,v in pairs(speaker.Character.Humanoid:GetAccessories()) do
				v.Parent = workspace
			end
		end
	end)

	addcmd('deletehats',{'nohats','rhats'},function(args, speaker)
		if speaker.Character then
			speaker.Character:FindFirstChildOfClass("Humanoid"):RemoveAccessories()
		end
	end)

	addcmd('droptools',{'droptool'},function(args, speaker)
		for i,v in pairs(Players.LocalPlayer.Backpack:GetChildren()) do
			if v:IsA("Tool") then
				v.Parent = Players.LocalPlayer.Character
			end
		end
		wait()
		for i,v in pairs(Players.LocalPlayer.Character:GetChildren()) do
			if v:IsA("Tool") then
				v.Parent = workspace
			end
		end
	end)

	addcmd('droppabletools',{},function(args, speaker)
		if speaker.Character then
			for _,obj in pairs(speaker.Character:GetChildren()) do
				if obj:IsA("Tool") then
					obj.CanBeDropped = true
				end
			end
		end
		if speaker:FindFirstChildOfClass("Backpack") then
			for _,obj in pairs(speaker:FindFirstChildOfClass("Backpack"):GetChildren()) do
				if obj:IsA("Tool") then
					obj.CanBeDropped = true
				end
			end
		end
	end)

	local currentToolSize = ""
	local currentGripPos = ""
	addcmd('reach',{},function(args, speaker)
		execCmd('unreach')
		wait()
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v:IsA("Tool") then
				if args[1] then
					currentToolSize = v.Handle.Size
					currentGripPos = v.GripPos
					local a = Instance.new("SelectionBox")
					a.Name = "SelectionBoxCreated"
					a.Parent = v.Handle
					a.Adornee = v.Handle
					v.Handle.Massless = true
					v.Handle.Size = Vector3.new(0.5,0.5,args[1])
					v.GripPos = Vector3.new(0,0,0)
					speaker.Character.Humanoid:UnequipTools()
				else
					currentToolSize = v.Handle.Size
					currentGripPos = v.GripPos
					local a = Instance.new("SelectionBox")
					a.Name = "SelectionBoxCreated"
					a.Parent = v.Handle
					a.Adornee = v.Handle
					v.Handle.Massless = true
					v.Handle.Size = Vector3.new(0.5,0.5,60)
					v.GripPos = Vector3.new(0,0,0)
					speaker.Character.Humanoid:UnequipTools()
				end
			end
		end
	end)

	addcmd('unreach',{'noreach'},function(args, speaker)
		for i,v in pairs(speaker.Character:GetDescendants()) do
			if v:IsA("Tool") then
				v.Handle.Size = currentToolSize
				v.GripPos = currentGripP
